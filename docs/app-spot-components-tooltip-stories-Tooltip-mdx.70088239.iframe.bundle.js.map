{"version":3,"file":"app-spot-components-tooltip-stories-Tooltip-mdx.70088239.iframe.bundle.js","mappings":"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","sources":["./src/app/spot/components/tooltip/stories/Tooltip.stories.ts","./node_modules/@mdx-js/react/lib/index.js","./node_modules/react/cjs/react-jsx-runtime.production.min.js","./node_modules/react/jsx-runtime.js","./src/app/spot/components/tooltip/stories/Tooltip.mdx"],"sourcesContent":["import type { Meta, StoryObj } from '@storybook/angular';\nimport { moduleMetadata } from '@storybook/angular';\n\nimport { OpSpotModule } from '../../../spot.module';\nimport { SpotTooltipComponent } from '../tooltip.component';\n\nconst meta:Meta = {\n  title: 'Components/Tooltip',\n  component: SpotTooltipComponent,\n  decorators: [\n    moduleMetadata({\n      imports: [OpSpotModule],\n    }),\n  ],\n};\n\nexport default meta;\ntype Story = StoryObj;\n\nexport const Default:Story = {\n  render: (args) => ({\n    props: args,\n    template: `\n      <spot-tooltip>\n        <span slot=\"trigger\">\n          Hover me to see the tooltip. By default, tooltips take a maximum of 80% of their parents' width\n        </span>\n        <p\n          slot=\"body\"\n          class=\"spot-body-small\"\n        >\n          This is an example tooltip.\n        </p>\n      </spot-tooltip>\n   `,\n  }),\n};\n\nexport const InList:Story = {\n  render: (args) => ({\n    props: args,\n    template: `\n      <ul class=\"spot-list\">\n        <li class=\"spot-list--item\">\n          <spot-tooltip alignment=\"bottom-center\">\n            <ng-container slot=\"trigger\">\n              <label class=\"spot-list--item-action\">\n                <spot-checkbox></spot-checkbox>\n                <div class=\"spot-list--item-title spot-list--item-title_ellipse-text\">Checky with a tooltip</div>\n              </label>\n            </ng-container>\n\n            <p\n              slot=\"body\"\n              class=\"spot-body-small\"\n            >\n              This is a great checkbox.\n            </p>\n          </spot-tooltip>\n        </li>\n        <li class=\"spot-list--item\">\n          <spot-tooltip\n            alignment=\"bottom-center\"\n            disabled=\"true\"\n          >\n            <ng-container slot=\"trigger\">\n              <label class=\"spot-list--item-action\">\n                <spot-checkbox></spot-checkbox>\n                <div class=\"spot-list--item-title spot-list--item-title_ellipse-text\">Checky with a disabled tooltip</div>\n              </label>\n            </ng-container>\n\n            <p\n              slot=\"body\"\n              class=\"spot-body-small\"\n            >\n              This tooltip is not going to show.\n            </p>\n          </spot-tooltip>\n        </li>\n        <li class=\"spot-list--item\">\n          <label class=\"spot-list--item-action\">\n            <spot-checkbox></spot-checkbox>\n            <div class=\"spot-list--item-title spot-list--item-title_ellipse-text\">Checky without a tooltip</div>\n          </label>\n        </li>\n      </ul>\n   `,\n  }),\n};\n\nexport const Dark:Story = {\n  render: (args) => ({\n    props: args,\n    template: `\n      <spot-tooltip dark=\"true\">\n        <span slot=\"trigger\">Hover me to see the tooltip.</span>\n        <p\n          slot=\"body\"\n          class=\"spot-body-small\"\n        >\n          This is a dark tooltip.\n        </p>\n      </spot-tooltip>\n   `,\n  }),\n};\n\nexport const Multiline:Story = {\n  render: (args) => ({\n    props: args,\n    template: `\n      <spot-tooltip>\n        <span slot=\"trigger\">Hover me to see the tooltip.</span>\n        <p\n          slot=\"body\"\n          class=\"spot-body-small\"\n        >\n          This is a tooltip with a very long text <br />\n          that has a break in the middle so that we <br />\n          can get some multiline action.\n        </p>\n      </spot-tooltip>\n   `,\n  }),\n};\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@storybook/addon-docs/mdx-react-shim\";\nimport {Canvas, Meta, ArgsTable} from '@storybook/blocks';\nimport {SpotTooltipComponent} from '../tooltip.component';\nimport * as TooltipStories from './Tooltip.stories';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    h2: \"h2\",\n    em: \"em\",\n    ul: \"ul\",\n    li: \"li\",\n    blockquote: \"blockquote\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(Meta, {\n      of: TooltipStories\n    }), \"\\n\", _jsx(_components.h1, {\n      id: \"tooltip\",\n      children: \"Tooltip\"\n    }), \"\\n\", _jsx(Canvas, {\n      of: TooltipStories.Default\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The tooltip provides additional textual context on hover over interactive elements.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"This context can be used to provide additional information (hover over a \\\"help\\\" icon) or to signal state information (for example, if a certain item is disabled).\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"By default, the tooltip takes 80% of the width of the container. This can be overridden if needed.\"\n    }), \"\\n\", _jsx(Canvas, {\n      of: TooltipStories.InList\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"structure-and-options\",\n      children: \"Structure and Options\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Tooltips have a sky blue background in the default theme (\", _jsx(_components.em, {\n        children: \"Feedback/Info/Light\"\n      }), \"). A darker version is available is but currently not used.\"]\n    }), \"\\n\", _jsx(Canvas, {\n      of: TooltipStories.Dark\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"behaviour\",\n      children: \"Behaviour\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The tooltip should appear either above or below the item being hovered. By default, it will be displayed above, left-aligned. This can be manually changed to these alternative positions:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Above, left-aligned\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Above, center-aligned\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Above, right-aligned\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Below, left-aligned\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Below, center-aligned\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Below, right- aligned\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The item over which the user is hovering itself must never be covered. A tooltip' does not follow the cursor; its position is fixed as long as the user is hovering over the item. Hovering out of the element will cause the tooltip to disappear.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The tooltip will appear 200 ms after the user starts hovering and disappear 200 ms after the user has moved the cursor away, to avoid jittery behaviour.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The tooltip will automatically become multi-line if necessary (i.e, if the container does not have sufficient space).\"\n    }), \"\\n\", _jsx(Canvas, {\n      of: TooltipStories.Multiline\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"dos-and-donts\",\n      children: \"Dos and Don'ts\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"A tooltip is, in its basic form, a line of text. However, it can also contain icons.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"It must never contain interactive elements (a mouse pointer will not always be able to reach it).\"\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"margins-and-spacing\",\n      children: \"Margins and Spacing\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"A tooltip will never hug either side of the container; it will respect the internal padding of the that container.\"\n    }), \"\\n\", _jsxs(_components.blockquote, {\n      children: [\"\\n\", _jsx(_components.p, {\n        children: \"Position, in-tree or out-of-tree to be decided\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Due to technical limitations, the minimum width of a tooltip is defined by its container (i.e, 80% of it).  Tooltips with content shorter this width will have additional space on the right.\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["title","component","SpotTooltipComponent","decorators","moduleMetadata","imports","OpSpotModule","Default","render","args","props","template","InList","Dark","Multiline","MDXContext","React","withMDXComponents","Component","boundMDXComponent","allComponents","useMDXComponents","components","contextComponents","emptyObject","MDXProvider","disableParentContext","Provider","value","children","f","require","k","Symbol","for","l","m","Object","prototype","hasOwnProperty","n","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","p","key","ref","__self","__source","q","c","a","g","b","d","e","h","call","defaultProps","$$typeof","type","_owner","current","exports","Fragment","jsx","jsxs","module","_createMdxContent","_components","assign","h1","h2","em","ul","li","blockquote","of","id","MDXContent","wrapper","MDXLayout"],"sourceRoot":"webpack:///","x_google_ignoreList":[1,2,3]}