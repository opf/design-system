{"version":3,"file":"3588.d7e91a7b.iframe.bundle.js","mappings":"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","sources":["./node_modules/@angular/cdk/fesm2022/platform.mjs","./node_modules/rxjs/dist/esm5/internal/operators/skip.js","./node_modules/@angular/cdk/fesm2022/coercion.mjs","./node_modules/rxjs/dist/esm5/internal/operators/debounceTime.js","./node_modules/@angular/cdk/fesm2022/observers.mjs","./node_modules/@angular/cdk/fesm2022/layout.mjs","./node_modules/@angular/cdk/fesm2022/a11y.mjs","./node_modules/@angular/cdk/fesm2022/keycodes.mjs","./node_modules/@floating-ui/core/dist/floating-ui.core.browser.min.mjs","./node_modules/@floating-ui/dom/dist/floating-ui.dom.browser.min.mjs","./node_modules/@w11k/ngx-componentdestroyed/dist/es2015/index.js"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { PLATFORM_ID, Injectable, Inject, NgModule } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n// Whether the current platform supports the V8 Break Iterator. The V8 check\n// is necessary to detect all Blink based browsers.\nlet hasV8BreakIterator;\n// We need a try/catch around the reference to `Intl`, because accessing it in some cases can\n// cause IE to throw. These cases are tied to particular versions of Windows and can happen if\n// the consumer is providing a polyfilled `Map`. See:\n// https://github.com/Microsoft/ChakraCore/issues/3189\n// https://github.com/angular/components/issues/15687\ntry {\n    hasV8BreakIterator = typeof Intl !== 'undefined' && Intl.v8BreakIterator;\n}\ncatch {\n    hasV8BreakIterator = false;\n}\n/**\n * Service to detect the current platform by comparing the userAgent strings and\n * checking browser-specific global properties.\n */\nclass Platform {\n    constructor(_platformId) {\n        this._platformId = _platformId;\n        // We want to use the Angular platform check because if the Document is shimmed\n        // without the navigator, the following checks will fail. This is preferred because\n        // sometimes the Document may be shimmed without the user's knowledge or intention\n        /** Whether the Angular application is being rendered in the browser. */\n        this.isBrowser = this._platformId\n            ? isPlatformBrowser(this._platformId)\n            : typeof document === 'object' && !!document;\n        /** Whether the current browser is Microsoft Edge. */\n        this.EDGE = this.isBrowser && /(edge)/i.test(navigator.userAgent);\n        /** Whether the current rendering engine is Microsoft Trident. */\n        this.TRIDENT = this.isBrowser && /(msie|trident)/i.test(navigator.userAgent);\n        // EdgeHTML and Trident mock Blink specific things and need to be excluded from this check.\n        /** Whether the current rendering engine is Blink. */\n        this.BLINK = this.isBrowser &&\n            !!(window.chrome || hasV8BreakIterator) &&\n            typeof CSS !== 'undefined' &&\n            !this.EDGE &&\n            !this.TRIDENT;\n        // Webkit is part of the userAgent in EdgeHTML, Blink and Trident. Therefore we need to\n        // ensure that Webkit runs standalone and is not used as another engine's base.\n        /** Whether the current rendering engine is WebKit. */\n        this.WEBKIT = this.isBrowser &&\n            /AppleWebKit/i.test(navigator.userAgent) &&\n            !this.BLINK &&\n            !this.EDGE &&\n            !this.TRIDENT;\n        /** Whether the current platform is Apple iOS. */\n        this.IOS = this.isBrowser && /iPad|iPhone|iPod/.test(navigator.userAgent) && !('MSStream' in window);\n        // It's difficult to detect the plain Gecko engine, because most of the browsers identify\n        // them self as Gecko-like browsers and modify the userAgent's according to that.\n        // Since we only cover one explicit Firefox case, we can simply check for Firefox\n        // instead of having an unstable check for Gecko.\n        /** Whether the current browser is Firefox. */\n        this.FIREFOX = this.isBrowser && /(firefox|minefield)/i.test(navigator.userAgent);\n        /** Whether the current platform is Android. */\n        // Trident on mobile adds the android platform to the userAgent to trick detections.\n        this.ANDROID = this.isBrowser && /android/i.test(navigator.userAgent) && !this.TRIDENT;\n        // Safari browsers will include the Safari keyword in their userAgent. Some browsers may fake\n        // this and just place the Safari keyword in the userAgent. To be more safe about Safari every\n        // Safari browser should also use Webkit as its layout engine.\n        /** Whether the current browser is Safari. */\n        this.SAFARI = this.isBrowser && /safari/i.test(navigator.userAgent) && this.WEBKIT;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: Platform, deps: [{ token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: Platform, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: Platform, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: Object, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; } });\n\nclass PlatformModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: PlatformModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.1.1\", ngImport: i0, type: PlatformModule }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: PlatformModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: PlatformModule, decorators: [{\n            type: NgModule,\n            args: [{}]\n        }] });\n\n/** Cached result Set of input types support by the current browser. */\nlet supportedInputTypes;\n/** Types of `<input>` that *might* be supported. */\nconst candidateInputTypes = [\n    // `color` must come first. Chrome 56 shows a warning if we change the type to `color` after\n    // first changing it to something else:\n    // The specified value \"\" does not conform to the required format.\n    // The format is \"#rrggbb\" where rr, gg, bb are two-digit hexadecimal numbers.\n    'color',\n    'button',\n    'checkbox',\n    'date',\n    'datetime-local',\n    'email',\n    'file',\n    'hidden',\n    'image',\n    'month',\n    'number',\n    'password',\n    'radio',\n    'range',\n    'reset',\n    'search',\n    'submit',\n    'tel',\n    'text',\n    'time',\n    'url',\n    'week',\n];\n/** @returns The input types supported by this browser. */\nfunction getSupportedInputTypes() {\n    // Result is cached.\n    if (supportedInputTypes) {\n        return supportedInputTypes;\n    }\n    // We can't check if an input type is not supported until we're on the browser, so say that\n    // everything is supported when not on the browser. We don't use `Platform` here since it's\n    // just a helper function and can't inject it.\n    if (typeof document !== 'object' || !document) {\n        supportedInputTypes = new Set(candidateInputTypes);\n        return supportedInputTypes;\n    }\n    let featureTestInput = document.createElement('input');\n    supportedInputTypes = new Set(candidateInputTypes.filter(value => {\n        featureTestInput.setAttribute('type', value);\n        return featureTestInput.type === value;\n    }));\n    return supportedInputTypes;\n}\n\n/** Cached result of whether the user's browser supports passive event listeners. */\nlet supportsPassiveEvents;\n/**\n * Checks whether the user's browser supports passive event listeners.\n * See: https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n */\nfunction supportsPassiveEventListeners() {\n    if (supportsPassiveEvents == null && typeof window !== 'undefined') {\n        try {\n            window.addEventListener('test', null, Object.defineProperty({}, 'passive', {\n                get: () => (supportsPassiveEvents = true),\n            }));\n        }\n        finally {\n            supportsPassiveEvents = supportsPassiveEvents || false;\n        }\n    }\n    return supportsPassiveEvents;\n}\n/**\n * Normalizes an `AddEventListener` object to something that can be passed\n * to `addEventListener` on any browser, no matter whether it supports the\n * `options` parameter.\n * @param options Object to be normalized.\n */\nfunction normalizePassiveListenerOptions(options) {\n    return supportsPassiveEventListeners() ? options : !!options.capture;\n}\n\n/** Cached result of the way the browser handles the horizontal scroll axis in RTL mode. */\nlet rtlScrollAxisType;\n/** Cached result of the check that indicates whether the browser supports scroll behaviors. */\nlet scrollBehaviorSupported;\n/** Check whether the browser supports scroll behaviors. */\nfunction supportsScrollBehavior() {\n    if (scrollBehaviorSupported == null) {\n        // If we're not in the browser, it can't be supported. Also check for `Element`, because\n        // some projects stub out the global `document` during SSR which can throw us off.\n        if (typeof document !== 'object' || !document || typeof Element !== 'function' || !Element) {\n            scrollBehaviorSupported = false;\n            return scrollBehaviorSupported;\n        }\n        // If the element can have a `scrollBehavior` style, we can be sure that it's supported.\n        if ('scrollBehavior' in document.documentElement.style) {\n            scrollBehaviorSupported = true;\n        }\n        else {\n            // At this point we have 3 possibilities: `scrollTo` isn't supported at all, it's\n            // supported but it doesn't handle scroll behavior, or it has been polyfilled.\n            const scrollToFunction = Element.prototype.scrollTo;\n            if (scrollToFunction) {\n                // We can detect if the function has been polyfilled by calling `toString` on it. Native\n                // functions are obfuscated using `[native code]`, whereas if it was overwritten we'd get\n                // the actual function source. Via https://davidwalsh.name/detect-native-function. Consider\n                // polyfilled functions as supporting scroll behavior.\n                scrollBehaviorSupported = !/\\{\\s*\\[native code\\]\\s*\\}/.test(scrollToFunction.toString());\n            }\n            else {\n                scrollBehaviorSupported = false;\n            }\n        }\n    }\n    return scrollBehaviorSupported;\n}\n/**\n * Checks the type of RTL scroll axis used by this browser. As of time of writing, Chrome is NORMAL,\n * Firefox & Safari are NEGATED, and IE & Edge are INVERTED.\n */\nfunction getRtlScrollAxisType() {\n    // We can't check unless we're on the browser. Just assume 'normal' if we're not.\n    if (typeof document !== 'object' || !document) {\n        return 0 /* RtlScrollAxisType.NORMAL */;\n    }\n    if (rtlScrollAxisType == null) {\n        // Create a 1px wide scrolling container and a 2px wide content element.\n        const scrollContainer = document.createElement('div');\n        const containerStyle = scrollContainer.style;\n        scrollContainer.dir = 'rtl';\n        containerStyle.width = '1px';\n        containerStyle.overflow = 'auto';\n        containerStyle.visibility = 'hidden';\n        containerStyle.pointerEvents = 'none';\n        containerStyle.position = 'absolute';\n        const content = document.createElement('div');\n        const contentStyle = content.style;\n        contentStyle.width = '2px';\n        contentStyle.height = '1px';\n        scrollContainer.appendChild(content);\n        document.body.appendChild(scrollContainer);\n        rtlScrollAxisType = 0 /* RtlScrollAxisType.NORMAL */;\n        // The viewport starts scrolled all the way to the right in RTL mode. If we are in a NORMAL\n        // browser this would mean that the scrollLeft should be 1. If it's zero instead we know we're\n        // dealing with one of the other two types of browsers.\n        if (scrollContainer.scrollLeft === 0) {\n            // In a NEGATED browser the scrollLeft is always somewhere in [-maxScrollAmount, 0]. For an\n            // INVERTED browser it is always somewhere in [0, maxScrollAmount]. We can determine which by\n            // setting to the scrollLeft to 1. This is past the max for a NEGATED browser, so it will\n            // return 0 when we read it again.\n            scrollContainer.scrollLeft = 1;\n            rtlScrollAxisType =\n                scrollContainer.scrollLeft === 0 ? 1 /* RtlScrollAxisType.NEGATED */ : 2 /* RtlScrollAxisType.INVERTED */;\n        }\n        scrollContainer.remove();\n    }\n    return rtlScrollAxisType;\n}\n\nlet shadowDomIsSupported;\n/** Checks whether the user's browser support Shadow DOM. */\nfunction _supportsShadowDom() {\n    if (shadowDomIsSupported == null) {\n        const head = typeof document !== 'undefined' ? document.head : null;\n        shadowDomIsSupported = !!(head && (head.createShadowRoot || head.attachShadow));\n    }\n    return shadowDomIsSupported;\n}\n/** Gets the shadow root of an element, if supported and the element is inside the Shadow DOM. */\nfunction _getShadowRoot(element) {\n    if (_supportsShadowDom()) {\n        const rootNode = element.getRootNode ? element.getRootNode() : null;\n        // Note that this should be caught by `_supportsShadowDom`, but some\n        // teams have been able to hit this code path on unsupported browsers.\n        if (typeof ShadowRoot !== 'undefined' && ShadowRoot && rootNode instanceof ShadowRoot) {\n            return rootNode;\n        }\n    }\n    return null;\n}\n/**\n * Gets the currently-focused element on the page while\n * also piercing through Shadow DOM boundaries.\n */\nfunction _getFocusedElementPierceShadowDom() {\n    let activeElement = typeof document !== 'undefined' && document\n        ? document.activeElement\n        : null;\n    while (activeElement && activeElement.shadowRoot) {\n        const newActiveElement = activeElement.shadowRoot.activeElement;\n        if (newActiveElement === activeElement) {\n            break;\n        }\n        else {\n            activeElement = newActiveElement;\n        }\n    }\n    return activeElement;\n}\n/** Gets the target of an event while accounting for Shadow DOM. */\nfunction _getEventTarget(event) {\n    // If an event is bound outside the Shadow DOM, the `event.target` will\n    // point to the shadow root so we have to use `composedPath` instead.\n    return (event.composedPath ? event.composedPath()[0] : event.target);\n}\n\n/** Gets whether the code is currently running in a test environment. */\nfunction _isTestEnvironment() {\n    // We can't use `declare const` because it causes conflicts inside Google with the real typings\n    // for these symbols and we can't read them off the global object, because they don't appear to\n    // be attached there for some runners like Jest.\n    // (see: https://github.com/angular/components/issues/23365#issuecomment-938146643)\n    return (\n    // @ts-ignore\n    (typeof __karma__ !== 'undefined' && !!__karma__) ||\n        // @ts-ignore\n        (typeof jasmine !== 'undefined' && !!jasmine) ||\n        // @ts-ignore\n        (typeof jest !== 'undefined' && !!jest) ||\n        // @ts-ignore\n        (typeof Mocha !== 'undefined' && !!Mocha));\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Platform, PlatformModule, _getEventTarget, _getFocusedElementPierceShadowDom, _getShadowRoot, _isTestEnvironment, _supportsShadowDom, getRtlScrollAxisType, getSupportedInputTypes, normalizePassiveListenerOptions, supportsPassiveEventListeners, supportsScrollBehavior };\n","import { filter } from './filter';\nexport function skip(count) {\n    return filter(function (_, index) { return count <= index; });\n}\n","import { ElementRef } from '@angular/core';\n\n/** Coerces a data-bound value (typically a string) to a boolean. */\nfunction coerceBooleanProperty(value) {\n    return value != null && `${value}` !== 'false';\n}\n\nfunction coerceNumberProperty(value, fallbackValue = 0) {\n    return _isNumberValue(value) ? Number(value) : fallbackValue;\n}\n/**\n * Whether the provided value is considered a number.\n * @docs-private\n */\nfunction _isNumberValue(value) {\n    // parseFloat(value) handles most of the cases we're interested in (it treats null, empty string,\n    // and other non-number values as NaN, where Number just uses 0) but it considers the string\n    // '123hello' to be a valid number. Therefore we also check if Number(value) is NaN.\n    return !isNaN(parseFloat(value)) && !isNaN(Number(value));\n}\n\nfunction coerceArray(value) {\n    return Array.isArray(value) ? value : [value];\n}\n\n/** Coerces a value to a CSS pixel value. */\nfunction coerceCssPixelValue(value) {\n    if (value == null) {\n        return '';\n    }\n    return typeof value === 'string' ? value : `${value}px`;\n}\n\n/**\n * Coerces an ElementRef or an Element into an element.\n * Useful for APIs that can accept either a ref or the native element itself.\n */\nfunction coerceElement(elementOrRef) {\n    return elementOrRef instanceof ElementRef ? elementOrRef.nativeElement : elementOrRef;\n}\n\n/**\n * Coerces a value to an array of trimmed non-empty strings.\n * Any input that is not an array, `null` or `undefined` will be turned into a string\n * via `toString()` and subsequently split with the given separator.\n * `null` and `undefined` will result in an empty array.\n * This results in the following outcomes:\n * - `null` -&gt; `[]`\n * - `[null]` -&gt; `[\"null\"]`\n * - `[\"a\", \"b \", \" \"]` -&gt; `[\"a\", \"b\"]`\n * - `[1, [2, 3]]` -&gt; `[\"1\", \"2,3\"]`\n * - `[{ a: 0 }]` -&gt; `[\"[object Object]\"]`\n * - `{ a: 0 }` -&gt; `[\"[object\", \"Object]\"]`\n *\n * Useful for defining CSS classes or table columns.\n * @param value the value to coerce into an array of strings\n * @param separator split-separator if value isn't an array\n */\nfunction coerceStringArray(value, separator = /\\s+/) {\n    const result = [];\n    if (value != null) {\n        const sourceValues = Array.isArray(value) ? value : `${value}`.split(separator);\n        for (const sourceValue of sourceValues) {\n            const trimmedString = `${sourceValue}`.trim();\n            if (trimmedString) {\n                result.push(trimmedString);\n            }\n        }\n    }\n    return result;\n}\n\nexport { _isNumberValue, coerceArray, coerceBooleanProperty, coerceCssPixelValue, coerceElement, coerceNumberProperty, coerceStringArray };\n","import { asyncScheduler } from '../scheduler/async';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function debounceTime(dueTime, scheduler) {\n    if (scheduler === void 0) { scheduler = asyncScheduler; }\n    return operate(function (source, subscriber) {\n        var activeTask = null;\n        var lastValue = null;\n        var lastTime = null;\n        var emit = function () {\n            if (activeTask) {\n                activeTask.unsubscribe();\n                activeTask = null;\n                var value = lastValue;\n                lastValue = null;\n                subscriber.next(value);\n            }\n        };\n        function emitWhenIdle() {\n            var targetTime = lastTime + dueTime;\n            var now = scheduler.now();\n            if (now < targetTime) {\n                activeTask = this.schedule(undefined, targetTime - now);\n                subscriber.add(activeTask);\n                return;\n            }\n            emit();\n        }\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n            lastValue = value;\n            lastTime = scheduler.now();\n            if (!activeTask) {\n                activeTask = scheduler.schedule(emitWhenIdle, dueTime);\n                subscriber.add(activeTask);\n            }\n        }, function () {\n            emit();\n            subscriber.complete();\n        }, undefined, function () {\n            lastValue = activeTask = null;\n        }));\n    });\n}\n","import { coerceElement, coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, Directive, Output, Input, NgModule } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\n/**\n * Factory that creates a new MutationObserver and allows us to stub it out in unit tests.\n * @docs-private\n */\nclass MutationObserverFactory {\n    create(callback) {\n        return typeof MutationObserver === 'undefined' ? null : new MutationObserver(callback);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MutationObserverFactory, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MutationObserverFactory, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MutationObserverFactory, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n/** An injectable service that allows watching elements for changes to their content. */\nclass ContentObserver {\n    constructor(_mutationObserverFactory) {\n        this._mutationObserverFactory = _mutationObserverFactory;\n        /** Keeps track of the existing MutationObservers so they can be reused. */\n        this._observedElements = new Map();\n    }\n    ngOnDestroy() {\n        this._observedElements.forEach((_, element) => this._cleanupObserver(element));\n    }\n    observe(elementOrRef) {\n        const element = coerceElement(elementOrRef);\n        return new Observable((observer) => {\n            const stream = this._observeElement(element);\n            const subscription = stream.subscribe(observer);\n            return () => {\n                subscription.unsubscribe();\n                this._unobserveElement(element);\n            };\n        });\n    }\n    /**\n     * Observes the given element by using the existing MutationObserver if available, or creating a\n     * new one if not.\n     */\n    _observeElement(element) {\n        if (!this._observedElements.has(element)) {\n            const stream = new Subject();\n            const observer = this._mutationObserverFactory.create(mutations => stream.next(mutations));\n            if (observer) {\n                observer.observe(element, {\n                    characterData: true,\n                    childList: true,\n                    subtree: true,\n                });\n            }\n            this._observedElements.set(element, { observer, stream, count: 1 });\n        }\n        else {\n            this._observedElements.get(element).count++;\n        }\n        return this._observedElements.get(element).stream;\n    }\n    /**\n     * Un-observes the given element and cleans up the underlying MutationObserver if nobody else is\n     * observing this element.\n     */\n    _unobserveElement(element) {\n        if (this._observedElements.has(element)) {\n            this._observedElements.get(element).count--;\n            if (!this._observedElements.get(element).count) {\n                this._cleanupObserver(element);\n            }\n        }\n    }\n    /** Clean up the underlying MutationObserver for the specified element. */\n    _cleanupObserver(element) {\n        if (this._observedElements.has(element)) {\n            const { observer, stream } = this._observedElements.get(element);\n            if (observer) {\n                observer.disconnect();\n            }\n            stream.complete();\n            this._observedElements.delete(element);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: ContentObserver, deps: [{ token: MutationObserverFactory }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: ContentObserver, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: ContentObserver, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: MutationObserverFactory }]; } });\n/**\n * Directive that triggers a callback whenever the content of\n * its associated element has changed.\n */\nclass CdkObserveContent {\n    /**\n     * Whether observing content is disabled. This option can be used\n     * to disconnect the underlying MutationObserver until it is needed.\n     */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._disabled ? this._unsubscribe() : this._subscribe();\n    }\n    /** Debounce interval for emitting the changes. */\n    get debounce() {\n        return this._debounce;\n    }\n    set debounce(value) {\n        this._debounce = coerceNumberProperty(value);\n        this._subscribe();\n    }\n    constructor(_contentObserver, _elementRef, _ngZone) {\n        this._contentObserver = _contentObserver;\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        /** Event emitted for each change in the element's content. */\n        this.event = new EventEmitter();\n        this._disabled = false;\n        this._currentSubscription = null;\n    }\n    ngAfterContentInit() {\n        if (!this._currentSubscription && !this.disabled) {\n            this._subscribe();\n        }\n    }\n    ngOnDestroy() {\n        this._unsubscribe();\n    }\n    _subscribe() {\n        this._unsubscribe();\n        const stream = this._contentObserver.observe(this._elementRef);\n        // TODO(mmalerba): We shouldn't be emitting on this @Output() outside the zone.\n        // Consider brining it back inside the zone next time we're making breaking changes.\n        // Bringing it back inside can cause things like infinite change detection loops and changed\n        // after checked errors if people's code isn't handling it properly.\n        this._ngZone.runOutsideAngular(() => {\n            this._currentSubscription = (this.debounce ? stream.pipe(debounceTime(this.debounce)) : stream).subscribe(this.event);\n        });\n    }\n    _unsubscribe() {\n        this._currentSubscription?.unsubscribe();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: CdkObserveContent, deps: [{ token: ContentObserver }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: CdkObserveContent, selector: \"[cdkObserveContent]\", inputs: { disabled: [\"cdkObserveContentDisabled\", \"disabled\"], debounce: \"debounce\" }, outputs: { event: \"cdkObserveContent\" }, exportAs: [\"cdkObserveContent\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: CdkObserveContent, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkObserveContent]',\n                    exportAs: 'cdkObserveContent',\n                }]\n        }], ctorParameters: function () { return [{ type: ContentObserver }, { type: i0.ElementRef }, { type: i0.NgZone }]; }, propDecorators: { event: [{\n                type: Output,\n                args: ['cdkObserveContent']\n            }], disabled: [{\n                type: Input,\n                args: ['cdkObserveContentDisabled']\n            }], debounce: [{\n                type: Input\n            }] } });\nclass ObserversModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: ObserversModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.1.1\", ngImport: i0, type: ObserversModule, declarations: [CdkObserveContent], exports: [CdkObserveContent] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: ObserversModule, providers: [MutationObserverFactory] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: ObserversModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [CdkObserveContent],\n                    declarations: [CdkObserveContent],\n                    providers: [MutationObserverFactory],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkObserveContent, ContentObserver, MutationObserverFactory, ObserversModule };\n","import * as i0 from '@angular/core';\nimport { NgModule, CSP_NONCE, Injectable, Optional, Inject } from '@angular/core';\nimport { coerceArray } from '@angular/cdk/coercion';\nimport { Subject, combineLatest, concat, Observable } from 'rxjs';\nimport { take, skip, debounceTime, map, startWith, takeUntil } from 'rxjs/operators';\nimport * as i1 from '@angular/cdk/platform';\n\nclass LayoutModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: LayoutModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.1.1\", ngImport: i0, type: LayoutModule }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: LayoutModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: LayoutModule, decorators: [{\n            type: NgModule,\n            args: [{}]\n        }] });\n\n/** Global registry for all dynamically-created, injected media queries. */\nconst mediaQueriesForWebkitCompatibility = new Set();\n/** Style tag that holds all of the dynamically-created media queries. */\nlet mediaQueryStyleNode;\n/** A utility for calling matchMedia queries. */\nclass MediaMatcher {\n    constructor(_platform, _nonce) {\n        this._platform = _platform;\n        this._nonce = _nonce;\n        this._matchMedia =\n            this._platform.isBrowser && window.matchMedia\n                ? // matchMedia is bound to the window scope intentionally as it is an illegal invocation to\n                    // call it from a different scope.\n                    window.matchMedia.bind(window)\n                : noopMatchMedia;\n    }\n    /**\n     * Evaluates the given media query and returns the native MediaQueryList from which results\n     * can be retrieved.\n     * Confirms the layout engine will trigger for the selector query provided and returns the\n     * MediaQueryList for the query provided.\n     */\n    matchMedia(query) {\n        if (this._platform.WEBKIT || this._platform.BLINK) {\n            createEmptyStyleRule(query, this._nonce);\n        }\n        return this._matchMedia(query);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MediaMatcher, deps: [{ token: i1.Platform }, { token: CSP_NONCE, optional: true }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MediaMatcher, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MediaMatcher, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i1.Platform }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [CSP_NONCE]\n                }] }]; } });\n/**\n * Creates an empty stylesheet that is used to work around browser inconsistencies related to\n * `matchMedia`. At the time of writing, it handles the following cases:\n * 1. On WebKit browsers, a media query has to have at least one rule in order for `matchMedia`\n * to fire. We work around it by declaring a dummy stylesheet with a `@media` declaration.\n * 2. In some cases Blink browsers will stop firing the `matchMedia` listener if none of the rules\n * inside the `@media` match existing elements on the page. We work around it by having one rule\n * targeting the `body`. See https://github.com/angular/components/issues/23546.\n */\nfunction createEmptyStyleRule(query, nonce) {\n    if (mediaQueriesForWebkitCompatibility.has(query)) {\n        return;\n    }\n    try {\n        if (!mediaQueryStyleNode) {\n            mediaQueryStyleNode = document.createElement('style');\n            if (nonce) {\n                mediaQueryStyleNode.nonce = nonce;\n            }\n            mediaQueryStyleNode.setAttribute('type', 'text/css');\n            document.head.appendChild(mediaQueryStyleNode);\n        }\n        if (mediaQueryStyleNode.sheet) {\n            mediaQueryStyleNode.sheet.insertRule(`@media ${query} {body{ }}`, 0);\n            mediaQueriesForWebkitCompatibility.add(query);\n        }\n    }\n    catch (e) {\n        console.error(e);\n    }\n}\n/** No-op matchMedia replacement for non-browser platforms. */\nfunction noopMatchMedia(query) {\n    // Use `as any` here to avoid adding additional necessary properties for\n    // the noop matcher.\n    return {\n        matches: query === 'all' || query === '',\n        media: query,\n        addListener: () => { },\n        removeListener: () => { },\n    };\n}\n\n/** Utility for checking the matching state of @media queries. */\nclass BreakpointObserver {\n    constructor(_mediaMatcher, _zone) {\n        this._mediaMatcher = _mediaMatcher;\n        this._zone = _zone;\n        /**  A map of all media queries currently being listened for. */\n        this._queries = new Map();\n        /** A subject for all other observables to takeUntil based on. */\n        this._destroySubject = new Subject();\n    }\n    /** Completes the active subject, signalling to all other observables to complete. */\n    ngOnDestroy() {\n        this._destroySubject.next();\n        this._destroySubject.complete();\n    }\n    /**\n     * Whether one or more media queries match the current viewport size.\n     * @param value One or more media queries to check.\n     * @returns Whether any of the media queries match.\n     */\n    isMatched(value) {\n        const queries = splitQueries(coerceArray(value));\n        return queries.some(mediaQuery => this._registerQuery(mediaQuery).mql.matches);\n    }\n    /**\n     * Gets an observable of results for the given queries that will emit new results for any changes\n     * in matching of the given queries.\n     * @param value One or more media queries to check.\n     * @returns A stream of matches for the given queries.\n     */\n    observe(value) {\n        const queries = splitQueries(coerceArray(value));\n        const observables = queries.map(query => this._registerQuery(query).observable);\n        let stateObservable = combineLatest(observables);\n        // Emit the first state immediately, and then debounce the subsequent emissions.\n        stateObservable = concat(stateObservable.pipe(take(1)), stateObservable.pipe(skip(1), debounceTime(0)));\n        return stateObservable.pipe(map(breakpointStates => {\n            const response = {\n                matches: false,\n                breakpoints: {},\n            };\n            breakpointStates.forEach(({ matches, query }) => {\n                response.matches = response.matches || matches;\n                response.breakpoints[query] = matches;\n            });\n            return response;\n        }));\n    }\n    /** Registers a specific query to be listened for. */\n    _registerQuery(query) {\n        // Only set up a new MediaQueryList if it is not already being listened for.\n        if (this._queries.has(query)) {\n            return this._queries.get(query);\n        }\n        const mql = this._mediaMatcher.matchMedia(query);\n        // Create callback for match changes and add it is as a listener.\n        const queryObservable = new Observable((observer) => {\n            // Listener callback methods are wrapped to be placed back in ngZone. Callbacks must be placed\n            // back into the zone because matchMedia is only included in Zone.js by loading the\n            // webapis-media-query.js file alongside the zone.js file.  Additionally, some browsers do not\n            // have MediaQueryList inherit from EventTarget, which causes inconsistencies in how Zone.js\n            // patches it.\n            const handler = (e) => this._zone.run(() => observer.next(e));\n            mql.addListener(handler);\n            return () => {\n                mql.removeListener(handler);\n            };\n        }).pipe(startWith(mql), map(({ matches }) => ({ query, matches })), takeUntil(this._destroySubject));\n        // Add the MediaQueryList to the set of queries.\n        const output = { observable: queryObservable, mql };\n        this._queries.set(query, output);\n        return output;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: BreakpointObserver, deps: [{ token: MediaMatcher }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: BreakpointObserver, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: BreakpointObserver, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: MediaMatcher }, { type: i0.NgZone }]; } });\n/**\n * Split each query string into separate query strings if two queries are provided as comma\n * separated.\n */\nfunction splitQueries(queries) {\n    return queries\n        .map(query => query.split(','))\n        .reduce((a1, a2) => a1.concat(a2))\n        .map(query => query.trim());\n}\n\n// PascalCase is being used as Breakpoints is used like an enum.\n// tslint:disable-next-line:variable-name\nconst Breakpoints = {\n    XSmall: '(max-width: 599.98px)',\n    Small: '(min-width: 600px) and (max-width: 959.98px)',\n    Medium: '(min-width: 960px) and (max-width: 1279.98px)',\n    Large: '(min-width: 1280px) and (max-width: 1919.98px)',\n    XLarge: '(min-width: 1920px)',\n    Handset: '(max-width: 599.98px) and (orientation: portrait), ' +\n        '(max-width: 959.98px) and (orientation: landscape)',\n    Tablet: '(min-width: 600px) and (max-width: 839.98px) and (orientation: portrait), ' +\n        '(min-width: 960px) and (max-width: 1279.98px) and (orientation: landscape)',\n    Web: '(min-width: 840px) and (orientation: portrait), ' +\n        '(min-width: 1280px) and (orientation: landscape)',\n    HandsetPortrait: '(max-width: 599.98px) and (orientation: portrait)',\n    TabletPortrait: '(min-width: 600px) and (max-width: 839.98px) and (orientation: portrait)',\n    WebPortrait: '(min-width: 840px) and (orientation: portrait)',\n    HandsetLandscape: '(max-width: 959.98px) and (orientation: landscape)',\n    TabletLandscape: '(min-width: 960px) and (max-width: 1279.98px) and (orientation: landscape)',\n    WebLandscape: '(min-width: 1280px) and (orientation: landscape)',\n};\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BreakpointObserver, Breakpoints, LayoutModule, MediaMatcher };\n","import { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { inject, APP_ID, Injectable, Inject, QueryList, Directive, Input, InjectionToken, Optional, EventEmitter, Output, NgModule } from '@angular/core';\nimport * as i1 from '@angular/cdk/platform';\nimport { _getFocusedElementPierceShadowDom, normalizePassiveListenerOptions, _getEventTarget, _getShadowRoot } from '@angular/cdk/platform';\nimport { Subject, Subscription, BehaviorSubject, of } from 'rxjs';\nimport { hasModifierKey, A, Z, ZERO, NINE, PAGE_DOWN, PAGE_UP, END, HOME, LEFT_ARROW, RIGHT_ARROW, UP_ARROW, DOWN_ARROW, TAB, ALT, CONTROL, MAC_META, META, SHIFT } from '@angular/cdk/keycodes';\nimport { tap, debounceTime, filter, map, take, skip, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { coerceBooleanProperty, coerceElement } from '@angular/cdk/coercion';\nimport * as i1$1 from '@angular/cdk/observers';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { BreakpointObserver } from '@angular/cdk/layout';\n\n/** IDs are delimited by an empty space, as per the spec. */\nconst ID_DELIMITER = ' ';\n/**\n * Adds the given ID to the specified ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n */\nfunction addAriaReferencedId(el, attr, id) {\n    const ids = getAriaReferenceIds(el, attr);\n    if (ids.some(existingId => existingId.trim() == id.trim())) {\n        return;\n    }\n    ids.push(id.trim());\n    el.setAttribute(attr, ids.join(ID_DELIMITER));\n}\n/**\n * Removes the given ID from the specified ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n */\nfunction removeAriaReferencedId(el, attr, id) {\n    const ids = getAriaReferenceIds(el, attr);\n    const filteredIds = ids.filter(val => val != id.trim());\n    if (filteredIds.length) {\n        el.setAttribute(attr, filteredIds.join(ID_DELIMITER));\n    }\n    else {\n        el.removeAttribute(attr);\n    }\n}\n/**\n * Gets the list of IDs referenced by the given ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n */\nfunction getAriaReferenceIds(el, attr) {\n    // Get string array of all individual ids (whitespace delimited) in the attribute value\n    return (el.getAttribute(attr) || '').match(/\\S+/g) || [];\n}\n\n/**\n * ID used for the body container where all messages are appended.\n * @deprecated No longer being used. To be removed.\n * @breaking-change 14.0.0\n */\nconst MESSAGES_CONTAINER_ID = 'cdk-describedby-message-container';\n/**\n * ID prefix used for each created message element.\n * @deprecated To be turned into a private variable.\n * @breaking-change 14.0.0\n */\nconst CDK_DESCRIBEDBY_ID_PREFIX = 'cdk-describedby-message';\n/**\n * Attribute given to each host element that is described by a message element.\n * @deprecated To be turned into a private variable.\n * @breaking-change 14.0.0\n */\nconst CDK_DESCRIBEDBY_HOST_ATTRIBUTE = 'cdk-describedby-host';\n/** Global incremental identifier for each registered message element. */\nlet nextId = 0;\n/**\n * Utility that creates visually hidden elements with a message content. Useful for elements that\n * want to use aria-describedby to further describe themselves without adding additional visual\n * content.\n */\nclass AriaDescriber {\n    constructor(_document, \n    /**\n     * @deprecated To be turned into a required parameter.\n     * @breaking-change 14.0.0\n     */\n    _platform) {\n        this._platform = _platform;\n        /** Map of all registered message elements that have been placed into the document. */\n        this._messageRegistry = new Map();\n        /** Container for all registered messages. */\n        this._messagesContainer = null;\n        /** Unique ID for the service. */\n        this._id = `${nextId++}`;\n        this._document = _document;\n        this._id = inject(APP_ID) + '-' + nextId++;\n    }\n    describe(hostElement, message, role) {\n        if (!this._canBeDescribed(hostElement, message)) {\n            return;\n        }\n        const key = getKey(message, role);\n        if (typeof message !== 'string') {\n            // We need to ensure that the element has an ID.\n            setMessageId(message, this._id);\n            this._messageRegistry.set(key, { messageElement: message, referenceCount: 0 });\n        }\n        else if (!this._messageRegistry.has(key)) {\n            this._createMessageElement(message, role);\n        }\n        if (!this._isElementDescribedByMessage(hostElement, key)) {\n            this._addMessageReference(hostElement, key);\n        }\n    }\n    removeDescription(hostElement, message, role) {\n        if (!message || !this._isElementNode(hostElement)) {\n            return;\n        }\n        const key = getKey(message, role);\n        if (this._isElementDescribedByMessage(hostElement, key)) {\n            this._removeMessageReference(hostElement, key);\n        }\n        // If the message is a string, it means that it's one that we created for the\n        // consumer so we can remove it safely, otherwise we should leave it in place.\n        if (typeof message === 'string') {\n            const registeredMessage = this._messageRegistry.get(key);\n            if (registeredMessage && registeredMessage.referenceCount === 0) {\n                this._deleteMessageElement(key);\n            }\n        }\n        if (this._messagesContainer?.childNodes.length === 0) {\n            this._messagesContainer.remove();\n            this._messagesContainer = null;\n        }\n    }\n    /** Unregisters all created message elements and removes the message container. */\n    ngOnDestroy() {\n        const describedElements = this._document.querySelectorAll(`[${CDK_DESCRIBEDBY_HOST_ATTRIBUTE}=\"${this._id}\"]`);\n        for (let i = 0; i < describedElements.length; i++) {\n            this._removeCdkDescribedByReferenceIds(describedElements[i]);\n            describedElements[i].removeAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE);\n        }\n        this._messagesContainer?.remove();\n        this._messagesContainer = null;\n        this._messageRegistry.clear();\n    }\n    /**\n     * Creates a new element in the visually hidden message container element with the message\n     * as its content and adds it to the message registry.\n     */\n    _createMessageElement(message, role) {\n        const messageElement = this._document.createElement('div');\n        setMessageId(messageElement, this._id);\n        messageElement.textContent = message;\n        if (role) {\n            messageElement.setAttribute('role', role);\n        }\n        this._createMessagesContainer();\n        this._messagesContainer.appendChild(messageElement);\n        this._messageRegistry.set(getKey(message, role), { messageElement, referenceCount: 0 });\n    }\n    /** Deletes the message element from the global messages container. */\n    _deleteMessageElement(key) {\n        this._messageRegistry.get(key)?.messageElement?.remove();\n        this._messageRegistry.delete(key);\n    }\n    /** Creates the global container for all aria-describedby messages. */\n    _createMessagesContainer() {\n        if (this._messagesContainer) {\n            return;\n        }\n        const containerClassName = 'cdk-describedby-message-container';\n        const serverContainers = this._document.querySelectorAll(`.${containerClassName}[platform=\"server\"]`);\n        for (let i = 0; i < serverContainers.length; i++) {\n            // When going from the server to the client, we may end up in a situation where there's\n            // already a container on the page, but we don't have a reference to it. Clear the\n            // old container so we don't get duplicates. Doing this, instead of emptying the previous\n            // container, should be slightly faster.\n            serverContainers[i].remove();\n        }\n        const messagesContainer = this._document.createElement('div');\n        // We add `visibility: hidden` in order to prevent text in this container from\n        // being searchable by the browser's Ctrl + F functionality.\n        // Screen-readers will still read the description for elements with aria-describedby even\n        // when the description element is not visible.\n        messagesContainer.style.visibility = 'hidden';\n        // Even though we use `visibility: hidden`, we still apply `cdk-visually-hidden` so that\n        // the description element doesn't impact page layout.\n        messagesContainer.classList.add(containerClassName);\n        messagesContainer.classList.add('cdk-visually-hidden');\n        // @breaking-change 14.0.0 Remove null check for `_platform`.\n        if (this._platform && !this._platform.isBrowser) {\n            messagesContainer.setAttribute('platform', 'server');\n        }\n        this._document.body.appendChild(messagesContainer);\n        this._messagesContainer = messagesContainer;\n    }\n    /** Removes all cdk-describedby messages that are hosted through the element. */\n    _removeCdkDescribedByReferenceIds(element) {\n        // Remove all aria-describedby reference IDs that are prefixed by CDK_DESCRIBEDBY_ID_PREFIX\n        const originalReferenceIds = getAriaReferenceIds(element, 'aria-describedby').filter(id => id.indexOf(CDK_DESCRIBEDBY_ID_PREFIX) != 0);\n        element.setAttribute('aria-describedby', originalReferenceIds.join(' '));\n    }\n    /**\n     * Adds a message reference to the element using aria-describedby and increments the registered\n     * message's reference count.\n     */\n    _addMessageReference(element, key) {\n        const registeredMessage = this._messageRegistry.get(key);\n        // Add the aria-describedby reference and set the\n        // describedby_host attribute to mark the element.\n        addAriaReferencedId(element, 'aria-describedby', registeredMessage.messageElement.id);\n        element.setAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE, this._id);\n        registeredMessage.referenceCount++;\n    }\n    /**\n     * Removes a message reference from the element using aria-describedby\n     * and decrements the registered message's reference count.\n     */\n    _removeMessageReference(element, key) {\n        const registeredMessage = this._messageRegistry.get(key);\n        registeredMessage.referenceCount--;\n        removeAriaReferencedId(element, 'aria-describedby', registeredMessage.messageElement.id);\n        element.removeAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE);\n    }\n    /** Returns true if the element has been described by the provided message ID. */\n    _isElementDescribedByMessage(element, key) {\n        const referenceIds = getAriaReferenceIds(element, 'aria-describedby');\n        const registeredMessage = this._messageRegistry.get(key);\n        const messageId = registeredMessage && registeredMessage.messageElement.id;\n        return !!messageId && referenceIds.indexOf(messageId) != -1;\n    }\n    /** Determines whether a message can be described on a particular element. */\n    _canBeDescribed(element, message) {\n        if (!this._isElementNode(element)) {\n            return false;\n        }\n        if (message && typeof message === 'object') {\n            // We'd have to make some assumptions about the description element's text, if the consumer\n            // passed in an element. Assume that if an element is passed in, the consumer has verified\n            // that it can be used as a description.\n            return true;\n        }\n        const trimmedMessage = message == null ? '' : `${message}`.trim();\n        const ariaLabel = element.getAttribute('aria-label');\n        // We shouldn't set descriptions if they're exactly the same as the `aria-label` of the\n        // element, because screen readers will end up reading out the same text twice in a row.\n        return trimmedMessage ? !ariaLabel || ariaLabel.trim() !== trimmedMessage : false;\n    }\n    /** Checks whether a node is an Element node. */\n    _isElementNode(element) {\n        return element.nodeType === this._document.ELEMENT_NODE;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: AriaDescriber, deps: [{ token: DOCUMENT }, { token: i1.Platform }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: AriaDescriber, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: AriaDescriber, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i1.Platform }]; } });\n/** Gets a key that can be used to look messages up in the registry. */\nfunction getKey(message, role) {\n    return typeof message === 'string' ? `${role || ''}/${message}` : message;\n}\n/** Assigns a unique ID to an element, if it doesn't have one already. */\nfunction setMessageId(element, serviceId) {\n    if (!element.id) {\n        element.id = `${CDK_DESCRIBEDBY_ID_PREFIX}-${serviceId}-${nextId++}`;\n    }\n}\n\n/**\n * This class manages keyboard events for selectable lists. If you pass it a query list\n * of items, it will set the active item correctly when arrow events occur.\n */\nclass ListKeyManager {\n    constructor(_items) {\n        this._items = _items;\n        this._activeItemIndex = -1;\n        this._activeItem = null;\n        this._wrap = false;\n        this._letterKeyStream = new Subject();\n        this._typeaheadSubscription = Subscription.EMPTY;\n        this._vertical = true;\n        this._allowedModifierKeys = [];\n        this._homeAndEnd = false;\n        this._pageUpAndDown = { enabled: false, delta: 10 };\n        /**\n         * Predicate function that can be used to check whether an item should be skipped\n         * by the key manager. By default, disabled items are skipped.\n         */\n        this._skipPredicateFn = (item) => item.disabled;\n        // Buffer for the letters that the user has pressed when the typeahead option is turned on.\n        this._pressedLetters = [];\n        /**\n         * Stream that emits any time the TAB key is pressed, so components can react\n         * when focus is shifted off of the list.\n         */\n        this.tabOut = new Subject();\n        /** Stream that emits whenever the active item of the list manager changes. */\n        this.change = new Subject();\n        // We allow for the items to be an array because, in some cases, the consumer may\n        // not have access to a QueryList of the items they want to manage (e.g. when the\n        // items aren't being collected via `ViewChildren` or `ContentChildren`).\n        if (_items instanceof QueryList) {\n            this._itemChangesSubscription = _items.changes.subscribe((newItems) => {\n                if (this._activeItem) {\n                    const itemArray = newItems.toArray();\n                    const newIndex = itemArray.indexOf(this._activeItem);\n                    if (newIndex > -1 && newIndex !== this._activeItemIndex) {\n                        this._activeItemIndex = newIndex;\n                    }\n                }\n            });\n        }\n    }\n    /**\n     * Sets the predicate function that determines which items should be skipped by the\n     * list key manager.\n     * @param predicate Function that determines whether the given item should be skipped.\n     */\n    skipPredicate(predicate) {\n        this._skipPredicateFn = predicate;\n        return this;\n    }\n    /**\n     * Configures wrapping mode, which determines whether the active item will wrap to\n     * the other end of list when there are no more items in the given direction.\n     * @param shouldWrap Whether the list should wrap when reaching the end.\n     */\n    withWrap(shouldWrap = true) {\n        this._wrap = shouldWrap;\n        return this;\n    }\n    /**\n     * Configures whether the key manager should be able to move the selection vertically.\n     * @param enabled Whether vertical selection should be enabled.\n     */\n    withVerticalOrientation(enabled = true) {\n        this._vertical = enabled;\n        return this;\n    }\n    /**\n     * Configures the key manager to move the selection horizontally.\n     * Passing in `null` will disable horizontal movement.\n     * @param direction Direction in which the selection can be moved.\n     */\n    withHorizontalOrientation(direction) {\n        this._horizontal = direction;\n        return this;\n    }\n    /**\n     * Modifier keys which are allowed to be held down and whose default actions will be prevented\n     * as the user is pressing the arrow keys. Defaults to not allowing any modifier keys.\n     */\n    withAllowedModifierKeys(keys) {\n        this._allowedModifierKeys = keys;\n        return this;\n    }\n    /**\n     * Turns on typeahead mode which allows users to set the active item by typing.\n     * @param debounceInterval Time to wait after the last keystroke before setting the active item.\n     */\n    withTypeAhead(debounceInterval = 200) {\n        if ((typeof ngDevMode === 'undefined' || ngDevMode) &&\n            this._items.length &&\n            this._items.some(item => typeof item.getLabel !== 'function')) {\n            throw Error('ListKeyManager items in typeahead mode must implement the `getLabel` method.');\n        }\n        this._typeaheadSubscription.unsubscribe();\n        // Debounce the presses of non-navigational keys, collect the ones that correspond to letters\n        // and convert those letters back into a string. Afterwards find the first item that starts\n        // with that string and select it.\n        this._typeaheadSubscription = this._letterKeyStream\n            .pipe(tap(letter => this._pressedLetters.push(letter)), debounceTime(debounceInterval), filter(() => this._pressedLetters.length > 0), map(() => this._pressedLetters.join('')))\n            .subscribe(inputString => {\n            const items = this._getItemsArray();\n            // Start at 1 because we want to start searching at the item immediately\n            // following the current active item.\n            for (let i = 1; i < items.length + 1; i++) {\n                const index = (this._activeItemIndex + i) % items.length;\n                const item = items[index];\n                if (!this._skipPredicateFn(item) &&\n                    item.getLabel().toUpperCase().trim().indexOf(inputString) === 0) {\n                    this.setActiveItem(index);\n                    break;\n                }\n            }\n            this._pressedLetters = [];\n        });\n        return this;\n    }\n    /** Cancels the current typeahead sequence. */\n    cancelTypeahead() {\n        this._pressedLetters = [];\n        return this;\n    }\n    /**\n     * Configures the key manager to activate the first and last items\n     * respectively when the Home or End key is pressed.\n     * @param enabled Whether pressing the Home or End key activates the first/last item.\n     */\n    withHomeAndEnd(enabled = true) {\n        this._homeAndEnd = enabled;\n        return this;\n    }\n    /**\n     * Configures the key manager to activate every 10th, configured or first/last element in up/down direction\n     * respectively when the Page-Up or Page-Down key is pressed.\n     * @param enabled Whether pressing the Page-Up or Page-Down key activates the first/last item.\n     * @param delta Whether pressing the Home or End key activates the first/last item.\n     */\n    withPageUpDown(enabled = true, delta = 10) {\n        this._pageUpAndDown = { enabled, delta };\n        return this;\n    }\n    setActiveItem(item) {\n        const previousActiveItem = this._activeItem;\n        this.updateActiveItem(item);\n        if (this._activeItem !== previousActiveItem) {\n            this.change.next(this._activeItemIndex);\n        }\n    }\n    /**\n     * Sets the active item depending on the key event passed in.\n     * @param event Keyboard event to be used for determining which element should be active.\n     */\n    onKeydown(event) {\n        const keyCode = event.keyCode;\n        const modifiers = ['altKey', 'ctrlKey', 'metaKey', 'shiftKey'];\n        const isModifierAllowed = modifiers.every(modifier => {\n            return !event[modifier] || this._allowedModifierKeys.indexOf(modifier) > -1;\n        });\n        switch (keyCode) {\n            case TAB:\n                this.tabOut.next();\n                return;\n            case DOWN_ARROW:\n                if (this._vertical && isModifierAllowed) {\n                    this.setNextItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case UP_ARROW:\n                if (this._vertical && isModifierAllowed) {\n                    this.setPreviousItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case RIGHT_ARROW:\n                if (this._horizontal && isModifierAllowed) {\n                    this._horizontal === 'rtl' ? this.setPreviousItemActive() : this.setNextItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case LEFT_ARROW:\n                if (this._horizontal && isModifierAllowed) {\n                    this._horizontal === 'rtl' ? this.setNextItemActive() : this.setPreviousItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case HOME:\n                if (this._homeAndEnd && isModifierAllowed) {\n                    this.setFirstItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case END:\n                if (this._homeAndEnd && isModifierAllowed) {\n                    this.setLastItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case PAGE_UP:\n                if (this._pageUpAndDown.enabled && isModifierAllowed) {\n                    const targetIndex = this._activeItemIndex - this._pageUpAndDown.delta;\n                    this._setActiveItemByIndex(targetIndex > 0 ? targetIndex : 0, 1);\n                    break;\n                }\n                else {\n                    return;\n                }\n            case PAGE_DOWN:\n                if (this._pageUpAndDown.enabled && isModifierAllowed) {\n                    const targetIndex = this._activeItemIndex + this._pageUpAndDown.delta;\n                    const itemsLength = this._getItemsArray().length;\n                    this._setActiveItemByIndex(targetIndex < itemsLength ? targetIndex : itemsLength - 1, -1);\n                    break;\n                }\n                else {\n                    return;\n                }\n            default:\n                if (isModifierAllowed || hasModifierKey(event, 'shiftKey')) {\n                    // Attempt to use the `event.key` which also maps it to the user's keyboard language,\n                    // otherwise fall back to resolving alphanumeric characters via the keyCode.\n                    if (event.key && event.key.length === 1) {\n                        this._letterKeyStream.next(event.key.toLocaleUpperCase());\n                    }\n                    else if ((keyCode >= A && keyCode <= Z) || (keyCode >= ZERO && keyCode <= NINE)) {\n                        this._letterKeyStream.next(String.fromCharCode(keyCode));\n                    }\n                }\n                // Note that we return here, in order to avoid preventing\n                // the default action of non-navigational keys.\n                return;\n        }\n        this._pressedLetters = [];\n        event.preventDefault();\n    }\n    /** Index of the currently active item. */\n    get activeItemIndex() {\n        return this._activeItemIndex;\n    }\n    /** The active item. */\n    get activeItem() {\n        return this._activeItem;\n    }\n    /** Gets whether the user is currently typing into the manager using the typeahead feature. */\n    isTyping() {\n        return this._pressedLetters.length > 0;\n    }\n    /** Sets the active item to the first enabled item in the list. */\n    setFirstItemActive() {\n        this._setActiveItemByIndex(0, 1);\n    }\n    /** Sets the active item to the last enabled item in the list. */\n    setLastItemActive() {\n        this._setActiveItemByIndex(this._items.length - 1, -1);\n    }\n    /** Sets the active item to the next enabled item in the list. */\n    setNextItemActive() {\n        this._activeItemIndex < 0 ? this.setFirstItemActive() : this._setActiveItemByDelta(1);\n    }\n    /** Sets the active item to a previous enabled item in the list. */\n    setPreviousItemActive() {\n        this._activeItemIndex < 0 && this._wrap\n            ? this.setLastItemActive()\n            : this._setActiveItemByDelta(-1);\n    }\n    updateActiveItem(item) {\n        const itemArray = this._getItemsArray();\n        const index = typeof item === 'number' ? item : itemArray.indexOf(item);\n        const activeItem = itemArray[index];\n        // Explicitly check for `null` and `undefined` because other falsy values are valid.\n        this._activeItem = activeItem == null ? null : activeItem;\n        this._activeItemIndex = index;\n    }\n    /** Cleans up the key manager. */\n    destroy() {\n        this._typeaheadSubscription.unsubscribe();\n        this._itemChangesSubscription?.unsubscribe();\n        this._letterKeyStream.complete();\n        this.tabOut.complete();\n        this.change.complete();\n        this._pressedLetters = [];\n    }\n    /**\n     * This method sets the active item, given a list of items and the delta between the\n     * currently active item and the new active item. It will calculate differently\n     * depending on whether wrap mode is turned on.\n     */\n    _setActiveItemByDelta(delta) {\n        this._wrap ? this._setActiveInWrapMode(delta) : this._setActiveInDefaultMode(delta);\n    }\n    /**\n     * Sets the active item properly given \"wrap\" mode. In other words, it will continue to move\n     * down the list until it finds an item that is not disabled, and it will wrap if it\n     * encounters either end of the list.\n     */\n    _setActiveInWrapMode(delta) {\n        const items = this._getItemsArray();\n        for (let i = 1; i <= items.length; i++) {\n            const index = (this._activeItemIndex + delta * i + items.length) % items.length;\n            const item = items[index];\n            if (!this._skipPredicateFn(item)) {\n                this.setActiveItem(index);\n                return;\n            }\n        }\n    }\n    /**\n     * Sets the active item properly given the default mode. In other words, it will\n     * continue to move down the list until it finds an item that is not disabled. If\n     * it encounters either end of the list, it will stop and not wrap.\n     */\n    _setActiveInDefaultMode(delta) {\n        this._setActiveItemByIndex(this._activeItemIndex + delta, delta);\n    }\n    /**\n     * Sets the active item to the first enabled item starting at the index specified. If the\n     * item is disabled, it will move in the fallbackDelta direction until it either\n     * finds an enabled item or encounters the end of the list.\n     */\n    _setActiveItemByIndex(index, fallbackDelta) {\n        const items = this._getItemsArray();\n        if (!items[index]) {\n            return;\n        }\n        while (this._skipPredicateFn(items[index])) {\n            index += fallbackDelta;\n            if (!items[index]) {\n                return;\n            }\n        }\n        this.setActiveItem(index);\n    }\n    /** Returns the items as an array. */\n    _getItemsArray() {\n        return this._items instanceof QueryList ? this._items.toArray() : this._items;\n    }\n}\n\nclass ActiveDescendantKeyManager extends ListKeyManager {\n    setActiveItem(index) {\n        if (this.activeItem) {\n            this.activeItem.setInactiveStyles();\n        }\n        super.setActiveItem(index);\n        if (this.activeItem) {\n            this.activeItem.setActiveStyles();\n        }\n    }\n}\n\nclass FocusKeyManager extends ListKeyManager {\n    constructor() {\n        super(...arguments);\n        this._origin = 'program';\n    }\n    /**\n     * Sets the focus origin that will be passed in to the items for any subsequent `focus` calls.\n     * @param origin Focus origin to be used when focusing items.\n     */\n    setFocusOrigin(origin) {\n        this._origin = origin;\n        return this;\n    }\n    setActiveItem(item) {\n        super.setActiveItem(item);\n        if (this.activeItem) {\n            this.activeItem.focus(this._origin);\n        }\n    }\n}\n\n/**\n * Configuration for the isFocusable method.\n */\nclass IsFocusableConfig {\n    constructor() {\n        /**\n         * Whether to count an element as focusable even if it is not currently visible.\n         */\n        this.ignoreVisibility = false;\n    }\n}\n// The InteractivityChecker leans heavily on the ally.js accessibility utilities.\n// Methods like `isTabbable` are only covering specific edge-cases for the browsers which are\n// supported.\n/**\n * Utility for checking the interactivity of an element, such as whether is is focusable or\n * tabbable.\n */\nclass InteractivityChecker {\n    constructor(_platform) {\n        this._platform = _platform;\n    }\n    /**\n     * Gets whether an element is disabled.\n     *\n     * @param element Element to be checked.\n     * @returns Whether the element is disabled.\n     */\n    isDisabled(element) {\n        // This does not capture some cases, such as a non-form control with a disabled attribute or\n        // a form control inside of a disabled form, but should capture the most common cases.\n        return element.hasAttribute('disabled');\n    }\n    /**\n     * Gets whether an element is visible for the purposes of interactivity.\n     *\n     * This will capture states like `display: none` and `visibility: hidden`, but not things like\n     * being clipped by an `overflow: hidden` parent or being outside the viewport.\n     *\n     * @returns Whether the element is visible.\n     */\n    isVisible(element) {\n        return hasGeometry(element) && getComputedStyle(element).visibility === 'visible';\n    }\n    /**\n     * Gets whether an element can be reached via Tab key.\n     * Assumes that the element has already been checked with isFocusable.\n     *\n     * @param element Element to be checked.\n     * @returns Whether the element is tabbable.\n     */\n    isTabbable(element) {\n        // Nothing is tabbable on the server 😎\n        if (!this._platform.isBrowser) {\n            return false;\n        }\n        const frameElement = getFrameElement(getWindow(element));\n        if (frameElement) {\n            // Frame elements inherit their tabindex onto all child elements.\n            if (getTabIndexValue(frameElement) === -1) {\n                return false;\n            }\n            // Browsers disable tabbing to an element inside of an invisible frame.\n            if (!this.isVisible(frameElement)) {\n                return false;\n            }\n        }\n        let nodeName = element.nodeName.toLowerCase();\n        let tabIndexValue = getTabIndexValue(element);\n        if (element.hasAttribute('contenteditable')) {\n            return tabIndexValue !== -1;\n        }\n        if (nodeName === 'iframe' || nodeName === 'object') {\n            // The frame or object's content may be tabbable depending on the content, but it's\n            // not possibly to reliably detect the content of the frames. We always consider such\n            // elements as non-tabbable.\n            return false;\n        }\n        // In iOS, the browser only considers some specific elements as tabbable.\n        if (this._platform.WEBKIT && this._platform.IOS && !isPotentiallyTabbableIOS(element)) {\n            return false;\n        }\n        if (nodeName === 'audio') {\n            // Audio elements without controls enabled are never tabbable, regardless\n            // of the tabindex attribute explicitly being set.\n            if (!element.hasAttribute('controls')) {\n                return false;\n            }\n            // Audio elements with controls are by default tabbable unless the\n            // tabindex attribute is set to `-1` explicitly.\n            return tabIndexValue !== -1;\n        }\n        if (nodeName === 'video') {\n            // For all video elements, if the tabindex attribute is set to `-1`, the video\n            // is not tabbable. Note: We cannot rely on the default `HTMLElement.tabIndex`\n            // property as that one is set to `-1` in Chrome, Edge and Safari v13.1. The\n            // tabindex attribute is the source of truth here.\n            if (tabIndexValue === -1) {\n                return false;\n            }\n            // If the tabindex is explicitly set, and not `-1` (as per check before), the\n            // video element is always tabbable (regardless of whether it has controls or not).\n            if (tabIndexValue !== null) {\n                return true;\n            }\n            // Otherwise (when no explicit tabindex is set), a video is only tabbable if it\n            // has controls enabled. Firefox is special as videos are always tabbable regardless\n            // of whether there are controls or not.\n            return this._platform.FIREFOX || element.hasAttribute('controls');\n        }\n        return element.tabIndex >= 0;\n    }\n    /**\n     * Gets whether an element can be focused by the user.\n     *\n     * @param element Element to be checked.\n     * @param config The config object with options to customize this method's behavior\n     * @returns Whether the element is focusable.\n     */\n    isFocusable(element, config) {\n        // Perform checks in order of left to most expensive.\n        // Again, naive approach that does not capture many edge cases and browser quirks.\n        return (isPotentiallyFocusable(element) &&\n            !this.isDisabled(element) &&\n            (config?.ignoreVisibility || this.isVisible(element)));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: InteractivityChecker, deps: [{ token: i1.Platform }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: InteractivityChecker, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: InteractivityChecker, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i1.Platform }]; } });\n/**\n * Returns the frame element from a window object. Since browsers like MS Edge throw errors if\n * the frameElement property is being accessed from a different host address, this property\n * should be accessed carefully.\n */\nfunction getFrameElement(window) {\n    try {\n        return window.frameElement;\n    }\n    catch {\n        return null;\n    }\n}\n/** Checks whether the specified element has any geometry / rectangles. */\nfunction hasGeometry(element) {\n    // Use logic from jQuery to check for an invisible element.\n    // See https://github.com/jquery/jquery/blob/master/src/css/hiddenVisibleSelectors.js#L12\n    return !!(element.offsetWidth ||\n        element.offsetHeight ||\n        (typeof element.getClientRects === 'function' && element.getClientRects().length));\n}\n/** Gets whether an element's  */\nfunction isNativeFormElement(element) {\n    let nodeName = element.nodeName.toLowerCase();\n    return (nodeName === 'input' ||\n        nodeName === 'select' ||\n        nodeName === 'button' ||\n        nodeName === 'textarea');\n}\n/** Gets whether an element is an `<input type=\"hidden\">`. */\nfunction isHiddenInput(element) {\n    return isInputElement(element) && element.type == 'hidden';\n}\n/** Gets whether an element is an anchor that has an href attribute. */\nfunction isAnchorWithHref(element) {\n    return isAnchorElement(element) && element.hasAttribute('href');\n}\n/** Gets whether an element is an input element. */\nfunction isInputElement(element) {\n    return element.nodeName.toLowerCase() == 'input';\n}\n/** Gets whether an element is an anchor element. */\nfunction isAnchorElement(element) {\n    return element.nodeName.toLowerCase() == 'a';\n}\n/** Gets whether an element has a valid tabindex. */\nfunction hasValidTabIndex(element) {\n    if (!element.hasAttribute('tabindex') || element.tabIndex === undefined) {\n        return false;\n    }\n    let tabIndex = element.getAttribute('tabindex');\n    return !!(tabIndex && !isNaN(parseInt(tabIndex, 10)));\n}\n/**\n * Returns the parsed tabindex from the element attributes instead of returning the\n * evaluated tabindex from the browsers defaults.\n */\nfunction getTabIndexValue(element) {\n    if (!hasValidTabIndex(element)) {\n        return null;\n    }\n    // See browser issue in Gecko https://bugzilla.mozilla.org/show_bug.cgi?id=1128054\n    const tabIndex = parseInt(element.getAttribute('tabindex') || '', 10);\n    return isNaN(tabIndex) ? -1 : tabIndex;\n}\n/** Checks whether the specified element is potentially tabbable on iOS */\nfunction isPotentiallyTabbableIOS(element) {\n    let nodeName = element.nodeName.toLowerCase();\n    let inputType = nodeName === 'input' && element.type;\n    return (inputType === 'text' ||\n        inputType === 'password' ||\n        nodeName === 'select' ||\n        nodeName === 'textarea');\n}\n/**\n * Gets whether an element is potentially focusable without taking current visible/disabled state\n * into account.\n */\nfunction isPotentiallyFocusable(element) {\n    // Inputs are potentially focusable *unless* they're type=\"hidden\".\n    if (isHiddenInput(element)) {\n        return false;\n    }\n    return (isNativeFormElement(element) ||\n        isAnchorWithHref(element) ||\n        element.hasAttribute('contenteditable') ||\n        hasValidTabIndex(element));\n}\n/** Gets the parent window of a DOM node with regards of being inside of an iframe. */\nfunction getWindow(node) {\n    // ownerDocument is null if `node` itself *is* a document.\n    return (node.ownerDocument && node.ownerDocument.defaultView) || window;\n}\n\n/**\n * Class that allows for trapping focus within a DOM element.\n *\n * This class currently uses a relatively simple approach to focus trapping.\n * It assumes that the tab order is the same as DOM order, which is not necessarily true.\n * Things like `tabIndex > 0`, flex `order`, and shadow roots can cause the two to be misaligned.\n *\n * @deprecated Use `ConfigurableFocusTrap` instead.\n * @breaking-change 11.0.0\n */\nclass FocusTrap {\n    /** Whether the focus trap is active. */\n    get enabled() {\n        return this._enabled;\n    }\n    set enabled(value) {\n        this._enabled = value;\n        if (this._startAnchor && this._endAnchor) {\n            this._toggleAnchorTabIndex(value, this._startAnchor);\n            this._toggleAnchorTabIndex(value, this._endAnchor);\n        }\n    }\n    constructor(_element, _checker, _ngZone, _document, deferAnchors = false) {\n        this._element = _element;\n        this._checker = _checker;\n        this._ngZone = _ngZone;\n        this._document = _document;\n        this._hasAttached = false;\n        // Event listeners for the anchors. Need to be regular functions so that we can unbind them later.\n        this.startAnchorListener = () => this.focusLastTabbableElement();\n        this.endAnchorListener = () => this.focusFirstTabbableElement();\n        this._enabled = true;\n        if (!deferAnchors) {\n            this.attachAnchors();\n        }\n    }\n    /** Destroys the focus trap by cleaning up the anchors. */\n    destroy() {\n        const startAnchor = this._startAnchor;\n        const endAnchor = this._endAnchor;\n        if (startAnchor) {\n            startAnchor.removeEventListener('focus', this.startAnchorListener);\n            startAnchor.remove();\n        }\n        if (endAnchor) {\n            endAnchor.removeEventListener('focus', this.endAnchorListener);\n            endAnchor.remove();\n        }\n        this._startAnchor = this._endAnchor = null;\n        this._hasAttached = false;\n    }\n    /**\n     * Inserts the anchors into the DOM. This is usually done automatically\n     * in the constructor, but can be deferred for cases like directives with `*ngIf`.\n     * @returns Whether the focus trap managed to attach successfully. This may not be the case\n     * if the target element isn't currently in the DOM.\n     */\n    attachAnchors() {\n        // If we're not on the browser, there can be no focus to trap.\n        if (this._hasAttached) {\n            return true;\n        }\n        this._ngZone.runOutsideAngular(() => {\n            if (!this._startAnchor) {\n                this._startAnchor = this._createAnchor();\n                this._startAnchor.addEventListener('focus', this.startAnchorListener);\n            }\n            if (!this._endAnchor) {\n                this._endAnchor = this._createAnchor();\n                this._endAnchor.addEventListener('focus', this.endAnchorListener);\n            }\n        });\n        if (this._element.parentNode) {\n            this._element.parentNode.insertBefore(this._startAnchor, this._element);\n            this._element.parentNode.insertBefore(this._endAnchor, this._element.nextSibling);\n            this._hasAttached = true;\n        }\n        return this._hasAttached;\n    }\n    /**\n     * Waits for the zone to stabilize, then focuses the first tabbable element.\n     * @returns Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfully.\n     */\n    focusInitialElementWhenReady(options) {\n        return new Promise(resolve => {\n            this._executeOnStable(() => resolve(this.focusInitialElement(options)));\n        });\n    }\n    /**\n     * Waits for the zone to stabilize, then focuses\n     * the first tabbable element within the focus trap region.\n     * @returns Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfully.\n     */\n    focusFirstTabbableElementWhenReady(options) {\n        return new Promise(resolve => {\n            this._executeOnStable(() => resolve(this.focusFirstTabbableElement(options)));\n        });\n    }\n    /**\n     * Waits for the zone to stabilize, then focuses\n     * the last tabbable element within the focus trap region.\n     * @returns Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfully.\n     */\n    focusLastTabbableElementWhenReady(options) {\n        return new Promise(resolve => {\n            this._executeOnStable(() => resolve(this.focusLastTabbableElement(options)));\n        });\n    }\n    /**\n     * Get the specified boundary element of the trapped region.\n     * @param bound The boundary to get (start or end of trapped region).\n     * @returns The boundary element.\n     */\n    _getRegionBoundary(bound) {\n        // Contains the deprecated version of selector, for temporary backwards comparability.\n        const markers = this._element.querySelectorAll(`[cdk-focus-region-${bound}], ` + `[cdkFocusRegion${bound}], ` + `[cdk-focus-${bound}]`);\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            for (let i = 0; i < markers.length; i++) {\n                // @breaking-change 8.0.0\n                if (markers[i].hasAttribute(`cdk-focus-${bound}`)) {\n                    console.warn(`Found use of deprecated attribute 'cdk-focus-${bound}', ` +\n                        `use 'cdkFocusRegion${bound}' instead. The deprecated ` +\n                        `attribute will be removed in 8.0.0.`, markers[i]);\n                }\n                else if (markers[i].hasAttribute(`cdk-focus-region-${bound}`)) {\n                    console.warn(`Found use of deprecated attribute 'cdk-focus-region-${bound}', ` +\n                        `use 'cdkFocusRegion${bound}' instead. The deprecated attribute ` +\n                        `will be removed in 8.0.0.`, markers[i]);\n                }\n            }\n        }\n        if (bound == 'start') {\n            return markers.length ? markers[0] : this._getFirstTabbableElement(this._element);\n        }\n        return markers.length\n            ? markers[markers.length - 1]\n            : this._getLastTabbableElement(this._element);\n    }\n    /**\n     * Focuses the element that should be focused when the focus trap is initialized.\n     * @returns Whether focus was moved successfully.\n     */\n    focusInitialElement(options) {\n        // Contains the deprecated version of selector, for temporary backwards comparability.\n        const redirectToElement = this._element.querySelector(`[cdk-focus-initial], ` + `[cdkFocusInitial]`);\n        if (redirectToElement) {\n            // @breaking-change 8.0.0\n            if ((typeof ngDevMode === 'undefined' || ngDevMode) &&\n                redirectToElement.hasAttribute(`cdk-focus-initial`)) {\n                console.warn(`Found use of deprecated attribute 'cdk-focus-initial', ` +\n                    `use 'cdkFocusInitial' instead. The deprecated attribute ` +\n                    `will be removed in 8.0.0`, redirectToElement);\n            }\n            // Warn the consumer if the element they've pointed to\n            // isn't focusable, when not in production mode.\n            if ((typeof ngDevMode === 'undefined' || ngDevMode) &&\n                !this._checker.isFocusable(redirectToElement)) {\n                console.warn(`Element matching '[cdkFocusInitial]' is not focusable.`, redirectToElement);\n            }\n            if (!this._checker.isFocusable(redirectToElement)) {\n                const focusableChild = this._getFirstTabbableElement(redirectToElement);\n                focusableChild?.focus(options);\n                return !!focusableChild;\n            }\n            redirectToElement.focus(options);\n            return true;\n        }\n        return this.focusFirstTabbableElement(options);\n    }\n    /**\n     * Focuses the first tabbable element within the focus trap region.\n     * @returns Whether focus was moved successfully.\n     */\n    focusFirstTabbableElement(options) {\n        const redirectToElement = this._getRegionBoundary('start');\n        if (redirectToElement) {\n            redirectToElement.focus(options);\n        }\n        return !!redirectToElement;\n    }\n    /**\n     * Focuses the last tabbable element within the focus trap region.\n     * @returns Whether focus was moved successfully.\n     */\n    focusLastTabbableElement(options) {\n        const redirectToElement = this._getRegionBoundary('end');\n        if (redirectToElement) {\n            redirectToElement.focus(options);\n        }\n        return !!redirectToElement;\n    }\n    /**\n     * Checks whether the focus trap has successfully been attached.\n     */\n    hasAttached() {\n        return this._hasAttached;\n    }\n    /** Get the first tabbable element from a DOM subtree (inclusive). */\n    _getFirstTabbableElement(root) {\n        if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n            return root;\n        }\n        const children = root.children;\n        for (let i = 0; i < children.length; i++) {\n            const tabbableChild = children[i].nodeType === this._document.ELEMENT_NODE\n                ? this._getFirstTabbableElement(children[i])\n                : null;\n            if (tabbableChild) {\n                return tabbableChild;\n            }\n        }\n        return null;\n    }\n    /** Get the last tabbable element from a DOM subtree (inclusive). */\n    _getLastTabbableElement(root) {\n        if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n            return root;\n        }\n        // Iterate in reverse DOM order.\n        const children = root.children;\n        for (let i = children.length - 1; i >= 0; i--) {\n            const tabbableChild = children[i].nodeType === this._document.ELEMENT_NODE\n                ? this._getLastTabbableElement(children[i])\n                : null;\n            if (tabbableChild) {\n                return tabbableChild;\n            }\n        }\n        return null;\n    }\n    /** Creates an anchor element. */\n    _createAnchor() {\n        const anchor = this._document.createElement('div');\n        this._toggleAnchorTabIndex(this._enabled, anchor);\n        anchor.classList.add('cdk-visually-hidden');\n        anchor.classList.add('cdk-focus-trap-anchor');\n        anchor.setAttribute('aria-hidden', 'true');\n        return anchor;\n    }\n    /**\n     * Toggles the `tabindex` of an anchor, based on the enabled state of the focus trap.\n     * @param isEnabled Whether the focus trap is enabled.\n     * @param anchor Anchor on which to toggle the tabindex.\n     */\n    _toggleAnchorTabIndex(isEnabled, anchor) {\n        // Remove the tabindex completely, rather than setting it to -1, because if the\n        // element has a tabindex, the user might still hit it when navigating with the arrow keys.\n        isEnabled ? anchor.setAttribute('tabindex', '0') : anchor.removeAttribute('tabindex');\n    }\n    /**\n     * Toggles the`tabindex` of both anchors to either trap Tab focus or allow it to escape.\n     * @param enabled: Whether the anchors should trap Tab.\n     */\n    toggleAnchors(enabled) {\n        if (this._startAnchor && this._endAnchor) {\n            this._toggleAnchorTabIndex(enabled, this._startAnchor);\n            this._toggleAnchorTabIndex(enabled, this._endAnchor);\n        }\n    }\n    /** Executes a function when the zone is stable. */\n    _executeOnStable(fn) {\n        if (this._ngZone.isStable) {\n            fn();\n        }\n        else {\n            this._ngZone.onStable.pipe(take(1)).subscribe(fn);\n        }\n    }\n}\n/**\n * Factory that allows easy instantiation of focus traps.\n * @deprecated Use `ConfigurableFocusTrapFactory` instead.\n * @breaking-change 11.0.0\n */\nclass FocusTrapFactory {\n    constructor(_checker, _ngZone, _document) {\n        this._checker = _checker;\n        this._ngZone = _ngZone;\n        this._document = _document;\n    }\n    /**\n     * Creates a focus-trapped region around the given element.\n     * @param element The element around which focus will be trapped.\n     * @param deferCaptureElements Defers the creation of focus-capturing elements to be done\n     *     manually by the user.\n     * @returns The created focus trap instance.\n     */\n    create(element, deferCaptureElements = false) {\n        return new FocusTrap(element, this._checker, this._ngZone, this._document, deferCaptureElements);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: FocusTrapFactory, deps: [{ token: InteractivityChecker }, { token: i0.NgZone }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: FocusTrapFactory, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: FocusTrapFactory, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: InteractivityChecker }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\n/** Directive for trapping focus within a region. */\nclass CdkTrapFocus {\n    /** Whether the focus trap is active. */\n    get enabled() {\n        return this.focusTrap.enabled;\n    }\n    set enabled(value) {\n        this.focusTrap.enabled = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the directive should automatically move focus into the trapped region upon\n     * initialization and return focus to the previous activeElement upon destruction.\n     */\n    get autoCapture() {\n        return this._autoCapture;\n    }\n    set autoCapture(value) {\n        this._autoCapture = coerceBooleanProperty(value);\n    }\n    constructor(_elementRef, _focusTrapFactory, \n    /**\n     * @deprecated No longer being used. To be removed.\n     * @breaking-change 13.0.0\n     */\n    _document) {\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        /** Previously focused element to restore focus to upon destroy when using autoCapture. */\n        this._previouslyFocusedElement = null;\n        this.focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement, true);\n    }\n    ngOnDestroy() {\n        this.focusTrap.destroy();\n        // If we stored a previously focused element when using autoCapture, return focus to that\n        // element now that the trapped region is being destroyed.\n        if (this._previouslyFocusedElement) {\n            this._previouslyFocusedElement.focus();\n            this._previouslyFocusedElement = null;\n        }\n    }\n    ngAfterContentInit() {\n        this.focusTrap.attachAnchors();\n        if (this.autoCapture) {\n            this._captureFocus();\n        }\n    }\n    ngDoCheck() {\n        if (!this.focusTrap.hasAttached()) {\n            this.focusTrap.attachAnchors();\n        }\n    }\n    ngOnChanges(changes) {\n        const autoCaptureChange = changes['autoCapture'];\n        if (autoCaptureChange &&\n            !autoCaptureChange.firstChange &&\n            this.autoCapture &&\n            this.focusTrap.hasAttached()) {\n            this._captureFocus();\n        }\n    }\n    _captureFocus() {\n        this._previouslyFocusedElement = _getFocusedElementPierceShadowDom();\n        this.focusTrap.focusInitialElementWhenReady();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: CdkTrapFocus, deps: [{ token: i0.ElementRef }, { token: FocusTrapFactory }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: CdkTrapFocus, selector: \"[cdkTrapFocus]\", inputs: { enabled: [\"cdkTrapFocus\", \"enabled\"], autoCapture: [\"cdkTrapFocusAutoCapture\", \"autoCapture\"] }, exportAs: [\"cdkTrapFocus\"], usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: CdkTrapFocus, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkTrapFocus]',\n                    exportAs: 'cdkTrapFocus',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: FocusTrapFactory }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; }, propDecorators: { enabled: [{\n                type: Input,\n                args: ['cdkTrapFocus']\n            }], autoCapture: [{\n                type: Input,\n                args: ['cdkTrapFocusAutoCapture']\n            }] } });\n\n/**\n * Class that allows for trapping focus within a DOM element.\n *\n * This class uses a strategy pattern that determines how it traps focus.\n * See FocusTrapInertStrategy.\n */\nclass ConfigurableFocusTrap extends FocusTrap {\n    /** Whether the FocusTrap is enabled. */\n    get enabled() {\n        return this._enabled;\n    }\n    set enabled(value) {\n        this._enabled = value;\n        if (this._enabled) {\n            this._focusTrapManager.register(this);\n        }\n        else {\n            this._focusTrapManager.deregister(this);\n        }\n    }\n    constructor(_element, _checker, _ngZone, _document, _focusTrapManager, _inertStrategy, config) {\n        super(_element, _checker, _ngZone, _document, config.defer);\n        this._focusTrapManager = _focusTrapManager;\n        this._inertStrategy = _inertStrategy;\n        this._focusTrapManager.register(this);\n    }\n    /** Notifies the FocusTrapManager that this FocusTrap will be destroyed. */\n    destroy() {\n        this._focusTrapManager.deregister(this);\n        super.destroy();\n    }\n    /** @docs-private Implemented as part of ManagedFocusTrap. */\n    _enable() {\n        this._inertStrategy.preventFocus(this);\n        this.toggleAnchors(true);\n    }\n    /** @docs-private Implemented as part of ManagedFocusTrap. */\n    _disable() {\n        this._inertStrategy.allowFocus(this);\n        this.toggleAnchors(false);\n    }\n}\n\n/** The injection token used to specify the inert strategy. */\nconst FOCUS_TRAP_INERT_STRATEGY = new InjectionToken('FOCUS_TRAP_INERT_STRATEGY');\n\n/**\n * Lightweight FocusTrapInertStrategy that adds a document focus event\n * listener to redirect focus back inside the FocusTrap.\n */\nclass EventListenerFocusTrapInertStrategy {\n    constructor() {\n        /** Focus event handler. */\n        this._listener = null;\n    }\n    /** Adds a document event listener that keeps focus inside the FocusTrap. */\n    preventFocus(focusTrap) {\n        // Ensure there's only one listener per document\n        if (this._listener) {\n            focusTrap._document.removeEventListener('focus', this._listener, true);\n        }\n        this._listener = (e) => this._trapFocus(focusTrap, e);\n        focusTrap._ngZone.runOutsideAngular(() => {\n            focusTrap._document.addEventListener('focus', this._listener, true);\n        });\n    }\n    /** Removes the event listener added in preventFocus. */\n    allowFocus(focusTrap) {\n        if (!this._listener) {\n            return;\n        }\n        focusTrap._document.removeEventListener('focus', this._listener, true);\n        this._listener = null;\n    }\n    /**\n     * Refocuses the first element in the FocusTrap if the focus event target was outside\n     * the FocusTrap.\n     *\n     * This is an event listener callback. The event listener is added in runOutsideAngular,\n     * so all this code runs outside Angular as well.\n     */\n    _trapFocus(focusTrap, event) {\n        const target = event.target;\n        const focusTrapRoot = focusTrap._element;\n        // Don't refocus if target was in an overlay, because the overlay might be associated\n        // with an element inside the FocusTrap, ex. mat-select.\n        if (target && !focusTrapRoot.contains(target) && !target.closest?.('div.cdk-overlay-pane')) {\n            // Some legacy FocusTrap usages have logic that focuses some element on the page\n            // just before FocusTrap is destroyed. For backwards compatibility, wait\n            // to be sure FocusTrap is still enabled before refocusing.\n            setTimeout(() => {\n                // Check whether focus wasn't put back into the focus trap while the timeout was pending.\n                if (focusTrap.enabled && !focusTrapRoot.contains(focusTrap._document.activeElement)) {\n                    focusTrap.focusFirstTabbableElement();\n                }\n            });\n        }\n    }\n}\n\n/** Injectable that ensures only the most recently enabled FocusTrap is active. */\nclass FocusTrapManager {\n    constructor() {\n        // A stack of the FocusTraps on the page. Only the FocusTrap at the\n        // top of the stack is active.\n        this._focusTrapStack = [];\n    }\n    /**\n     * Disables the FocusTrap at the top of the stack, and then pushes\n     * the new FocusTrap onto the stack.\n     */\n    register(focusTrap) {\n        // Dedupe focusTraps that register multiple times.\n        this._focusTrapStack = this._focusTrapStack.filter(ft => ft !== focusTrap);\n        let stack = this._focusTrapStack;\n        if (stack.length) {\n            stack[stack.length - 1]._disable();\n        }\n        stack.push(focusTrap);\n        focusTrap._enable();\n    }\n    /**\n     * Removes the FocusTrap from the stack, and activates the\n     * FocusTrap that is the new top of the stack.\n     */\n    deregister(focusTrap) {\n        focusTrap._disable();\n        const stack = this._focusTrapStack;\n        const i = stack.indexOf(focusTrap);\n        if (i !== -1) {\n            stack.splice(i, 1);\n            if (stack.length) {\n                stack[stack.length - 1]._enable();\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: FocusTrapManager, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: FocusTrapManager, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: FocusTrapManager, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\n/** Factory that allows easy instantiation of configurable focus traps. */\nclass ConfigurableFocusTrapFactory {\n    constructor(_checker, _ngZone, _focusTrapManager, _document, _inertStrategy) {\n        this._checker = _checker;\n        this._ngZone = _ngZone;\n        this._focusTrapManager = _focusTrapManager;\n        this._document = _document;\n        // TODO split up the strategies into different modules, similar to DateAdapter.\n        this._inertStrategy = _inertStrategy || new EventListenerFocusTrapInertStrategy();\n    }\n    create(element, config = { defer: false }) {\n        let configObject;\n        if (typeof config === 'boolean') {\n            configObject = { defer: config };\n        }\n        else {\n            configObject = config;\n        }\n        return new ConfigurableFocusTrap(element, this._checker, this._ngZone, this._document, this._focusTrapManager, this._inertStrategy, configObject);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: ConfigurableFocusTrapFactory, deps: [{ token: InteractivityChecker }, { token: i0.NgZone }, { token: FocusTrapManager }, { token: DOCUMENT }, { token: FOCUS_TRAP_INERT_STRATEGY, optional: true }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: ConfigurableFocusTrapFactory, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: ConfigurableFocusTrapFactory, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: InteractivityChecker }, { type: i0.NgZone }, { type: FocusTrapManager }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [FOCUS_TRAP_INERT_STRATEGY]\n                }] }]; } });\n\n/** Gets whether an event could be a faked `mousedown` event dispatched by a screen reader. */\nfunction isFakeMousedownFromScreenReader(event) {\n    // Some screen readers will dispatch a fake `mousedown` event when pressing enter or space on\n    // a clickable element. We can distinguish these events when both `offsetX` and `offsetY` are\n    // zero or `event.buttons` is zero, depending on the browser:\n    // - `event.buttons` works on Firefox, but fails on Chrome.\n    // - `offsetX` and `offsetY` work on Chrome, but fail on Firefox.\n    // Note that there's an edge case where the user could click the 0x0 spot of the\n    // screen themselves, but that is unlikely to contain interactive elements.\n    return event.buttons === 0 || (event.offsetX === 0 && event.offsetY === 0);\n}\n/** Gets whether an event could be a faked `touchstart` event dispatched by a screen reader. */\nfunction isFakeTouchstartFromScreenReader(event) {\n    const touch = (event.touches && event.touches[0]) || (event.changedTouches && event.changedTouches[0]);\n    // A fake `touchstart` can be distinguished from a real one by looking at the `identifier`\n    // which is typically >= 0 on a real device versus -1 from a screen reader. Just to be safe,\n    // we can also look at `radiusX` and `radiusY`. This behavior was observed against a Windows 10\n    // device with a touch screen running NVDA v2020.4 and Firefox 85 or Chrome 88.\n    return (!!touch &&\n        touch.identifier === -1 &&\n        (touch.radiusX == null || touch.radiusX === 1) &&\n        (touch.radiusY == null || touch.radiusY === 1));\n}\n\n/**\n * Injectable options for the InputModalityDetector. These are shallowly merged with the default\n * options.\n */\nconst INPUT_MODALITY_DETECTOR_OPTIONS = new InjectionToken('cdk-input-modality-detector-options');\n/**\n * Default options for the InputModalityDetector.\n *\n * Modifier keys are ignored by default (i.e. when pressed won't cause the service to detect\n * keyboard input modality) for two reasons:\n *\n * 1. Modifier keys are commonly used with mouse to perform actions such as 'right click' or 'open\n *    in new tab', and are thus less representative of actual keyboard interaction.\n * 2. VoiceOver triggers some keyboard events when linearly navigating with Control + Option (but\n *    confusingly not with Caps Lock). Thus, to have parity with other screen readers, we ignore\n *    these keys so as to not update the input modality.\n *\n * Note that we do not by default ignore the right Meta key on Safari because it has the same key\n * code as the ContextMenu key on other browsers. When we switch to using event.key, we can\n * distinguish between the two.\n */\nconst INPUT_MODALITY_DETECTOR_DEFAULT_OPTIONS = {\n    ignoreKeys: [ALT, CONTROL, MAC_META, META, SHIFT],\n};\n/**\n * The amount of time needed to pass after a touchstart event in order for a subsequent mousedown\n * event to be attributed as mouse and not touch.\n *\n * This is the value used by AngularJS Material. Through trial and error (on iPhone 6S) they found\n * that a value of around 650ms seems appropriate.\n */\nconst TOUCH_BUFFER_MS = 650;\n/**\n * Event listener options that enable capturing and also mark the listener as passive if the browser\n * supports it.\n */\nconst modalityEventListenerOptions = normalizePassiveListenerOptions({\n    passive: true,\n    capture: true,\n});\n/**\n * Service that detects the user's input modality.\n *\n * This service does not update the input modality when a user navigates with a screen reader\n * (e.g. linear navigation with VoiceOver, object navigation / browse mode with NVDA, virtual PC\n * cursor mode with JAWS). This is in part due to technical limitations (i.e. keyboard events do not\n * fire as expected in these modes) but is also arguably the correct behavior. Navigating with a\n * screen reader is akin to visually scanning a page, and should not be interpreted as actual user\n * input interaction.\n *\n * When a user is not navigating but *interacting* with a screen reader, this service attempts to\n * update the input modality to keyboard, but in general this service's behavior is largely\n * undefined.\n */\nclass InputModalityDetector {\n    /** The most recently detected input modality. */\n    get mostRecentModality() {\n        return this._modality.value;\n    }\n    constructor(_platform, ngZone, document, options) {\n        this._platform = _platform;\n        /**\n         * The most recently detected input modality event target. Is null if no input modality has been\n         * detected or if the associated event target is null for some unknown reason.\n         */\n        this._mostRecentTarget = null;\n        /** The underlying BehaviorSubject that emits whenever an input modality is detected. */\n        this._modality = new BehaviorSubject(null);\n        /**\n         * The timestamp of the last touch input modality. Used to determine whether mousedown events\n         * should be attributed to mouse or touch.\n         */\n        this._lastTouchMs = 0;\n        /**\n         * Handles keydown events. Must be an arrow function in order to preserve the context when it gets\n         * bound.\n         */\n        this._onKeydown = (event) => {\n            // If this is one of the keys we should ignore, then ignore it and don't update the input\n            // modality to keyboard.\n            if (this._options?.ignoreKeys?.some(keyCode => keyCode === event.keyCode)) {\n                return;\n            }\n            this._modality.next('keyboard');\n            this._mostRecentTarget = _getEventTarget(event);\n        };\n        /**\n         * Handles mousedown events. Must be an arrow function in order to preserve the context when it\n         * gets bound.\n         */\n        this._onMousedown = (event) => {\n            // Touches trigger both touch and mouse events, so we need to distinguish between mouse events\n            // that were triggered via mouse vs touch. To do so, check if the mouse event occurs closely\n            // after the previous touch event.\n            if (Date.now() - this._lastTouchMs < TOUCH_BUFFER_MS) {\n                return;\n            }\n            // Fake mousedown events are fired by some screen readers when controls are activated by the\n            // screen reader. Attribute them to keyboard input modality.\n            this._modality.next(isFakeMousedownFromScreenReader(event) ? 'keyboard' : 'mouse');\n            this._mostRecentTarget = _getEventTarget(event);\n        };\n        /**\n         * Handles touchstart events. Must be an arrow function in order to preserve the context when it\n         * gets bound.\n         */\n        this._onTouchstart = (event) => {\n            // Same scenario as mentioned in _onMousedown, but on touch screen devices, fake touchstart\n            // events are fired. Again, attribute to keyboard input modality.\n            if (isFakeTouchstartFromScreenReader(event)) {\n                this._modality.next('keyboard');\n                return;\n            }\n            // Store the timestamp of this touch event, as it's used to distinguish between mouse events\n            // triggered via mouse vs touch.\n            this._lastTouchMs = Date.now();\n            this._modality.next('touch');\n            this._mostRecentTarget = _getEventTarget(event);\n        };\n        this._options = {\n            ...INPUT_MODALITY_DETECTOR_DEFAULT_OPTIONS,\n            ...options,\n        };\n        // Skip the first emission as it's null.\n        this.modalityDetected = this._modality.pipe(skip(1));\n        this.modalityChanged = this.modalityDetected.pipe(distinctUntilChanged());\n        // If we're not in a browser, this service should do nothing, as there's no relevant input\n        // modality to detect.\n        if (_platform.isBrowser) {\n            ngZone.runOutsideAngular(() => {\n                document.addEventListener('keydown', this._onKeydown, modalityEventListenerOptions);\n                document.addEventListener('mousedown', this._onMousedown, modalityEventListenerOptions);\n                document.addEventListener('touchstart', this._onTouchstart, modalityEventListenerOptions);\n            });\n        }\n    }\n    ngOnDestroy() {\n        this._modality.complete();\n        if (this._platform.isBrowser) {\n            document.removeEventListener('keydown', this._onKeydown, modalityEventListenerOptions);\n            document.removeEventListener('mousedown', this._onMousedown, modalityEventListenerOptions);\n            document.removeEventListener('touchstart', this._onTouchstart, modalityEventListenerOptions);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: InputModalityDetector, deps: [{ token: i1.Platform }, { token: i0.NgZone }, { token: DOCUMENT }, { token: INPUT_MODALITY_DETECTOR_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: InputModalityDetector, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: InputModalityDetector, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i1.Platform }, { type: i0.NgZone }, { type: Document, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [INPUT_MODALITY_DETECTOR_OPTIONS]\n                }] }]; } });\n\nconst LIVE_ANNOUNCER_ELEMENT_TOKEN = new InjectionToken('liveAnnouncerElement', {\n    providedIn: 'root',\n    factory: LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY,\n});\n/** @docs-private */\nfunction LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY() {\n    return null;\n}\n/** Injection token that can be used to configure the default options for the LiveAnnouncer. */\nconst LIVE_ANNOUNCER_DEFAULT_OPTIONS = new InjectionToken('LIVE_ANNOUNCER_DEFAULT_OPTIONS');\n\nlet uniqueIds = 0;\nclass LiveAnnouncer {\n    constructor(elementToken, _ngZone, _document, _defaultOptions) {\n        this._ngZone = _ngZone;\n        this._defaultOptions = _defaultOptions;\n        // We inject the live element and document as `any` because the constructor signature cannot\n        // reference browser globals (HTMLElement, Document) on non-browser environments, since having\n        // a class decorator causes TypeScript to preserve the constructor signature types.\n        this._document = _document;\n        this._liveElement = elementToken || this._createLiveElement();\n    }\n    announce(message, ...args) {\n        const defaultOptions = this._defaultOptions;\n        let politeness;\n        let duration;\n        if (args.length === 1 && typeof args[0] === 'number') {\n            duration = args[0];\n        }\n        else {\n            [politeness, duration] = args;\n        }\n        this.clear();\n        clearTimeout(this._previousTimeout);\n        if (!politeness) {\n            politeness =\n                defaultOptions && defaultOptions.politeness ? defaultOptions.politeness : 'polite';\n        }\n        if (duration == null && defaultOptions) {\n            duration = defaultOptions.duration;\n        }\n        // TODO: ensure changing the politeness works on all environments we support.\n        this._liveElement.setAttribute('aria-live', politeness);\n        if (this._liveElement.id) {\n            this._exposeAnnouncerToModals(this._liveElement.id);\n        }\n        // This 100ms timeout is necessary for some browser + screen-reader combinations:\n        // - Both JAWS and NVDA over IE11 will not announce anything without a non-zero timeout.\n        // - With Chrome and IE11 with NVDA or JAWS, a repeated (identical) message won't be read a\n        //   second time without clearing and then using a non-zero delay.\n        // (using JAWS 17 at time of this writing).\n        return this._ngZone.runOutsideAngular(() => {\n            if (!this._currentPromise) {\n                this._currentPromise = new Promise(resolve => (this._currentResolve = resolve));\n            }\n            clearTimeout(this._previousTimeout);\n            this._previousTimeout = setTimeout(() => {\n                this._liveElement.textContent = message;\n                if (typeof duration === 'number') {\n                    this._previousTimeout = setTimeout(() => this.clear(), duration);\n                }\n                this._currentResolve();\n                this._currentPromise = this._currentResolve = undefined;\n            }, 100);\n            return this._currentPromise;\n        });\n    }\n    /**\n     * Clears the current text from the announcer element. Can be used to prevent\n     * screen readers from reading the text out again while the user is going\n     * through the page landmarks.\n     */\n    clear() {\n        if (this._liveElement) {\n            this._liveElement.textContent = '';\n        }\n    }\n    ngOnDestroy() {\n        clearTimeout(this._previousTimeout);\n        this._liveElement?.remove();\n        this._liveElement = null;\n        this._currentResolve?.();\n        this._currentPromise = this._currentResolve = undefined;\n    }\n    _createLiveElement() {\n        const elementClass = 'cdk-live-announcer-element';\n        const previousElements = this._document.getElementsByClassName(elementClass);\n        const liveEl = this._document.createElement('div');\n        // Remove any old containers. This can happen when coming in from a server-side-rendered page.\n        for (let i = 0; i < previousElements.length; i++) {\n            previousElements[i].remove();\n        }\n        liveEl.classList.add(elementClass);\n        liveEl.classList.add('cdk-visually-hidden');\n        liveEl.setAttribute('aria-atomic', 'true');\n        liveEl.setAttribute('aria-live', 'polite');\n        liveEl.id = `cdk-live-announcer-${uniqueIds++}`;\n        this._document.body.appendChild(liveEl);\n        return liveEl;\n    }\n    /**\n     * Some browsers won't expose the accessibility node of the live announcer element if there is an\n     * `aria-modal` and the live announcer is outside of it. This method works around the issue by\n     * pointing the `aria-owns` of all modals to the live announcer element.\n     */\n    _exposeAnnouncerToModals(id) {\n        // TODO(http://github.com/angular/components/issues/26853): consider de-duplicating this with\n        // the `SnakBarContainer` and other usages.\n        //\n        // Note that the selector here is limited to CDK overlays at the moment in order to reduce the\n        // section of the DOM we need to look through. This should cover all the cases we support, but\n        // the selector can be expanded if it turns out to be too narrow.\n        const modals = this._document.querySelectorAll('body > .cdk-overlay-container [aria-modal=\"true\"]');\n        for (let i = 0; i < modals.length; i++) {\n            const modal = modals[i];\n            const ariaOwns = modal.getAttribute('aria-owns');\n            if (!ariaOwns) {\n                modal.setAttribute('aria-owns', id);\n            }\n            else if (ariaOwns.indexOf(id) === -1) {\n                modal.setAttribute('aria-owns', ariaOwns + ' ' + id);\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: LiveAnnouncer, deps: [{ token: LIVE_ANNOUNCER_ELEMENT_TOKEN, optional: true }, { token: i0.NgZone }, { token: DOCUMENT }, { token: LIVE_ANNOUNCER_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: LiveAnnouncer, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: LiveAnnouncer, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [LIVE_ANNOUNCER_ELEMENT_TOKEN]\n                }] }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [LIVE_ANNOUNCER_DEFAULT_OPTIONS]\n                }] }]; } });\n/**\n * A directive that works similarly to aria-live, but uses the LiveAnnouncer to ensure compatibility\n * with a wider range of browsers and screen readers.\n */\nclass CdkAriaLive {\n    /** The aria-live politeness level to use when announcing messages. */\n    get politeness() {\n        return this._politeness;\n    }\n    set politeness(value) {\n        this._politeness = value === 'off' || value === 'assertive' ? value : 'polite';\n        if (this._politeness === 'off') {\n            if (this._subscription) {\n                this._subscription.unsubscribe();\n                this._subscription = null;\n            }\n        }\n        else if (!this._subscription) {\n            this._subscription = this._ngZone.runOutsideAngular(() => {\n                return this._contentObserver.observe(this._elementRef).subscribe(() => {\n                    // Note that we use textContent here, rather than innerText, in order to avoid a reflow.\n                    const elementText = this._elementRef.nativeElement.textContent;\n                    // The `MutationObserver` fires also for attribute\n                    // changes which we don't want to announce.\n                    if (elementText !== this._previousAnnouncedText) {\n                        this._liveAnnouncer.announce(elementText, this._politeness, this.duration);\n                        this._previousAnnouncedText = elementText;\n                    }\n                });\n            });\n        }\n    }\n    constructor(_elementRef, _liveAnnouncer, _contentObserver, _ngZone) {\n        this._elementRef = _elementRef;\n        this._liveAnnouncer = _liveAnnouncer;\n        this._contentObserver = _contentObserver;\n        this._ngZone = _ngZone;\n        this._politeness = 'polite';\n    }\n    ngOnDestroy() {\n        if (this._subscription) {\n            this._subscription.unsubscribe();\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: CdkAriaLive, deps: [{ token: i0.ElementRef }, { token: LiveAnnouncer }, { token: i1$1.ContentObserver }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: CdkAriaLive, selector: \"[cdkAriaLive]\", inputs: { politeness: [\"cdkAriaLive\", \"politeness\"], duration: [\"cdkAriaLiveDuration\", \"duration\"] }, exportAs: [\"cdkAriaLive\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: CdkAriaLive, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkAriaLive]',\n                    exportAs: 'cdkAriaLive',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: LiveAnnouncer }, { type: i1$1.ContentObserver }, { type: i0.NgZone }]; }, propDecorators: { politeness: [{\n                type: Input,\n                args: ['cdkAriaLive']\n            }], duration: [{\n                type: Input,\n                args: ['cdkAriaLiveDuration']\n            }] } });\n\n/** InjectionToken for FocusMonitorOptions. */\nconst FOCUS_MONITOR_DEFAULT_OPTIONS = new InjectionToken('cdk-focus-monitor-default-options');\n/**\n * Event listener options that enable capturing and also\n * mark the listener as passive if the browser supports it.\n */\nconst captureEventListenerOptions = normalizePassiveListenerOptions({\n    passive: true,\n    capture: true,\n});\n/** Monitors mouse and keyboard events to determine the cause of focus events. */\nclass FocusMonitor {\n    constructor(_ngZone, _platform, _inputModalityDetector, \n    /** @breaking-change 11.0.0 make document required */\n    document, options) {\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        this._inputModalityDetector = _inputModalityDetector;\n        /** The focus origin that the next focus event is a result of. */\n        this._origin = null;\n        /** Whether the window has just been focused. */\n        this._windowFocused = false;\n        /**\n         * Whether the origin was determined via a touch interaction. Necessary as properly attributing\n         * focus events to touch interactions requires special logic.\n         */\n        this._originFromTouchInteraction = false;\n        /** Map of elements being monitored to their info. */\n        this._elementInfo = new Map();\n        /** The number of elements currently being monitored. */\n        this._monitoredElementCount = 0;\n        /**\n         * Keeps track of the root nodes to which we've currently bound a focus/blur handler,\n         * as well as the number of monitored elements that they contain. We have to treat focus/blur\n         * handlers differently from the rest of the events, because the browser won't emit events\n         * to the document when focus moves inside of a shadow root.\n         */\n        this._rootNodeFocusListenerCount = new Map();\n        /**\n         * Event listener for `focus` events on the window.\n         * Needs to be an arrow function in order to preserve the context when it gets bound.\n         */\n        this._windowFocusListener = () => {\n            // Make a note of when the window regains focus, so we can\n            // restore the origin info for the focused element.\n            this._windowFocused = true;\n            this._windowFocusTimeoutId = window.setTimeout(() => (this._windowFocused = false));\n        };\n        /** Subject for stopping our InputModalityDetector subscription. */\n        this._stopInputModalityDetector = new Subject();\n        /**\n         * Event listener for `focus` and 'blur' events on the document.\n         * Needs to be an arrow function in order to preserve the context when it gets bound.\n         */\n        this._rootNodeFocusAndBlurListener = (event) => {\n            const target = _getEventTarget(event);\n            // We need to walk up the ancestor chain in order to support `checkChildren`.\n            for (let element = target; element; element = element.parentElement) {\n                if (event.type === 'focus') {\n                    this._onFocus(event, element);\n                }\n                else {\n                    this._onBlur(event, element);\n                }\n            }\n        };\n        this._document = document;\n        this._detectionMode = options?.detectionMode || 0 /* FocusMonitorDetectionMode.IMMEDIATE */;\n    }\n    monitor(element, checkChildren = false) {\n        const nativeElement = coerceElement(element);\n        // Do nothing if we're not on the browser platform or the passed in node isn't an element.\n        if (!this._platform.isBrowser || nativeElement.nodeType !== 1) {\n            return of(null);\n        }\n        // If the element is inside the shadow DOM, we need to bind our focus/blur listeners to\n        // the shadow root, rather than the `document`, because the browser won't emit focus events\n        // to the `document`, if focus is moving within the same shadow root.\n        const rootNode = _getShadowRoot(nativeElement) || this._getDocument();\n        const cachedInfo = this._elementInfo.get(nativeElement);\n        // Check if we're already monitoring this element.\n        if (cachedInfo) {\n            if (checkChildren) {\n                // TODO(COMP-318): this can be problematic, because it'll turn all non-checkChildren\n                // observers into ones that behave as if `checkChildren` was turned on. We need a more\n                // robust solution.\n                cachedInfo.checkChildren = true;\n            }\n            return cachedInfo.subject;\n        }\n        // Create monitored element info.\n        const info = {\n            checkChildren: checkChildren,\n            subject: new Subject(),\n            rootNode,\n        };\n        this._elementInfo.set(nativeElement, info);\n        this._registerGlobalListeners(info);\n        return info.subject;\n    }\n    stopMonitoring(element) {\n        const nativeElement = coerceElement(element);\n        const elementInfo = this._elementInfo.get(nativeElement);\n        if (elementInfo) {\n            elementInfo.subject.complete();\n            this._setClasses(nativeElement);\n            this._elementInfo.delete(nativeElement);\n            this._removeGlobalListeners(elementInfo);\n        }\n    }\n    focusVia(element, origin, options) {\n        const nativeElement = coerceElement(element);\n        const focusedElement = this._getDocument().activeElement;\n        // If the element is focused already, calling `focus` again won't trigger the event listener\n        // which means that the focus classes won't be updated. If that's the case, update the classes\n        // directly without waiting for an event.\n        if (nativeElement === focusedElement) {\n            this._getClosestElementsInfo(nativeElement).forEach(([currentElement, info]) => this._originChanged(currentElement, origin, info));\n        }\n        else {\n            this._setOrigin(origin);\n            // `focus` isn't available on the server\n            if (typeof nativeElement.focus === 'function') {\n                nativeElement.focus(options);\n            }\n        }\n    }\n    ngOnDestroy() {\n        this._elementInfo.forEach((_info, element) => this.stopMonitoring(element));\n    }\n    /** Access injected document if available or fallback to global document reference */\n    _getDocument() {\n        return this._document || document;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        const doc = this._getDocument();\n        return doc.defaultView || window;\n    }\n    _getFocusOrigin(focusEventTarget) {\n        if (this._origin) {\n            // If the origin was realized via a touch interaction, we need to perform additional checks\n            // to determine whether the focus origin should be attributed to touch or program.\n            if (this._originFromTouchInteraction) {\n                return this._shouldBeAttributedToTouch(focusEventTarget) ? 'touch' : 'program';\n            }\n            else {\n                return this._origin;\n            }\n        }\n        // If the window has just regained focus, we can restore the most recent origin from before the\n        // window blurred. Otherwise, we've reached the point where we can't identify the source of the\n        // focus. This typically means one of two things happened:\n        //\n        // 1) The element was programmatically focused, or\n        // 2) The element was focused via screen reader navigation (which generally doesn't fire\n        //    events).\n        //\n        // Because we can't distinguish between these two cases, we default to setting `program`.\n        if (this._windowFocused && this._lastFocusOrigin) {\n            return this._lastFocusOrigin;\n        }\n        // If the interaction is coming from an input label, we consider it a mouse interactions.\n        // This is a special case where focus moves on `click`, rather than `mousedown` which breaks\n        // our detection, because all our assumptions are for `mousedown`. We need to handle this\n        // special case, because it's very common for checkboxes and radio buttons.\n        if (focusEventTarget && this._isLastInteractionFromInputLabel(focusEventTarget)) {\n            return 'mouse';\n        }\n        return 'program';\n    }\n    /**\n     * Returns whether the focus event should be attributed to touch. Recall that in IMMEDIATE mode, a\n     * touch origin isn't immediately reset at the next tick (see _setOrigin). This means that when we\n     * handle a focus event following a touch interaction, we need to determine whether (1) the focus\n     * event was directly caused by the touch interaction or (2) the focus event was caused by a\n     * subsequent programmatic focus call triggered by the touch interaction.\n     * @param focusEventTarget The target of the focus event under examination.\n     */\n    _shouldBeAttributedToTouch(focusEventTarget) {\n        // Please note that this check is not perfect. Consider the following edge case:\n        //\n        // <div #parent tabindex=\"0\">\n        //   <div #child tabindex=\"0\" (click)=\"#parent.focus()\"></div>\n        // </div>\n        //\n        // Suppose there is a FocusMonitor in IMMEDIATE mode attached to #parent. When the user touches\n        // #child, #parent is programmatically focused. This code will attribute the focus to touch\n        // instead of program. This is a relatively minor edge-case that can be worked around by using\n        // focusVia(parent, 'program') to focus #parent.\n        return (this._detectionMode === 1 /* FocusMonitorDetectionMode.EVENTUAL */ ||\n            !!focusEventTarget?.contains(this._inputModalityDetector._mostRecentTarget));\n    }\n    /**\n     * Sets the focus classes on the element based on the given focus origin.\n     * @param element The element to update the classes on.\n     * @param origin The focus origin.\n     */\n    _setClasses(element, origin) {\n        element.classList.toggle('cdk-focused', !!origin);\n        element.classList.toggle('cdk-touch-focused', origin === 'touch');\n        element.classList.toggle('cdk-keyboard-focused', origin === 'keyboard');\n        element.classList.toggle('cdk-mouse-focused', origin === 'mouse');\n        element.classList.toggle('cdk-program-focused', origin === 'program');\n    }\n    /**\n     * Updates the focus origin. If we're using immediate detection mode, we schedule an async\n     * function to clear the origin at the end of a timeout. The duration of the timeout depends on\n     * the origin being set.\n     * @param origin The origin to set.\n     * @param isFromInteraction Whether we are setting the origin from an interaction event.\n     */\n    _setOrigin(origin, isFromInteraction = false) {\n        this._ngZone.runOutsideAngular(() => {\n            this._origin = origin;\n            this._originFromTouchInteraction = origin === 'touch' && isFromInteraction;\n            // If we're in IMMEDIATE mode, reset the origin at the next tick (or in `TOUCH_BUFFER_MS` ms\n            // for a touch event). We reset the origin at the next tick because Firefox focuses one tick\n            // after the interaction event. We wait `TOUCH_BUFFER_MS` ms before resetting the origin for\n            // a touch event because when a touch event is fired, the associated focus event isn't yet in\n            // the event queue. Before doing so, clear any pending timeouts.\n            if (this._detectionMode === 0 /* FocusMonitorDetectionMode.IMMEDIATE */) {\n                clearTimeout(this._originTimeoutId);\n                const ms = this._originFromTouchInteraction ? TOUCH_BUFFER_MS : 1;\n                this._originTimeoutId = setTimeout(() => (this._origin = null), ms);\n            }\n        });\n    }\n    /**\n     * Handles focus events on a registered element.\n     * @param event The focus event.\n     * @param element The monitored element.\n     */\n    _onFocus(event, element) {\n        // NOTE(mmalerba): We currently set the classes based on the focus origin of the most recent\n        // focus event affecting the monitored element. If we want to use the origin of the first event\n        // instead we should check for the cdk-focused class here and return if the element already has\n        // it. (This only matters for elements that have includesChildren = true).\n        // If we are not counting child-element-focus as focused, make sure that the event target is the\n        // monitored element itself.\n        const elementInfo = this._elementInfo.get(element);\n        const focusEventTarget = _getEventTarget(event);\n        if (!elementInfo || (!elementInfo.checkChildren && element !== focusEventTarget)) {\n            return;\n        }\n        this._originChanged(element, this._getFocusOrigin(focusEventTarget), elementInfo);\n    }\n    /**\n     * Handles blur events on a registered element.\n     * @param event The blur event.\n     * @param element The monitored element.\n     */\n    _onBlur(event, element) {\n        // If we are counting child-element-focus as focused, make sure that we aren't just blurring in\n        // order to focus another child of the monitored element.\n        const elementInfo = this._elementInfo.get(element);\n        if (!elementInfo ||\n            (elementInfo.checkChildren &&\n                event.relatedTarget instanceof Node &&\n                element.contains(event.relatedTarget))) {\n            return;\n        }\n        this._setClasses(element);\n        this._emitOrigin(elementInfo, null);\n    }\n    _emitOrigin(info, origin) {\n        if (info.subject.observers.length) {\n            this._ngZone.run(() => info.subject.next(origin));\n        }\n    }\n    _registerGlobalListeners(elementInfo) {\n        if (!this._platform.isBrowser) {\n            return;\n        }\n        const rootNode = elementInfo.rootNode;\n        const rootNodeFocusListeners = this._rootNodeFocusListenerCount.get(rootNode) || 0;\n        if (!rootNodeFocusListeners) {\n            this._ngZone.runOutsideAngular(() => {\n                rootNode.addEventListener('focus', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n                rootNode.addEventListener('blur', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n            });\n        }\n        this._rootNodeFocusListenerCount.set(rootNode, rootNodeFocusListeners + 1);\n        // Register global listeners when first element is monitored.\n        if (++this._monitoredElementCount === 1) {\n            // Note: we listen to events in the capture phase so we\n            // can detect them even if the user stops propagation.\n            this._ngZone.runOutsideAngular(() => {\n                const window = this._getWindow();\n                window.addEventListener('focus', this._windowFocusListener);\n            });\n            // The InputModalityDetector is also just a collection of global listeners.\n            this._inputModalityDetector.modalityDetected\n                .pipe(takeUntil(this._stopInputModalityDetector))\n                .subscribe(modality => {\n                this._setOrigin(modality, true /* isFromInteraction */);\n            });\n        }\n    }\n    _removeGlobalListeners(elementInfo) {\n        const rootNode = elementInfo.rootNode;\n        if (this._rootNodeFocusListenerCount.has(rootNode)) {\n            const rootNodeFocusListeners = this._rootNodeFocusListenerCount.get(rootNode);\n            if (rootNodeFocusListeners > 1) {\n                this._rootNodeFocusListenerCount.set(rootNode, rootNodeFocusListeners - 1);\n            }\n            else {\n                rootNode.removeEventListener('focus', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n                rootNode.removeEventListener('blur', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n                this._rootNodeFocusListenerCount.delete(rootNode);\n            }\n        }\n        // Unregister global listeners when last element is unmonitored.\n        if (!--this._monitoredElementCount) {\n            const window = this._getWindow();\n            window.removeEventListener('focus', this._windowFocusListener);\n            // Equivalently, stop our InputModalityDetector subscription.\n            this._stopInputModalityDetector.next();\n            // Clear timeouts for all potentially pending timeouts to prevent the leaks.\n            clearTimeout(this._windowFocusTimeoutId);\n            clearTimeout(this._originTimeoutId);\n        }\n    }\n    /** Updates all the state on an element once its focus origin has changed. */\n    _originChanged(element, origin, elementInfo) {\n        this._setClasses(element, origin);\n        this._emitOrigin(elementInfo, origin);\n        this._lastFocusOrigin = origin;\n    }\n    /**\n     * Collects the `MonitoredElementInfo` of a particular element and\n     * all of its ancestors that have enabled `checkChildren`.\n     * @param element Element from which to start the search.\n     */\n    _getClosestElementsInfo(element) {\n        const results = [];\n        this._elementInfo.forEach((info, currentElement) => {\n            if (currentElement === element || (info.checkChildren && currentElement.contains(element))) {\n                results.push([currentElement, info]);\n            }\n        });\n        return results;\n    }\n    /**\n     * Returns whether an interaction is likely to have come from the user clicking the `label` of\n     * an `input` or `textarea` in order to focus it.\n     * @param focusEventTarget Target currently receiving focus.\n     */\n    _isLastInteractionFromInputLabel(focusEventTarget) {\n        const { _mostRecentTarget: mostRecentTarget, mostRecentModality } = this._inputModalityDetector;\n        // If the last interaction used the mouse on an element contained by one of the labels\n        // of an `input`/`textarea` that is currently focused, it is very likely that the\n        // user redirected focus using the label.\n        if (mostRecentModality !== 'mouse' ||\n            !mostRecentTarget ||\n            mostRecentTarget === focusEventTarget ||\n            (focusEventTarget.nodeName !== 'INPUT' && focusEventTarget.nodeName !== 'TEXTAREA') ||\n            focusEventTarget.disabled) {\n            return false;\n        }\n        const labels = focusEventTarget.labels;\n        if (labels) {\n            for (let i = 0; i < labels.length; i++) {\n                if (labels[i].contains(mostRecentTarget)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: FocusMonitor, deps: [{ token: i0.NgZone }, { token: i1.Platform }, { token: InputModalityDetector }, { token: DOCUMENT, optional: true }, { token: FOCUS_MONITOR_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: FocusMonitor, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: FocusMonitor, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: i1.Platform }, { type: InputModalityDetector }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [FOCUS_MONITOR_DEFAULT_OPTIONS]\n                }] }]; } });\n/**\n * Directive that determines how a particular element was focused (via keyboard, mouse, touch, or\n * programmatically) and adds corresponding classes to the element.\n *\n * There are two variants of this directive:\n * 1) cdkMonitorElementFocus: does not consider an element to be focused if one of its children is\n *    focused.\n * 2) cdkMonitorSubtreeFocus: considers an element focused if it or any of its children are focused.\n */\nclass CdkMonitorFocus {\n    constructor(_elementRef, _focusMonitor) {\n        this._elementRef = _elementRef;\n        this._focusMonitor = _focusMonitor;\n        this._focusOrigin = null;\n        this.cdkFocusChange = new EventEmitter();\n    }\n    get focusOrigin() {\n        return this._focusOrigin;\n    }\n    ngAfterViewInit() {\n        const element = this._elementRef.nativeElement;\n        this._monitorSubscription = this._focusMonitor\n            .monitor(element, element.nodeType === 1 && element.hasAttribute('cdkMonitorSubtreeFocus'))\n            .subscribe(origin => {\n            this._focusOrigin = origin;\n            this.cdkFocusChange.emit(origin);\n        });\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        if (this._monitorSubscription) {\n            this._monitorSubscription.unsubscribe();\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: CdkMonitorFocus, deps: [{ token: i0.ElementRef }, { token: FocusMonitor }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: CdkMonitorFocus, selector: \"[cdkMonitorElementFocus], [cdkMonitorSubtreeFocus]\", outputs: { cdkFocusChange: \"cdkFocusChange\" }, exportAs: [\"cdkMonitorFocus\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: CdkMonitorFocus, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkMonitorElementFocus], [cdkMonitorSubtreeFocus]',\n                    exportAs: 'cdkMonitorFocus',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: FocusMonitor }]; }, propDecorators: { cdkFocusChange: [{\n                type: Output\n            }] } });\n\n/** CSS class applied to the document body when in black-on-white high-contrast mode. */\nconst BLACK_ON_WHITE_CSS_CLASS = 'cdk-high-contrast-black-on-white';\n/** CSS class applied to the document body when in white-on-black high-contrast mode. */\nconst WHITE_ON_BLACK_CSS_CLASS = 'cdk-high-contrast-white-on-black';\n/** CSS class applied to the document body when in high-contrast mode. */\nconst HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS = 'cdk-high-contrast-active';\n/**\n * Service to determine whether the browser is currently in a high-contrast-mode environment.\n *\n * Microsoft Windows supports an accessibility feature called \"High Contrast Mode\". This mode\n * changes the appearance of all applications, including web applications, to dramatically increase\n * contrast.\n *\n * IE, Edge, and Firefox currently support this mode. Chrome does not support Windows High Contrast\n * Mode. This service does not detect high-contrast mode as added by the Chrome \"High Contrast\"\n * browser extension.\n */\nclass HighContrastModeDetector {\n    constructor(_platform, document) {\n        this._platform = _platform;\n        this._document = document;\n        this._breakpointSubscription = inject(BreakpointObserver)\n            .observe('(forced-colors: active)')\n            .subscribe(() => {\n            if (this._hasCheckedHighContrastMode) {\n                this._hasCheckedHighContrastMode = false;\n                this._applyBodyHighContrastModeCssClasses();\n            }\n        });\n    }\n    /** Gets the current high-contrast-mode for the page. */\n    getHighContrastMode() {\n        if (!this._platform.isBrowser) {\n            return 0 /* HighContrastMode.NONE */;\n        }\n        // Create a test element with an arbitrary background-color that is neither black nor\n        // white; high-contrast mode will coerce the color to either black or white. Also ensure that\n        // appending the test element to the DOM does not affect layout by absolutely positioning it\n        const testElement = this._document.createElement('div');\n        testElement.style.backgroundColor = 'rgb(1,2,3)';\n        testElement.style.position = 'absolute';\n        this._document.body.appendChild(testElement);\n        // Get the computed style for the background color, collapsing spaces to normalize between\n        // browsers. Once we get this color, we no longer need the test element. Access the `window`\n        // via the document so we can fake it in tests. Note that we have extra null checks, because\n        // this logic will likely run during app bootstrap and throwing can break the entire app.\n        const documentWindow = this._document.defaultView || window;\n        const computedStyle = documentWindow && documentWindow.getComputedStyle\n            ? documentWindow.getComputedStyle(testElement)\n            : null;\n        const computedColor = ((computedStyle && computedStyle.backgroundColor) || '').replace(/ /g, '');\n        testElement.remove();\n        switch (computedColor) {\n            // Pre Windows 11 dark theme.\n            case 'rgb(0,0,0)':\n            // Windows 11 dark themes.\n            case 'rgb(45,50,54)':\n            case 'rgb(32,32,32)':\n                return 2 /* HighContrastMode.WHITE_ON_BLACK */;\n            // Pre Windows 11 light theme.\n            case 'rgb(255,255,255)':\n            // Windows 11 light theme.\n            case 'rgb(255,250,239)':\n                return 1 /* HighContrastMode.BLACK_ON_WHITE */;\n        }\n        return 0 /* HighContrastMode.NONE */;\n    }\n    ngOnDestroy() {\n        this._breakpointSubscription.unsubscribe();\n    }\n    /** Applies CSS classes indicating high-contrast mode to document body (browser-only). */\n    _applyBodyHighContrastModeCssClasses() {\n        if (!this._hasCheckedHighContrastMode && this._platform.isBrowser && this._document.body) {\n            const bodyClasses = this._document.body.classList;\n            bodyClasses.remove(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS, BLACK_ON_WHITE_CSS_CLASS, WHITE_ON_BLACK_CSS_CLASS);\n            this._hasCheckedHighContrastMode = true;\n            const mode = this.getHighContrastMode();\n            if (mode === 1 /* HighContrastMode.BLACK_ON_WHITE */) {\n                bodyClasses.add(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS, BLACK_ON_WHITE_CSS_CLASS);\n            }\n            else if (mode === 2 /* HighContrastMode.WHITE_ON_BLACK */) {\n                bodyClasses.add(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS, WHITE_ON_BLACK_CSS_CLASS);\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: HighContrastModeDetector, deps: [{ token: i1.Platform }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: HighContrastModeDetector, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: HighContrastModeDetector, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i1.Platform }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\n\nclass A11yModule {\n    constructor(highContrastModeDetector) {\n        highContrastModeDetector._applyBodyHighContrastModeCssClasses();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: A11yModule, deps: [{ token: HighContrastModeDetector }], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.1.1\", ngImport: i0, type: A11yModule, declarations: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus], imports: [ObserversModule], exports: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: A11yModule, imports: [ObserversModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: A11yModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ObserversModule],\n                    declarations: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus],\n                    exports: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus],\n                }]\n        }], ctorParameters: function () { return [{ type: HighContrastModeDetector }]; } });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { A11yModule, ActiveDescendantKeyManager, AriaDescriber, CDK_DESCRIBEDBY_HOST_ATTRIBUTE, CDK_DESCRIBEDBY_ID_PREFIX, CdkAriaLive, CdkMonitorFocus, CdkTrapFocus, ConfigurableFocusTrap, ConfigurableFocusTrapFactory, EventListenerFocusTrapInertStrategy, FOCUS_MONITOR_DEFAULT_OPTIONS, FOCUS_TRAP_INERT_STRATEGY, FocusKeyManager, FocusMonitor, FocusTrap, FocusTrapFactory, HighContrastModeDetector, INPUT_MODALITY_DETECTOR_DEFAULT_OPTIONS, INPUT_MODALITY_DETECTOR_OPTIONS, InputModalityDetector, InteractivityChecker, IsFocusableConfig, LIVE_ANNOUNCER_DEFAULT_OPTIONS, LIVE_ANNOUNCER_ELEMENT_TOKEN, LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY, ListKeyManager, LiveAnnouncer, MESSAGES_CONTAINER_ID, addAriaReferencedId, getAriaReferenceIds, isFakeMousedownFromScreenReader, isFakeTouchstartFromScreenReader, removeAriaReferencedId };\n","const MAC_ENTER = 3;\nconst BACKSPACE = 8;\nconst TAB = 9;\nconst NUM_CENTER = 12;\nconst ENTER = 13;\nconst SHIFT = 16;\nconst CONTROL = 17;\nconst ALT = 18;\nconst PAUSE = 19;\nconst CAPS_LOCK = 20;\nconst ESCAPE = 27;\nconst SPACE = 32;\nconst PAGE_UP = 33;\nconst PAGE_DOWN = 34;\nconst END = 35;\nconst HOME = 36;\nconst LEFT_ARROW = 37;\nconst UP_ARROW = 38;\nconst RIGHT_ARROW = 39;\nconst DOWN_ARROW = 40;\nconst PLUS_SIGN = 43;\nconst PRINT_SCREEN = 44;\nconst INSERT = 45;\nconst DELETE = 46;\nconst ZERO = 48;\nconst ONE = 49;\nconst TWO = 50;\nconst THREE = 51;\nconst FOUR = 52;\nconst FIVE = 53;\nconst SIX = 54;\nconst SEVEN = 55;\nconst EIGHT = 56;\nconst NINE = 57;\nconst FF_SEMICOLON = 59; // Firefox (Gecko) fires this for semicolon instead of 186\nconst FF_EQUALS = 61; // Firefox (Gecko) fires this for equals instead of 187\nconst QUESTION_MARK = 63;\nconst AT_SIGN = 64;\nconst A = 65;\nconst B = 66;\nconst C = 67;\nconst D = 68;\nconst E = 69;\nconst F = 70;\nconst G = 71;\nconst H = 72;\nconst I = 73;\nconst J = 74;\nconst K = 75;\nconst L = 76;\nconst M = 77;\nconst N = 78;\nconst O = 79;\nconst P = 80;\nconst Q = 81;\nconst R = 82;\nconst S = 83;\nconst T = 84;\nconst U = 85;\nconst V = 86;\nconst W = 87;\nconst X = 88;\nconst Y = 89;\nconst Z = 90;\nconst META = 91; // WIN_KEY_LEFT\nconst MAC_WK_CMD_LEFT = 91;\nconst MAC_WK_CMD_RIGHT = 93;\nconst CONTEXT_MENU = 93;\nconst NUMPAD_ZERO = 96;\nconst NUMPAD_ONE = 97;\nconst NUMPAD_TWO = 98;\nconst NUMPAD_THREE = 99;\nconst NUMPAD_FOUR = 100;\nconst NUMPAD_FIVE = 101;\nconst NUMPAD_SIX = 102;\nconst NUMPAD_SEVEN = 103;\nconst NUMPAD_EIGHT = 104;\nconst NUMPAD_NINE = 105;\nconst NUMPAD_MULTIPLY = 106;\nconst NUMPAD_PLUS = 107;\nconst NUMPAD_MINUS = 109;\nconst NUMPAD_PERIOD = 110;\nconst NUMPAD_DIVIDE = 111;\nconst F1 = 112;\nconst F2 = 113;\nconst F3 = 114;\nconst F4 = 115;\nconst F5 = 116;\nconst F6 = 117;\nconst F7 = 118;\nconst F8 = 119;\nconst F9 = 120;\nconst F10 = 121;\nconst F11 = 122;\nconst F12 = 123;\nconst NUM_LOCK = 144;\nconst SCROLL_LOCK = 145;\nconst FIRST_MEDIA = 166;\nconst FF_MINUS = 173;\nconst MUTE = 173; // Firefox (Gecko) fires 181 for MUTE\nconst VOLUME_DOWN = 174; // Firefox (Gecko) fires 182 for VOLUME_DOWN\nconst VOLUME_UP = 175; // Firefox (Gecko) fires 183 for VOLUME_UP\nconst FF_MUTE = 181;\nconst FF_VOLUME_DOWN = 182;\nconst LAST_MEDIA = 183;\nconst FF_VOLUME_UP = 183;\nconst SEMICOLON = 186; // Firefox (Gecko) fires 59 for SEMICOLON\nconst EQUALS = 187; // Firefox (Gecko) fires 61 for EQUALS\nconst COMMA = 188;\nconst DASH = 189; // Firefox (Gecko) fires 173 for DASH/MINUS\nconst PERIOD = 190;\nconst SLASH = 191;\nconst APOSTROPHE = 192;\nconst TILDE = 192;\nconst OPEN_SQUARE_BRACKET = 219;\nconst BACKSLASH = 220;\nconst CLOSE_SQUARE_BRACKET = 221;\nconst SINGLE_QUOTE = 222;\nconst MAC_META = 224;\n\n/**\n * Checks whether a modifier key is pressed.\n * @param event Event to be checked.\n */\nfunction hasModifierKey(event, ...modifiers) {\n    if (modifiers.length) {\n        return modifiers.some(modifier => event[modifier]);\n    }\n    return event.altKey || event.shiftKey || event.ctrlKey || event.metaKey;\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { A, ALT, APOSTROPHE, AT_SIGN, B, BACKSLASH, BACKSPACE, C, CAPS_LOCK, CLOSE_SQUARE_BRACKET, COMMA, CONTEXT_MENU, CONTROL, D, DASH, DELETE, DOWN_ARROW, E, EIGHT, END, ENTER, EQUALS, ESCAPE, F, F1, F10, F11, F12, F2, F3, F4, F5, F6, F7, F8, F9, FF_EQUALS, FF_MINUS, FF_MUTE, FF_SEMICOLON, FF_VOLUME_DOWN, FF_VOLUME_UP, FIRST_MEDIA, FIVE, FOUR, G, H, HOME, I, INSERT, J, K, L, LAST_MEDIA, LEFT_ARROW, M, MAC_ENTER, MAC_META, MAC_WK_CMD_LEFT, MAC_WK_CMD_RIGHT, META, MUTE, N, NINE, NUMPAD_DIVIDE, NUMPAD_EIGHT, NUMPAD_FIVE, NUMPAD_FOUR, NUMPAD_MINUS, NUMPAD_MULTIPLY, NUMPAD_NINE, NUMPAD_ONE, NUMPAD_PERIOD, NUMPAD_PLUS, NUMPAD_SEVEN, NUMPAD_SIX, NUMPAD_THREE, NUMPAD_TWO, NUMPAD_ZERO, NUM_CENTER, NUM_LOCK, O, ONE, OPEN_SQUARE_BRACKET, P, PAGE_DOWN, PAGE_UP, PAUSE, PERIOD, PLUS_SIGN, PRINT_SCREEN, Q, QUESTION_MARK, R, RIGHT_ARROW, S, SCROLL_LOCK, SEMICOLON, SEVEN, SHIFT, SINGLE_QUOTE, SIX, SLASH, SPACE, T, TAB, THREE, TILDE, TWO, U, UP_ARROW, V, VOLUME_DOWN, VOLUME_UP, W, X, Y, Z, ZERO, hasModifierKey };\n","function t(t){return t.split(\"-\")[1]}function e(t){return\"y\"===t?\"height\":\"width\"}function n(t){return t.split(\"-\")[0]}function o(t){return[\"top\",\"bottom\"].includes(n(t))?\"x\":\"y\"}function i(i,r,a){let{reference:l,floating:s}=i;const c=l.x+l.width/2-s.width/2,f=l.y+l.height/2-s.height/2,m=o(r),u=e(m),g=l[u]/2-s[u]/2,d=\"x\"===m;let p;switch(n(r)){case\"top\":p={x:c,y:l.y-s.height};break;case\"bottom\":p={x:c,y:l.y+l.height};break;case\"right\":p={x:l.x+l.width,y:f};break;case\"left\":p={x:l.x-s.width,y:f};break;default:p={x:l.x,y:l.y}}switch(t(r)){case\"start\":p[m]-=g*(a&&d?-1:1);break;case\"end\":p[m]+=g*(a&&d?-1:1)}return p}const r=async(t,e,n)=>{const{placement:o=\"bottom\",strategy:r=\"absolute\",middleware:a=[],platform:l}=n,s=a.filter(Boolean),c=await(null==l.isRTL?void 0:l.isRTL(e));let f=await l.getElementRects({reference:t,floating:e,strategy:r}),{x:m,y:u}=i(f,o,c),g=o,d={},p=0;for(let n=0;n<s.length;n++){const{name:a,fn:h}=s[n],{x:y,y:x,data:w,reset:v}=await h({x:m,y:u,initialPlacement:o,placement:g,strategy:r,middlewareData:d,rects:f,platform:l,elements:{reference:t,floating:e}});m=null!=y?y:m,u=null!=x?x:u,d={...d,[a]:{...d[a],...w}},v&&p<=50&&(p++,\"object\"==typeof v&&(v.placement&&(g=v.placement),v.rects&&(f=!0===v.rects?await l.getElementRects({reference:t,floating:e,strategy:r}):v.rects),({x:m,y:u}=i(f,g,c))),n=-1)}return{x:m,y:u,placement:g,strategy:r,middlewareData:d}};function a(t,e){return\"function\"==typeof t?t(e):t}function l(t){return\"number\"!=typeof t?function(t){return{top:0,right:0,bottom:0,left:0,...t}}(t):{top:t,right:t,bottom:t,left:t}}function s(t){return{...t,top:t.y,left:t.x,right:t.x+t.width,bottom:t.y+t.height}}async function c(t,e){var n;void 0===e&&(e={});const{x:o,y:i,platform:r,rects:c,elements:f,strategy:m}=t,{boundary:u=\"clippingAncestors\",rootBoundary:g=\"viewport\",elementContext:d=\"floating\",altBoundary:p=!1,padding:h=0}=a(e,t),y=l(h),x=f[p?\"floating\"===d?\"reference\":\"floating\":d],w=s(await r.getClippingRect({element:null==(n=await(null==r.isElement?void 0:r.isElement(x)))||n?x:x.contextElement||await(null==r.getDocumentElement?void 0:r.getDocumentElement(f.floating)),boundary:u,rootBoundary:g,strategy:m})),v=\"floating\"===d?{...c.floating,x:o,y:i}:c.reference,b=await(null==r.getOffsetParent?void 0:r.getOffsetParent(f.floating)),A=await(null==r.isElement?void 0:r.isElement(b))&&await(null==r.getScale?void 0:r.getScale(b))||{x:1,y:1},R=s(r.convertOffsetParentRelativeRectToViewportRelativeRect?await r.convertOffsetParentRelativeRectToViewportRelativeRect({rect:v,offsetParent:b,strategy:m}):v);return{top:(w.top-R.top+y.top)/A.y,bottom:(R.bottom-w.bottom+y.bottom)/A.y,left:(w.left-R.left+y.left)/A.x,right:(R.right-w.right+y.right)/A.x}}const f=Math.min,m=Math.max;function u(t,e,n){return m(t,f(e,n))}const g=n=>({name:\"arrow\",options:n,async fn(i){const{x:r,y:s,placement:c,rects:m,platform:g,elements:d}=i,{element:p,padding:h=0}=a(n,i)||{};if(null==p)return{};const y=l(h),x={x:r,y:s},w=o(c),v=e(w),b=await g.getDimensions(p),A=\"y\"===w,R=A?\"top\":\"left\",P=A?\"bottom\":\"right\",E=A?\"clientHeight\":\"clientWidth\",T=m.reference[v]+m.reference[w]-x[w]-m.floating[v],D=x[w]-m.reference[w],L=await(null==g.getOffsetParent?void 0:g.getOffsetParent(p));let k=L?L[E]:0;k&&await(null==g.isElement?void 0:g.isElement(L))||(k=d.floating[E]||m.floating[v]);const O=T/2-D/2,B=k/2-b[v]/2-1,C=f(y[R],B),H=f(y[P],B),S=C,F=k-b[v]-H,M=k/2-b[v]/2+O,V=u(S,M,F),W=null!=t(c)&&M!=V&&m.reference[v]/2-(M<S?C:H)-b[v]/2<0?M<S?S-M:F-M:0;return{[w]:x[w]-W,data:{[w]:V,centerOffset:M-V+W}}}}),d=[\"top\",\"right\",\"bottom\",\"left\"],p=d.reduce(((t,e)=>t.concat(e,e+\"-start\",e+\"-end\")),[]),h={left:\"right\",right:\"left\",bottom:\"top\",top:\"bottom\"};function y(t){return t.replace(/left|right|bottom|top/g,(t=>h[t]))}function x(n,i,r){void 0===r&&(r=!1);const a=t(n),l=o(n),s=e(l);let c=\"x\"===l?a===(r?\"end\":\"start\")?\"right\":\"left\":\"start\"===a?\"bottom\":\"top\";return i.reference[s]>i.floating[s]&&(c=y(c)),{main:c,cross:y(c)}}const w={start:\"end\",end:\"start\"};function v(t){return t.replace(/start|end/g,(t=>w[t]))}const b=function(e){return void 0===e&&(e={}),{name:\"autoPlacement\",options:e,async fn(o){var i,r,l;const{rects:s,middlewareData:f,placement:m,platform:u,elements:g}=o,{crossAxis:d=!1,alignment:h,allowedPlacements:y=p,autoAlignment:w=!0,...b}=a(e,o),A=void 0!==h||y===p?function(e,o,i){return(e?[...i.filter((n=>t(n)===e)),...i.filter((n=>t(n)!==e))]:i.filter((t=>n(t)===t))).filter((n=>!e||t(n)===e||!!o&&v(n)!==n))}(h||null,w,y):y,R=await c(o,b),P=(null==(i=f.autoPlacement)?void 0:i.index)||0,E=A[P];if(null==E)return{};const{main:T,cross:D}=x(E,s,await(null==u.isRTL?void 0:u.isRTL(g.floating)));if(m!==E)return{reset:{placement:A[0]}};const L=[R[n(E)],R[T],R[D]],k=[...(null==(r=f.autoPlacement)?void 0:r.overflows)||[],{placement:E,overflows:L}],O=A[P+1];if(O)return{data:{index:P+1,overflows:k},reset:{placement:O}};const B=k.map((e=>{const n=t(e.placement);return[e.placement,n&&d?e.overflows.slice(0,2).reduce(((t,e)=>t+e),0):e.overflows[0],e.overflows]})).sort(((t,e)=>t[1]-e[1])),C=(null==(l=B.filter((e=>e[2].slice(0,t(e[0])?2:3).every((t=>t<=0))))[0])?void 0:l[0])||B[0][0];return C!==m?{data:{index:P+1,overflows:k},reset:{placement:C}}:{}}}};const A=function(e){return void 0===e&&(e={}),{name:\"flip\",options:e,async fn(o){var i;const{placement:r,middlewareData:l,rects:s,initialPlacement:f,platform:m,elements:u}=o,{mainAxis:g=!0,crossAxis:d=!0,fallbackPlacements:p,fallbackStrategy:h=\"bestFit\",fallbackAxisSideDirection:w=\"none\",flipAlignment:b=!0,...A}=a(e,o),R=n(r),P=n(f)===f,E=await(null==m.isRTL?void 0:m.isRTL(u.floating)),T=p||(P||!b?[y(f)]:function(t){const e=y(t);return[v(t),e,v(e)]}(f));p||\"none\"===w||T.push(...function(e,o,i,r){const a=t(e);let l=function(t,e,n){const o=[\"left\",\"right\"],i=[\"right\",\"left\"],r=[\"top\",\"bottom\"],a=[\"bottom\",\"top\"];switch(t){case\"top\":case\"bottom\":return n?e?i:o:e?o:i;case\"left\":case\"right\":return e?r:a;default:return[]}}(n(e),\"start\"===i,r);return a&&(l=l.map((t=>t+\"-\"+a)),o&&(l=l.concat(l.map(v)))),l}(f,b,w,E));const D=[f,...T],L=await c(o,A),k=[];let O=(null==(i=l.flip)?void 0:i.overflows)||[];if(g&&k.push(L[R]),d){const{main:t,cross:e}=x(r,s,E);k.push(L[t],L[e])}if(O=[...O,{placement:r,overflows:k}],!k.every((t=>t<=0))){var B,C;const t=((null==(B=l.flip)?void 0:B.index)||0)+1,e=D[t];if(e)return{data:{index:t,overflows:O},reset:{placement:e}};let n=null==(C=O.filter((t=>t.overflows[0]<=0)).sort(((t,e)=>t.overflows[1]-e.overflows[1]))[0])?void 0:C.placement;if(!n)switch(h){case\"bestFit\":{var H;const t=null==(H=O.map((t=>[t.placement,t.overflows.filter((t=>t>0)).reduce(((t,e)=>t+e),0)])).sort(((t,e)=>t[1]-e[1]))[0])?void 0:H[0];t&&(n=t);break}case\"initialPlacement\":n=f}if(r!==n)return{reset:{placement:n}}}return{}}}};function R(t,e){return{top:t.top-e.height,right:t.right-e.width,bottom:t.bottom-e.height,left:t.left-e.width}}function P(t){return d.some((e=>t[e]>=0))}const E=function(t){return void 0===t&&(t={}),{name:\"hide\",options:t,async fn(e){const{rects:n}=e,{strategy:o=\"referenceHidden\",...i}=a(t,e);switch(o){case\"referenceHidden\":{const t=R(await c(e,{...i,elementContext:\"reference\"}),n.reference);return{data:{referenceHiddenOffsets:t,referenceHidden:P(t)}}}case\"escaped\":{const t=R(await c(e,{...i,altBoundary:!0}),n.floating);return{data:{escapedOffsets:t,escaped:P(t)}}}default:return{}}}}};function T(t){const e=f(...t.map((t=>t.left))),n=f(...t.map((t=>t.top)));return{x:e,y:n,width:m(...t.map((t=>t.right)))-e,height:m(...t.map((t=>t.bottom)))-n}}const D=function(t){return void 0===t&&(t={}),{name:\"inline\",options:t,async fn(e){const{placement:i,elements:r,rects:c,platform:u,strategy:g}=e,{padding:d=2,x:p,y:h}=a(t,e),y=Array.from(await(null==u.getClientRects?void 0:u.getClientRects(r.reference))||[]),x=function(t){const e=t.slice().sort(((t,e)=>t.y-e.y)),n=[];let o=null;for(let t=0;t<e.length;t++){const i=e[t];!o||i.y-o.y>o.height/2?n.push([i]):n[n.length-1].push(i),o=i}return n.map((t=>s(T(t))))}(y),w=s(T(y)),v=l(d);const b=await u.getElementRects({reference:{getBoundingClientRect:function(){if(2===x.length&&x[0].left>x[1].right&&null!=p&&null!=h)return x.find((t=>p>t.left-v.left&&p<t.right+v.right&&h>t.top-v.top&&h<t.bottom+v.bottom))||w;if(x.length>=2){if(\"x\"===o(i)){const t=x[0],e=x[x.length-1],o=\"top\"===n(i),r=t.top,a=e.bottom,l=o?t.left:e.left,s=o?t.right:e.right;return{top:r,bottom:a,left:l,right:s,width:s-l,height:a-r,x:l,y:r}}const t=\"left\"===n(i),e=m(...x.map((t=>t.right))),r=f(...x.map((t=>t.left))),a=x.filter((n=>t?n.left===r:n.right===e)),l=a[0].top,s=a[a.length-1].bottom;return{top:l,bottom:s,left:r,right:e,width:e-r,height:s-l,x:r,y:l}}return w}},floating:r.floating,strategy:g});return c.reference.x!==b.reference.x||c.reference.y!==b.reference.y||c.reference.width!==b.reference.width||c.reference.height!==b.reference.height?{reset:{rects:b}}:{}}}};const L=function(e){return void 0===e&&(e=0),{name:\"offset\",options:e,async fn(i){const{x:r,y:l}=i,s=await async function(e,i){const{placement:r,platform:l,elements:s}=e,c=await(null==l.isRTL?void 0:l.isRTL(s.floating)),f=n(r),m=t(r),u=\"x\"===o(r),g=[\"left\",\"top\"].includes(f)?-1:1,d=c&&u?-1:1,p=a(i,e);let{mainAxis:h,crossAxis:y,alignmentAxis:x}=\"number\"==typeof p?{mainAxis:p,crossAxis:0,alignmentAxis:null}:{mainAxis:0,crossAxis:0,alignmentAxis:null,...p};return m&&\"number\"==typeof x&&(y=\"end\"===m?-1*x:x),u?{x:y*d,y:h*g}:{x:h*g,y:y*d}}(i,e);return{x:r+s.x,y:l+s.y,data:s}}}};function k(t){return\"x\"===t?\"y\":\"x\"}const O=function(t){return void 0===t&&(t={}),{name:\"shift\",options:t,async fn(e){const{x:i,y:r,placement:l}=e,{mainAxis:s=!0,crossAxis:f=!1,limiter:m={fn:t=>{let{x:e,y:n}=t;return{x:e,y:n}}},...g}=a(t,e),d={x:i,y:r},p=await c(e,g),h=o(n(l)),y=k(h);let x=d[h],w=d[y];if(s){const t=\"y\"===h?\"bottom\":\"right\";x=u(x+p[\"y\"===h?\"top\":\"left\"],x,x-p[t])}if(f){const t=\"y\"===y?\"bottom\":\"right\";w=u(w+p[\"y\"===y?\"top\":\"left\"],w,w-p[t])}const v=m.fn({...e,[h]:x,[y]:w});return{...v,data:{x:v.x-i,y:v.y-r}}}}},B=function(t){return void 0===t&&(t={}),{options:t,fn(e){const{x:i,y:r,placement:l,rects:s,middlewareData:c}=e,{offset:f=0,mainAxis:m=!0,crossAxis:u=!0}=a(t,e),g={x:i,y:r},d=o(l),p=k(d);let h=g[d],y=g[p];const x=a(f,e),w=\"number\"==typeof x?{mainAxis:x,crossAxis:0}:{mainAxis:0,crossAxis:0,...x};if(m){const t=\"y\"===d?\"height\":\"width\",e=s.reference[d]-s.floating[t]+w.mainAxis,n=s.reference[d]+s.reference[t]-w.mainAxis;h<e?h=e:h>n&&(h=n)}if(u){var v,b;const t=\"y\"===d?\"width\":\"height\",e=[\"top\",\"left\"].includes(n(l)),o=s.reference[p]-s.floating[t]+(e&&(null==(v=c.offset)?void 0:v[p])||0)+(e?0:w.crossAxis),i=s.reference[p]+s.reference[t]+(e?0:(null==(b=c.offset)?void 0:b[p])||0)-(e?w.crossAxis:0);y<o?y=o:y>i&&(y=i)}return{[d]:h,[p]:y}}}},C=function(e){return void 0===e&&(e={}),{name:\"size\",options:e,async fn(i){const{placement:r,rects:l,platform:s,elements:u}=i,{apply:g=(()=>{}),...d}=a(e,i),p=await c(i,d),h=n(r),y=t(r),x=\"x\"===o(r),{width:w,height:v}=l.floating;let b,A;\"top\"===h||\"bottom\"===h?(b=h,A=y===(await(null==s.isRTL?void 0:s.isRTL(u.floating))?\"start\":\"end\")?\"left\":\"right\"):(A=h,b=\"end\"===y?\"top\":\"bottom\");const R=v-p[b],P=w-p[A],E=!i.middlewareData.shift;let T=R,D=P;if(x){const t=w-p.left-p.right;D=y||E?f(P,t):t}else{const t=v-p.top-p.bottom;T=y||E?f(R,t):t}if(E&&!y){const t=m(p.left,0),e=m(p.right,0),n=m(p.top,0),o=m(p.bottom,0);x?D=w-2*(0!==t||0!==e?t+e:m(p.left,p.right)):T=v-2*(0!==n||0!==o?n+o:m(p.top,p.bottom))}await g({...i,availableWidth:D,availableHeight:T});const L=await s.getDimensions(u.floating);return w!==L.width||v!==L.height?{reset:{rects:!0}}:{}}}};export{g as arrow,b as autoPlacement,r as computePosition,c as detectOverflow,A as flip,E as hide,D as inline,B as limitShift,L as offset,s as rectToClientRect,O as shift,C as size};\n","import{rectToClientRect as t,computePosition as e}from\"@floating-ui/core\";export{arrow,autoPlacement,detectOverflow,flip,hide,inline,limitShift,offset,shift,size}from\"@floating-ui/core\";function n(t){var e;return(null==t||null==(e=t.ownerDocument)?void 0:e.defaultView)||window}function o(t){return n(t).getComputedStyle(t)}function i(t){return t instanceof n(t).Node}function r(t){return i(t)?(t.nodeName||\"\").toLowerCase():\"#document\"}function c(t){return t instanceof n(t).HTMLElement}function l(t){return\"undefined\"!=typeof ShadowRoot&&(t instanceof n(t).ShadowRoot||t instanceof ShadowRoot)}function s(t){const{overflow:e,overflowX:n,overflowY:i,display:r}=o(t);return/auto|scroll|overlay|hidden|clip/.test(e+i+n)&&![\"inline\",\"contents\"].includes(r)}function f(t){return[\"table\",\"td\",\"th\"].includes(r(t))}function u(t){const e=a(),n=o(t);return\"none\"!==n.transform||\"none\"!==n.perspective||!!n.containerType&&\"normal\"!==n.containerType||!e&&!!n.backdropFilter&&\"none\"!==n.backdropFilter||!e&&!!n.filter&&\"none\"!==n.filter||[\"transform\",\"perspective\",\"filter\"].some((t=>(n.willChange||\"\").includes(t)))||[\"paint\",\"layout\",\"strict\",\"content\"].some((t=>(n.contain||\"\").includes(t)))}function a(){return!(\"undefined\"==typeof CSS||!CSS.supports)&&CSS.supports(\"-webkit-backdrop-filter\",\"none\")}function d(t){return[\"html\",\"body\",\"#document\"].includes(r(t))}const h=Math.min,p=Math.max,m=Math.round,g=Math.floor,y=t=>({x:t,y:t});function w(t){const e=o(t);let n=parseFloat(e.width)||0,i=parseFloat(e.height)||0;const r=c(t),l=r?t.offsetWidth:n,s=r?t.offsetHeight:i,f=m(n)!==l||m(i)!==s;return f&&(n=l,i=s),{width:n,height:i,$:f}}function x(t){return t instanceof n(t).Element}function v(t){return x(t)?t:t.contextElement}function b(t){const e=v(t);if(!c(e))return y(1);const n=e.getBoundingClientRect(),{width:o,height:i,$:r}=w(e);let l=(r?m(n.width):n.width)/o,s=(r?m(n.height):n.height)/i;return l&&Number.isFinite(l)||(l=1),s&&Number.isFinite(s)||(s=1),{x:l,y:s}}const L=y(0);function T(t){const e=n(t);return a()&&e.visualViewport?{x:e.visualViewport.offsetLeft,y:e.visualViewport.offsetTop}:L}function R(e,o,i,r){void 0===o&&(o=!1),void 0===i&&(i=!1);const c=e.getBoundingClientRect(),l=v(e);let s=y(1);o&&(r?x(r)&&(s=b(r)):s=b(e));const f=function(t,e,o){return void 0===e&&(e=!1),!(!o||e&&o!==n(t))&&e}(l,i,r)?T(l):y(0);let u=(c.left+f.x)/s.x,a=(c.top+f.y)/s.y,d=c.width/s.x,h=c.height/s.y;if(l){const t=n(l),e=r&&x(r)?n(r):r;let o=t.frameElement;for(;o&&r&&e!==t;){const t=b(o),e=o.getBoundingClientRect(),i=getComputedStyle(o),r=e.left+(o.clientLeft+parseFloat(i.paddingLeft))*t.x,c=e.top+(o.clientTop+parseFloat(i.paddingTop))*t.y;u*=t.x,a*=t.y,d*=t.x,h*=t.y,u+=r,a+=c,o=n(o).frameElement}}return t({width:d,height:h,x:u,y:a})}function S(t){return x(t)?{scrollLeft:t.scrollLeft,scrollTop:t.scrollTop}:{scrollLeft:t.pageXOffset,scrollTop:t.pageYOffset}}function C(t){return((i(t)?t.ownerDocument:t.document)||window.document).documentElement}function E(t){return R(C(t)).left+S(t).scrollLeft}function F(t){if(\"html\"===r(t))return t;const e=t.assignedSlot||t.parentNode||l(t)&&t.host||C(t);return l(e)?e.host:e}function O(t){const e=F(t);return d(e)?t.ownerDocument?t.ownerDocument.body:t.body:c(e)&&s(e)?e:O(e)}function D(t,e){var o;void 0===e&&(e=[]);const i=O(t),r=i===(null==(o=t.ownerDocument)?void 0:o.body),c=n(i);return r?e.concat(c,c.visualViewport||[],s(i)?i:[]):e.concat(i,D(i))}function W(e,i,r){let l;if(\"viewport\"===i)l=function(t,e){const o=n(t),i=C(t),r=o.visualViewport;let c=i.clientWidth,l=i.clientHeight,s=0,f=0;if(r){c=r.width,l=r.height;const t=a();(!t||t&&\"fixed\"===e)&&(s=r.offsetLeft,f=r.offsetTop)}return{width:c,height:l,x:s,y:f}}(e,r);else if(\"document\"===i)l=function(t){const e=C(t),n=S(t),i=t.ownerDocument.body,r=p(e.scrollWidth,e.clientWidth,i.scrollWidth,i.clientWidth),c=p(e.scrollHeight,e.clientHeight,i.scrollHeight,i.clientHeight);let l=-n.scrollLeft+E(t);const s=-n.scrollTop;return\"rtl\"===o(i).direction&&(l+=p(e.clientWidth,i.clientWidth)-r),{width:r,height:c,x:l,y:s}}(C(e));else if(x(i))l=function(t,e){const n=R(t,!0,\"fixed\"===e),o=n.top+t.clientTop,i=n.left+t.clientLeft,r=c(t)?b(t):y(1);return{width:t.clientWidth*r.x,height:t.clientHeight*r.y,x:i*r.x,y:o*r.y}}(i,r);else{const t=T(e);l={...i,x:i.x-t.x,y:i.y-t.y}}return t(l)}function H(t,e){const n=F(t);return!(n===e||!x(n)||d(n))&&(\"fixed\"===o(n).position||H(n,e))}function z(t,e,n){const o=c(e),i=C(e),l=\"fixed\"===n,f=R(t,!0,l,e);let u={scrollLeft:0,scrollTop:0};const a=y(0);if(o||!o&&!l)if((\"body\"!==r(e)||s(i))&&(u=S(e)),c(e)){const t=R(e,!0,l,e);a.x=t.x+e.clientLeft,a.y=t.y+e.clientTop}else i&&(a.x=E(i));return{x:f.left+u.scrollLeft-a.x,y:f.top+u.scrollTop-a.y,width:f.width,height:f.height}}function M(t,e){return c(t)&&\"fixed\"!==o(t).position?e?e(t):t.offsetParent:null}function P(t,e){const i=n(t);if(!c(t))return i;let l=M(t,e);for(;l&&f(l)&&\"static\"===o(l).position;)l=M(l,e);return l&&(\"html\"===r(l)||\"body\"===r(l)&&\"static\"===o(l).position&&!u(l))?i:l||function(t){let e=F(t);for(;c(e)&&!d(e);){if(u(e))return e;e=F(e)}return null}(t)||i}const V={convertOffsetParentRelativeRectToViewportRelativeRect:function(t){let{rect:e,offsetParent:n,strategy:o}=t;const i=c(n),l=C(n);if(n===l)return e;let f={scrollLeft:0,scrollTop:0},u=y(1);const a=y(0);if((i||!i&&\"fixed\"!==o)&&((\"body\"!==r(n)||s(l))&&(f=S(n)),c(n))){const t=R(n);u=b(n),a.x=t.x+n.clientLeft,a.y=t.y+n.clientTop}return{width:e.width*u.x,height:e.height*u.y,x:e.x*u.x-f.scrollLeft*u.x+a.x,y:e.y*u.y-f.scrollTop*u.y+a.y}},getDocumentElement:C,getClippingRect:function(t){let{element:e,boundary:n,rootBoundary:i,strategy:c}=t;const l=[...\"clippingAncestors\"===n?function(t,e){const n=e.get(t);if(n)return n;let i=D(t).filter((t=>x(t)&&\"body\"!==r(t))),c=null;const l=\"fixed\"===o(t).position;let f=l?F(t):t;for(;x(f)&&!d(f);){const e=o(f),n=u(f);n||\"fixed\"!==e.position||(c=null),(l?!n&&!c:!n&&\"static\"===e.position&&c&&[\"absolute\",\"fixed\"].includes(c.position)||s(f)&&!n&&H(t,f))?i=i.filter((t=>t!==f)):c=e,f=F(f)}return e.set(t,i),i}(e,this._c):[].concat(n),i],f=l[0],a=l.reduce(((t,n)=>{const o=W(e,n,c);return t.top=p(o.top,t.top),t.right=h(o.right,t.right),t.bottom=h(o.bottom,t.bottom),t.left=p(o.left,t.left),t}),W(e,f,c));return{width:a.right-a.left,height:a.bottom-a.top,x:a.left,y:a.top}},getOffsetParent:P,getElementRects:async function(t){let{reference:e,floating:n,strategy:o}=t;const i=this.getOffsetParent||P,r=this.getDimensions;return{reference:z(e,await i(n),o),floating:{x:0,y:0,...await r(n)}}},getClientRects:function(t){return Array.from(t.getClientRects())},getDimensions:function(t){return w(t)},getScale:b,isElement:x,isRTL:function(t){return\"rtl\"===getComputedStyle(t).direction}};function A(t,e,n,o){void 0===o&&(o={});const{ancestorScroll:i=!0,ancestorResize:r=!0,elementResize:c=\"function\"==typeof ResizeObserver,layoutShift:l=\"function\"==typeof IntersectionObserver,animationFrame:s=!1}=o,f=v(t),u=i||r?[...f?D(f):[],...D(e)]:[];u.forEach((t=>{i&&t.addEventListener(\"scroll\",n,{passive:!0}),r&&t.addEventListener(\"resize\",n)}));const a=f&&l?function(t,e){let n,o=null;const i=C(t);function r(){clearTimeout(n),o&&o.disconnect(),o=null}return function c(l,s){void 0===l&&(l=!1),void 0===s&&(s=1),r();const{left:f,top:u,width:a,height:d}=t.getBoundingClientRect();if(l||e(),!a||!d)return;const m={rootMargin:-g(u)+\"px \"+-g(i.clientWidth-(f+a))+\"px \"+-g(i.clientHeight-(u+d))+\"px \"+-g(f)+\"px\",threshold:p(0,h(1,s))||1};let y=!0;function w(t){const e=t[0].intersectionRatio;if(e!==s){if(!y)return c();e?c(!1,e):n=setTimeout((()=>{c(!1,1e-7)}),100)}y=!1}try{o=new IntersectionObserver(w,{...m,root:i.ownerDocument})}catch(t){o=new IntersectionObserver(w,m)}o.observe(t)}(!0),r}(f,n):null;let d,m=-1,y=null;c&&(y=new ResizeObserver((t=>{let[o]=t;o&&o.target===f&&y&&(y.unobserve(e),cancelAnimationFrame(m),m=requestAnimationFrame((()=>{y&&y.observe(e)}))),n()})),f&&!s&&y.observe(f),y.observe(e));let w=s?R(t):null;return s&&function e(){const o=R(t);!w||o.x===w.x&&o.y===w.y&&o.width===w.width&&o.height===w.height||n();w=o,d=requestAnimationFrame(e)}(),n(),()=>{u.forEach((t=>{i&&t.removeEventListener(\"scroll\",n),r&&t.removeEventListener(\"resize\",n)})),a&&a(),y&&y.disconnect(),y=null,s&&cancelAnimationFrame(d)}}const B=(t,n,o)=>{const i=new Map,r={platform:V,...o},c={...r.platform,_c:i};return e(t,n,{...r,platform:c})};export{A as autoUpdate,B as computePosition,D as getOverflowAncestors,V as platform};\n","import { ReplaySubject } from \"rxjs\";\nimport { takeUntil } from \"rxjs/operators\";\n/*\nfunction getInternalAngularComponent<T>(type: any): any {\n    noinspection JSNonASCIINames\n    // return type.ɵdir || type.ɵcmp;\n}\n\nexport function ObserveOnDestroy() {\n    return (target: any) => {\n        const componentDefinition = getInternalAngularComponent(target);\n        if (componentDefinition) {\n            const old = componentDefinition.onDestroy;\n            componentDefinition.onDestroy = function (this: any) {\n                const onDestroySubject = componentDestroyed(this) as Subject<void>;\n                onDestroySubject.next();\n\n                if (old !== undefined && old !== null) {\n                    old();\n                }\n            };\n        } else {\n            throw new Error(\"Ivy and AoT must be enabled for @ObserveOnDestroy().\");\n        }\n\n        function decorated(this: any) {\n            const instance = Reflect.construct(target, arguments);\n            instance[ON_DESTROY_SUBJECT_KEY] = new ReplaySubject(1);\n            return instance;\n        }\n\n        Object.setPrototypeOf(decorated, target);\n        return decorated as any;\n    };\n}\n*/\nvar ON_DESTROY_SUBJECT_KEY = Symbol(\"ON_DESTROY_SUBJECT_KEY\");\nvar OnDestroyMixin = /** @class */ (function () {\n    function OnDestroyMixin() {\n        this[ON_DESTROY_SUBJECT_KEY] = new ReplaySubject();\n    }\n    OnDestroyMixin.prototype.observeOnDestroy = function () {\n        return this[ON_DESTROY_SUBJECT_KEY];\n    };\n    OnDestroyMixin.prototype.ngOnDestroy = function () {\n        this.observeOnDestroy().next();\n    };\n    return OnDestroyMixin;\n}());\nexport { OnDestroyMixin };\nexport function componentDestroyed(target) {\n    var onDestroySubject = target[ON_DESTROY_SUBJECT_KEY];\n    if (onDestroySubject === undefined) {\n        var proto = Object.getPrototypeOf(target);\n        var compInfo = proto !== undefined && proto.constructor !== undefined !== proto.constructor.name !== undefined\n            ? \" (component: \" + proto.constructor.name + \")\"\n            : \"\";\n        throw new Error(\"You are almost there! Please extends the base class 'OnDestroyMixin'\" + compInfo + \".\");\n    }\n    return onDestroySubject;\n}\nexport function untilComponentDestroyed(component) {\n    return function (source) { return source.pipe(takeUntil(componentDestroyed(component))); };\n}\n"],"names":["hasV8BreakIterator","Intl","v8BreakIterator","Platform","constructor","_platformId","this","isBrowser","isPlatformBrowser","document","EDGE","test","navigator","userAgent","TRIDENT","BLINK","window","chrome","CSS","WEBKIT","IOS","FIREFOX","ANDROID","SAFARI","ɵfac","Platform_Factory","t","i0","PLATFORM_ID","ɵprov","token","factory","providedIn","ngDevMode","type","Injectable","args","Object","decorators","Inject","PlatformModule","PlatformModule_Factory","ɵmod","ɵinj","NgModule","supportsPassiveEvents","shadowDomIsSupported","normalizePassiveListenerOptions","options","supportsPassiveEventListeners","addEventListener","defineProperty","get","capture","_getShadowRoot","element","_supportsShadowDom","head","createShadowRoot","attachShadow","rootNode","getRootNode","ShadowRoot","_getEventTarget","event","composedPath","target","skip","count","filter","_","index","coerceBooleanProperty","value","coerceNumberProperty","fallbackValue","_isNumberValue","isNaN","parseFloat","Number","coerceArray","Array","isArray","coerceElement","elementOrRef","ElementRef","nativeElement","debounceTime","dueTime","scheduler","asyncScheduler","operate","source","subscriber","activeTask","lastValue","lastTime","emit","unsubscribe","next","emitWhenIdle","targetTime","now","schedule","undefined","add","subscribe","createOperatorSubscriber","complete","MutationObserverFactory","create","callback","MutationObserver","MutationObserverFactory_Factory","ContentObserver","_mutationObserverFactory","_observedElements","Map","ngOnDestroy","forEach","_cleanupObserver","observe","Observable","observer","subscription","_observeElement","_unobserveElement","has","stream","Subject","mutations","characterData","childList","subtree","set","disconnect","delete","ContentObserver_Factory","CdkObserveContent","disabled","_disabled","_unsubscribe","_subscribe","debounce","_debounce","_contentObserver","_elementRef","_ngZone","EventEmitter","_currentSubscription","ngAfterContentInit","runOutsideAngular","pipe","CdkObserveContent_Factory","ɵdir","selectors","inputs","outputs","exportAs","Directive","selector","Output","Input","ObserversModule","ObserversModule_Factory","declarations","exports","providers","LayoutModule","LayoutModule_Factory","mediaQueriesForWebkitCompatibility","Set","mediaQueryStyleNode","MediaMatcher","_platform","_nonce","_matchMedia","matchMedia","bind","noopMatchMedia","query","createEmptyStyleRule","nonce","createElement","setAttribute","appendChild","sheet","insertRule","e","console","error","MediaMatcher_Factory","i1","CSP_NONCE","matches","media","addListener","removeListener","Optional","BreakpointObserver","_mediaMatcher","_zone","_queries","_destroySubject","isMatched","splitQueries","some","mediaQuery","_registerQuery","mql","observables","map","observable","stateObservable","combineLatest","concat","take","breakpointStates","response","breakpoints","output","handler","run","startWith","takeUntil","BreakpointObserver_Factory","queries","split","reduce","a1","a2","trim","getAriaReferenceIds","el","attr","getAttribute","match","nextId","AriaDescriber","_document","_messageRegistry","_messagesContainer","_id","inject","APP_ID","describe","hostElement","message","role","_canBeDescribed","key","getKey","setMessageId","messageElement","referenceCount","_createMessageElement","_isElementDescribedByMessage","_addMessageReference","removeDescription","_isElementNode","_removeMessageReference","registeredMessage","_deleteMessageElement","childNodes","length","remove","describedElements","querySelectorAll","i","_removeCdkDescribedByReferenceIds","removeAttribute","clear","textContent","_createMessagesContainer","serverContainers","messagesContainer","style","visibility","classList","body","originalReferenceIds","id","indexOf","join","addAriaReferencedId","ids","existingId","push","removeAriaReferencedId","filteredIds","val","referenceIds","messageId","trimmedMessage","ariaLabel","nodeType","ELEMENT_NODE","AriaDescriber_Factory","DOCUMENT","serviceId","InteractivityChecker","isDisabled","hasAttribute","isVisible","hasGeometry","offsetWidth","offsetHeight","getClientRects","getComputedStyle","isTabbable","frameElement","getFrameElement","getWindow","node","ownerDocument","defaultView","getTabIndexValue","nodeName","toLowerCase","tabIndexValue","isPotentiallyTabbableIOS","inputType","tabIndex","isFocusable","config","isPotentiallyFocusable","isHiddenInput","isInputElement","isNativeFormElement","isAnchorWithHref","isAnchorElement","hasValidTabIndex","ignoreVisibility","InteractivityChecker_Factory","parseInt","FocusTrap","enabled","_enabled","_startAnchor","_endAnchor","_toggleAnchorTabIndex","_element","_checker","deferAnchors","_hasAttached","startAnchorListener","focusLastTabbableElement","endAnchorListener","focusFirstTabbableElement","attachAnchors","destroy","startAnchor","endAnchor","removeEventListener","_createAnchor","parentNode","insertBefore","nextSibling","focusInitialElementWhenReady","Promise","resolve","_executeOnStable","focusInitialElement","focusFirstTabbableElementWhenReady","focusLastTabbableElementWhenReady","_getRegionBoundary","bound","markers","warn","_getFirstTabbableElement","_getLastTabbableElement","redirectToElement","querySelector","focusableChild","focus","hasAttached","root","children","tabbableChild","anchor","isEnabled","toggleAnchors","fn","isStable","onStable","FocusTrapFactory","deferCaptureElements","FocusTrapFactory_Factory","CdkTrapFocus","focusTrap","autoCapture","_autoCapture","_focusTrapFactory","_previouslyFocusedElement","_captureFocus","ngDoCheck","ngOnChanges","changes","autoCaptureChange","firstChange","_getFocusedElementPierceShadowDom","activeElement","shadowRoot","newActiveElement","CdkTrapFocus_Factory","features","ConfigurableFocusTrap","_focusTrapManager","register","deregister","_inertStrategy","super","defer","_enable","preventFocus","_disable","allowFocus","FOCUS_TRAP_INERT_STRATEGY","InjectionToken","EventListenerFocusTrapInertStrategy","_listener","_trapFocus","focusTrapRoot","contains","closest","setTimeout","FocusTrapManager","_focusTrapStack","ft","stack","splice","FocusTrapManager_Factory","ConfigurableFocusTrapFactory","configObject","ConfigurableFocusTrapFactory_Factory","INPUT_MODALITY_DETECTOR_OPTIONS","INPUT_MODALITY_DETECTOR_DEFAULT_OPTIONS","ignoreKeys","modalityEventListenerOptions","passive","InputModalityDetector","mostRecentModality","_modality","ngZone","_mostRecentTarget","BehaviorSubject","_lastTouchMs","_onKeydown","_options","keyCode","_onMousedown","Date","isFakeMousedownFromScreenReader","buttons","offsetX","offsetY","_onTouchstart","isFakeTouchstartFromScreenReader","touch","touches","changedTouches","identifier","radiusX","radiusY","modalityDetected","modalityChanged","distinctUntilChanged","InputModalityDetector_Factory","Document","LIVE_ANNOUNCER_ELEMENT_TOKEN","LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY","LIVE_ANNOUNCER_DEFAULT_OPTIONS","uniqueIds","LiveAnnouncer","elementToken","_defaultOptions","_liveElement","_createLiveElement","announce","defaultOptions","politeness","duration","clearTimeout","_previousTimeout","_exposeAnnouncerToModals","_currentPromise","_currentResolve","previousElements","getElementsByClassName","liveEl","modals","modal","ariaOwns","LiveAnnouncer_Factory","CdkAriaLive","_politeness","_subscription","elementText","_previousAnnouncedText","_liveAnnouncer","CdkAriaLive_Factory","i1$1","FOCUS_MONITOR_DEFAULT_OPTIONS","captureEventListenerOptions","FocusMonitor","_inputModalityDetector","_origin","_windowFocused","_originFromTouchInteraction","_elementInfo","_monitoredElementCount","_rootNodeFocusListenerCount","_windowFocusListener","_windowFocusTimeoutId","_stopInputModalityDetector","_rootNodeFocusAndBlurListener","parentElement","_onFocus","_onBlur","_detectionMode","detectionMode","monitor","checkChildren","of","_getDocument","cachedInfo","subject","info","_registerGlobalListeners","stopMonitoring","elementInfo","_setClasses","_removeGlobalListeners","focusVia","origin","_getClosestElementsInfo","currentElement","_originChanged","_setOrigin","_info","_getWindow","_getFocusOrigin","focusEventTarget","_shouldBeAttributedToTouch","_lastFocusOrigin","_isLastInteractionFromInputLabel","toggle","isFromInteraction","_originTimeoutId","ms","relatedTarget","Node","_emitOrigin","observers","rootNodeFocusListeners","modality","results","mostRecentTarget","labels","FocusMonitor_Factory","CdkMonitorFocus","_focusMonitor","_focusOrigin","cdkFocusChange","focusOrigin","ngAfterViewInit","_monitorSubscription","CdkMonitorFocus_Factory","HighContrastModeDetector","_breakpointSubscription","_hasCheckedHighContrastMode","_applyBodyHighContrastModeCssClasses","getHighContrastMode","testElement","backgroundColor","position","documentWindow","computedStyle","computedColor","replace","bodyClasses","mode","HighContrastModeDetector_Factory","A11yModule","highContrastModeDetector","A11yModule_Factory","imports","n","o","includes","r","a","reference","l","floating","s","c","x","width","f","y","height","m","u","g","d","p","_ref","_asyncToGenerator","placement","strategy","middleware","platform","Boolean","isRTL","getElementRects","name","h","data","w","reset","v","initialPlacement","middlewareData","rects","elements","_x","_x2","_x3","apply","arguments","top","right","bottom","left","_x4","_x5","_c","boundary","rootBoundary","elementContext","altBoundary","padding","getClippingRect","isElement","contextElement","getDocumentElement","b","getOffsetParent","A","getScale","R","convertOffsetParentRelativeRectToViewportRelativeRect","rect","offsetParent","Math","min","max","main","cross","start","end","mainAxis","crossAxis","fallbackPlacements","fallbackStrategy","fallbackAxisSideDirection","flipAlignment","P","E","T","D","L","k","O","flip","overflows","every","B","C","sort","H","limiter","offset","HTMLElement","overflow","overflowX","overflowY","display","transform","perspective","containerType","backdropFilter","willChange","contain","supports","round","floor","$","Element","getBoundingClientRect","isFinite","visualViewport","offsetLeft","offsetTop","clientLeft","paddingLeft","clientTop","paddingTop","S","scrollLeft","scrollTop","pageXOffset","pageYOffset","documentElement","F","assignedSlot","host","W","clientWidth","clientHeight","scrollWidth","scrollHeight","direction","z","M","V","getDimensions","from","ancestorScroll","ancestorResize","elementResize","ResizeObserver","layoutShift","IntersectionObserver","animationFrame","rootMargin","threshold","intersectionRatio","unobserve","cancelAnimationFrame","requestAnimationFrame","ON_DESTROY_SUBJECT_KEY","Symbol","OnDestroyMixin","ReplaySubject","prototype","observeOnDestroy","untilComponentDestroyed","component","componentDestroyed","onDestroySubject","proto","getPrototypeOf","compInfo","Error"],"sourceRoot":"webpack:///","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10]}