{"version":3,"file":"app-spot-components-form-field-stories-FormField-mdx.89f16d9c.iframe.bundle.js","mappings":"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","sources":["./src/app/spot/components/form-field/stories/FormField.stories.ts","./src/stories/i18n.service.stub.ts","./node_modules/@mdx-js/react/lib/index.js","./node_modules/react/cjs/react-jsx-runtime.production.min.js","./node_modules/react/jsx-runtime.js","./src/app/spot/components/form-field/stories/FormField.mdx"],"sourcesContent":["import type { Meta, StoryObj } from '@storybook/angular';\nimport { moduleMetadata } from '@storybook/angular';\nimport {\n  UntypedFormControl,\n  UntypedFormGroup,\n  Validators,\n} from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { I18nService } from '../../../../core/i18n/i18n.service';\nimport { I18nServiceStub } from '../../../../../stories/i18n.service.stub';\n\nimport { OpSpotModule } from '../../../spot.module';\n\nimport { SpotFormFieldComponent } from '../form-field.component';\n\nconst meta:Meta = {\n  title: 'Patterns/FormField',\n  component: SpotFormFieldComponent,\n  decorators: [\n    moduleMetadata({\n      imports: [\n        OpSpotModule,\n        ReactiveFormsModule,\n      ],\n      providers: [\n        {\n          provide: I18nService,\n          useFactory: () => I18nServiceStub,\n        },\n      ],\n    }),\n  ],\n};\n\nexport default meta;\ntype Story = StoryObj;\n\nexport const InputSlot:Story = {\n  render: (args) => ({\n    props: args,\n    template: `\n      <spot-form-field label=\"Form field with input\">\n        <spot-text-field slot=\"input\"></spot-text-field>\n      </spot-form-field>\n   `,\n  }),\n};\n\nexport const DescriptionSlot:Story = {\n  render: (args) => ({\n    props: args,\n    template: `\n      <spot-form-field label=\"Form field with description\">\n        <spot-text-field slot=\"input\"></spot-text-field>\n        <span slot=\"description\">\n          Helpful guidelines so the user can be confident about their input.\n        </span>\n      </spot-form-field>\n   `,\n  }),\n};\n\nexport const BasicValidation:Story = {\n  render: (args) => ({\n    props: {\n      ...args,\n      myForm: new UntypedFormGroup({\n        myInput: new UntypedFormControl(null, [Validators.required, Validators.minLength(8)]),\n      }),\n      onSubmit: (event:any) => console.log('onSubmit', event),\n    },\n    template: `\n      <form\n        [formGroup]=\"myForm\"\n        (ngSubmit)=\"onSubmit($event)\"\n        class=\"spot-container\"\n      >\n        <spot-form-field\n          label=\"Form field with validation\"\n          [required]=\"true\"\n        >\n          <spot-text-field\n            formControlName=\"myInput\"\n            slot=\"input\"\n          ></spot-text-field>\n\n          <div\n            slot=\"errors\"\n            class=\"spot-form-field--error\"\n            *ngIf=\"myForm.get('myInput')!.errors?.required\"\n          >\n            This input is required.\n          </div>\n\n          <div\n            slot=\"errors\"\n            class=\"spot-form-field--error\"\n            *ngIf=\"myForm.get('myInput')!.errors?.minlength\"\n          >\n            This input needs to be at least 8 characters long.\n          </div>\n        </spot-form-field>\n\n        <div class=\"spot-action-bar\">\n          <div class=\"spot-action-bar--right\">\n            <button\n              type=\"submit\"\n              class=\"button -highlight spot-action-bar--action\"\n            >Submit data</button>\n          </div>\n        </div>\n      </form>\n   `,\n  }),\n};\n\nexport const ActionSlot:Story = {\n  render: (args) => ({\n    props: {\n      ...args,\n      alert: (s:string) => console.log(s),\n    },\n    template: `\n      <spot-form-field label=\"Form field with input\">\n        <spot-text-field slot=\"input\"></spot-text-field>\n        <button\n          type=\"button\"\n          (click)=\"log('Some action')\"\n          class=\"spot-link\"\n          slot=\"action\"\n        >Some action</button>\n        <button\n          type=\"button\"\n          (click)=\"log('Another action')\"\n          class=\"spot-link\"\n          slot=\"action\"\n        >Another action</button>\n      </spot-form-field>\n   `,\n  }),\n};\n","export const I18nServiceStub = {\n  t<T=string>(name:string):any {\n    return {\n      'date.abbr_day_names': [\n        'Mon',\n        'Tue',\n        'Wed',\n        'Thu',\n        'Fri',\n        'Sat',\n        'Sun',\n      ],\n      'date.day_names': [\n        'Monday',\n        'Tuesday',\n        'Wednesday',\n        'Thursday',\n        'Friday',\n        'Saturday',\n        'Sunday',\n      ],\n      'date.abbr_month_names': [\n        'Jan',\n        'Feb',\n        'Mar',\n        'Apr',\n        'May',\n        'Jun',\n        'Jul',\n        'Aug',\n        'Sep',\n        'Oct',\n        'Nov',\n        'Dec',\n      ],\n      'date.month_names': [\n        'January',\n        'February',\n        'March',\n        'April',\n        'May',\n        'June',\n        'July',\n        'August',\n        'September',\n        'October',\n        'November',\n        'December',\n      ],\n    }[name] || name as T;\n  },\n};\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@storybook/addon-docs/mdx-react-shim\";\nimport {Canvas, Meta, ArgsTable} from '@storybook/blocks';\nimport {SpotFormFieldComponent} from '../form-field.component';\nimport * as FormFieldStories from './FormField.stories';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    h2: \"h2\",\n    code: \"code\",\n    ol: \"ol\",\n    li: \"li\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(Meta, {\n      of: FormFieldStories\n    }), \"\\n\", _jsx(_components.h1, {\n      id: \"form-field\",\n      children: \"Form Field\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Form fields are a smart wrapper around input fields. Form fields handle labels, validation messages, help texts, and\\nextra actions around an input field.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"basic-usage\",\n      children: \"Basic usage\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Form fields work with \", _jsx(_components.code, {\n        children: \"ng-content\"\n      }), \" a lot, which we call \", _jsx(_components.code, {\n        children: \"slot\"\n      }), \" in SPOT. There are four slots in which content can be\\nfitted:\"]\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"input\"\n        }), \" holds the input. It can be a text input or select dropdown, or anything else that is not a\\nselection toggle.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"help-text\"\n        }), \" holds the attribute help text. To achieve separation of concerns, if you want to show an attribute help\\ntext this is where the \", _jsx(_components.code, {\n          children: \"attribute-help-text\"\n        }), \" component goes.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"errors\"\n        }), \" holds validation errors.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"description\"\n        }), \" holds a short description of the input field. Oftentimes these are short, helpful guidelines about how\\nor what to input into the field.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"action\"\n        }), \" holds extra input actions. Most often, these are \", _jsx(_components.code, {\n          children: \"button\"\n        }), \" elements styled as a \", _jsx(_components.code, {\n          children: \"spot-link\"\n        }), \" that allow the user to\\nperform an action related to the input.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Some of these require adding an extra class on that element, so watch the examples carefully!\"\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"adding-an-input\",\n      children: \"Adding an input\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use \", _jsx(_components.code, {\n        children: \"slot=\\\"input\\\"\"\n      }), \" to select the input element:\"]\n    }), \"\\n\", _jsx(Canvas, {\n      of: FormFieldStories.InputSlot\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"adding-a-description\",\n      children: \"Adding a description\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use \", _jsx(_components.code, {\n        children: \"slot=\\\"description\\\"\"\n      }), \" to select the input element:\"]\n    }), \"\\n\", _jsx(Canvas, {\n      of: FormFieldStories.DescriptionSlot\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"adding-a-help-text\",\n      children: \"Adding a help text\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use \", _jsx(_components.code, {\n        children: \"slot=\\\"help-text\\\"\"\n      }), \" to select the \", _jsx(_components.code, {\n        children: \"attribute-help-text\"\n      }), \" component:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-html\",\n        children: \"<spot-form-field label=\\\"Form field with help text\\\">\\n  <spot-text-field slot=\\\"input\\\"></spot-text-field>\\n  <attribute-help-text\\n    slot=\\\"help-text\\\"\\n    class=\\\"spot-form-field--help-text\\\"\\n  ></attribute-help-text>\\n</spot-form-field>\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The example above cannot currently be rendered in Storybook, because the \", _jsx(_components.code, {\n        children: \"attribute-help-text\"\n      }), \" component requires the\\nAPI to be available. They are in use in the project and work package dynamic form. So if you add an attribute help text,\\nthey will show up there.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"handling-validation\",\n      children: \"Handling validation\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"SPOT works best with reactive forms. If you have a \", _jsx(_components.code, {\n        children: \"FormControl\"\n      }), \" for your input, \", _jsx(_components.code, {\n        children: \"spot-form-field\"\n      }), \" will be able to\\nfigure out the validation state automagically.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use \", _jsx(_components.code, {\n        children: \"slot=\\\"errors\\\"\"\n      }), \" to set validation errors. You can set multiple errors independently by all giving them the \", _jsx(_components.code, {\n        children: \"slot\"\n      }), \"\\nattribute.\"]\n    }), \"\\n\", _jsx(Canvas, {\n      of: FormFieldStories.BasicValidation\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"As you can see, by default validation messages will only be shown on submit. You can change this behavior by changing\\nthe \", _jsx(_components.code, {\n        children: \"showValidationErrorOn\"\n      }), \" input to the \", _jsx(_components.code, {\n        children: \"spot-form-field\"\n      }), \" component.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The \", _jsx(_components.code, {\n        children: \"required\"\n      }), \" input only makes sure the asterisk at the end of the label is shown, it does not add any validation to\\nthe form or input.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"adding-extra-input-actions\",\n      children: \"Adding extra input actions\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Form field actions allow you to add extra action buttons to the context of an input field.\"\n    }), \"\\n\", _jsx(Canvas, {\n      of: FormFieldStories.ActionSlot\n    }), \"\\n\", _jsx(ArgsTable, {\n      of: SpotFormFieldComponent\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["title","component","SpotFormFieldComponent","decorators","moduleMetadata","imports","OpSpotModule","ReactiveFormsModule","providers","provide","I18nService","useFactory","I18nServiceStub","InputSlot","render","args","props","template","DescriptionSlot","BasicValidation","myForm","UntypedFormGroup","myInput","UntypedFormControl","Validators","required","minLength","onSubmit","event","console","log","ActionSlot","alert","s","t","name","MDXContext","React","withMDXComponents","Component","boundMDXComponent","allComponents","useMDXComponents","components","contextComponents","emptyObject","MDXProvider","disableParentContext","Provider","value","children","f","require","k","Symbol","for","l","m","Object","prototype","hasOwnProperty","n","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","p","key","ref","__self","__source","q","c","a","g","b","d","e","h","call","defaultProps","$$typeof","type","_owner","current","exports","Fragment","jsx","jsxs","module","_createMdxContent","_components","assign","h1","h2","code","ol","li","pre","of","id","className","MDXContent","wrapper","MDXLayout"],"sourceRoot":"webpack:///","x_google_ignoreList":[2,3,4]}