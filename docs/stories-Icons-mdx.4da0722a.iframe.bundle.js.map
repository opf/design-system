{"version":3,"file":"stories-Icons-mdx.4da0722a.iframe.bundle.js","mappings":"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","sources":["./src/stories/Icons.stories.tsx","./node_modules/@mdx-js/react/lib/index.js","./node_modules/react/cjs/react-jsx-runtime.production.min.js","./node_modules/react/jsx-runtime.js","./src/stories/Icons.mdx"],"sourcesContent":["import type { Meta, StoryObj } from '@storybook/angular';\nimport { moduleMetadata } from '@storybook/angular';\nimport { OpSpotModule } from '../app/spot/spot.module';\n\nconst meta:Meta = {\n  title: 'Styles/Icons',\n  decorators: [\n    moduleMetadata({\n      imports: [OpSpotModule],\n    }),\n  ],\n};\n\nexport default meta;\ntype Story = StoryObj;\n\nexport const Basic:Story = {\n  render: (args) => ({\n    props: args,\n    template: `\n      <span class=\"spot-icon spot-icon_add\"></span>\n      <span class=\"spot-icon spot-icon_accountable\"></span>\n      <span class=\"spot-icon spot-icon_add-link\"></span>\n      <span class=\"spot-icon spot-icon_contacts\"></span>\n      <span class=\"spot-icon spot-icon_edit\"></span>\n   `,\n  }),\n};\n\nexport const Button:Story = {\n  render: (args) => ({\n    props: args,\n    template: `\n      <button class=\"button\">\n        Add work package\n        <span class=\"spot-icon spot-icon_add\"></span>\n      </button>\n   `,\n  }),\n};\n\nexport const Link:Story = {\n  render: (args) => ({\n    props: args,\n    template: `\n      <a\n        href=\"#\"\n        class=\"spot-link\"\n      >\n        <span>This is a spot-link</span>\n        <span class=\"spot-icon spot-icon_add\"></span>\n      </a>\n   `,\n  }),\n};\n\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@storybook/addon-docs/mdx-react-shim\";\nimport {Canvas, Meta} from '@storybook/blocks';\nimport iconList from '../app/spot/icon-font/icons.json';\nimport * as IconsStories from './Icons.stories';\nexport const IconsPreview = () => {\n  const _components = Object.assign({\n    div: \"div\",\n    span: \"span\"\n  }, _provideComponents());\n  return _jsx(_components.div, {\n    className: \"icons\",\n    children: iconList.map(name => _jsxs(_components.div, {\n      className: \"icons--icon\",\n      children: [_jsx(_components.div, {\n        className: \"icons--preview\",\n        children: _jsx(_components.span, {\n          className: `icons--preview-icon spot-icon spot-icon_${name}`\n        })\n      }), _jsx(_components.div, {\n        className: \"icons--name\",\n        children: name\n      })]\n    }, name))\n  });\n};\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    h2: \"h2\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(Meta, {\n      of: IconsStories\n    }), \"\\n\", _jsx(_components.h1, {\n      id: \"icons\",\n      children: \"Icons\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Icons are used as visual indicators or small illustrations. They provide additional context when necessary.\"\n    }), \"\\n\", _jsx(Canvas, {\n      of: IconsStories.Basic\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"design-notes\",\n      children: \"Design notes\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Icons should generally not be used on its own without a label, especially on interactive elements, where their function might be ambiguous.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"There are notable examples: if the meaning of the button is abundantly clear without a label and space is limited (or repetitive elements), an icon-only interactive element is possible (for example, the \\\"Mark as read\\\" button on each notification element).\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"However, icon-only buttons or links should never be used for critical primary functions like Save, Confirm, Remove and Delete.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"usage\",\n      children: \"Usage\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Icons are a CSS class only. To use them, apply the \", _jsx(_components.code, {\n        children: \"spot-icon\"\n      }), \" BEM block on a generic inline element like \", _jsx(_components.code, {\n        children: \"span\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"options\",\n      children: \"Options\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"There are four pre-defined dimensions for icons: 12×12, 16×16, 20×20 and 24×24.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The default size is 16×16.\"\n    }), \"\\n\", _jsx(Canvas, {\n      of: IconsStories.Button\n    }), \"\\n\", _jsx(Canvas, {\n      of: IconsStories.Link\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"available-icons\",\n      children: \"Available icons\"\n    }), \"\\n\", _jsx(IconsPreview, {}), \"\\n\", _jsx(\"style\", {\n      children: `\n.icons {\n  display: flex;\n  flex-wrap: wrap;\n  margin-right: -1rem;\n}\n\n.icons--icon {\n  border-radius: 2px;\n  border: 1px solid #eeeeee;\n  margin-bottom: 1rem;\n  margin-right: 1rem;\n  display: flex;\n  flex-direction: column;\n  flex-basis: 120px;\n  flex-grow: 1;\n  flex-shrink: 1;\n  min-width: 80px;\n  max-width: 180px;\n  text-align: center;\n  padding: 0.5rem;\n}\n\n.icons--preview {\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.icons--preview-icon {\n  font-size: 3rem;\n}\n\n.icons--name {\n  font-weight: bold;\n  margin-top: 0.5rem;\n}\n`\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["title","decorators","moduleMetadata","imports","OpSpotModule","Basic","render","args","props","template","Button","Link","MDXContext","React","withMDXComponents","Component","boundMDXComponent","allComponents","useMDXComponents","components","contextComponents","emptyObject","MDXProvider","disableParentContext","Provider","value","children","f","require","k","Symbol","for","l","m","Object","prototype","hasOwnProperty","n","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","p","key","ref","__self","__source","q","c","a","g","b","d","e","h","call","defaultProps","$$typeof","type","_owner","current","exports","Fragment","jsx","jsxs","module","IconsPreview","_components","assign","div","span","className","map","name","_createMdxContent","h1","h2","code","of","id","MDXContent","wrapper","MDXLayout"],"sourceRoot":"webpack:///","x_google_ignoreList":[1,2,3]}