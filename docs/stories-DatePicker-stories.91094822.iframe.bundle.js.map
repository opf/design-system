{"version":3,"file":"stories-DatePicker-stories.91094822.iframe.bundle.js","mappings":"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","sources":["./src/app/shared/components/datepicker/basic-range-date-picker/basic-range-date-picker.component.sass","./src/app/shared/components/datepicker/styles/datepicker.modal.sass","./src/stories/weekday.service.stub.ts","./src/stories/day.service.stub.ts","./src/app/shared/components/datepicker/basic-datepicker.module.ts","./src/stories/DatePicker.stories.ts","./src/stories/timezone.service.stub.ts","./src/stories/configuration.service.stub.ts","./src/app/core/apiv3/paths/path-resources.ts","./src/app/features/hal/hal-link/hal-link.ts","./src/app/features/hal/services/url-params-encoder.ts","./src/app/features/hal/helpers/lazy-accessor.ts","./src/app/features/hal/helpers/hal-resource-builder.ts","./src/app/features/hal/services/hal-error.ts","./src/app/core/apiv3/helpers/get-paginated-results.ts","./src/app/features/hal/services/hal-resource.service.ts","./src/app/core/apiv3/helpers/add-filters-to-path.ts","./src/app/core/apiv3/paths/apiv3-resource.ts","./src/app/core/path-helper/apiv3-paths.ts","./src/app/core/path-helper/path-helper.service.ts","./src/app/features/hal/schemas/hal-payload.helper.ts","./src/app/core/apiv3/forms/apiv3-form-resource.ts","./src/app/core/apiv3/endpoints/grids/apiv3-grid-form.ts","./src/app/core/apiv3/endpoints/grids/apiv3-grid-paths.ts","./src/app/core/apiv3/endpoints/grids/apiv3-grids-paths.ts","./src/app/core/apiv3/cache/state-cache.service.ts","./src/app/features/hal/schemas/schema-proxy.ts","./src/app/features/hal/schemas/work-package-schema-proxy.ts","./src/app/core/schemas/schema-cache.service.ts","./src/app/core/apiv3/cache/cachable-apiv3-resource.ts","./src/app/core/apiv3/endpoints/time-entries/apiv3-time-entry-paths.ts","./src/app/features/hal/resources/collection-resource.ts","./src/app/core/apiv3/cache/cachable-apiv3-collection.ts","./src/app/core/apiv3/endpoints/time-entries/time-entry-cache.service.ts","./src/app/core/apiv3/endpoints/time-entries/apiv3-time-entries-paths.ts","./src/app/core/apiv3/endpoints/capabilities/apiv3-capability-paths.ts","./src/app/core/apiv3/endpoints/capabilities/apiv3-capabilities-paths.ts","./src/app/core/apiv3/endpoints/projects/apiv3-available-projects-paths.ts","./src/app/core/apiv3/endpoints/memberships/apiv3-memberships-form.ts","./src/app/core/apiv3/endpoints/memberships/apiv3-memberships-paths.ts","./src/app/core/apiv3/endpoints/users/apiv3-user-preferences-paths.ts","./src/app/core/apiv3/endpoints/users/apiv3-user-paths.ts","./src/app/core/apiv3/endpoints/users/apiv3-users-paths.ts","./src/app/core/apiv3/endpoints/types/apiv3-type-paths.ts","./src/app/core/apiv3/endpoints/types/apiv3-types-paths.ts","./src/app/features/hal/resources/query-filter-instance-resource.ts","./src/app/features/hal/resources/query-resource.ts","./src/app/core/apiv3/endpoints/queries/apiv3-query-order.ts","./src/app/features/work-packages/components/wp-query/query-filters.service.ts","./src/app/core/apiv3/endpoints/queries/apiv3-query-form.ts","./src/app/core/apiv3/endpoints/queries/apiv3-query-paths.ts","./src/app/core/apiv3/endpoints/queries/apiv3-queries-paths.ts","./src/app/core/apiv3/endpoints/relations/apiv3-relations-paths.ts","./src/app/core/apiv3/endpoints/work_packages/apiv3-work-package-form.ts","./src/app/core/apiv3/endpoints/work_packages/api-v3-work-package-paths.ts","./src/app/core/apiv3/endpoints/work_packages/work-package.cache.ts","./src/app/core/apiv3/endpoints/work_packages/api-v3-work-package-cached-subresource.ts","./src/app/core/apiv3/endpoints/work_packages/api-v3-work-packages-paths.ts","./src/app/core/apiv3/endpoints/versions/apiv3-version-paths.ts","./src/app/core/apiv3/endpoints/versions/apiv3-versions-paths.ts","./src/app/core/apiv3/endpoints/projects/apiv3-project-copy-paths.ts","./src/app/core/apiv3/endpoints/projects/apiv3-project-paths.ts","./src/app/core/apiv3/endpoints/projects/project.cache.ts","./src/app/core/apiv3/endpoints/projects/apiv3-projects-paths.ts","./src/app/core/apiv3/endpoints/statuses/apiv3-status-paths.ts","./src/app/core/apiv3/endpoints/statuses/apiv3-statuses-paths.ts","./src/app/core/apiv3/endpoints/roles/apiv3-role-paths.ts","./src/app/core/apiv3/endpoints/roles/apiv3-roles-paths.ts","./src/app/core/apiv3/endpoints/news/apiv3-news-paths.ts","./src/app/core/apiv3/endpoints/help_texts/apiv3-help-texts-paths.ts","./src/app/core/apiv3/endpoints/configuration/apiv3-configuration-path.ts","./src/app/features/boards/board/board.ts","./src/app/core/model-auth/model-auth.service.ts","./src/app/core/apiv3/virtual/apiv3-board-path.ts","./src/app/core/apiv3/virtual/apiv3-boards-paths.ts","./src/app/core/apiv3/endpoints/placeholder-users/apiv3-placeholder-user-paths.ts","./src/app/core/apiv3/endpoints/placeholder-users/apiv3-placeholder-users-paths.ts","./src/app/core/apiv3/endpoints/groups/apiv3-group-paths.ts","./src/app/core/apiv3/endpoints/groups/apiv3-groups-paths.ts","./src/app/core/apiv3/endpoints/notifications/apiv3-notification-paths.ts","./src/app/core/apiv3/endpoints/notifications/apiv3-notifications-paths.ts","./src/app/core/apiv3/endpoints/views/apiv3-views-paths.ts","./src/app/core/apiv3/endpoints/backups/apiv3-backups-path.ts","./src/app/core/apiv3/endpoints/days/api-v3-day-paths.ts","./src/app/core/apiv3/endpoints/days/api-v3-days-paths.ts","./src/app/core/apiv3/endpoints/storages/api-v3-storages-paths.ts","./src/app/core/apiv3/endpoints/project-storages/api-v3-project-storages-paths.ts","./src/app/core/apiv3/api-v3.service.ts","./src/app/core/apiv3/paths/apiv3-list-resource.interface.ts","./src/app/core/browser/device.service.ts","./src/app/core/config/configuration.service.ts","./src/app/core/datetime/timezone.service.ts","./src/app/core/state/days/weekday.store.ts","./src/app/core/state/days/weekday.service.ts","./src/app/core/days/weekday.service.ts","./src/app/core/i18n/i18n.service.ts","./src/app/core/state/days/day.service.ts","./src/app/core/state/days/day.store.ts","./src/app/core/state/is-defined-entity.ts","./src/app/core/upload/is-http-response.ts","./src/app/shared/components/toaster/toast.service.ts","./src/app/features/hal/resources/error-resource.ts","./src/app/core/upload/wait-for-uploads-finished.ts","./src/app/core/state/resource-store.service.ts","./src/app/core/state/resource-store.ts","./src/app/core/states/states.service.ts","./src/app/features/hal/helpers/id-from-link.ts","./src/app/features/hal/helpers/is-new-resource.ts","./src/app/features/hal/resources/hal-resource.ts","./src/app/shared/components/dataset-inputs.ts","./src/app/shared/components/datepicker/basic-range-date-picker/basic-range-date-picker.component.ts","./src/app/shared/components/datepicker/basic-single-date-picker/basic-single-date-picker.component.ts","./src/app/shared/components/datepicker/datepicker.ts","./src/app/shared/components/datepicker/helpers/date-modal.helpers.ts","./src/app/shared/helpers/angular/inject-field.decorator.ts","./src/app/shared/helpers/api-v3/api-v3-filter-builder.ts","./src/environments/environment.ts","./src/app/shared/helpers/debug_output.ts","./src/stories/i18n.service.stub.ts","./node_modules/moment/locale/ sync ^\\.\\/.*$"],"sourcesContent":["// Imports\nvar ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = require(\"../../../../../../node_modules/@angular-devkit/build-angular/node_modules/css-loader/dist/runtime/sourceMaps.js\");\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../node_modules/@angular-devkit/build-angular/node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".op-basic-range-datepicker_mobile {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n}\\n.op-basic-range-datepicker--input {\\n  min-width: 12rem;\\n}\\n.op-basic-range-datepicker--spacer {\\n  padding: 0 0.5rem;\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/app/shared/components/datepicker/basic-range-date-picker/basic-range-date-picker.component.sass\"],\"names\":[],\"mappings\":\"AACE;EACE,aAAA;EACA,sBAAA;EACA,mBAAA;AAAJ;AACE;EACE,gBAAA;AACJ;AAAE;EACE,iBAAA;AAEJ\",\"sourcesContent\":[\".op-basic-range-datepicker\\n  &_mobile\\n    display: flex\\n    flex-direction: column\\n    align-items: center\\n  &--input\\n    min-width: 12rem\\n  &--spacer\\n    padding: 0 0.5rem\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nmodule.exports = ___CSS_LOADER_EXPORT___.toString();\n","// Imports\nvar ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = require(\"../../../../../../node_modules/@angular-devkit/build-angular/node_modules/css-loader/dist/runtime/sourceMaps.js\");\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../node_modules/@angular-devkit/build-angular/node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".op-datepicker-modal {\\n  display: flex;\\n  flex-direction: column;\\n  height: 100%;\\n}\\n@media (min-width: 1000px) and (min-height: 500px) {\\n  .op-datepicker-modal {\\n    height: unset;\\n    min-height: 486px;\\n    width: 100vw;\\n    max-width: 320px;\\n  }\\n  .op-datepicker-modal_wide {\\n    max-width: 600px;\\n  }\\n}\\n.op-datepicker-modal--banner {\\n  margin-bottom: 1rem;\\n}\\n.op-datepicker-modal--banner:empty {\\n  visibility: hidden;\\n}\\n.op-datepicker-modal--toggle-actions-container {\\n  display: grid;\\n  grid-template-columns: auto auto 1fr;\\n  grid-column-gap: 2rem;\\n  margin: 0 1rem 0;\\n}\\n.op-datepicker-modal--dates-container {\\n  display: grid;\\n  grid-template-columns: 1fr 1fr 150px;\\n  grid-gap: 1rem;\\n  margin: 1rem 1rem 0;\\n}\\n.op-datepicker-modal--date-field_current, .op-datepicker-modal--date-field_current:hover {\\n  outline: 2px solid var(--primary-color);\\n  outline-offset: -2px;\\n}\\n.op-datepicker-modal--date-container {\\n  display: inline-grid;\\n}\\n.op-datepicker-modal--hidden-link {\\n  visibility: hidden;\\n}\\n.op-datepicker-modal--flatpickr-instance.inline {\\n  margin: 1rem auto !important;\\n}\\n.op-datepicker-modal--stretch-content {\\n  flex-grow: 1;\\n  flex-shrink: 1;\\n  overflow-y: auto;\\n}\\n.op-datepicker-modal--stretch-content.spot-container {\\n  margin-top: 0.5rem;\\n}\\n\\n@media screen and (max-width: 679px) {\\n  .op-datepicker-modal {\\n    width: calc(100vw - 2rem);\\n    margin-bottom: 0;\\n  }\\n  .op-datepicker-modal--flatpickr-instance {\\n    align-self: center;\\n  }\\n  .op-datepicker-modal--dates-container {\\n    grid-template-columns: 1fr 1fr;\\n  }\\n  .op-datepicker-modal--toggle-actions-container {\\n    display: grid;\\n    grid-template-columns: 1fr;\\n    grid-row-gap: 1rem;\\n  }\\n  .op-datepicker-modal--date-form:only-child {\\n    grid-column: 1/3;\\n  }\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/app/shared/components/datepicker/styles/datepicker.modal.sass\",\"webpack://./src/app/spot/styles/tokens/dist/tokens.sass\"],\"names\":[],\"mappings\":\"AAEA;EACE,aAAA;EACA,sBAAA;EACA,YAAA;AADF;AAGE;EALF;IAMI,aAAA;IACA,iBAAA;IACA,YAAA;IAGA,gBAAA;EAFF;EAIE;IACE,gBAAA;EAFJ;AACF;AAGE;EACE,mBC2Ba;AD5BjB;AAGI;EACE,kBAAA;AADN;AAGE;EACE,aAAA;EACA,oCAAA;EACA,qBCoBa;EDnBb,gBAAA;AADJ;AAGE;EACE,aAAA;EACA,oCAAA;EACA,cCaa;EDZb,mBAAA;AADJ;AAII;EAEE,uCAAA;EACA,oBAAA;AAHN;AAKE;EACE,oBAAA;AAHJ;AAKE;EACE,kBAAA;AAHJ;AAKE;EACE,4BAAA;AAHJ;AAKE;EACE,YAAA;EACA,cAAA;EACA,gBAAA;AAHJ;AAQI;EACE,kBCrBa;ADenB;;AAQA;EACE;IAEE,yBAAA;IACA,gBAAA;EANF;EAQE;IACE,kBAAA;EANJ;EAQE;IACE,8BAAA;EANJ;EAQE;IACE,aAAA;IACA,0BAAA;IACA,kBC/BW;EDyBf;EASI;IACE,gBAAA;EAPN;AACF\",\"sourcesContent\":[\"@import '../../app/spot/styles/sass/variables'\\n\\n.op-datepicker-modal\\n  display: flex\\n  flex-direction: column\\n  height: 100%\\n\\n  @media #{$spot-mq-drop-modal-in-context}\\n    height: unset\\n    min-height: 486px\\n    width: 100vw\\n    // Basically the width of the two calendars next to each other + spacings\\n    // will be overwritten on mobile\\n    max-width: 320px\\n\\n    &_wide\\n      max-width: 600px\\n\\n  &--banner\\n    margin-bottom: $spot-spacing-1\\n\\n    &:empty\\n      visibility: hidden\\n\\n  &--toggle-actions-container\\n    display: grid\\n    grid-template-columns: auto auto 1fr\\n    grid-column-gap: $spot-spacing-2\\n    margin: 0 $spot-spacing-1 0\\n\\n  &--dates-container\\n    display: grid\\n    grid-template-columns: 1fr 1fr 150px\\n    grid-gap: $spot-spacing-1\\n    margin: $spot-spacing-1 $spot-spacing-1 0\\n\\n  &--date-field\\n    &_current,\\n    &_current:hover\\n      outline: 2px solid var(--primary-color)\\n      outline-offset: -2px\\n\\n  &--date-container\\n    display: inline-grid\\n\\n  &--hidden-link\\n    visibility: hidden\\n\\n  &--flatpickr-instance.inline\\n    margin: 1rem auto !important\\n\\n  &--stretch-content\\n    flex-grow: 1\\n    flex-shrink: 1\\n    overflow-y: auto\\n\\n    // Unfortunately, we need an extra class\\n    // Of specificity here to overwrite the\\n    // nested spot-container styles\\n    &.spot-container\\n      margin-top: $spot-spacing-0_5\\n\\n@media screen and (max-width: 679px)\\n  .op-datepicker-modal\\n    // Use same width as spot-modal mobile\\n    width: calc(100vw - 2rem)\\n    margin-bottom: 0\\n\\n    &--flatpickr-instance\\n      align-self: center\\n\\n    &--dates-container\\n      grid-template-columns: 1fr 1fr\\n\\n    &--toggle-actions-container\\n      display: grid\\n      grid-template-columns: 1fr\\n      grid-row-gap: $spot-spacing-1\\n\\n    &--date-form\\n      &:only-child\\n        grid-column: 1 / 3\\n\",\"\\n$spot-color-basic-black: rgb(0, 0, 0)\\n$spot-color-basic-gray-1: rgb(51, 51, 51)\\n$spot-color-basic-gray-2: rgb(85, 85, 85)\\n$spot-color-basic-gray-3: rgb(135, 135, 135)\\n$spot-color-basic-gray-4: rgb(204, 204, 204)\\n$spot-color-basic-gray-5: rgb(224, 224, 224)\\n$spot-color-basic-gray-6: rgb(243, 243, 243)\\n$spot-color-basic-white: rgb(255, 255, 255)\\n$spot-color-main: rgb(26, 103, 163)\\n$spot-color-main-dark: rgb(3, 69, 121)\\n$spot-color-main-light: rgb(209, 229, 245)\\n$spot-color-accent: rgb(48, 135, 32)\\n$spot-color-accent-dark: rgb(0, 117, 40)\\n$spot-color-accent-light: rgb(191, 238, 182)\\n$spot-color-danger: rgb(208, 17, 0)\\n$spot-color-danger-dark: rgb(125, 0, 13)\\n$spot-color-danger-light: rgb(244, 171, 169)\\n$spot-color-indication-attention: rgb(0, 163, 255)\\n$spot-color-indication-flagged: rgb(28, 182, 192)\\n$spot-color-indication-current-date: rgb(255, 255, 225)\\n$spot-color-feedback-error-dark: rgb(202, 63, 63)\\n$spot-color-feedback-error-light: rgb(254, 218, 218)\\n$spot-color-feedback-warning-dark: rgb(239, 158, 86)\\n$spot-color-feedback-warning-light: rgb(255, 230, 198)\\n$spot-color-feedback-success-dark: rgb(53, 197, 63)\\n$spot-color-feedback-success-light: rgb(216, 253, 209)\\n$spot-color-feedback-info-dark: rgb(143, 192, 219)\\n$spot-color-feedback-info-light: rgb(227, 245, 255)\\n$spot-spacing-5: 5rem\\n$spot-spacing-6: 6rem\\n$spot-spacing-1-75: 1.75rem\\n$spot-spacing-7: 7rem\\n$spot-spacing-0-75: 0.75rem\\n$spot-spacing-8: 8rem\\n$spot-spacing-9: 9rem\\n$spot-spacing-2-25: 2.25rem\\n$spot-spacing-1-25: 1.25rem\\n$spot-spacing-0-25: 0.25rem\\n$spot-spacing-0-5: 0.5rem\\n$spot-spacing-1-5: 1.5rem\\n$spot-spacing-2-5: 2.5rem\\n$spot-spacing-10: 10rem\\n$spot-spacing-3-5: 3.5rem\\n$spot-spacing-4-5: 4.5rem\\n$spot-spacing-5-5: 5.5rem\\n$spot-spacing-1: 1rem\\n$spot-spacing-2: 2rem\\n$spot-spacing-3: 3rem\\n$spot-spacing-4: 4rem\\n$spot-shadow-light-low: 1px 1px 5px rgba(0, 0, 0, 0.15)\\n$spot-shadow-light-mid: 3px 3px 10px rgba(0, 0, 0, 0.15)\\n$spot-shadow-light-high: 5px 5px 20px rgba(0, 0, 0, 0.15)\\n$spot-shadow-hard-low: 1px 1px 5px rgba(0, 0, 0, 0.25)\\n$spot-shadow-hard-mid: 3px 3px 10px rgba(0, 0, 0, 0.25)\\n$spot-shadow-hard-high: 5px 5px 20px rgba(0, 0, 0, 0.25)\\n$spot-mq-landscape: '(orientation: landscape)'\\n$spot-mq-drop-modal-full-screen: '(max-width: 999px), (max-height: 499px)'\\n$spot-mq-drop-modal-in-context: '(min-width: 1000px) and (min-height: 500px)'\\n$spot-mq-action-bar-change: '(min-width: 768px)'\\n$spot-mq-mobile: '(max-width: 679px)'\\n$spot-mq-desktop: '(min-width: 680px)'\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nmodule.exports = ___CSS_LOADER_EXPORT___.toString();\n","// -- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2023 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\nimport {\n  Injectable,\n} from '@angular/core';\nimport * as moment from 'moment';\nimport { IWeekday } from 'core-app/core/state/days/weekday.model';\nimport {\n  Observable,\n  of,\n} from 'rxjs';\n\n@Injectable({ providedIn: 'root' })\nexport class WeekdayServiceStub {\n  private weekdays:IWeekday[] = [];\n\n  /**\n   * @param date The iso day number (1-7) or a date instance\n   * @return {boolean} whether the given iso day is working or not\n   */\n  public isNonWorkingDay(date:Date|number):boolean {\n    const isoDayOfWeek = (typeof date === 'number') ? date : moment(date).isoWeekday();\n    return !!(this.weekdays || []).find((wd) => wd.day === isoDayOfWeek && !wd.working);\n  }\n\n  public get nonWorkingDays():IWeekday[] {\n    return this.weekdays.filter((day) => !day.working);\n  }\n\n  loadWeekdays():Observable<IWeekday[]> {\n    return of(this.weekdays);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { IHALCollection } from 'core-app/core/apiv3/types/hal-collection.type';\nimport {\n  ApiV3ListParameters,\n} from 'core-app/core/apiv3/paths/apiv3-list-resource.interface';\nimport { DayStore } from 'core-app/core/state/days/day.store';\nimport { IDay } from 'core-app/core/state/days/day.model';\nimport { ResourceStore } from 'core-app/core/state/resource-store.service';\n\n@Injectable()\nexport class DayResourceServiceStub {\n  protected basePath():string {\n    return '';\n  }\n\n  async isNonWorkingDay$(input:Date):Promise<boolean> {\n    const day = input.getDay();\n    return day > 5 || day === 0;\n  }\n\n  requireNonWorkingYear$(_date:Date|string):Observable<IDay[]> {\n    return of([]);\n  }\n\n  requireNonWorkingYears$(_start:Date|string, _end:Date|string):Observable<IDay[]> {\n    return of([]);\n  }\n\n  fetchCollection(_params:ApiV3ListParameters):Observable<IHALCollection<IDay>> {\n    return of({\n      _type: 'Collection',\n      count: 0,\n      pageSize: 10,\n      offset: 0,\n      total: 0,\n      _embedded: {\n        elements: [],\n      },\n    });\n  }\n\n  protected createStore():ResourceStore<IDay> {\n    return new DayStore();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport {\n  FormsModule,\n  ReactiveFormsModule,\n} from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\nimport { I18nService } from 'core-app/core/i18n/i18n.service';\nimport { OpBasicRangeDatePickerComponent } from './basic-range-date-picker/basic-range-date-picker.component';\nimport { OpBasicSingleDatePickerComponent } from './basic-single-date-picker/basic-single-date-picker.component';\n\n@NgModule({\n  imports: [\n    FormsModule,\n    ReactiveFormsModule,\n    CommonModule,\n  ],\n\n  providers: [\n    I18nService,\n  ],\n\n  declarations: [\n    OpBasicRangeDatePickerComponent,\n    OpBasicSingleDatePickerComponent,\n  ],\n\n  exports: [\n    OpBasicRangeDatePickerComponent,\n    OpBasicSingleDatePickerComponent,\n  ],\n})\nexport class OpBasicDatePickerModule { }\n","import type { Meta, StoryObj } from '@storybook/angular';\nimport { moduleMetadata } from '@storybook/angular';\nimport * as moment from 'moment';\n\nimport { TimezoneService } from '../app/core/datetime/timezone.service';\nimport { TimezoneServiceStub } from './timezone.service.stub';\n\nimport { I18nService } from '../app/core/i18n/i18n.service';\nimport { I18nServiceStub } from './i18n.service.stub';\n\nimport { WeekdayService } from '../app/core/days/weekday.service';\nimport { WeekdayServiceStub } from './weekday.service.stub';\n\nimport { DayResourceService } from '../app/core/state/days/day.service';\nimport { DayResourceServiceStub } from './day.service.stub';\n\nimport { ConfigurationService } from '../app/core/config/configuration.service';\nimport { ConfigurationServiceStub } from './configuration.service.stub';\n\nimport { States } from '../app/core/states/states.service';\n\nimport { OpBasicDatePickerModule } from '../app/shared/components/datepicker/basic-datepicker.module';\nimport { OpBasicSingleDatePickerComponent } from '../app/shared/components/datepicker/basic-single-date-picker/basic-single-date-picker.component'\n\nconst meta:Meta = {\n  title: 'Patterns/DatePicker',\n  component: OpBasicSingleDatePickerComponent,\n  decorators: [\n    moduleMetadata({\n      imports: [\n        OpBasicDatePickerModule,\n      ],\n      providers: [\n        {\n          provide: TimezoneService,\n          useValue: TimezoneServiceStub, \n        },\n        {\n          provide: ConfigurationService,\n          useValue: ConfigurationServiceStub, \n        },\n        {\n          provide: States,\n          useValue: new States(),\n        },\n        {\n          provide: I18nService,\n          useValue: I18nServiceStub,\n        },\n        {\n          provide: WeekdayService,\n          useFactory: () => new WeekdayServiceStub(),\n        },\n        {\n          provide: DayResourceService,\n          useFactory: () => new DayResourceServiceStub(),\n        },\n      ],\n    }),\n  ],\n};\n\nexport default meta;\ntype Story = StoryObj;\n\nexport const Single:Story = {\n  render: (args) => ({\n    props: {\n      ...args,\n    },\n    template: `\n      <op-basic-single-date-picker></op-basic-single-date-picker>\n   `,\n  }),\n};\n\nexport const SingleWithValue:Story = {\n  render: (args) => ({\n    props: {\n      ...args,\n      date: moment(new Date()).format('YYYY-MM-DD'),\n    },\n    template: `\n      <op-basic-single-date-picker\n        [value]=\"date\"\n      ></op-basic-single-date-picker>\n   `,\n  }),\n};\n\nexport const RangeWithValue:Story = {\n  render: (args) => ({\n    props: {\n      ...args,\n      dates: [\n        moment(new Date()).format('YYYY-MM-DD'),\n        moment(new Date()).add(4, 'days').format('YYYY-MM-DD'),\n      ],\n    },\n    template: `\n      <op-basic-range-date-picker\n        [value]=\"dates\"\n      ></op-basic-range-date-picker>\n   `,\n  }),\n};\n","export const TimezoneServiceStub = {\n};\n","export const ConfigurationServiceStub = {\n  startOfWeek: () => 1,\n  startOfWeekPresent: () => true,\n};\n","import { Constructor } from '@angular/cdk/table';\n\n/**\n * Simple resource collection to construct paths for RESTful resources.\n * Base class for APIV3 and BCF API helpers\n */\nexport class SimpleResourceCollection<T = SimpleResource> {\n  // Base path\n  public readonly path:string;\n\n  constructor(protected basePath:string, readonly segment:string, protected resource?:Constructor<T>) {\n    this.path = `${this.basePath}/${segment}`;\n  }\n\n  public id(id:string|number):T {\n    return new (this.resource || SimpleResource)(this.path, id) as T;\n  }\n\n  /**\n   * Returns either the collection itself, or the resource\n   * located by the ID when present.\n   *\n   * TypeScript will reduce available endpoints to anything available\n   * in this collection AND the resource.\n   *\n   * @param id\n   */\n  public withOptionalId(id?:string|number):this|T {\n    if (_.isNil(id)) {\n      return this;\n    }\n    return this.id(id);\n  }\n\n  public toString():string {\n    return this.path;\n  }\n\n  public toPath():string {\n    return this.path;\n  }\n}\n\n/**\n * Singular RESTful resource object identified by a base path and ID\n */\nexport class SimpleResource {\n  public readonly path:string;\n\n  constructor(readonly basePath:string, readonly segment:string|number) {\n    const separator = segment.toString().startsWith('?') ? '' : '/';\n    this.path = `${this.basePath}${separator}${segment}`;\n  }\n\n  public toString() {\n    return this.path;\n  }\n\n  public toPath():string {\n    return this.path;\n  }\n}\n","// -- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2023 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\nimport { HalResource } from 'core-app/features/hal/resources/hal-resource';\nimport {\n  HTTPClientHeaders,\n  HTTPSupportedMethods,\n} from 'core-app/features/hal/http/http.interfaces';\nimport { HalResourceService } from 'core-app/features/hal/services/hal-resource.service';\nimport { firstValueFrom } from 'rxjs';\n\nexport interface HalLinkInterface {\n  href:string|null;\n  method:HTTPSupportedMethods;\n  title?:string;\n  templated?:boolean;\n  payload?:any;\n  type?:string;\n  identifier?:string;\n}\n\nexport interface HalLinkSource {\n  href:string|null;\n  title:string;\n}\n\nexport interface CallableHalLink extends HalLinkInterface {\n  $link:this;\n  data?:Promise<HalResource>;\n}\n\nexport class HalLink implements HalLinkInterface {\n  constructor(public requestMethod:(method:HTTPSupportedMethods, href:string, data:any, headers:any) => Promise<HalResource>,\n    public href:string|null = null,\n    public title:string = '',\n    public method:HTTPSupportedMethods = 'get',\n    public templated:boolean = false,\n    public payload?:any,\n    public type:string = 'application/json',\n    public identifier?:string) {\n  }\n\n  /**\n   * Create the HalLink from an object with the HalLinkInterface.\n   */\n  public static fromObject(halResourceService:HalResourceService, link:HalLinkInterface):HalLink {\n    return new HalLink(\n      (method:HTTPSupportedMethods, href:string, data:object, headers:HTTPClientHeaders) => firstValueFrom(halResourceService.request(method, href, data, headers)),\n      link.href,\n      link.title,\n      link.method,\n      link.templated,\n      link.payload,\n      link.type,\n      link.identifier,\n    );\n  }\n\n  /**\n   * Fetch the resource.\n   */\n  public $fetch(...params:any[]):Promise<HalResource> {\n    const [data, headers] = params;\n    return this.requestMethod(this.method, this.href as string, data, headers);\n  }\n\n  /**\n   * Prepare the templated link and return a CallableHalLink with the templated parameters set\n   *\n   * @returns {CallableHalLink}\n   */\n  public $prepare(templateValues:{ [templateKey:string]:string }) {\n    if (!this.templated) {\n      throw new Error(`The link ${this.href} is not templated.`);\n    }\n\n    let href = _.clone(this.href) || '';\n    _.each(templateValues, (value:string, key:string) => {\n      const regexp = new RegExp(`{${key}}`);\n      href = href.replace(regexp, value);\n    });\n\n    return new HalLink(\n      this.requestMethod,\n      href,\n      this.title,\n      this.method,\n      false,\n      this.payload,\n      this.type,\n      this.identifier,\n    ).$callable();\n  }\n\n  /**\n   * Return a function that fetches the resource.\n   *\n   * @returns {CallableHalLink}\n   */\n  public $callable():CallableHalLink {\n    const linkFunc:any = (...params:any[]) => this.$fetch(...params);\n\n    _.extend(linkFunc, {\n      $link: this,\n      href: this.href,\n      title: this.title,\n      method: this.method,\n      templated: this.templated,\n      payload: this.payload,\n      type: this.type,\n      identifier: this.identifier,\n    });\n\n    return linkFunc;\n  }\n}\n","// -- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2023 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\nimport { HttpParameterCodec } from '@angular/common/http';\n\nexport class URLParamsEncoder implements HttpParameterCodec {\n  encodeKey(key:string):string {\n    return encodeURIComponent(key);\n  }\n\n  encodeValue(value:string):string {\n    return encodeURIComponent(value);\n  }\n\n  decodeKey(key:string):string {\n    return decodeURIComponent(key);\n  }\n\n  decodeValue(value:string):string {\n    return decodeURIComponent(value);\n  }\n}\n","// -- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2023 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\nimport { HalResource } from 'core-app/features/hal/resources/hal-resource';\n\nexport namespace OpenprojectHalModuleHelpers {\n  export function lazy(obj:HalResource,\n    property:string,\n    getter:{ ():any },\n    setter?:{ (value:any):void }):void {\n    if (_.isObject(obj)) {\n      let done = false;\n      let value:any;\n      const config:any = {\n        get() {\n          if (!done) {\n            value = getter();\n            done = true;\n          }\n          return value;\n        },\n        set: ():void => undefined,\n\n        configurable: true,\n        enumerable: true,\n      };\n\n      if (setter) {\n        config.set = (val:any) => {\n          value = setter(val);\n          done = true;\n        };\n      }\n\n      Object.defineProperty(obj, property, config);\n    }\n  }\n}\n","import * as ObservableArray from 'observable-array';\nimport { HalResource } from 'core-app/features/hal/resources/hal-resource';\nimport { HalLink } from 'core-app/features/hal/hal-link/hal-link';\nimport { HalResourceService } from 'core-app/features/hal/services/hal-resource.service';\nimport { OpenprojectHalModuleHelpers } from 'core-app/features/hal/helpers/lazy-accessor';\n\ninterface HalSource {\n  _links:any;\n  _embedded:any;\n  _type?:string;\n  type?:any;\n}\n\nexport function cloneHalResourceCollection<T extends HalResource>(values:T[]|undefined):T[] {\n  if (_.isNil(values)) {\n    return [];\n  }\n  return values.map((v) => v.$copy<T>());\n}\n\nexport function cloneHalResource<T extends HalResource>(value:T|undefined):T|undefined {\n  if (_.isNil(value)) {\n    return value;\n  }\n  return value.$copy<T>();\n}\n\nexport function initializeHalProperties<T extends HalResource>(halResourceService:HalResourceService, halResource:T) {\n  setSource();\n  setupLinks();\n  setupEmbedded();\n  proxyProperties();\n  setLinksAsProperties();\n  setEmbeddedAsProperties();\n\n  function setSource() {\n    if (!halResource.$source._links) {\n      halResource.$source._links = {};\n    }\n\n    if (!halResource.$source._links.self) {\n      halResource.$source._links.self = { href: null };\n    }\n  }\n\n  function asHalResource(value?:HalSource, loaded = true):HalResource|HalSource|undefined|null {\n    if (_.isNil(value)) {\n      return value;\n    }\n\n    if (value._links || value._embedded || value._type) {\n      return halResourceService.createHalResource(value, loaded);\n    }\n\n    return value;\n  }\n\n  function proxyProperties() {\n    halResource.$embeddableKeys().forEach((property:any) => {\n      Object.defineProperty(halResource, property, {\n        get() {\n          const value = halResource.$source[property];\n          return asHalResource(value, true);\n        },\n\n        set(value) {\n          halResource.$source[property] = value;\n        },\n\n        enumerable: true,\n        configurable: true,\n      });\n    });\n  }\n\n  function setLinksAsProperties() {\n    halResource.$linkableKeys().forEach((linkName:string) => {\n      OpenprojectHalModuleHelpers.lazy(halResource, linkName,\n        () => {\n          const link:any = halResource.$links[linkName].$link || halResource.$links[linkName];\n\n          if (Array.isArray(link)) {\n            const items = link.map((item) => halResourceService.createLinkedResource(halResource,\n              linkName,\n              item.$link));\n            var property:HalResource[] = new ObservableArray(...items).on('change', () => {\n              property.forEach((item) => {\n                if (!item.$link) {\n                  property.splice(property.indexOf(item), 1);\n                }\n              });\n\n              halResource.$source._links[linkName] = property.map((item) => item.$link);\n            });\n\n            return property;\n          }\n\n          if (link.href) {\n            if (link.method !== 'get') {\n              return HalLink.fromObject(halResourceService, link).$callable();\n            }\n\n            return halResourceService.createLinkedResource(halResource, linkName, link);\n          }\n\n          return null;\n        },\n        (val:any) => setter(val, linkName));\n    });\n  }\n\n  function setEmbeddedAsProperties() {\n    if (!halResource.$source._embedded) {\n      return;\n    }\n\n    Object.keys(halResource.$source._embedded).forEach((name) => {\n      OpenprojectHalModuleHelpers.lazy(halResource,\n        name,\n        () => halResource.$embedded[name],\n        (val:any) => setter(val, name));\n    });\n  }\n\n  function setupProperty(name:string, callback:(element:any) => any) {\n    const instanceName = `$${name}`;\n    const sourceName = `_${name}`;\n    const sourceObj:any = halResource.$source[sourceName];\n\n    if (_.isObject(sourceObj)) {\n      Object.keys(sourceObj).forEach((propName) => {\n        OpenprojectHalModuleHelpers.lazy((halResource)[instanceName],\n          propName,\n          () => callback((sourceObj as any)[propName]));\n      });\n    }\n  }\n\n  function setupLinks() {\n    setupProperty('links',\n      (link) => {\n        if (Array.isArray(link)) {\n          return link.map((l) => HalLink.fromObject(halResourceService, l).$callable());\n        }\n        return HalLink.fromObject(halResourceService, link).$callable();\n      });\n  }\n\n  function setupEmbedded() {\n    setupProperty('embedded', (element:any) => {\n      if (Array.isArray(element)) {\n        return element.map((source) => asHalResource(source, true));\n      }\n\n      if (_.isObject(element)) {\n        _.each(element, (child:any, name:string) => {\n          if (child && (child._embedded || child._links)) {\n            OpenprojectHalModuleHelpers.lazy(element as any,\n              name,\n              () => asHalResource(child, true));\n          }\n        });\n      }\n\n      return asHalResource(element, true);\n    });\n  }\n\n  function setter(val:HalResource[]|HalResource|{ href?:string }, linkName:string) {\n    const isArray = Array.isArray(val);\n\n    if (!val) {\n      halResource.$source._links[linkName] = { href: null };\n    } else if (isArray) {\n      halResource.$source._links[linkName] = (val as HalResource[]).map((el:any) => ({ href: el.href }));\n    } else if (val.hasOwnProperty('$link')) {\n      const link = (val as HalResource).$link;\n\n      if (link.href) {\n        halResource.$source._links[linkName] = link;\n      }\n    } else if ('href' in val) {\n      halResource.$source._links[linkName] = { href: val.href };\n    }\n\n    if (halResource.$embedded && halResource.$embedded[linkName]) {\n      halResource.$embedded[linkName] = val;\n\n      if (isArray) {\n        halResource.$source._embedded[linkName] = (val as HalResource[]).map((el) => el.$source);\n      } else {\n        halResource.$source._embedded[linkName] = _.get(val, '$source', val);\n      }\n    }\n\n    return val;\n  }\n}\n","import { HttpErrorResponse } from '@angular/common/http';\nimport { ErrorResource } from 'core-app/features/hal/resources/error-resource';\n\nexport class HalError extends Error {\n  readonly name = 'HALError';\n\n  get message():string {\n    return this.resource?.message || this.httpError?.message || 'Unknown error';\n  }\n\n  get errorIdentifier():string {\n    return this.resource?.errorIdentifier || 'unknown';\n  }\n\n  constructor(\n    readonly httpError:HttpErrorResponse,\n    readonly resource:ErrorResource|null,\n  ) {\n    super();\n    Object.setPrototypeOf(this, HalError.prototype);\n  }\n}\n","import {\n  map,\n  mergeMap,\n} from 'rxjs/operators';\nimport { CollectionResource } from 'core-app/features/hal/resources/collection-resource';\nimport {\n  forkJoin,\n  Observable,\n  of,\n} from 'rxjs';\nimport { ApiV3PaginationParameters } from 'core-app/core/apiv3/paths/apiv3-list-resource.interface';\nimport { IHALCollection } from 'core-app/core/apiv3/types/hal-collection.type';\nimport { HalResource } from 'core-app/features/hal/resources/hal-resource';\n\n/**\n * The API will resolve pageSize=-1 to the maximum value\n * we can request in one call. This is configurable under administration.\n */\nexport const MAGIC_PAGE_NUMBER = -1;\n\n/**\n * Right now, we still support HAL-class based collections as well as interface-based responses.\n */\ntype ApiV3CollectionType<T> = CollectionResource<T>|IHALCollection<T>;\n\n/**\n * Extract the elements of either a HAL class or an interface\n */\nfunction extractCollectionElements<T>(collection:ApiV3CollectionType<T>):T[] {\n  // Some API endpoints return an undefined _embedded.elements\n  // so we ensure we return an array at all times.\n  if (collection instanceof HalResource) {\n    return collection.elements || [];\n  }\n\n  return collection._embedded?.elements || [];\n}\n\n/**\n * Get ALL pages of a potentially paginated APIv3 request, returning an array of collections\n *\n * @param request The requesting callback to request specific pages\n * @param pageSize The pageSize parameter to request, defaults to -1 (the maximum magic page number)\n * @return an array of HAL collections\n */\nexport function getPaginatedCollections<T, C extends ApiV3CollectionType<T>>(\n  request:(params:ApiV3PaginationParameters) => Observable<C>,\n  pageSize = MAGIC_PAGE_NUMBER,\n):Observable<ApiV3CollectionType<T>[]> {\n  return request({ pageSize, offset: 1 })\n    .pipe(\n      mergeMap((collection:C) => {\n        const resolvedSize = collection.pageSize;\n\n        if (collection.total > collection.count) {\n          const remaining = collection.total - collection.count;\n          const pagesRemaining = Math.ceil(remaining / resolvedSize);\n          const calls = new Array(pagesRemaining)\n            .fill(null)\n            .map((_, i) => request({ pageSize: resolvedSize, offset: i + 2 }));\n\n          // Branch out and fetch all remaining pages in parallel.\n          // Afterwards, merge the resulting list\n          return forkJoin(...calls)\n            .pipe(\n              map((results:C[]) => [collection, ...results]),\n            );\n        }\n\n        // The current page is the only page, return the results.\n        return of([collection]);\n      }),\n    );\n}\n\n/**\n * Get ALL pages of a potentially paginated APIv3 request, returning all concatenated elements.\n *\n * @param request The requesting callback to request specific pages\n * @param pageSize The pageSize parameter to request, defaults to -1 (the maximum magic page number)\n * @return an array of plain HAL resources\n */\nexport function getPaginatedResults<T>(\n  request:(params:ApiV3PaginationParameters) => Observable<ApiV3CollectionType<T>>,\n  pageSize = MAGIC_PAGE_NUMBER,\n):Observable<T[]> {\n  return getPaginatedCollections(request, pageSize)\n    .pipe(\n      map(\n        (results:ApiV3CollectionType<T>[]) => results.reduce(\n          (acc, next) => acc.concat(extractCollectionElements(next)),\n          [] as T[],\n        ),\n      ),\n    );\n}\n","// -- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2023 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\nimport {\n  Injectable,\n  Injector,\n} from '@angular/core';\nimport {\n  HttpClient,\n  HttpErrorResponse,\n  HttpParams,\n} from '@angular/common/http';\nimport {\n  catchError,\n  map,\n} from 'rxjs/operators';\nimport {\n  Observable,\n  throwError,\n} from 'rxjs';\nimport { CollectionResource } from 'core-app/features/hal/resources/collection-resource';\nimport { ErrorResource } from 'core-app/features/hal/resources/error-resource';\nimport * as Pako from 'pako';\nimport * as base64 from 'byte-base64';\nimport { whenDebugging } from 'core-app/shared/helpers/debug_output';\nimport {\n  HTTPClientHeaders,\n  HTTPClientOptions,\n  HTTPClientParamMap,\n  HTTPSupportedMethods,\n} from 'core-app/features/hal/http/http.interfaces';\nimport {\n  HalLink,\n  HalLinkInterface,\n} from 'core-app/features/hal/hal-link/hal-link';\nimport { URLParamsEncoder } from 'core-app/features/hal/services/url-params-encoder';\nimport {\n  HalResource,\n  HalResourceClass,\n} from 'core-app/features/hal/resources/hal-resource';\nimport { initializeHalProperties } from '../helpers/hal-resource-builder';\nimport { HalError } from 'core-app/features/hal/services/hal-error';\nimport { getPaginatedCollections } from 'core-app/core/apiv3/helpers/get-paginated-results';\n\nexport interface HalResourceFactoryConfigInterface {\n  cls?:any;\n  attrTypes?:{ [attrName:string]:string };\n}\n\ninterface ErrorWithType {\n  _type?:string;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class HalResourceService {\n  /**\n   * List of all known hal resources, extendable.\n   */\n  private config:{ [typeName:string]:HalResourceFactoryConfigInterface } = {};\n\n  constructor(\n    readonly injector:Injector,\n    readonly http:HttpClient,\n  ) {\n  }\n\n  /**\n   * Perform a HTTP request and return a HalResource promise.\n   */\n  public request<T extends HalResource>(method:HTTPSupportedMethods, href:string, data?:unknown, headers:HTTPClientHeaders = {}):Observable<T> {\n    // HttpClient requires us to create HttpParams instead of passing data for get\n    // so forward to that method instead.\n    if (method === 'get') {\n      return this.get(href, data as HTTPClientParamMap|undefined, headers);\n    }\n\n    const config:HTTPClientOptions = {\n      body: data || {},\n      headers,\n      withCredentials: true,\n      responseType: 'json',\n    };\n\n    return this.performRequest(method, href, config);\n  }\n\n  private performRequest<T extends HalResource>(method:HTTPSupportedMethods, href:string, config:HTTPClientOptions):Observable<T> {\n    return this.http.request(method, href, config)\n      .pipe(\n        map((response:unknown) => this.createHalResource<T>(response)),\n        catchError((error:HttpErrorResponse) => {\n          whenDebugging(() => console.error(`Failed to ${method} ${href}: ${error.name}`));\n          return this.createErrorObservable(error);\n        }),\n      );\n  }\n\n  /**\n   * Perform a GET request and return a resource promise.\n   *\n   * @param href\n   * @param params\n   * @param headers\n   * @returns {Promise<HalResource>}\n   */\n  public get<T extends HalResource>(href:string, params?:HTTPClientParamMap, headers?:HTTPClientHeaders):Observable<T> {\n    const config:HTTPClientOptions = {\n      headers,\n      params: new HttpParams({ encoder: new URLParamsEncoder(), fromObject: params }),\n      withCredentials: true,\n      responseType: 'json',\n    };\n\n    return this.performRequest('get', href, config);\n  }\n\n  /**\n   * Return all potential pages to the request, when the elements returned from API is smaller\n   * than the expected.\n   *\n   * @param href The URL to request\n   * @param params Parameters to pass to each paged request\n   * @param headers Headers to pass to each paged request\n   * @return {Observable<CollectionResource[]>}\n   */\n  public getAllPaginated<T extends CollectionResource>(\n    href:string,\n    params:Record<string, string|number> = {},\n    headers:HTTPClientHeaders = {},\n  ):Observable<T[]> {\n    return getPaginatedCollections(\n      (pageParams) => {\n        const requestParams = { ...params, ...pageParams };\n        return this.request<CollectionResource<T>>('get', href, this.toEprops(requestParams), headers);\n      },\n      (params.pageSize as number|undefined) || -1,\n    ) as Observable<T[]>;\n  }\n\n  /**\n   * Perform a PUT request and return a resource promise.\n   * @param href\n   * @param data\n   * @param headers\n   * @returns {Promise<HalResource>}\n   */\n  public put<T extends HalResource>(href:string, data?:any, headers?:HTTPClientHeaders):Observable<T> {\n    return this.request('put', href, data, headers);\n  }\n\n  /**\n   * Perform a POST request and return a resource promise.\n   *\n   * @param href\n   * @param data\n   * @param headers\n   * @returns {Promise<HalResource>}\n   */\n  public post<T extends HalResource>(href:string, data?:any, headers?:HTTPClientHeaders):Observable<T> {\n    return this.request('post', href, data, headers);\n  }\n\n  /**\n   * Perform a PATCH request and return a resource promise.\n   *\n   * @param href\n   * @param data\n   * @param headers\n   * @returns {Promise<HalResource>}\n   */\n  public patch<T extends HalResource>(href:string, data?:any, headers?:HTTPClientHeaders):Observable<T> {\n    return this.request('patch', href, data, headers);\n  }\n\n  /**\n   * Perform a DELETE request and return a resource promise\n   *\n   * @param href\n   * @param data\n   * @param headers\n   * @returns {Promise<HalResource>}\n   */\n  public delete<T extends HalResource>(href:string, data?:any, headers?:HTTPClientHeaders):Observable<T> {\n    return this.request('delete', href, data, headers);\n  }\n\n  /**\n   * Register a HalResource for use with the API.\n   * @param {HalResourceStatic} resource\n   */\n  public registerResource(key:string, entry:HalResourceFactoryConfigInterface) {\n    this.config[key] = entry;\n  }\n\n  /**\n   * Get the default class.\n   * Initially, it's HalResource.\n   *\n   * @returns {HalResource}\n   */\n  public get defaultClass():HalResourceClass<HalResource> {\n    const defaultCls:HalResourceClass = HalResource;\n    return defaultCls;\n  }\n\n  /**\n   * Create a HalResource from a source object.\n   * If the APIv3 _type attribute is defined and the type is configured,\n   * the respective class will be used for instantiation.\n   *\n   *\n   * @param source\n   * @returns {HalResource}\n   */\n  public createHalResource<T extends HalResource = HalResource>(source:any, loaded = true):T {\n    if (_.isNil(source)) {\n      source = HalResource.getEmptyResource();\n    }\n\n    const type = source._type || 'HalResource';\n    return this.createHalResourceOfType<T>(type, source, loaded);\n  }\n\n  public createHalResourceOfType<T extends HalResource = HalResource>(type:string, source:any, loaded = false) {\n    const resourceClass:HalResourceClass<T> = this.getResourceClassOfType(type);\n    const initializer = (halResource:T) => initializeHalProperties(this, halResource);\n    const resource = new resourceClass(this.injector, source, loaded, initializer, type);\n\n    return resource;\n  }\n\n  /**\n   * Create a resource class of the given class\n   * @param resourceClass\n   * @param source\n   * @param loaded\n   */\n  public createHalResourceOfClass<T extends HalResource>(resourceClass:HalResourceClass<T>, source:any, loaded = false) {\n    const initializer = (halResource:T) => initializeHalProperties(this, halResource);\n    const type = source._type || 'HalResource';\n    const resource = new resourceClass(this.injector, source, loaded, initializer, type);\n\n    return resource;\n  }\n\n  /**\n   * Create a linked HalResource from the given link.\n   *\n   * @param {HalLinkInterface} link\n   * @returns {HalResource}\n   */\n  public fromLink(link:HalLinkInterface) {\n    const resource = HalResource.getEmptyResource(HalLink.fromObject(this, link));\n    return this.createHalResource(resource, false);\n  }\n\n  /**\n   * Create an empty HAL resource with only the self link set.\n   * @param href Self link of the HAL resource\n   */\n  public fromSelfLink(href:string|null) {\n    const source = { _links: { self: { href } } };\n    return this.createHalResource(source);\n  }\n\n  /**\n   * Get a linked resource from its HalLink with the correct type.\n   */\n  public createLinkedResource<T extends HalResource = HalResource>(halResource:T, linkName:string, link:HalLinkInterface) {\n    const source = HalResource.getEmptyResource();\n    const fromType = halResource.$halType;\n    const toType = this.getResourceClassOfAttribute(fromType, linkName) || 'HalResource';\n\n    source._links.self = link;\n\n    return this.createHalResourceOfType(toType, source, false);\n  }\n\n  /**\n   * Get the configured resource class of a type.\n   *\n   * @param type\n   * @returns {HalResource}\n   */\n  protected getResourceClassOfType<T extends HalResource>(type:string):HalResourceClass<T> {\n    const config = this.config[type];\n    return (config && config.cls) ? config.cls : this.defaultClass;\n  }\n\n  /**\n   * Get the hal type for an attribute\n   *\n   * @param type\n   * @param attribute\n   * @returns {any}\n   */\n  protected getResourceClassOfAttribute<T extends HalResource = HalResource>(type:string, attribute:string):string|null {\n    const typeConfig = this.config[type];\n    const types = (typeConfig && typeConfig.attrTypes) || {};\n    return types[attribute];\n  }\n\n  protected toEprops(params:unknown):{ eprops:string } {\n    const deflatedArray = Pako.deflate(JSON.stringify(params));\n    const compressed = base64.bytesToBase64(deflatedArray);\n\n    return { eprops: compressed };\n  }\n\n  private createErrorObservable(error:HttpErrorResponse):Observable<never> {\n    let resource:ErrorResource|null = null;\n\n    const body = error.error as string|ErrorWithType|unknown;\n    // eslint-disable-next-line no-underscore-dangle\n    if (typeof body === 'object' && (body as ErrorWithType)?._type) {\n      resource = this.createHalResource<ErrorResource>(error.error);\n    }\n\n    return throwError(new HalError(error, resource));\n  }\n}\n","import {\n  ApiV3Filter,\n  ApiV3FilterBuilder,\n} from 'core-app/shared/helpers/api-v3/api-v3-filter-builder';\n\n/**\n * Add or append filters to a given base URL.\n * If the URL already had filters, it is appending them, overriding existing filters with the same key.\n *\n * @param basePath The base path to add filters to.\n * @param filters An ApiV3FilterBuilder object containing the filters to add.\n * @param params Additional query parameters to add, if any.\n */\nexport function addFiltersToPath(\n  basePath:string,\n  filters:ApiV3FilterBuilder,\n  params:{ [key:string]:string } = {},\n):URL {\n  const url = new URL(basePath, window.location.origin);\n\n  if (url.searchParams.has('filters')) {\n    const existingFilters = JSON.parse(url.searchParams.get('filters') as string) as ApiV3Filter[];\n    url.searchParams.set('filters', JSON.stringify(existingFilters.concat(filters.filters)));\n  } else {\n    url.searchParams.set('filters', filters.toJson());\n  }\n\n  Object\n    .keys(params)\n    .forEach((key) => {\n      url.searchParams.set(key, params[key]);\n    });\n\n  return url;\n}\n","/* eslint-disable max-classes-per-file */\n\nimport { Constructor } from '@angular/cdk/table';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\nimport {\n  SimpleResource,\n  SimpleResourceCollection,\n} from 'core-app/core/apiv3/paths/path-resources';\nimport { InjectField } from 'core-app/shared/helpers/angular/inject-field.decorator';\nimport { HalResourceService } from 'core-app/features/hal/services/hal-resource.service';\nimport { ApiV3Service } from 'core-app/core/apiv3/api-v3.service';\nimport { ApiV3FilterBuilder } from 'core-app/shared/helpers/api-v3/api-v3-filter-builder';\nimport { HalResource } from 'core-app/features/hal/resources/hal-resource';\nimport { CollectionResource } from 'core-app/features/hal/resources/collection-resource';\nimport { getPaginatedResults } from 'core-app/core/apiv3/helpers/get-paginated-results';\nimport { addFiltersToPath } from 'core-app/core/apiv3/helpers/add-filters-to-path';\n\nexport class ApiV3ResourcePath<T = HalResource> extends SimpleResource {\n  readonly injector = this.apiRoot.injector;\n\n  @InjectField() halResourceService:HalResourceService;\n\n  constructor(\n    protected apiRoot:ApiV3Service,\n    readonly basePath:string,\n    readonly id:string|number,\n    protected parent?:ApiV3ResourcePath|ApiV3ResourceCollection<T, ApiV3GettableResource<T>>,\n  ) {\n    super(basePath, id);\n  }\n\n  /**\n   * Build a singular resource from the current segment\n   *\n   * @param segment Additional segment to add to the current path\n   * @param cls Class to use as return type\n   */\n  protected subResource<R = ApiV3GettableResource>(\n    segment:string,\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    cls:Constructor<R> = ApiV3GettableResource as unknown as Constructor<R>,\n  ):R {\n    // eslint-disable-next-line new-cap\n    return new cls(this.apiRoot, this.path, segment, this);\n  }\n}\n\nexport class ApiV3GettableResource<T = HalResource> extends ApiV3ResourcePath<T> {\n  /**\n   * Perform a request to the HalResourceService with the current path\n   */\n  public get():Observable<T> {\n    return this\n      .halResourceService\n      .get(this.path) as unknown as Observable<T>;\n  }\n}\n\nexport class ApiV3GettableResourceCollection<T = HalResource, V = CollectionResource<T>> extends ApiV3GettableResource<V> {\n  /**\n   * Perform a request to the HalResourceService with the current path,\n   * loading all pages into a single array\n   */\n  public getPaginatedResults():Observable<T[]> {\n    return getPaginatedResults<T>(\n      (pageParams) => this.halResourceService.request<CollectionResource<T>>('get', this.path, pageParams),\n      -1,\n    );\n  }\n}\n\nexport class ApiV3ResourceCollection<V, T extends ApiV3GettableResource<V>> extends SimpleResourceCollection {\n  readonly injector = this.apiRoot.injector;\n\n  @InjectField() http:HttpClient;\n\n  @InjectField() halResourceService:HalResourceService;\n\n  constructor(\n    protected apiRoot:ApiV3Service,\n    protected basePath:string,\n    segment:string,\n    protected resource?:Constructor<T>,\n  ) {\n    super(basePath, segment, resource);\n  }\n\n  /**\n   * Returns an instance of T for the given singular resource ID.\n   *\n   * @param input Identifier of the resource, may be a string or number, or a HalResource with id property.\n   */\n  public id(input:string|number|{ id:string|null }):T {\n    let id:string;\n    if (typeof input === 'string' || typeof input === 'number') {\n      id = input.toString();\n    } else {\n      id = input.id as string;\n    }\n\n    return new (this.resource || ApiV3GettableResource)(this.apiRoot, this.path, id, this) as T;\n  }\n\n  public withOptionalId(id?:string|number|null):this|T {\n    if (_.isNil(id)) {\n      return this;\n    }\n    return this.id(id);\n  }\n\n  /**\n   * Returns the path string to the requested endpoint.\n   */\n  public toString():string {\n    return this.path;\n  }\n\n  /**\n   * Returns the path string to the requested endpoint.\n   */\n  public toPath():string {\n    return this.path;\n  }\n\n  /**\n   * Returns a new resource with the path extended with a URL query\n   * to match the filters.\n   *\n   * @param filters filter object to filter with\n   * @param params additional URL params to append\n   * @param resourceClass The APIV3 resource class to instantiate\n   */\n  public filtered<R = ApiV3GettableResourceCollection<V>>(\n    filters:ApiV3FilterBuilder,\n    params:{ [key:string]:string } = {},\n    resourceClass?:Constructor<R>,\n  ):R {\n    const url = addFiltersToPath(this.path, filters, params);\n    const cls = resourceClass || ApiV3GettableResourceCollection;\n    // eslint-disable-next-line new-cap\n    return new cls(this.apiRoot, url.pathname, url.search, this) as R;\n  }\n\n  /**\n   * Signal the endpoint with a given set of filters and select params.\n   * Returns an observable response.\n   *\n   * @param filters filter object to filter with\n   * @param select The signalling parameters to request\n   * @param params additional URL params to append\n   */\n  public signalled<R>(filters:ApiV3FilterBuilder, select:string[], params:{ [key:string]:string } = {}):Observable<R> {\n    const url = addFiltersToPath(this.path, filters, { ...params, select: select.join(',') });\n\n    return this\n      .http\n      .get<R>(url.toString());\n  }\n\n  /**\n   * Build a singular resource from the current segment\n   *\n   * @param segment Additional segment to add to the current path\n   * @param cls Class to use as return type\n   */\n  protected subResource<R = ApiV3GettableResource>(\n    segment:string,\n    cls:Constructor<R> = ApiV3GettableResource as unknown as Constructor<R>,\n  ):R {\n    // eslint-disable-next-line new-cap\n    return new cls(this.apiRoot, this.path, segment, this);\n  }\n}\n","import { ApiV3FilterBuilder } from 'core-app/shared/helpers/api-v3/api-v3-filter-builder';\n\nexport class ApiV3Paths {\n  readonly apiV3Base:string;\n\n  constructor(basePath:string) {\n    this.apiV3Base = `${basePath}/api/v3`;\n  }\n\n  public get openApiSpecPath():string {\n    return `${this.apiV3Base}/spec.json`;\n  }\n\n  /**\n   * Preview markup path\n   *\n   * Primarily used from ckeditor-augmented-textarea\n   * https://github.com/opf/commonmark-ckeditor-build/\n   *\n   * @param context\n   */\n  public previewMarkup(context:string) {\n    const base = `${this.apiV3Base}/render/markdown`;\n\n    if (context) {\n      return `${base}?context=${context}`;\n    }\n    return base;\n  }\n\n  /**\n   * Principals autocompleter path\n   *\n   * Primarily used from ckeditor-augmented-textarea\n   * https://github.com/opf/commonmark-ckeditor-build/\n   *\n   */\n  public principals(projectId:string|number, term:string|null) {\n    const filters:ApiV3FilterBuilder = new ApiV3FilterBuilder();\n    // Only real and activated users:\n    filters.add('status', '!', ['3']);\n    // that are members of that project:\n    filters.add('member', '=', [projectId.toString()]);\n    // That are users:\n    filters.add('type', '=', ['User', 'Group']);\n\n    if (term && term.length > 0) {\n      // Containing the that substring:\n      filters.add('name', '~', [term]);\n    }\n\n    return `${this.apiV3Base\n    }/principals?${\n      filters.toParams({ sortBy: '[[\"name\",\"asc\"]]', offset: '1', pageSize: '10' })}`;\n  }\n}\n","// -- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2023 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\nimport { Injectable } from '@angular/core';\nimport { ApiV3Paths } from './apiv3-paths';\n\n@Injectable({ providedIn: 'root' })\nexport class PathHelperService {\n  public readonly appBasePath = window.appBasePath || '';\n\n  public readonly api = {\n    v3: new ApiV3Paths(this.appBasePath),\n  };\n\n  public get staticBase() {\n    return this.appBasePath;\n  }\n\n  public attachmentDownloadPath(attachmentIdentifier:string, slug:string|undefined) {\n    const path = `${this.staticBase}/attachments/${attachmentIdentifier}`;\n\n    if (slug) {\n      return `${path}/${slug}`;\n    }\n    return path;\n  }\n\n  public attachmentContentPath(attachmentIdentifier:number|string) {\n    return `${this.staticBase}/attachments/${attachmentIdentifier}/content`;\n  }\n\n  public fileLinksPath():string {\n    return `${this.api.v3.apiV3Base}/file_links`;\n  }\n\n  public ifcModelsPath(projectIdentifier:string) {\n    return `${this.staticBase}/projects/${projectIdentifier}/ifc_models`;\n  }\n\n  public ifcModelsNewPath(projectIdentifier:string) {\n    return `${this.ifcModelsPath(projectIdentifier)}/new`;\n  }\n\n  public ifcModelsEditPath(projectIdentifier:string, modelId:number|string) {\n    return `${this.ifcModelsPath(projectIdentifier)}/${modelId}/edit`;\n  }\n\n  public ifcModelsDeletePath(projectIdentifier:string, modelId:number|string) {\n    return `${this.ifcModelsPath(projectIdentifier)}/${modelId}`;\n  }\n\n  public bimDetailsPath(projectIdentifier:string, workPackageId:string, viewpoint:number|string|null = null) {\n    let path = `${this.projectPath(projectIdentifier)}/bcf/details/${workPackageId}`;\n\n    if (viewpoint !== null) {\n      path += `?query_props=%7B\"t\"%3A\"id%3Adesc\"%2C\"dr\"%3A\"splitCards\"%7D&viewpoint=${viewpoint}`;\n    }\n\n    return path;\n  }\n\n  public highlightingCssPath() {\n    return `${this.staticBase}/highlighting/styles`;\n  }\n\n  public forumPath(projectIdentifier:string, forumIdentifier:string) {\n    return `${this.projectForumPath(projectIdentifier)}/${forumIdentifier}`;\n  }\n\n  public keyboardShortcutsHelpPath() {\n    return `${this.staticBase}/help/keyboard_shortcuts`;\n  }\n\n  public messagePath(messageIdentifier:string) {\n    return `${this.staticBase}/topics/${messageIdentifier}`;\n  }\n\n  public myPagePath() {\n    return `${this.staticBase}/my/page`;\n  }\n\n  public myNotificationsSettingsPath() {\n    return `${this.staticBase}/my/notifications`;\n  }\n\n  public newsPath(newsId:string) {\n    return `${this.staticBase}/news/${newsId}`;\n  }\n\n  public notificationsPath():string {\n    return `${this.staticBase}/notifications`;\n  }\n\n  public loginPath() {\n    return `${this.staticBase}/login`;\n  }\n\n  public projectsPath() {\n    return `${this.staticBase}/projects`;\n  }\n\n  public projectsNewPath():string {\n    return `${this.staticBase}/projects/new`;\n  }\n\n  public projectPath(projectIdentifier:string) {\n    return `${this.projectsPath()}/${projectIdentifier}`;\n  }\n\n  public projectActivityPath(projectIdentifier:string) {\n    return `${this.projectPath(projectIdentifier)}/activity`;\n  }\n\n  public projectForumPath(projectIdentifier:string) {\n    return `${this.projectPath(projectIdentifier)}/forums`;\n  }\n\n  public projectCalendarPath(projectId:string) {\n    return `${this.projectPath(projectId)}/calendar`;\n  }\n\n  public projectMembershipsPath(projectId:string) {\n    return `${this.projectPath(projectId)}/members`;\n  }\n\n  public projectNewsPath(projectId:string) {\n    return `${this.projectPath(projectId)}/news`;\n  }\n\n  public projectTimeEntriesPath(projectIdentifier:string) {\n    return `${this.projectPath(projectIdentifier)}/cost_reports`;\n  }\n\n  public projectWikiPath(projectId:string) {\n    return `${this.projectPath(projectId)}/wiki`;\n  }\n\n  public projectWorkPackagePath(projectId:string, wpId:string|number) {\n    return `${this.projectWorkPackagesPath(projectId)}/${wpId}`;\n  }\n\n  public projectWorkPackagesPath(projectId:string) {\n    return `${this.projectPath(projectId)}/work_packages`;\n  }\n\n  public projectWorkPackageNewPath(projectId:string) {\n    return `${this.projectWorkPackagesPath(projectId)}/new`;\n  }\n\n  public projectBoardsPath(projectIdentifier:string|null) {\n    if (projectIdentifier) {\n      return `${this.projectPath(projectIdentifier)}/boards`;\n    }\n    return `${this.staticBase}/boards`;\n  }\n\n  public projectDashboardsPath(projectIdentifier:string) {\n    return `${this.projectPath(projectIdentifier)}/dashboards`;\n  }\n\n  public timeEntriesPath(workPackageId:string|number) {\n    const suffix = '/time_entries';\n\n    if (workPackageId) {\n      return this.workPackagePath(workPackageId) + suffix;\n    }\n    return this.staticBase + suffix; // time entries root path\n  }\n\n  public usersPath() {\n    return `${this.staticBase}/users`;\n  }\n\n  public groupsPath() {\n    return `${this.staticBase}/groups`;\n  }\n\n  public placeholderUsersPath() {\n    return `${this.staticBase}/placeholder_users`;\n  }\n\n  public userPath(id:string|number) {\n    return `${this.usersPath()}/${id}`;\n  }\n\n  public placeholderUserPath(id:string|number) {\n    return `${this.placeholderUsersPath()}/${id}`;\n  }\n\n  public groupPath(id:string|number) {\n    return `${this.groupsPath()}/${id}`;\n  }\n\n  public rolesPath() {\n    return `${this.staticBase}/roles`;\n  }\n\n  public rolePath(id:string|number) {\n    return `${this.rolesPath()}/${id}`;\n  }\n\n  public versionsPath() {\n    return `${this.staticBase}/versions`;\n  }\n\n  public versionEditPath(id:string|number) {\n    return `${this.staticBase}/versions/${id}/edit`;\n  }\n\n  public versionShowPath(id:string|number) {\n    return `${this.staticBase}/versions/${id}`;\n  }\n\n  public workPackagesPath() {\n    return `${this.staticBase}/work_packages`;\n  }\n\n  public workPackagePath(id:string|number) {\n    return `${this.staticBase}/work_packages/${id}`;\n  }\n\n  public workPackageCopyPath(workPackageId:string|number) {\n    return `${this.workPackagePath(workPackageId)}/copy`;\n  }\n\n  public workPackageDetailsCopyPath(projectIdentifier:string, workPackageId:string|number) {\n    return `${this.projectWorkPackagesPath(projectIdentifier)}/details/${workPackageId}/copy`;\n  }\n\n  public workPackagesBulkDeletePath() {\n    return `${this.workPackagesPath()}/bulk`;\n  }\n\n  public textFormattingHelp() {\n    return `${this.staticBase}/help/text_formatting`;\n  }\n}\n","// -- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2023 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\nimport { HalResource } from 'core-app/features/hal/resources/hal-resource';\nimport { SchemaResource } from 'core-app/features/hal/resources/schema-resource';\n\nexport class HalPayloadHelper {\n  /**\n   * Extract payload from the given request with schema.\n   * This will ensure we will only write writable attributes and so on.\n   *\n   * @param resource\n   * @param schema\n   */\n  static extractPayload<T extends HalResource = HalResource>(resource:T|Object|null, schema:SchemaResource|null = null):Object {\n    if (resource instanceof HalResource && schema) {\n      return this.extractPayloadFromSchema(resource, schema);\n    } if (resource && !(resource instanceof HalResource)) {\n      return resource;\n    }\n    return {};\n  }\n\n  /**\n   * Extract writable payload from a HAL resource class to be used for API calls.\n   *\n   * The schema contains writable information about attributes, which is what this method\n   * iterates in order to build the HAL-compatible object.\n   *\n   * @param resource A HalResource to extract payload from\n   * @param schema The associated schema to determine writable state of attributes\n   */\n  static extractPayloadFromSchema<T extends HalResource = HalResource>(resource:T, schema:SchemaResource) {\n    const payload:any = {\n      _links: {},\n    };\n\n    const nonLinkProperties = [];\n\n    for (const key in schema) {\n      if (schema.hasOwnProperty(key) && schema[key] && schema[key].writable) {\n        if (resource.$links[key]) {\n          if (Array.isArray(resource[key])) {\n            payload._links[key] = _.map(resource[key], (element) => ({ href: (element as HalResource).href }));\n          } else {\n            payload._links[key] = {\n              href: (resource[key] && resource[key].href),\n            };\n          }\n        } else {\n          nonLinkProperties.push(key);\n        }\n      }\n    }\n\n    _.each(nonLinkProperties, (property) => {\n      if (resource.hasOwnProperty(property) || resource[property]) {\n        if (Array.isArray(resource[property])) {\n          payload[property] = _.map(resource[property], (element:any) => {\n            if (element instanceof HalResource) {\n              return this.extractPayloadFromSchema(element, element.currentSchema || element.schema);\n            }\n            return element;\n          });\n        } else {\n          payload[property] = resource[property];\n        }\n      }\n    });\n\n    return payload;\n  }\n}\n","import { ApiV3ResourcePath } from 'core-app/core/apiv3/paths/apiv3-resource';\nimport { FormResource } from 'core-app/features/hal/resources/form-resource';\nimport { Observable } from 'rxjs';\nimport { SchemaResource } from 'core-app/features/hal/resources/schema-resource';\nimport { HalPayloadHelper } from 'core-app/features/hal/schemas/hal-payload.helper';\n\nexport class ApiV3FormResource<T extends FormResource = FormResource> extends ApiV3ResourcePath<T> {\n  /**\n   * POST to the form resource identified by this path\n   * @param request The request payload\n   */\n  public post(request:Object = {}, schema:SchemaResource|null = null):Observable<T> {\n    return this\n      .halResourceService\n      .post<T>(\n      this.path,\n      this.extractPayload(request, schema),\n    );\n  }\n\n  /**\n   * Extract payload for the form from the request and optional schema.\n   *\n   * @param request\n   * @param schema\n   */\n  public extractPayload(request:T|Object, schema:SchemaResource|null = null) {\n    return HalPayloadHelper.extractPayload(request, schema);\n  }\n}\n","// -- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2023 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\nimport { ApiV3FormResource } from 'core-app/core/apiv3/forms/apiv3-form-resource';\nimport { SchemaResource } from 'core-app/features/hal/resources/schema-resource';\nimport { HalPayloadHelper } from 'core-app/features/hal/schemas/hal-payload.helper';\nimport { GridWidgetResource } from 'core-app/features/hal/resources/grid-widget-resource';\nimport { HalResource } from 'core-app/features/hal/resources/hal-resource';\n\nexport class ApiV3GridForm extends ApiV3FormResource {\n  /**\n   * We need to override the grid widget extraction\n   * to pass the correct payload to the API.\n   *\n   * @param resource\n   * @param schema\n   */\n  public static extractPayload(resource:HalResource|Object, schema:SchemaResource|null = null):Object {\n    if (resource instanceof HalResource && schema) {\n      const grid = resource;\n      const payload = HalPayloadHelper.extractPayloadFromSchema(grid, schema);\n\n      // The widget only states the type of the widget resource but does not explain\n      // the widget itself. We therefore have to do that by hand.\n      if (payload.widgets) {\n        payload.widgets = grid.widgets.map((widget:GridWidgetResource) => ({\n          id: widget.id,\n          startRow: widget.startRow,\n          endRow: widget.endRow,\n          startColumn: widget.startColumn,\n          endColumn: widget.endColumn,\n          identifier: widget.identifier,\n          options: widget.options,\n        }));\n      }\n\n      return payload;\n    }\n\n    return resource || {};\n  }\n\n  /**\n   * Extract payload for the form from the request and optional schema.\n   *\n   * @param request\n   * @param schema\n   */\n  public extractPayload(request:HalResource|Object, schema:SchemaResource|null = null) {\n    return ApiV3GridForm.extractPayload(request, schema);\n  }\n}\n","// -- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2023 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\nimport { ApiV3GettableResource } from 'core-app/core/apiv3/paths/apiv3-resource';\nimport { GridResource } from 'core-app/features/hal/resources/grid-resource';\nimport { SchemaResource } from 'core-app/features/hal/resources/schema-resource';\nimport { Observable } from 'rxjs';\nimport { ApiV3GridForm } from 'core-app/core/apiv3/endpoints/grids/apiv3-grid-form';\n\nexport class ApiV3GridPaths extends ApiV3GettableResource<GridResource> {\n  // Static paths\n  readonly form = this.subResource('form', ApiV3GridForm);\n\n  /**\n   * Update a grid resource or payload\n   * @param resource\n   * @param schema\n   */\n  public patch(resource:GridResource|Object, schema:SchemaResource|null = null):Observable<GridResource> {\n    const payload = this.form.extractPayload(resource, schema);\n\n    return this\n      .halResourceService\n      .patch<GridResource>(this.path, payload);\n  }\n\n  /**\n   * Delete a grid resource\n   */\n  public delete():Observable<unknown> {\n    return this\n      .halResourceService\n      .delete(this.path);\n  }\n}\n","// -- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2023 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\nimport { ApiV3ResourceCollection } from 'core-app/core/apiv3/paths/apiv3-resource';\nimport { ApiV3GridPaths } from 'core-app/core/apiv3/endpoints/grids/apiv3-grid-paths';\nimport { GridResource } from 'core-app/features/hal/resources/grid-resource';\nimport { ApiV3Service } from 'core-app/core/apiv3/api-v3.service';\nimport { SchemaResource } from 'core-app/features/hal/resources/schema-resource';\nimport { ApiV3GridForm } from 'core-app/core/apiv3/endpoints/grids/apiv3-grid-form';\nimport { Observable } from 'rxjs';\nimport {\n  ApiV3ListParameters,\n  ApiV3ListResourceInterface,\n  listParamsString,\n} from 'core-app/core/apiv3/paths/apiv3-list-resource.interface';\nimport { CollectionResource } from 'core-app/features/hal/resources/collection-resource';\n\nexport class ApiV3GridsPaths\n  extends ApiV3ResourceCollection<GridResource, ApiV3GridPaths>\n  implements ApiV3ListResourceInterface<GridResource> {\n  constructor(protected apiRoot:ApiV3Service,\n    protected basePath:string) {\n    super(apiRoot, basePath, 'grids', ApiV3GridPaths);\n  }\n\n  readonly form = this.subResource('form', ApiV3GridForm);\n\n  /**\n   * Load a list of grids with a given list parameter filter\n   * @param params\n   */\n  public list(params?:ApiV3ListParameters):Observable<CollectionResource<GridResource>> {\n    return this\n      .halResourceService\n      .get<CollectionResource<GridResource>>(this.path + listParamsString(params));\n  }\n\n  /**\n   * Create a new GridResource\n   *\n   * @param resource\n   * @param schema\n   */\n  public post(resource:GridResource, schema:SchemaResource|null = null):Observable<GridResource> {\n    return this\n      .halResourceService\n      .post<GridResource>(\n      this.path,\n      this.form.extractPayload(resource, schema),\n    );\n  }\n}\n","// -- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2023 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\nimport { MultiInputState, State } from '@openproject/reactivestates';\nimport {\n  firstValueFrom,\n  Observable,\n} from 'rxjs';\nimport {\n  auditTime, map, share, startWith, take,\n} from 'rxjs/operators';\n\nexport interface HasId {\n  id:string|null;\n}\n\nexport class StateCacheService<T> {\n  protected cacheDurationInMs:number;\n\n  protected multiState:MultiInputState<T>;\n\n  constructor(state:MultiInputState<T>, holdValuesForSeconds = 3600) {\n    this.multiState = state;\n    this.cacheDurationInMs = holdValuesForSeconds * 1000;\n  }\n\n  public state(id:string):State<T> {\n    return this.multiState.get(id);\n  }\n\n  /**\n   * Touch the current state to fire subscribers.\n   */\n  public touch(id:string):void {\n    const state = this.multiState.get(id);\n    state.putValue(state.value, 'Touching the state');\n  }\n\n  /**\n   * Get the current value\n   */\n  public current(id:string, fallback?:T):T|undefined {\n    return this.state(id).getValueOr(fallback);\n  }\n\n  /**\n   * Sets a promise to the state\n   */\n  public clearAndLoad(id:string, loader:Observable<T>):Observable<T> {\n    const observable = loader\n      .pipe(\n        take(1),\n        share(),\n      );\n\n    this\n      .multiState.get(id)\n      .clearAndPutFromPromise(firstValueFrom(observable));\n\n    return observable;\n  }\n\n  /**\n   * Update the value due to application changes.\n   *\n   * @param id The value's identifier.\n   * @param val<T> The value.\n   *\n   * @return a promise of the value when it was inserted into cache\n   */\n  public updateValue(id:string, val:T):Promise<T> {\n    this.putValue(id, val);\n    return Promise.resolve(val);\n  }\n\n  /**\n   * Update the value due to application changes.\n   *\n   * @param resource<T> The value.\n   */\n  public updateFor(resource:HasId):Promise<T> {\n    return this.updateValue(resource.id!, resource as any);\n  }\n\n  /**\n   * Observe the value of the given id\n   */\n  public observe(id:string):Observable<T> {\n    return this.state(id).values$();\n  }\n\n  /**\n   * Observe the changes of the given id\n   */\n  public changes$(id:string):Observable<T|undefined> {\n    return this.state(id).changes$();\n  }\n\n  /**\n   * Observe the entire set of loaded results\n   */\n  public observeAll():Observable<T[]> {\n    return this.multiState\n      .observeChange()\n      .pipe(\n        startWith([]),\n        auditTime(250),\n        map(() => {\n          const mapped:T[] = [];\n          _.each(this.multiState.getValueOr({}), (state:State<T>) => {\n            if (state.value) {\n              mapped.push(state.value);\n            }\n          });\n\n          return mapped;\n        }),\n      );\n  }\n\n  /**\n   * Clear a set of cached states.\n   * @param ids\n   */\n  public clearSome(...ids:string[]) {\n    ids.forEach((id) => this.multiState.get(id).clear());\n  }\n\n  /**\n   * Returns whether the state\n   * @param id ID of the state\n   * @return {boolean}\n   */\n  public stale(id:string):boolean {\n    const state = this.multiState.get(id);\n\n    // If there is an active request that is still pending\n    if (state.hasActivePromiseRequest()) {\n      return false;\n    }\n\n    return state.isPristine() || state.isValueOlderThan(this.cacheDurationInMs);\n  }\n\n  /**\n   * Actually insert the value in the state right now.\n   *\n   * @param id\n   * @param val\n   */\n  protected putValue(id:string, val:T) {\n    this.multiState.get(id).putValue(val);\n  }\n}\n","// -- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2023 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\nimport { SchemaResource } from 'core-app/features/hal/resources/schema-resource';\nimport { HalResource } from 'core-app/features/hal/resources/hal-resource';\nimport { IFieldSchema } from 'core-app/shared/components/fields/field.base';\nimport isNewResource from 'core-app/features/hal/helpers/is-new-resource';\n\nexport interface ISchemaProxy extends SchemaResource {\n  ofProperty(property:string):IFieldSchema;\n  isAttributeEditable(property:string):boolean;\n  mappedName(property:string):string;\n  isEditable:boolean;\n}\n\nexport class SchemaProxy implements ProxyHandler<SchemaResource> {\n  constructor(protected schema:SchemaResource,\n    protected resource:HalResource) {\n  }\n\n  static create(schema:SchemaResource, resource:HalResource) {\n    return new Proxy(\n      schema,\n      new this(schema, resource),\n    ) as ISchemaProxy;\n  }\n\n  get(schema:SchemaResource, property:PropertyKey, receiver:any):any {\n    switch (property) {\n      case 'ofProperty': {\n        return this.proxyMethod(this.ofProperty);\n      }\n      case 'isAttributeEditable': {\n        return this.proxyMethod(this.isAttributeEditable);\n      }\n      case 'mappedName': {\n        return this.proxyMethod(this.mappedName);\n      }\n      case 'isEditable': {\n        return this.isEditable;\n      }\n      default: {\n        return Reflect.get(schema, property, receiver);\n      }\n    }\n  }\n\n  /**\n   * Returns the part of the schema relevant for the provided property.\n   *\n   * We use it to support the virtual attribute 'combinedDate' which is the combination of the three\n   * attributes 'startDate', 'dueDate' and 'scheduleManually'. That combination exists only in the front end\n   * and not on the native schema. As a property needs to be writable for us to allow the user editing,\n   * we need to mark the writability positively if any of the combined properties are writable.\n   *\n   * @param property the schema part is desired for\n   */\n  public ofProperty(property:string):IFieldSchema|null {\n    const propertySchema = this.schema[this.mappedName(property)];\n\n    if (propertySchema) {\n      return { ...propertySchema, writable: this.isEditable && propertySchema && propertySchema.writable };\n    }\n    return null;\n  }\n\n  /**\n   * Return whether the resource is editable with the user's permission\n   * on the given resource package attribute.\n   * In order to be editable, there needs to be an update link on the resource and the schema for\n   * the attribute needs to indicate the writability.\n   *\n   * @param property\n   */\n  public isAttributeEditable(property:string):boolean {\n    const propertySchema = this.ofProperty(property);\n\n    return !!propertySchema && propertySchema.writable;\n  }\n\n  /**\n   * Return whether the user in general has permission to edit the resource.\n   * This check is required, but not sufficient to check all attribute restrictions.\n   *\n   * Use +isAttributeEditable(property)+ for this case.\n   */\n  public get isEditable() {\n    return isNewResource(this.resource) || !!this.resource.$links.update;\n  }\n\n  public mappedName(property:string):string {\n    return property;\n  }\n\n  private proxyMethod(method:Function) {\n    const self = this;\n\n    // Returning a Proxy here so that the call is bound\n    // to the SchemaProxy instance.\n    return new Proxy(method, {\n      apply(_, __, argumentsList) {\n        return method.apply(self, [argumentsList[0]]);\n      },\n    });\n  }\n}\n","// -- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2023 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\nimport { SchemaProxy } from 'core-app/features/hal/schemas/schema-proxy';\nimport { SchemaResource } from 'core-app/features/hal/resources/schema-resource';\nimport { StatusResource } from 'core-app/features/hal/resources/status-resource';\n\nexport class WorkPackageSchemaProxy extends SchemaProxy {\n  get(schema:SchemaResource, property:PropertyKey, receiver:any):any {\n    switch (property) {\n      case 'isMilestone': {\n        return this.isMilestone;\n      }\n      case 'isReadonly': {\n        return this.isReadonly;\n      }\n      default: {\n        return super.get(schema, property, receiver);\n      }\n    }\n  }\n\n  /**\n   * Returns the part of the schema relevant for the provided property.\n   *\n   * We use it to support the virtual attribute 'combinedDate' which is the combination of the three\n   * attributes 'startDate', 'dueDate' and 'scheduleManually'. That combination exists only in the front end\n   * and not on the native schema. As a property needs to be writable for us to allow the user editing,\n   * we need to mark the writability positively if any of the combined properties are writable.\n   *\n   * @param property the schema part is desired for\n   */\n  public ofProperty(property:string) {\n    if (property === 'combinedDate') {\n      const propertySchema = super.ofProperty('startDate');\n\n      if (!propertySchema) {\n        return null;\n      }\n\n      propertySchema.writable = propertySchema.writable\n        || this.isAttributeEditable('dueDate')\n        || this.isAttributeEditable('scheduleManually');\n\n      return propertySchema;\n    }\n    return super.ofProperty(property);\n  }\n\n  public get isReadonly():boolean {\n    return (this.resource.readonly as boolean) || !!(this.resource.status as StatusResource|null)?.isReadonly;\n  }\n\n  /**\n   * Return whether the work package is editable with the user's permission\n   * on the given work package attribute.\n   *\n   * @param property\n   */\n  public isAttributeEditable(property:string):boolean {\n    if (this.isReadonly && property !== 'status') {\n      return false;\n    } if (['startDate', 'dueDate', 'date'].includes(property)\n      && this.resource.scheduleManually) {\n      // This is a blatant shortcut but should be adequate.\n      return super.isAttributeEditable('scheduleManually');\n    }\n    return super.isAttributeEditable(property);\n  }\n\n  public get isMilestone():boolean {\n    return this.schema.hasOwnProperty('date');\n  }\n\n  public mappedName(property:string):string {\n    if (this.isMilestone && (property === 'startDate' || property === 'dueDate')) {\n      return 'date';\n    }\n    return property;\n  }\n}\n","// -- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2023 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\nimport { State } from '@openproject/reactivestates';\nimport { Injectable } from '@angular/core';\nimport { StateCacheService } from 'core-app/core/apiv3/cache/state-cache.service';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { States } from 'core-app/core/states/states.service';\nimport { ISchemaProxy, SchemaProxy } from 'core-app/features/hal/schemas/schema-proxy';\nimport { HalResourceService } from 'core-app/features/hal/services/hal-resource.service';\nimport { WorkPackageSchemaProxy } from 'core-app/features/hal/schemas/work-package-schema-proxy';\nimport { HalResource } from 'core-app/features/hal/resources/hal-resource';\nimport { SchemaResource } from 'core-app/features/hal/resources/schema-resource';\n\n@Injectable()\nexport class SchemaCacheService extends StateCacheService<SchemaResource> {\n  constructor(readonly states:States,\n    readonly halResourceService:HalResourceService) {\n    super(states.schemas);\n  }\n\n  public state(id:string|HalResource):State<SchemaResource> {\n    return super.state(this.stateKey(id));\n  }\n\n  /**\n   * Returns the schema of the provided resource.\n   * This method assumes the schema is loaded and will fail if it is not.\n   * @deprecated Assuming the schema to be loaded is deprecated. Rely on the states instead.\n   * @param resource The HalResource for which the schema is to be returned\n   * @return The schema for the HalResource\n   */\n  of(resource:HalResource):ISchemaProxy {\n    const schema = this.state(resource).value;\n\n    if (!schema) {\n      throw new Error(`Schema for resource ${resource} was expected to be loaded but isn't.`);\n    }\n\n    if (resource._type === 'WorkPackage') {\n      return WorkPackageSchemaProxy.create(schema, resource);\n    }\n    return SchemaProxy.create(schema, resource);\n  }\n\n  public getSchemaHref(resource:HalResource):string {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    const href = resource.$links.schema?.href as string|undefined;\n\n    if (!href) {\n      throw new Error(`Resource ${resource.toString()} has no schema to load.`);\n    }\n\n    return href;\n  }\n\n  /**\n   * Ensure the given schema identified by its href is currently loaded.\n   * @param resource The resource with a schema property or a string to the schema href.\n   * @return A promise with the loaded schema.\n   */\n  ensureLoaded<T = SchemaResource>(resource:HalResource|string):Promise<T> {\n    const href = resource instanceof HalResource ? this.getSchemaHref(resource) : resource;\n\n    return this\n      .requireAndStream(href)\n      .pipe(\n        take(1),\n      )\n      .toPromise() as unknown as Promise<T>;\n  }\n\n  /**\n   * Require the value to be loaded either when forced or the value is stale\n   * according to the cache interval specified for this service.\n   *\n   * Returns an observable to the values stream of the state.\n   *\n   * @param id The state to require\n   * @param force Load the value anyway.\n   */\n  public requireAndStream(href:string, force = false):Observable<SchemaResource> {\n    // Refresh when stale or being forced\n    if (this.stale(href) || force) {\n      this.clearAndLoad(\n        href,\n        this.load(href),\n      );\n    }\n\n    return this.state(href).values$();\n  }\n\n  /**\n   * Load the associated schema for the given work package, if needed.\n   */\n  protected load(href:string):Observable<SchemaResource> {\n    return this\n      .halResourceService\n      .get<SchemaResource>(href)\n      .pipe(\n        take(1),\n      );\n  }\n\n  protected loadAll(hrefs:string[]):Promise<unknown|undefined> {\n    return Promise.all(hrefs.map((href) => this.load(href)));\n  }\n\n  /**\n   * Places the schema in the schema state of the resource.\n   * @param resource The resource for which the schema is to be updated\n   * @param schema\n   */\n  update(resource:HalResource, schema:SchemaResource) {\n    this.multiState.get(this.stateKey(resource)).putValue(schema);\n  }\n\n  private stateKey(id:string|HalResource):string {\n    if (id instanceof HalResource) {\n      return this.getSchemaHref(id);\n    }\n    return id;\n  }\n}\n","// -- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2023 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\nimport { ApiV3GettableResource } from 'core-app/core/apiv3/paths/apiv3-resource';\nimport { InjectField } from 'core-app/shared/helpers/angular/inject-field.decorator';\nimport { States } from 'core-app/core/states/states.service';\nimport { HasId, StateCacheService } from 'core-app/core/apiv3/cache/state-cache.service';\nimport { concat, Observable, of } from 'rxjs';\nimport {\n  mapTo, shareReplay, switchMap, take, tap,\n} from 'rxjs/operators';\nimport { SchemaCacheService } from 'core-app/core/schemas/schema-cache.service';\nimport { HalResource } from 'core-app/features/hal/resources/hal-resource';\n\nexport abstract class ApiV3Resource<T extends HasId = HalResource>\n  extends ApiV3GettableResource<T> {\n  @InjectField() states:States;\n\n  @InjectField() schemaCache:SchemaCacheService;\n\n  readonly cache = this.createCache();\n\n  /**\n   * Require the value to be loaded either when forced or the value is stale\n   * according to the cache interval specified for this service.\n   *\n   * Returns an observable to the values stream of the state.\n   *\n   * @param force Load the value anyway.\n   */\n  public requireAndStream(force = false):Observable<T> {\n    const id = this.id.toString();\n\n    // Refresh when stale or being forced\n    if (this.cache.stale(id) || force) {\n      const observable = this\n        .load()\n        .pipe(\n          take(1),\n          shareReplay(1),\n        );\n\n      this.cache.clearAndLoad(\n        id,\n        observable,\n      );\n\n      // Return concat of the loading observable\n      // for error handling and the like,\n      // but then continue with the streamed cache\n      return concat(\n        observable,\n        this.cache.state(id).values$(),\n      );\n    }\n\n    return this.cache.state(id).values$();\n  }\n\n  /**\n   * Observe the values of this resource,\n   * but do not request it actively.\n   */\n  public observe():Observable<T> {\n    return this\n      .cache\n      .observe(this.id.toString());\n  }\n\n  /**\n   * Returns a (potentially cached) observable.\n   *\n   * Only observes one value.\n   *\n   * Accesses or modifies the global store for this resource.\n   */\n  get():Observable<T> {\n    return this\n      .requireAndStream(false)\n      .pipe(\n        take(1),\n      );\n  }\n\n  /**\n   * Returns a freshly loaded value but ensuring the value\n   * is also updated in the cache.\n   *\n   * Only observes one value.\n   *\n   * Accesses or modifies the global store for this resource.\n   */\n  refresh():Promise<T> {\n    return this\n      .requireAndStream(true)\n      .pipe(\n        take(1),\n      )\n      // Use a promise to ensure this fires\n      // even if caller isn't subscribing.\n      .toPromise() as Promise<T>;\n  }\n\n  /**\n   * Perform a request to the HalResourceService with the current path\n   */\n  protected load():Observable<T> {\n    return this\n      .halResourceService\n      .get(this.path)\n      .pipe(\n        switchMap((resource) => {\n          if (resource.$links.schema) {\n            return this.schemaCache\n              .requireAndStream(resource.$links.schema.href)\n              .pipe(\n                take(1),\n                mapTo(resource),\n              );\n          }\n          return of(resource);\n        }),\n      ) as any; // T does not extend HalResource for virtual endpoints such as board, thus we need to cast here\n  }\n\n  /**\n   * Update a single resource\n   */\n  protected touch(resource:T):void {\n    this.cache.updateFor(resource);\n  }\n\n  /**\n   * Inserts a collection response to cache as an rxjs tap function\n   */\n  protected cacheResponse():(source:Observable<T>) => Observable<T> {\n    return (source$:Observable<T>) => source$.pipe(\n      tap(\n        (resource:T) => this.touch(resource),\n      ),\n    );\n  }\n\n  /**\n   * Creates the cache state instance\n   */\n  protected abstract createCache():StateCacheService<T>;\n}\n","// -- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2023 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\nimport { TimeEntryResource } from 'core-app/features/hal/resources/time-entry-resource';\nimport { ApiV3Resource } from 'core-app/core/apiv3/cache/cachable-apiv3-resource';\nimport { StateCacheService } from 'core-app/core/apiv3/cache/state-cache.service';\nimport { ApiV3FormResource } from 'core-app/core/apiv3/forms/apiv3-form-resource';\nimport { SchemaResource } from 'core-app/features/hal/resources/schema-resource';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { ApiV3TimeEntriesPaths } from 'core-app/core/apiv3/endpoints/time-entries/apiv3-time-entries-paths';\nimport { HalPayloadHelper } from 'core-app/features/hal/schemas/hal-payload.helper';\nimport { HalResource } from 'core-app/features/hal/resources/hal-resource';\n\nexport class ApiV3TimeEntryPaths extends ApiV3Resource<TimeEntryResource> {\n  // Static paths\n  readonly form = this.subResource('form', ApiV3FormResource);\n\n  /**\n   * Update the time entry with the given payload.\n   *\n   * In case of updating from the hal resource, a schema resource is needed\n   * to identify the writable attributes.\n   * @param payload\n   * @param schema\n   */\n  public patch(payload:Object, schema:SchemaResource|null = null):Observable<TimeEntryResource> {\n    return this\n      .halResourceService\n      .patch<TimeEntryResource>(this.path, this.extractPayload(payload, schema))\n      .pipe(\n        tap((resource) => this.touch(resource)),\n      );\n  }\n\n  /**\n   * Delete the time entry under the current path\n   */\n  public delete():Observable<unknown> {\n    return this\n      .halResourceService\n      .delete<TimeEntryResource>(this.path)\n      .pipe(\n        tap(() => this.cache.clearSome(this.id.toString())),\n      );\n  }\n\n  protected createCache():StateCacheService<TimeEntryResource> {\n    return (this.parent as ApiV3TimeEntriesPaths).cache;\n  }\n\n  /**\n   * Extract payload from the given request with schema.\n   * This will ensure we will only write writable attributes and so on.\n   *\n   * @param resource\n   * @param schema\n   */\n  protected extractPayload(resource:HalResource|Object|null, schema:SchemaResource|null = null) {\n    if (resource instanceof HalResource && schema) {\n      return HalPayloadHelper.extractPayloadFromSchema(resource, schema);\n    } if (!(resource instanceof HalResource)) {\n      return resource;\n    }\n    return {};\n  }\n}\n","// -- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2023 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\nimport { HalResource } from 'core-app/features/hal/resources/hal-resource';\n\nexport class CollectionResource<T = HalResource> extends HalResource {\n  public elements:T[];\n\n  public count:number;\n\n  public total:number;\n\n  public pageSize:number;\n\n  public offset:number;\n\n  /**\n   * Update the collection's elements and return them in a promise.\n   * This is useful, as angular does not recognize update made by $load.\n   */\n  public updateElements():Promise<unknown> {\n    if (this.href) {\n      return this.$load().then((collection:this) => this.elements = collection.elements);\n    }\n    return Promise.resolve();\n  }\n}\n","// -- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2023 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\nimport { ApiV3GettableResource, ApiV3ResourceCollection } from 'core-app/core/apiv3/paths/apiv3-resource';\nimport { InjectField } from 'core-app/shared/helpers/angular/inject-field.decorator';\nimport { States } from 'core-app/core/states/states.service';\nimport { HasId, StateCacheService } from 'core-app/core/apiv3/cache/state-cache.service';\nimport { Observable } from 'rxjs';\nimport { CollectionResource } from 'core-app/features/hal/resources/collection-resource';\nimport { tap } from 'rxjs/operators';\nimport { HalResource } from 'core-app/features/hal/resources/hal-resource';\n\nexport abstract class ApiV3Collection<\n  T extends HasId = HalResource,\n  V extends ApiV3GettableResource<T> = ApiV3GettableResource<T>,\n  X extends StateCacheService<T> = StateCacheService<T>,\n  >\n  extends ApiV3ResourceCollection<T, V> {\n  @InjectField() states:States;\n\n  readonly cache:X = this.createCache();\n\n  /**\n   * Observe all value changes of the cache\n   */\n  public observeAll():Observable<T[]> {\n    return this.cache.observeAll();\n  }\n\n  /**\n   * Inserts a collection or single response to cache as an rxjs tap function\n   */\n  protected cacheResponse<R>():(source:Observable<R>) => Observable<R> {\n    return (source$) => source$.pipe(\n      tap(\n        (response:R) => {\n          if (response instanceof CollectionResource) {\n            response.elements?.forEach(this.touch.bind(this));\n          } else if (response instanceof HalResource) {\n            this.touch(response as any);\n          }\n        },\n      ),\n    );\n  }\n\n  /**\n   * Update a single resource\n   */\n  protected touch(resource:T):void {\n    this.cache.updateFor(resource);\n  }\n\n  /**\n   * Creates the cache state instance\n   */\n  protected abstract createCache():X;\n}\n","// -- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2023 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\nimport { TimeEntryResource } from 'core-app/features/hal/resources/time-entry-resource';\nimport { InjectField } from 'core-app/shared/helpers/angular/inject-field.decorator';\nimport { SchemaCacheService } from 'core-app/core/schemas/schema-cache.service';\nimport { States } from 'core-app/core/states/states.service';\nimport { Injector } from '@angular/core';\nimport { StateCacheService } from 'core-app/core/apiv3/cache/state-cache.service';\nimport { MultiInputState } from '@openproject/reactivestates';\n\nexport class TimeEntryCacheService extends StateCacheService<TimeEntryResource> {\n  @InjectField() readonly states:States;\n\n  @InjectField() readonly schemaCache:SchemaCacheService;\n\n  constructor(readonly injector:Injector, state:MultiInputState<TimeEntryResource>) {\n    super(state);\n  }\n\n  updateValue(id:string, val:TimeEntryResource):Promise<TimeEntryResource> {\n    return this.schemaCache\n      .ensureLoaded(val)\n      .then(() => {\n        this.putValue(id, val);\n        return val;\n      });\n  }\n}\n","// -- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2023 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\nimport { ApiV3TimeEntryPaths } from 'core-app/core/apiv3/endpoints/time-entries/apiv3-time-entry-paths';\nimport { TimeEntryResource } from 'core-app/features/hal/resources/time-entry-resource';\nimport { ApiV3Service } from 'core-app/core/apiv3/api-v3.service';\nimport { ApiV3FormResource } from 'core-app/core/apiv3/forms/apiv3-form-resource';\nimport { Observable } from 'rxjs';\nimport { CollectionResource } from 'core-app/features/hal/resources/collection-resource';\nimport { ApiV3Collection } from 'core-app/core/apiv3/cache/cachable-apiv3-collection';\nimport {\n  ApiV3ListParameters,\n  ApiV3ListResourceInterface,\n  listParamsString,\n} from 'core-app/core/apiv3/paths/apiv3-list-resource.interface';\nimport { TimeEntryCacheService } from 'core-app/core/apiv3/endpoints/time-entries/time-entry-cache.service';\nimport { StateCacheService } from 'core-app/core/apiv3/cache/state-cache.service';\nimport { SchemaResource } from 'core-app/features/hal/resources/schema-resource';\nimport { ApiV3GettableResource } from 'core-app/core/apiv3/paths/apiv3-resource';\n\nexport class ApiV3TimeEntriesPaths\n  extends ApiV3Collection<TimeEntryResource, ApiV3TimeEntryPaths>\n  implements ApiV3ListResourceInterface<TimeEntryResource> {\n  constructor(\n    protected apiRoot:ApiV3Service,\n    protected basePath:string,\n  ) {\n    super(apiRoot, basePath, 'time_entries', ApiV3TimeEntryPaths);\n  }\n\n  // Static paths\n  public readonly form = this.subResource('form', ApiV3FormResource);\n\n  // /api/v3/time_entries/schema\n  readonly schema = this.subResource<ApiV3GettableResource<SchemaResource>>('schema');\n\n  /**\n   * Load a list of time entries with a given list parameter filter\n   * @param params\n   */\n  public list(params?:ApiV3ListParameters):Observable<CollectionResource<TimeEntryResource>> {\n    return this\n      .halResourceService\n      .get<CollectionResource<TimeEntryResource>>(this.path + listParamsString(params))\n      .pipe(\n        this.cacheResponse(),\n      );\n  }\n\n  /**\n   * Create a time entry resource from the given payload\n   * @param payload\n   */\n  public post(payload:Object):Observable<TimeEntryResource> {\n    return this\n      .halResourceService\n      .post<TimeEntryResource>(this.path, payload)\n      .pipe(\n        this.cacheResponse(),\n      );\n  }\n\n  protected createCache():StateCacheService<TimeEntryResource> {\n    return new TimeEntryCacheService(this.injector, this.states.timeEntries);\n  }\n}\n","// -- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2023 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\nimport { ICapability } from 'core-app/core/state/capabilities/capability.model';\nimport { ApiV3GettableResource } from 'core-app/core/apiv3/paths/apiv3-resource';\n\nexport class ApiV3CapabilityPaths extends ApiV3GettableResource<ICapability> {\n}\n","// -- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2023 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\nimport { ApiV3CapabilityPaths } from 'core-app/core/apiv3/endpoints/capabilities/apiv3-capability-paths';\nimport { ApiV3Service } from 'core-app/core/apiv3/api-v3.service';\nimport { ICapability } from 'core-app/core/state/capabilities/capability.model';\nimport { ApiV3ResourceCollection } from 'core-app/core/apiv3/paths/apiv3-resource';\n\nexport class ApiV3CapabilitiesPaths\n  extends ApiV3ResourceCollection<ICapability, ApiV3CapabilityPaths> {\n  constructor(protected apiRoot:ApiV3Service,\n    protected basePath:string) {\n    super(apiRoot, basePath, 'capabilities', ApiV3CapabilityPaths);\n  }\n}\n","// -- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2023 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\nimport { ProjectResource } from 'core-app/features/hal/resources/project-resource';\nimport { ApiV3GettableResource } from 'core-app/core/apiv3/paths/apiv3-resource';\nimport { CollectionResource } from 'core-app/features/hal/resources/collection-resource';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport {\n  ApiV3ListParameters,\n  ApiV3ListResourceInterface,\n  listParamsString,\n} from 'core-app/core/apiv3/paths/apiv3-list-resource.interface';\nimport { ApiV3Filter } from 'core-app/shared/helpers/api-v3/api-v3-filter-builder';\n\nexport class ApiV3AvailableProjectsPaths\n  extends ApiV3GettableResource<CollectionResource<ProjectResource>>\n  implements ApiV3ListResourceInterface<ProjectResource> {\n  /**\n   * Load a list of available projects with a given list parameter filter\n   * @param params\n   */\n  public list(params?:ApiV3ListParameters):Observable<CollectionResource<ProjectResource>> {\n    return this\n      .halResourceService\n      .get<CollectionResource<ProjectResource>>(this.path + listParamsString(params));\n  }\n\n  /**\n   * Performs a request against the available_projects endpoint\n   * to see whether this is contained\n   *\n   * Returns whether the given id exists in the set\n   * of available projects\n   *\n   * @param projectId\n   */\n  public exists(projectId:string):Observable<boolean> {\n    return this\n      .halResourceService\n      .get<CollectionResource<ProjectResource>>(\n      this.path,\n      { filters: ApiV3Filter('id', '=', [projectId]).toJson() },\n    )\n      .pipe(\n        map((collection) => collection.count > 0),\n      );\n  }\n}\n","// -- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2023 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\nimport { ApiV3FormResource } from 'core-app/core/apiv3/forms/apiv3-form-resource';\nimport { MembershipResourceEmbedded } from 'core-app/features/hal/resources/membership-resource';\n\nexport class ApiV3MembershipsForm extends ApiV3FormResource {\n  /**\n   * We need to override the grid widget extraction\n   * to pass the correct payload to the API.\n   *\n   * @param resource\n   * @param schema\n   */\n  public static extractPayload(resource:MembershipResourceEmbedded):Object {\n    return {\n      _links: {\n        project: { href: resource.project.href },\n        principal: { href: resource.principal.href },\n        roles: resource.roles.map((role) => ({ href: role.href })),\n      },\n      _meta: {\n        notificationMessage: {\n          raw: resource.notificationMessage.raw,\n        },\n      },\n    };\n  }\n\n  /**\n   * Extract payload for the form from the request and optional schema.\n   *\n   * @param request\n   * @param schema\n   */\n  public extractPayload(request:MembershipResourceEmbedded) {\n    return ApiV3MembershipsForm.extractPayload(request);\n  }\n}\n","// -- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2023 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\nimport { ApiV3GettableResource, ApiV3ResourceCollection } from 'core-app/core/apiv3/paths/apiv3-resource';\nimport { ApiV3Service } from 'core-app/core/apiv3/api-v3.service';\nimport { ApiV3AvailableProjectsPaths } from 'core-app/core/apiv3/endpoints/projects/apiv3-available-projects-paths';\nimport {\n  ApiV3ListParameters,\n  ApiV3ListResourceInterface,\n  listParamsString,\n} from 'core-app/core/apiv3/paths/apiv3-list-resource.interface';\nimport { Observable } from 'rxjs';\nimport { ApiV3MembershipsForm } from 'core-app/core/apiv3/endpoints/memberships/apiv3-memberships-form';\nimport { MembershipResource, MembershipResourceEmbedded } from 'core-app/features/hal/resources/membership-resource';\nimport { CollectionResource } from 'core-app/features/hal/resources/collection-resource';\n\nexport class ApiV3MembershipsPaths\n  extends ApiV3ResourceCollection<MembershipResource, ApiV3GettableResource<MembershipResource>>\n  implements ApiV3ListResourceInterface<MembershipResource> {\n  // Static paths\n  readonly form = this.subResource('form', ApiV3MembershipsForm);\n\n  constructor(protected apiRoot:ApiV3Service,\n    protected basePath:string) {\n    super(apiRoot, basePath, 'memberships');\n  }\n\n  /**\n   * Load a list of membership entries with a given list parameter filter\n   * @param params\n   */\n  public list(params?:ApiV3ListParameters):Observable<CollectionResource<MembershipResource>> {\n    return this\n      .halResourceService\n      .get<CollectionResource<MembershipResource>>(this.path + listParamsString(params));\n  }\n\n  // /api/v3/memberships/available_projects\n  readonly available_projects = this.subResource('available_projects', ApiV3AvailableProjectsPaths);\n\n  /**\n   * Create a new MembershipResource\n   *\n   * @param resource\n   */\n  public post(resource:MembershipResourceEmbedded):Observable<MembershipResource> {\n    const payload = this.form.extractPayload(resource);\n    return this\n      .halResourceService\n      .post<MembershipResource>(\n      this.path,\n      payload,\n    );\n  }\n}\n","// -- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2023 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\nimport { ApiV3ResourcePath } from 'core-app/core/apiv3/paths/apiv3-resource';\nimport { Observable } from 'rxjs';\nimport { InjectField } from 'core-app/shared/helpers/angular/inject-field.decorator';\nimport { HttpClient } from '@angular/common/http';\nimport { IUserPreference } from 'core-app/features/user-preferences/state/user-preferences.model';\n\nexport class ApiV3UserPreferencesPaths extends ApiV3ResourcePath<IUserPreference> {\n  @InjectField() http:HttpClient;\n\n  /**\n   * Perform a request to the backend to load preferences\n   */\n  public get():Observable<IUserPreference> {\n    return this\n      .http\n      .get<IUserPreference>(\n      this.path,\n    );\n  }\n\n  /**\n   * Perform a request to update preferences\n   */\n  public patch(payload:Partial<IUserPreference>):Observable<IUserPreference> {\n    return this\n      .http\n      .patch<IUserPreference>(\n      this.path,\n      payload,\n      { withCredentials: true, responseType: 'json' },\n    );\n  }\n}\n","// -- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2023 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\nimport { UserResource } from 'core-app/features/hal/resources/user-resource';\nimport { ApiV3Resource } from 'core-app/core/apiv3/cache/cachable-apiv3-resource';\nimport { StateCacheService } from 'core-app/core/apiv3/cache/state-cache.service';\nimport { ApiV3UserPreferencesPaths } from 'core-app/core/apiv3/endpoints/users/apiv3-user-preferences-paths';\n\nexport class ApiV3UserPaths extends ApiV3Resource<UserResource> {\n  readonly avatar = this.subResource('avatar');\n\n  readonly preferences = this.subResource('preferences', ApiV3UserPreferencesPaths);\n\n  protected createCache():StateCacheService<UserResource> {\n    return new StateCacheService<UserResource>(this.states.users);\n  }\n}\n","// -- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2023 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\nimport { ApiV3ResourceCollection } from 'core-app/core/apiv3/paths/apiv3-resource';\nimport { ApiV3UserPaths } from 'core-app/core/apiv3/endpoints/users/apiv3-user-paths';\nimport { Observable } from 'rxjs';\nimport { UserResource } from 'core-app/features/hal/resources/user-resource';\nimport { ApiV3Service } from 'core-app/core/apiv3/api-v3.service';\nimport { ApiV3FormResource } from 'core-app/core/apiv3/forms/apiv3-form-resource';\n\nexport class ApiV3UsersPaths extends ApiV3ResourceCollection<UserResource, ApiV3UserPaths> {\n  constructor(protected apiRoot:ApiV3Service,\n    protected basePath:string) {\n    super(apiRoot, basePath, 'users', ApiV3UserPaths);\n  }\n\n  // Static paths\n\n  // /api/v3/users/me\n  public readonly me = this.subResource('me', ApiV3UserPaths);\n\n  // /api/v3/users/form\n  public readonly form = this.subResource('form', ApiV3FormResource);\n\n  /**\n   * Create a new UserResource\n   *\n   * @param resource\n   */\n  public post(resource:{\n    // TODO: The typing here could be a lot better\n    login?:string,\n    firstName?:string,\n    lastName?:string,\n    email?:string,\n    admin?:boolean,\n    language?:string,\n    password?:string,\n    auth_source?:string,\n    identity_url?:string,\n    status:'invited'|'active',\n  }):Observable<UserResource> {\n    return this\n      .halResourceService\n      .post<UserResource>(\n      this.path,\n      resource,\n    );\n  }\n}\n","// -- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2023 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\nimport { TypeResource } from 'core-app/features/hal/resources/type-resource';\nimport { ApiV3Resource } from 'core-app/core/apiv3/cache/cachable-apiv3-resource';\nimport { StateCacheService } from 'core-app/core/apiv3/cache/state-cache.service';\nimport { ApiV3TypesPaths } from 'core-app/core/apiv3/endpoints/types/apiv3-types-paths';\n\nexport class ApiV3TypePaths extends ApiV3Resource<TypeResource> {\n  protected createCache():StateCacheService<TypeResource> {\n    return (this.parent as ApiV3TypesPaths).cache;\n  }\n}\n","// -- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2023 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\nimport { TypeResource } from 'core-app/features/hal/resources/type-resource';\nimport { ApiV3TypePaths } from 'core-app/core/apiv3/endpoints/types/apiv3-type-paths';\nimport { ApiV3Service } from 'core-app/core/apiv3/api-v3.service';\nimport { ApiV3Collection } from 'core-app/core/apiv3/cache/cachable-apiv3-collection';\nimport { StateCacheService } from 'core-app/core/apiv3/cache/state-cache.service';\n\nexport class ApiV3TypesPaths extends ApiV3Collection<TypeResource, ApiV3TypePaths> {\n  constructor(protected apiRoot:ApiV3Service,\n    protected basePath:string) {\n    super(apiRoot, basePath, 'types', ApiV3TypePaths);\n  }\n\n  protected createCache():StateCacheService<TypeResource> {\n    return new StateCacheService<TypeResource>(this.states.types);\n  }\n}\n","// -- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2023 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\nimport { InjectField } from 'core-app/shared/helpers/angular/inject-field.decorator';\nimport { SchemaCacheService } from 'core-app/core/schemas/schema-cache.service';\nimport { PathHelperService } from 'core-app/core/path-helper/path-helper.service';\nimport { QueryOperatorResource } from 'core-app/features/hal/resources/query-operator-resource';\nimport { HalResource } from 'core-app/features/hal/resources/hal-resource';\nimport idFromLink from 'core-app/features/hal/helpers/id-from-link';\nimport { QueryFilterInstanceSchemaResource } from 'core-app/features/hal/resources/query-filter-instance-schema-resource';\nimport { QueryFilterResource } from 'core-app/features/hal/resources/query-filter-resource';\n\nexport class QueryFilterInstanceResource extends HalResource {\n  public filter:QueryFilterResource;\n\n  public operator:QueryOperatorResource;\n\n  public values:HalResource[]|string[];\n\n  private memoizedCurrentSchemas:{ [key:string]:QueryFilterInstanceSchemaResource } = {};\n\n  @InjectField(SchemaCacheService) schemaCache:SchemaCacheService;\n\n  @InjectField(PathHelperService) pathHelper:PathHelperService;\n\n  public $initialize(source:any) {\n    super.$initialize(source);\n\n    this.$links.schema = {\n      href: `${this.pathHelper.api.v3.apiV3Base}/queries/filter_instance_schemas/${idFromLink(this.filter.href)}`,\n    };\n  }\n\n  public get id():string {\n    return this.filter.id;\n  }\n\n  public get name():string {\n    return this.filter.name;\n  }\n\n  /**\n   * Get the complete current schema.\n   *\n   * The filter instance's schema is made up of a static and a variable part.\n   * The variable part depends on the currently selected operator.\n   * Therefore, the schema differs based on the selected operator.\n   */\n  public get currentSchema():QueryFilterInstanceSchemaResource|null {\n    if (!this.operator) {\n      return null;\n    }\n\n    const key = this.operator.href!.toString();\n\n    if (this.memoizedCurrentSchemas[key] === undefined) {\n      try {\n        this.memoizedCurrentSchemas[key] = this.schemaCache.of(this).resultingSchema(this.operator);\n      } catch (e) {\n        console.error(`Failed to access filter schema${e}`);\n      }\n    }\n\n    return this.memoizedCurrentSchemas[key];\n  }\n\n  public isCompletelyDefined() {\n    return this.values.length || (this.currentSchema && !this.currentSchema.isValueRequired());\n  }\n\n  public findOperator(operatorSymbol:string):QueryOperatorResource|undefined {\n    return _.find(this.schemaCache.of(this).availableOperators, (operator:QueryOperatorResource) => operator.id === operatorSymbol) as QueryOperatorResource|undefined;\n  }\n\n  public isTemplated() {\n    let flag = false;\n    (this.values as any[]).find((value:any) => {\n      const href:string = value?.href || value.toString() || '';\n      flag = href.includes('{id}');\n    });\n    return flag;\n  }\n}\n","// -- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2023 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\nimport { QueryColumn } from 'core-app/features/work-packages/components/wp-query/query-column';\nimport { HalResource } from 'core-app/features/hal/resources/hal-resource';\nimport { HighlightingMode } from 'core-app/features/work-packages/components/wp-fast-table/builders/highlighting/highlighting-mode.const';\nimport { QueryOrder } from 'core-app/core/apiv3/endpoints/queries/apiv3-query-order';\nimport { WorkPackageCollectionResource } from 'core-app/features/hal/resources/wp-collection-resource';\nimport { QueryFilterInstanceResource } from 'core-app/features/hal/resources/query-filter-instance-resource';\nimport { ProjectResource } from 'core-app/features/hal/resources/project-resource';\nimport { QuerySortByResource } from 'core-app/features/hal/resources/query-sort-by-resource';\nimport { QueryGroupByResource } from 'core-app/features/hal/resources/query-group-by-resource';\n\nexport interface QueryResourceEmbedded {\n  results:WorkPackageCollectionResource;\n  columns:QueryColumn[];\n  groupBy:QueryGroupByResource|undefined;\n  project:ProjectResource;\n  sortBy:QuerySortByResource[];\n  filters:QueryFilterInstanceResource[];\n}\n\nexport type TimelineZoomLevel = 'days'|'weeks'|'months'|'quarters'|'years'|'auto';\n\nexport interface TimelineLabels {\n  left:string|null;\n  right:string|null;\n  farRight:string|null;\n}\n\nexport class QueryResource extends HalResource {\n  public $embedded:QueryResourceEmbedded;\n\n  public results:WorkPackageCollectionResource;\n\n  public columns:QueryColumn[];\n\n  public groupBy:QueryGroupByResource|undefined;\n\n  public sortBy:QuerySortByResource[];\n\n  public setSortBy(newSortBy:QuerySortByResource[]):void {\n    this.sortBy = newSortBy;\n  }\n\n  public filters:QueryFilterInstanceResource[];\n\n  public starred:boolean;\n\n  public sums:boolean;\n\n  public hasError:boolean;\n\n  public timelineVisible:boolean;\n\n  public timelineZoomLevel:TimelineZoomLevel;\n\n  public highlightingMode:HighlightingMode;\n\n  public highlightedAttributes:HalResource[]|undefined;\n\n  public displayRepresentation:string|undefined;\n\n  public timelineLabels:TimelineLabels;\n\n  public timestamps:string[];\n\n  public showHierarchies:boolean;\n\n  public public:boolean;\n\n  public hidden:boolean;\n\n  public project:ProjectResource;\n\n  public includeSubprojects:boolean;\n\n  public ordered_work_packages:QueryOrder;\n\n  public $initialize(source:any) {\n    super.$initialize(source);\n\n    this.filters = this\n      .filters\n      .map((filter:unknown) => new QueryFilterInstanceResource(\n        this.injector,\n        filter,\n        true,\n        this.halInitializer,\n        'QueryFilterInstance',\n      ));\n  }\n}\n\nexport interface QueryResourceLinks {\n  updateImmediately?(attributes:any):Promise<any>;\n  icalUrl(payload:unknown):Promise<{ icalUrl:{ href:string } }>;\n}\n\nexport interface QueryResource extends QueryResourceLinks {}\n","// -- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2023 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\nimport { Injector } from '@angular/core';\nimport { InjectField } from 'core-app/shared/helpers/angular/inject-field.decorator';\nimport { HttpClient } from '@angular/common/http';\nimport { SimpleResource } from 'core-app/core/apiv3/paths/path-resources';\n\nexport type QueryOrder = { [wpId:string]:number };\n\nexport class ApiV3QueryOrder extends SimpleResource {\n  @InjectField() http:HttpClient;\n\n  constructor(readonly injector:Injector,\n    readonly basePath:string,\n    readonly id:string|number) {\n    super(basePath, id);\n  }\n\n  public get():Promise<QueryOrder> {\n    return this.http\n      .get<QueryOrder>(\n      this.path,\n    )\n      .toPromise()\n      .then((result) => result || {});\n  }\n\n  public update(delta:QueryOrder):Promise<string> {\n    return this.http\n      .patch(\n        this.path,\n        { delta },\n        { withCredentials: true },\n      )\n      .toPromise()\n      .then((response:{ t:string }) => response.t);\n  }\n\n  public delete(id:string, ...wpIds:string[]) {\n    const delta:QueryOrder = {};\n    wpIds.forEach((id) => delta[id] = -1);\n\n    return this.update(delta);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { QueryFormResource } from 'core-app/features/hal/resources/query-form-resource';\nimport {\n  QueryFilterInstanceSchemaResource,\n\n} from 'core-app/features/hal/resources/query-filter-instance-schema-resource';\nimport { QueryResource } from 'core-app/features/hal/resources/query-resource';\nimport { QueryFilterInstanceResource } from 'core-app/features/hal/resources/query-filter-instance-resource';\nimport { SchemaCacheService } from 'core-app/core/schemas/schema-cache.service';\nimport { CollectionResource } from 'core-app/features/hal/resources/collection-resource';\n\n@Injectable()\nexport class QueryFiltersService {\n  constructor(protected schemaCache:SchemaCacheService) {\n  }\n\n  /**\n   * Get the matching schema of the filter resource\n   * from the schema\n   */\n  private getFilterSchema(filter:QueryFilterInstanceResource, form:QueryFormResource):QueryFilterInstanceSchemaResource|undefined {\n    const available = form.$embedded.schema.filtersSchemas.elements;\n    return _.find(available, (schema) => schema.allowedFilterValue.href === filter.filter.href);\n  }\n\n  /**\n   * Prepares the schemas of each filter to be readily placed to make alterations\n   * to the filter based on the filter e.g. when sending an updated filter to the backend.\n   * @param query\n   * @param form\n   */\n  public mapSchemasIntoFilters(query:QueryResource, form:QueryFormResource) {\n    query.filters.forEach((filter) => {\n      const schema = this.getFilterSchema(filter, form)!;\n      filter.$links.schema = schema.$links.self;\n      this.schemaCache.update(filter, schema);\n    });\n  }\n\n  public setSchemas(schemas:CollectionResource<QueryFilterInstanceSchemaResource>) {\n    schemas.elements.forEach((schema) => {\n      this.schemaCache.updateValue(schema.$links.self.href!, schema);\n    });\n  }\n}\n","// -- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2023 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\nimport { QueryResource } from 'core-app/features/hal/resources/query-resource';\nimport { ApiV3FormResource } from 'core-app/core/apiv3/forms/apiv3-form-resource';\nimport { QueryFormResource } from 'core-app/features/hal/resources/query-form-resource';\nimport { Observable } from 'rxjs';\nimport * as URI from 'urijs';\nimport { map, tap } from 'rxjs/operators';\nimport { InjectField } from 'core-app/shared/helpers/angular/inject-field.decorator';\nimport { QueryFiltersService } from 'core-app/features/work-packages/components/wp-query/query-filters.service';\n\nexport class ApiV3QueryForm extends ApiV3FormResource<QueryFormResource> {\n  @InjectField() private queryFilters:QueryFiltersService;\n\n  /**\n   * Load the query form for the given existing (or new) query resource\n   * @param query\n   */\n  public load(query:QueryResource):Observable<[QueryFormResource, QueryResource]> {\n    // We need a valid payload so that we\n    // can check whether form saving is possible.\n    // The query needs a name to be valid.\n    const payload:any = {\n      name: query.name || '!!!__O__o__O__!!!',\n    };\n\n    if (query.project) {\n      payload._links = {\n        project: {\n          href: query.project.href,\n        },\n      };\n    }\n\n    const { path } = this.apiRoot.queries.withOptionalId(query.id).form;\n    return this.halResourceService\n      .post<QueryFormResource>(path, payload)\n      .pipe(\n        tap((form) => this.queryFilters.setSchemas(form.$embedded.schema.$embedded.filtersSchemas)),\n        map((form) => [form, this.buildQueryResource(form)]),\n      );\n  }\n\n  /**\n   * Load the query form only with the given query props.\n   *\n   * @param params\n   * @param queryId\n   * @param projectIdentifier\n   * @param payload\n   */\n  public loadWithParams(params:{ [key:string]:unknown }, queryId:string|null|undefined, projectIdentifier:string|undefined|null, payload:any = {}):Observable<[QueryFormResource, QueryResource]> {\n    // We need a valid payload so that we\n    // can check whether form saving is possible.\n    // The query needs a name to be valid.\n    if (!queryId && !payload.name) {\n      payload.name = '!!!__O__o__O__!!!';\n    }\n\n    if (projectIdentifier) {\n      payload._links = payload._links || {};\n      payload._links.project = {\n        href: this.apiRoot.projects.id(projectIdentifier).toString(),\n      };\n    }\n\n    const { path } = this.apiRoot.queries.withOptionalId(queryId).form;\n    const href = URI(path).search(params).toString();\n    return this.halResourceService\n      .post<QueryFormResource>(href, payload)\n      .pipe(\n        tap((form) => this.queryFilters.setSchemas(form.$embedded.schema.$embedded.filtersSchemas)),\n        map((form) => [form, this.buildQueryResource(form)]),\n      );\n  }\n\n  protected buildQueryResource(form:QueryFormResource):QueryResource {\n    return this.halResourceService.createHalResourceOfType<QueryResource>('Query', form.payload);\n  }\n}\n","// -- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2023 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\nimport { ApiV3GettableResource } from 'core-app/core/apiv3/paths/apiv3-resource';\nimport { QueryResource } from 'core-app/features/hal/resources/query-resource';\nimport { ApiV3QueryOrder } from 'core-app/core/apiv3/endpoints/queries/apiv3-query-order';\nimport { ApiV3QueryForm } from 'core-app/core/apiv3/endpoints/queries/apiv3-query-form';\nimport { Observable } from 'rxjs';\nimport { QueryFormResource } from 'core-app/features/hal/resources/query-form-resource';\nimport { InjectField } from 'core-app/shared/helpers/angular/inject-field.decorator';\nimport { QueryFiltersService } from 'core-app/features/work-packages/components/wp-query/query-filters.service';\nimport { HalPayloadHelper } from 'core-app/features/hal/schemas/hal-payload.helper';\nimport { PaginationObject } from 'core-app/shared/components/table-pagination/pagination-service';\n\nexport class ApiV3QueryPaths extends ApiV3GettableResource<QueryResource> {\n  @InjectField() private queryFilters:QueryFiltersService;\n\n  // Static paths\n  readonly form = this.subResource('form', ApiV3QueryForm);\n\n  // Order path\n  readonly order = new ApiV3QueryOrder(this.injector, this.path, 'order');\n\n  /**\n   * Stream the response for the given query request\n   * @param queryData\n   */\n  public parameterised(params:Object):Observable<QueryResource> {\n    return this.halResourceService\n      .get<QueryResource>(this.path, params);\n  }\n\n  /**\n   * Update the given query\n   * @param query\n   * @param form\n   */\n  public patch(payload:QueryResource|Object, form?:QueryFormResource):Observable<QueryResource> {\n    if (payload instanceof QueryResource && form) {\n      // Extracting requires having the filter schemas loaded as the dependencies\n      this.queryFilters.mapSchemasIntoFilters(payload, form);\n      payload = HalPayloadHelper.extractPayloadFromSchema(payload, form.schema);\n    }\n\n    return this\n      .halResourceService\n      .patch<QueryResource>(this.path, payload);\n  }\n\n  /**\n   * Delete the query\n   */\n  public delete() {\n    return this\n      .halResourceService\n      .delete(this.path);\n  }\n\n  /**\n   * Reload with a given pagination\n   * @param pagination\n   */\n  public paginated(pagination:PaginationObject):Observable<QueryResource> {\n    return this.parameterised(pagination);\n  }\n}\n","// -- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2023 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\nimport { ApiV3GettableResource, ApiV3ResourceCollection } from 'core-app/core/apiv3/paths/apiv3-resource';\nimport { ApiV3QueryPaths } from 'core-app/core/apiv3/endpoints/queries/apiv3-query-paths';\nimport { QueryResource } from 'core-app/features/hal/resources/query-resource';\nimport { ApiV3Service } from 'core-app/core/apiv3/api-v3.service';\nimport { ApiV3QueryForm } from 'core-app/core/apiv3/endpoints/queries/apiv3-query-form';\nimport { Observable } from 'rxjs';\nimport { QueryFormResource } from 'core-app/features/hal/resources/query-form-resource';\nimport { InjectField } from 'core-app/shared/helpers/angular/inject-field.decorator';\nimport { CollectionResource } from 'core-app/features/hal/resources/collection-resource';\nimport { ApiV3ListParameters, listParamsString } from 'core-app/core/apiv3/paths/apiv3-list-resource.interface';\nimport { QueryFiltersService } from 'core-app/features/work-packages/components/wp-query/query-filters.service';\nimport { HalPayloadHelper } from 'core-app/features/hal/schemas/hal-payload.helper';\n\nexport class ApiV3QueriesPaths extends ApiV3ResourceCollection<QueryResource, ApiV3QueryPaths> {\n  @InjectField() private queryFilters:QueryFiltersService;\n\n  constructor(protected apiRoot:ApiV3Service,\n    protected basePath:string) {\n    super(apiRoot, basePath, 'queries', ApiV3QueryPaths);\n  }\n\n  // Static paths\n  // /api/v3/queries/form\n  readonly form = this.subResource('form', ApiV3QueryForm);\n\n  // /api/v3/queries/default\n  readonly default = this.subResource<ApiV3GettableResource<QueryResource>>('default');\n\n  // /api/v3/queries/filter_instance_schemas/:id\n  readonly filter_instance_schemas = new ApiV3ResourceCollection(this.apiRoot, this.path, 'filter_instance_schemas');\n\n  /**\n   * Load a list of queries with a given list parameter filter\n   * @param params\n   */\n  public list(params?:ApiV3ListParameters):Observable<CollectionResource<QueryResource>> {\n    return this\n      .halResourceService\n      .get<CollectionResource<QueryResource>>(this.path + listParamsString(params));\n  }\n\n  /**\n   * Locate a query for the response for the given query request.\n   * This might be the default query or an existing query identified by its ID.\n   * @param queryData\n   * @param queryId\n   * @param projectIdentifier\n   */\n  public find(queryData:Object, queryId?:string|null, projectIdentifier?:string|null|undefined):Observable<QueryResource> {\n    let path:string;\n\n    if (queryId) {\n      path = this.apiRoot.queries.id(queryId).toString();\n    } else {\n      path = this.apiRoot.withOptionalProject(projectIdentifier).queries.default.toString();\n    }\n\n    return this\n      .halResourceService\n      .get<QueryResource>(path, queryData);\n  }\n\n  /**\n   * Stream the response for the given query request\n   *\n   * @param params\n   */\n  public parameterised(params:Object):Observable<QueryResource> {\n    return this.halResourceService\n      .get<QueryResource>(\n      this.default.path,\n      params,\n    );\n  }\n\n  /**\n   * Create a new query resource\n   *\n   * @param payload Payload object or query HAL resource\n   * @param form Form resource, needed when QueryResource is passed\n   */\n  public post(payload:QueryResource|Object, form?:QueryFormResource):Observable<QueryResource> {\n    if (payload instanceof QueryResource && form) {\n      // Extracting requires having the filter schemas loaded as the dependencies\n      this.queryFilters.mapSchemasIntoFilters(payload, form);\n      payload = HalPayloadHelper.extractPayloadFromSchema(payload, form.schema);\n    }\n\n    return this\n      .halResourceService\n      .post<QueryResource>(\n      this.apiRoot.queries.path, payload,\n    );\n  }\n\n  /**\n   * Invert the starred state of the given query\n   *\n   * @param query\n   */\n  public toggleStarred(query:QueryResource):Promise<unknown> {\n    if (query.starred) {\n      return query.unstar();\n    }\n    return query.star();\n  }\n\n  /**\n   * Get the ical url of the given query for the requesting user with the ical token\n   *\n   * @param query\n   * @param tokenName\n   */\n  public getIcalUrl(query:QueryResource, tokenName:string):Promise<unknown> {\n    return query.icalUrl({ token_name: tokenName });\n  }\n}\n","// -- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2023 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\nimport { ApiV3GettableResource, ApiV3ResourceCollection } from 'core-app/core/apiv3/paths/apiv3-resource';\nimport { ApiV3Service } from 'core-app/core/apiv3/api-v3.service';\nimport { from, Observable } from 'rxjs';\nimport { CollectionResource } from 'core-app/features/hal/resources/collection-resource';\nimport { RelationResource } from 'core-app/features/hal/resources/relation-resource';\nimport { map } from 'rxjs/operators';\nimport { ApiV3Filter } from 'core-app/shared/helpers/api-v3/api-v3-filter-builder';\n\nexport class ApiV3RelationsPaths extends ApiV3ResourceCollection<RelationResource, ApiV3GettableResource<RelationResource>> {\n  constructor(protected apiRoot:ApiV3Service,\n    protected basePath:string) {\n    super(apiRoot, basePath, 'relations');\n  }\n\n  /**\n   * Get all versions\n   */\n  public get():Observable<CollectionResource<RelationResource>> {\n    return this\n      .halResourceService\n      .get<CollectionResource<RelationResource>>(this.path);\n  }\n\n  public loadInvolved(workPackageIds:string[]):Observable<RelationResource[]> {\n    const validIds = _.filter(workPackageIds, (id) => /\\d+/.test(id));\n\n    if (validIds.length === 0) {\n      return from([]);\n    }\n\n    return this\n      .filtered(\n        ApiV3Filter('involved', '=', validIds),\n      )\n      .getPaginatedResults();\n  }\n}\n","import { ApiV3FormResource } from 'core-app/core/apiv3/forms/apiv3-form-resource';\nimport { FormResource } from 'core-app/features/hal/resources/form-resource';\nimport { Observable } from 'rxjs';\nimport { HalSource } from 'core-app/features/hal/resources/hal-resource';\n\nexport class ApiV3WorkPackageForm extends ApiV3FormResource {\n  /**\n   * Returns a promise to post `/api/v3/work_packages/form` with only the type part of the\n   * provided payload being sent to the backend.\n   *\n   * @param payload: The payload to be sent to the backend\n   * @returns A work package form resource prefilled with the provided payload.\n   */\n  public forTypePayload(payload:HalSource):Observable<FormResource> {\n    const typePayload = payload._links.type ? { _links: { type: payload._links.type } } : { _links: {} };\n\n    return this.post(payload);\n  }\n\n  /**\n   * Returns a promise to post `/api/v3/work_packages/form` where the\n   * payload sent to the backend has been provided.\n   *\n   * @param payload: The payload to be sent to the backend\n   * @returns A work package form resource prefilled with the provided payload.\n   */\n  public forPayload(payload:Partial<HalSource>):Observable<FormResource> {\n    return this.post(payload);\n  }\n}\n","// -- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2023 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\nimport { WorkPackageResource } from 'core-app/features/hal/resources/work-package-resource';\nimport { ApiV3RelationsPaths } from 'core-app/core/apiv3/endpoints/relations/apiv3-relations-paths';\nimport { ApiV3Resource } from 'core-app/core/apiv3/cache/cachable-apiv3-resource';\nimport { ApiV3WorkPackagesPaths } from 'core-app/core/apiv3/endpoints/work_packages/api-v3-work-packages-paths';\nimport { StateCacheService } from 'core-app/core/apiv3/cache/state-cache.service';\nimport { ApiV3WorkPackageForm } from 'core-app/core/apiv3/endpoints/work_packages/apiv3-work-package-form';\n\nexport class ApiV3WorkPackagePaths extends ApiV3Resource<WorkPackageResource> {\n  // /api/v3/(?:projectPath)/work_packages/(:workPackageId)/relations\n  public readonly relations = this.subResource('relations', ApiV3RelationsPaths);\n\n  // /api/v3/(?:projectPath)/work_packages/(:workPackageId)/revisions\n  public readonly revisions = this.subResource('revisions');\n\n  // /api/v3/(?:projectPath)/work_packages/(:workPackageId)/activities\n  public readonly activities = this.subResource('activities');\n\n  // /api/v3/(?:projectPath)/work_packages/(:workPackageId)/available_watchers\n  public readonly available_watchers = this.subResource('available_watchers');\n\n  // /api/v3/(?:projectPath)/work_packages/(:workPackageId)/available_projects\n  public readonly available_projects = this.subResource('available_projects');\n\n  // /api/v3/(?:projectPath)/work_packages/(:workPackageId)/github_pull_requests\n  public readonly github_pull_requests = this.subResource('github_pull_requests');\n\n  // /api/v3/(projects/:projectIdentifier)/work_packages/(:workPackageId)/form\n  public readonly form:ApiV3WorkPackageForm = this.subResource('form', ApiV3WorkPackageForm);\n\n  protected createCache():StateCacheService<WorkPackageResource> {\n    return (this.parent as ApiV3WorkPackagesPaths).cache;\n  }\n}\n","// -- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2023 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\nimport { MultiInputState } from '@openproject/reactivestates';\nimport { WorkPackageResource } from 'core-app/features/hal/resources/work-package-resource';\nimport { Injectable, Injector } from '@angular/core';\nimport { debugLog } from 'core-app/shared/helpers/debug_output';\nimport { StateCacheService } from 'core-app/core/apiv3/cache/state-cache.service';\nimport { InjectField } from 'core-app/shared/helpers/angular/inject-field.decorator';\nimport { SchemaCacheService } from 'core-app/core/schemas/schema-cache.service';\nimport isNewResource from 'core-app/features/hal/helpers/is-new-resource';\n\n@Injectable()\nexport class WorkPackageCache extends StateCacheService<WorkPackageResource> {\n  @InjectField() private schemaCacheService:SchemaCacheService;\n\n  constructor(readonly injector:Injector,\n    state:MultiInputState<WorkPackageResource>) {\n    super(state);\n  }\n\n  updateValue(id:string, val:WorkPackageResource):Promise<WorkPackageResource> {\n    return this.schemaCacheService.ensureLoaded(val).then(() => {\n      this.putValue(id, val);\n      return val;\n    });\n  }\n\n  updateWorkPackage(wp:WorkPackageResource, immediate = false):Promise<WorkPackageResource> {\n    if (immediate || isNewResource(wp)) {\n      return super.updateValue(wp.id!, wp);\n    }\n    return this.updateValue(wp.id!, wp);\n  }\n\n  updateWorkPackageList(list:WorkPackageResource[], skipOnIdentical = true) {\n    list.forEach((i) => {\n      const wp = i;\n      const workPackageId = wp.id!;\n      const state = this.multiState.get(workPackageId);\n\n      // If the work package is new, ignore the schema\n      if (isNewResource(wp)) {\n        state.putValue(wp);\n        return;\n      }\n\n      // Ensure the schema is loaded\n      // so that no consumer needs to call schema#$load manually\n      this.schemaCacheService.ensureLoaded(wp).then(() => {\n        // Check if the work package has changed\n        if (skipOnIdentical && state.hasValue() && _.isEqual(state.value!.$source, wp.$source)) {\n          debugLog('Skipping identical work package from updating');\n          return;\n        }\n\n        state.putValue(wp);\n      });\n    });\n  }\n}\n","// -- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2023 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\nimport { ApiV3GettableResource } from 'core-app/core/apiv3/paths/apiv3-resource';\nimport { WorkPackageCollectionResource } from 'core-app/features/hal/resources/wp-collection-resource';\nimport { Observable } from 'rxjs';\nimport { ApiV3WorkPackagesPaths } from 'core-app/core/apiv3/endpoints/work_packages/api-v3-work-packages-paths';\nimport { take, tap } from 'rxjs/operators';\nimport { WorkPackageCache } from 'core-app/core/apiv3/endpoints/work_packages/work-package.cache';\nimport { States } from 'core-app/core/states/states.service';\nimport { InjectField } from 'core-app/shared/helpers/angular/inject-field.decorator';\nimport { CollectionResource } from 'core-app/features/hal/resources/collection-resource';\nimport { SchemaResource } from 'core-app/features/hal/resources/schema-resource';\n\nexport class ApiV3WorkPackageCachedSubresource extends ApiV3GettableResource<WorkPackageCollectionResource> {\n  @InjectField() private states:States;\n\n  public get():Observable<WorkPackageCollectionResource> {\n    return this\n      .halResourceService\n      .get<WorkPackageCollectionResource>(this.path)\n      .pipe(\n        tap((collection) => collection.schemas && this.updateSchemas(collection.schemas)),\n        tap((collection) => this.cache.updateWorkPackageList(collection.elements)),\n        take(1),\n      );\n  }\n\n  protected get cache():WorkPackageCache {\n    return (this.parent as unknown as ApiV3WorkPackagesPaths).cache;\n  }\n\n  private updateSchemas(schemas:CollectionResource<SchemaResource>) {\n    schemas.elements.forEach((schema) => {\n      this.states.schemas.get(schema.href as string).putValue(schema);\n    });\n  }\n}\n","// -- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2023 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\nimport { Observable } from 'rxjs';\nimport { ApiV3WorkPackagePaths } from 'core-app/core/apiv3/endpoints/work_packages/api-v3-work-package-paths';\nimport { WorkPackageResource } from 'core-app/features/hal/resources/work-package-resource';\nimport { WorkPackageCollectionResource } from 'core-app/features/hal/resources/wp-collection-resource';\nimport { ApiV3WorkPackageForm } from 'core-app/core/apiv3/endpoints/work_packages/apiv3-work-package-form';\nimport { ApiV3Service } from 'core-app/core/apiv3/api-v3.service';\nimport { ApiV3Collection } from 'core-app/core/apiv3/cache/cachable-apiv3-collection';\nimport { SchemaResource } from 'core-app/features/hal/resources/schema-resource';\nimport { WorkPackageCache } from 'core-app/core/apiv3/endpoints/work_packages/work-package.cache';\nimport { ApiV3GettableResource } from 'core-app/core/apiv3/paths/apiv3-resource';\nimport { ApiV3WorkPackageCachedSubresource } from 'core-app/core/apiv3/endpoints/work_packages/api-v3-work-package-cached-subresource';\nimport {\n  ApiV3FilterBuilder,\n  ApiV3FilterValueType,\n  ApiV3Filter,\n} from 'core-app/shared/helpers/api-v3/api-v3-filter-builder';\n\nexport class ApiV3WorkPackagesPaths extends ApiV3Collection<WorkPackageResource, ApiV3WorkPackagePaths, WorkPackageCache> {\n  // Base path\n  public readonly path:string;\n\n  constructor(readonly apiRoot:ApiV3Service,\n    protected basePath:string) {\n    super(apiRoot, basePath, 'work_packages', ApiV3WorkPackagePaths);\n  }\n\n  // Static paths\n\n  // /api/v3/(projects/:projectIdentifier)/work_packages/form\n  public readonly form:ApiV3WorkPackageForm = this.subResource('form', ApiV3WorkPackageForm);\n\n  /**\n   *\n   * Load a collection of work packages and put them all into cache\n   *\n   * @param ids\n   */\n  public requireAll(ids:string[]):Promise<unknown> {\n    if (ids.length === 0) {\n      return Promise.resolve();\n    }\n\n    return new Promise<undefined>((resolve, reject) => {\n      this\n        .loadCollectionsFor(_.uniq(ids))\n        .then((pagedResults:WorkPackageCollectionResource[]) => {\n          _.each(pagedResults, (results) => {\n            if (results.schemas) {\n              _.each(results.schemas.elements, (schema:SchemaResource) => {\n                this.states.schemas.get(schema.href as string).putValue(schema);\n              });\n            }\n\n            if (results.elements) {\n              this.cache.updateWorkPackageList(results.elements);\n            }\n          });\n\n          resolve(undefined);\n        }, reject);\n    });\n  }\n\n  /**\n   * Create a work package from a form payload\n   *\n   * @param payload\n   * @return {Promise<WorkPackageResource>}\n   */\n  public post(payload:object):Observable<WorkPackageResource> {\n    return this\n      .halResourceService\n      .post<WorkPackageResource>(this.path, payload)\n      .pipe(\n        this.cacheResponse(),\n      );\n  }\n\n  filtered<R = ApiV3GettableResource<WorkPackageCollectionResource>>(filters:ApiV3FilterBuilder, params:{ [p:string]:string } = {}):R {\n    return super.filtered(filters, params, ApiV3WorkPackageCachedSubresource) as any;\n  }\n\n  /**\n   * Shortcut to filter work packages by subject or ID\n   * @param term\n   * @param idOnly\n   * @param additionalParams Additional set of params to the API\n   */\n  public filterByTypeaheadOrId(term:string, idOnly = false, additionalParams:{ [key:string]:string } = {}):ApiV3WorkPackageCachedSubresource {\n    const filters:ApiV3FilterBuilder = new ApiV3FilterBuilder();\n\n    if (idOnly) {\n      filters.add('id', '=', [term]);\n    } else {\n      filters.add('typeahead', '**', [term]);\n    }\n\n    const params = {\n      sortBy: '[[\"updatedAt\",\"desc\"]]',\n      offset: '1',\n      pageSize: '10',\n      ...additionalParams,\n    };\n\n    return this.filtered(filters, params);\n  }\n\n  /**\n   * Returns work packages within the ids array to be updated since <timestamp>\n   * @param ids work package IDs to filter for\n   * @param timestamp The timestamp to clip at\n   */\n  public filterUpdatedSince(ids:(string|null)[], timestamp:ApiV3FilterValueType):ApiV3WorkPackageCachedSubresource {\n    const filters = new ApiV3FilterBuilder()\n      .add('id', '=', (ids.filter((n) => n) as string[]))\n      .add('updatedAt', '<>d', [timestamp, '']);\n\n    const params = {\n      offset: '1',\n      pageSize: '10',\n    };\n\n    return this.filtered(filters, params);\n  }\n\n  /**\n   * Loads the work packages collection for the given work package IDs.\n   * Returns a WP Collection with schemas and results embedded.\n   *\n   * @param ids\n   * @return {WorkPackageCollectionResource[]}\n   */\n  protected loadCollectionsFor(ids:string[]):Promise<WorkPackageCollectionResource[]> {\n    return this\n      .halResourceService\n      .getAllPaginated(\n        this.path,\n        { filters: ApiV3Filter('id', '=', ids).toJson() },\n      )\n      .toPromise() as Promise<WorkPackageCollectionResource[]>;\n  }\n\n  protected createCache():WorkPackageCache {\n    return new WorkPackageCache(this.injector, this.states.workPackages);\n  }\n\n  // /api/v3/(?:projectPath)/work_packages/(:workPackageId)/available_projects\n  public readonly available_projects = this.subResource('available_projects');\n}\n","// -- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2023 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\nimport { VersionResource } from 'core-app/features/hal/resources/version-resource';\nimport { Observable } from 'rxjs';\nimport { ApiV3Resource } from 'core-app/core/apiv3/cache/cachable-apiv3-resource';\nimport { tap } from 'rxjs/operators';\nimport { StateCacheService } from 'core-app/core/apiv3/cache/state-cache.service';\n\nexport class ApiV3VersionPaths extends ApiV3Resource<VersionResource> {\n  /**\n   * Update a version resource with the given payload\n   *\n   * @param resource\n   * @param payload\n   */\n  public patch(payload:Object):Observable<VersionResource> {\n    return this\n      .halResourceService\n      .patch<VersionResource>(\n      this.path,\n      payload,\n    )\n      .pipe(\n        tap((version) => this.touch(version)),\n      );\n  }\n\n  protected createCache():StateCacheService<VersionResource> {\n    return new StateCacheService<VersionResource>(this.states.versions);\n  }\n}\n","// -- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2023 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\nimport { ApiV3ResourceCollection } from 'core-app/core/apiv3/paths/apiv3-resource';\nimport { VersionResource } from 'core-app/features/hal/resources/version-resource';\nimport { ApiV3Service } from 'core-app/core/apiv3/api-v3.service';\nimport { ApiV3FormResource } from 'core-app/core/apiv3/forms/apiv3-form-resource';\nimport { Observable } from 'rxjs';\nimport { WorkPackageResource } from 'core-app/features/hal/resources/work-package-resource';\nimport { CollectionResource } from 'core-app/features/hal/resources/collection-resource';\nimport { ApiV3AvailableProjectsPaths } from 'core-app/core/apiv3/endpoints/projects/apiv3-available-projects-paths';\nimport { ApiV3VersionPaths } from 'core-app/core/apiv3/endpoints/versions/apiv3-version-paths';\n\nexport class ApiV3VersionsPaths extends ApiV3ResourceCollection<VersionResource, ApiV3VersionPaths> {\n  constructor(protected apiRoot:ApiV3Service,\n    protected basePath:string) {\n    super(apiRoot, basePath, 'versions', ApiV3VersionPaths);\n  }\n\n  // /api/v3/versions/form\n  public readonly form = this.subResource('form', ApiV3FormResource);\n\n  public readonly available_projects = this.subResource('available_projects', ApiV3AvailableProjectsPaths);\n\n  /**\n   * Get all versions\n   */\n  public get():Observable<CollectionResource<VersionResource>> {\n    return this\n      .halResourceService\n      .get<CollectionResource<VersionResource>>(this.path);\n  }\n\n  /**\n   * Create a version from the given payload\n   *\n   * @param payload\n   * @return {Promise<WorkPackageResource>}\n   */\n  public post(payload:Object):Observable<VersionResource> {\n    return this\n      .halResourceService\n      .post<VersionResource>(this.path, payload);\n  }\n}\n","// -- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2023 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\nimport { ApiV3FormResource } from 'core-app/core/apiv3/forms/apiv3-form-resource';\nimport { ApiV3Service } from 'core-app/core/apiv3/api-v3.service';\nimport { SimpleResource } from 'core-app/core/apiv3/paths/path-resources';\n\nexport class ApiV3ProjectCopyPaths extends SimpleResource {\n  constructor(protected apiRoot:ApiV3Service,\n    public basePath:string) {\n    super(basePath, 'copy');\n  }\n\n  // /api/v3/projects/:project_id/copy/form\n  public readonly form = new ApiV3FormResource(this.apiRoot, this.path, 'form');\n}\n","// -- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2023 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\nimport { ApiV3QueriesPaths } from 'core-app/core/apiv3/endpoints/queries/apiv3-queries-paths';\nimport { ApiV3TypesPaths } from 'core-app/core/apiv3/endpoints/types/apiv3-types-paths';\nimport { ApiV3WorkPackagesPaths } from 'core-app/core/apiv3/endpoints/work_packages/api-v3-work-packages-paths';\nimport { ProjectResource } from 'core-app/features/hal/resources/project-resource';\nimport { ApiV3Resource } from 'core-app/core/apiv3/cache/cachable-apiv3-resource';\nimport { ApiV3VersionsPaths } from 'core-app/core/apiv3/endpoints/versions/apiv3-versions-paths';\nimport { StateCacheService } from 'core-app/core/apiv3/cache/state-cache.service';\nimport { ApiV3ProjectsPaths } from 'core-app/core/apiv3/endpoints/projects/apiv3-projects-paths';\nimport { ApiV3ProjectCopyPaths } from 'core-app/core/apiv3/endpoints/projects/apiv3-project-copy-paths';\n\nexport class ApiV3ProjectPaths extends ApiV3Resource<ProjectResource> {\n  // /api/v3/projects/:project_id/available_assignees\n  public readonly available_assignees = this.subResource('available_assignees');\n\n  // /api/v3/projects/:project_id/queries\n  public readonly queries = new ApiV3QueriesPaths(this.apiRoot, this.path);\n\n  // /api/v3/projects/:project_id/types\n  public readonly types = new ApiV3TypesPaths(this.apiRoot, this.path);\n\n  // /api/v3/projects/:project_id/work_packages\n  public readonly work_packages = new ApiV3WorkPackagesPaths(this.apiRoot, this.path);\n\n  // /api/v3/projects/:project_id/versions\n  public readonly versions = new ApiV3VersionsPaths(this.apiRoot, this.path);\n\n  // /api/v3/projects/:project_id/copy\n  public readonly copy = new ApiV3ProjectCopyPaths(this.apiRoot, this.path);\n\n  protected createCache():StateCacheService<ProjectResource> {\n    return (this.parent as ApiV3ProjectsPaths).cache;\n  }\n}\n","// -- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2023 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\nimport { MultiInputState } from '@openproject/reactivestates';\nimport { Injectable, Injector } from '@angular/core';\nimport { StateCacheService } from 'core-app/core/apiv3/cache/state-cache.service';\nimport { InjectField } from 'core-app/shared/helpers/angular/inject-field.decorator';\nimport { SchemaCacheService } from 'core-app/core/schemas/schema-cache.service';\nimport { ProjectResource } from 'core-app/features/hal/resources/project-resource';\n\n@Injectable()\nexport class ProjectCache extends StateCacheService<ProjectResource> {\n  @InjectField() private schemaCacheService:SchemaCacheService;\n\n  constructor(readonly injector:Injector,\n    state:MultiInputState<ProjectResource>) {\n    super(state);\n  }\n\n  updateValue(id:string, val:ProjectResource):Promise<ProjectResource> {\n    return this.schemaCacheService.ensureLoaded(val).then(() => {\n      this.putValue(id, val);\n      return val;\n    });\n  }\n}\n","// -- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2023 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\nimport { ApiV3ProjectPaths } from 'core-app/core/apiv3/endpoints/projects/apiv3-project-paths';\nimport { ProjectResource } from 'core-app/features/hal/resources/project-resource';\nimport { ApiV3Service } from 'core-app/core/apiv3/api-v3.service';\nimport { SchemaResource } from 'core-app/features/hal/resources/schema-resource';\nimport {\n  ApiV3ListParameters,\n  ApiV3ListResourceInterface,\n  listParamsString,\n} from 'core-app/core/apiv3/paths/apiv3-list-resource.interface';\nimport { Observable } from 'rxjs';\nimport { ApiV3Collection } from 'core-app/core/apiv3/cache/cachable-apiv3-collection';\nimport { StateCacheService } from 'core-app/core/apiv3/cache/state-cache.service';\nimport { ProjectCache } from 'core-app/core/apiv3/endpoints/projects/project.cache';\nimport { CollectionResource } from 'core-app/features/hal/resources/collection-resource';\n\nexport class ApiV3ProjectsPaths\n  extends ApiV3Collection<ProjectResource, ApiV3ProjectPaths>\n  implements ApiV3ListResourceInterface<ProjectResource> {\n  constructor(protected apiRoot:ApiV3Service,\n    protected basePath:string) {\n    super(apiRoot, basePath, 'projects', ApiV3ProjectPaths);\n  }\n\n  // /api/v3/projects/schema\n  public readonly schema = this.subResource<SchemaResource>('schema');\n\n  /**\n   * Load a list of project with a given list parameter filter\n   *\n   * @param params\n   */\n  public list(params?:ApiV3ListParameters):Observable<CollectionResource<ProjectResource>> {\n    return this\n      .halResourceService\n      .get<CollectionResource<ProjectResource>>(this.path + listParamsString(params))\n      .pipe(\n        this.cacheResponse(),\n      );\n  }\n\n  protected createCache():StateCacheService<ProjectResource> {\n    return new ProjectCache(this.injector, this.states.projects);\n  }\n}\n","// -- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2023 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\nimport { StatusResource } from 'core-app/features/hal/resources/status-resource';\nimport { ApiV3Resource } from 'core-app/core/apiv3/cache/cachable-apiv3-resource';\nimport { StateCacheService } from 'core-app/core/apiv3/cache/state-cache.service';\n\nexport class ApiV3StatusPaths extends ApiV3Resource<StatusResource> {\n  protected createCache():StateCacheService<StatusResource> {\n    return new StateCacheService<StatusResource>(this.states.statuses);\n  }\n}\n","// -- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2023 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\nimport { ApiV3ResourceCollection } from 'core-app/core/apiv3/paths/apiv3-resource';\nimport { StatusResource } from 'core-app/features/hal/resources/status-resource';\nimport { ApiV3StatusPaths } from 'core-app/core/apiv3/endpoints/statuses/apiv3-status-paths';\nimport { Observable } from 'rxjs';\nimport { CollectionResource } from 'core-app/features/hal/resources/collection-resource';\nimport { tap } from 'rxjs/operators';\nimport { ApiV3Service } from 'core-app/core/apiv3/api-v3.service';\n\nexport class ApiV3StatusesPaths extends ApiV3ResourceCollection<StatusResource, ApiV3StatusPaths> {\n  constructor(protected apiRoot:ApiV3Service,\n    protected basePath:string) {\n    super(apiRoot, basePath, 'statuses', ApiV3StatusPaths);\n  }\n\n  /**\n   * Perform a request to the HalResourceService with the current path\n   */\n  public get():Observable<CollectionResource<StatusResource>> {\n    return this\n      .halResourceService\n      .get<CollectionResource<StatusResource>>(this.path)\n      .pipe(\n        tap((collection) => {\n          collection.elements.forEach((resource, id) => {\n            this.id(resource.id!).cache.updateValue(resource.id!, resource);\n          });\n        }),\n      );\n  }\n}\n","// -- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2023 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\nimport { RoleResource } from 'core-app/features/hal/resources/role-resource';\nimport { ApiV3Resource } from 'core-app/core/apiv3/cache/cachable-apiv3-resource';\nimport { StateCacheService } from 'core-app/core/apiv3/cache/state-cache.service';\n\nexport class ApiV3RolePaths extends ApiV3Resource<RoleResource> {\n  protected createCache():StateCacheService<RoleResource> {\n    return new StateCacheService<RoleResource>(this.states.roles);\n  }\n}\n","// -- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2023 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\nimport { ApiV3ResourceCollection } from 'core-app/core/apiv3/paths/apiv3-resource';\nimport { RoleResource } from 'core-app/features/hal/resources/role-resource';\nimport { ApiV3RolePaths } from 'core-app/core/apiv3/endpoints/roles/apiv3-role-paths';\nimport { Observable } from 'rxjs';\nimport { CollectionResource } from 'core-app/features/hal/resources/collection-resource';\nimport { tap } from 'rxjs/operators';\nimport { ApiV3Service } from 'core-app/core/apiv3/api-v3.service';\n\nexport class ApiV3RolesPaths extends ApiV3ResourceCollection<RoleResource, ApiV3RolePaths> {\n  constructor(protected apiRoot:ApiV3Service,\n    protected basePath:string) {\n    super(apiRoot, basePath, 'roles', ApiV3RolePaths);\n  }\n\n  /**\n   * Perform a request to the HalResourceService with the current path\n   */\n  public get():Observable<CollectionResource<RoleResource>> {\n    return this\n      .halResourceService\n      .get<CollectionResource<RoleResource>>(this.path)\n      .pipe(\n        tap((collection) => {\n          collection.elements.forEach((resource, id) => {\n            this.id(resource.id!).cache.updateValue(resource.id!, resource);\n          });\n        }),\n      );\n  }\n}\n","// -- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2023 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\nimport { ApiV3GettableResource, ApiV3ResourceCollection } from 'core-app/core/apiv3/paths/apiv3-resource';\nimport { TimeEntryResource } from 'core-app/features/hal/resources/time-entry-resource';\nimport { ApiV3Service } from 'core-app/core/apiv3/api-v3.service';\nimport { Observable } from 'rxjs';\nimport { CollectionResource } from 'core-app/features/hal/resources/collection-resource';\nimport {\n  ApiV3ListParameters,\n  ApiV3ListResourceInterface,\n  listParamsString,\n} from 'core-app/core/apiv3/paths/apiv3-list-resource.interface';\nimport { NewsResource } from 'core-app/features/hal/resources/news-resource';\n\nexport class ApiV3NewsPaths\n  extends ApiV3ResourceCollection<NewsResource, ApiV3GettableResource<NewsResource>>\n  implements ApiV3ListResourceInterface<NewsResource> {\n  constructor(protected apiRoot:ApiV3Service,\n    protected basePath:string) {\n    super(apiRoot, basePath, 'news');\n  }\n\n  /**\n   * Load a list of time entries with a given list parameter filter\n   * @param params\n   */\n  public list(params?:ApiV3ListParameters):Observable<CollectionResource<NewsResource>> {\n    return this\n      .halResourceService\n      .get<CollectionResource<TimeEntryResource>>(this.path + listParamsString(params));\n  }\n}\n","// -- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2023 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\nimport { ApiV3GettableResource, ApiV3ResourceCollection } from 'core-app/core/apiv3/paths/apiv3-resource';\nimport { CollectionResource } from 'core-app/features/hal/resources/collection-resource';\nimport { ApiV3Service } from 'core-app/core/apiv3/api-v3.service';\nimport { Observable } from 'rxjs';\nimport { HelpTextResource } from 'core-app/features/hal/resources/help-text-resource';\n\nexport class ApiV3HelpTextsPaths\n  extends ApiV3ResourceCollection<HelpTextResource, ApiV3GettableResource<HelpTextResource>> {\n  constructor(protected apiRoot:ApiV3Service,\n    protected basePath:string) {\n    super(apiRoot, basePath, 'help_texts');\n  }\n\n  /**\n   * Load a list of membership entries with a given list parameter filter\n   * @param params\n   */\n  public get():Observable<CollectionResource<HelpTextResource>> {\n    return this\n      .halResourceService\n      .get<CollectionResource<HelpTextResource>>(this.path);\n  }\n}\n","// -- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2023 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\nimport { ApiV3GettableResource } from 'core-app/core/apiv3/paths/apiv3-resource';\nimport { ConfigurationResource } from 'core-app/features/hal/resources/configuration-resource';\nimport { Observable } from 'rxjs';\nimport { shareReplay } from 'rxjs/operators';\nimport { ApiV3Service } from 'core-app/core/apiv3/api-v3.service';\n\nexport class ApiV3ConfigurationPath extends ApiV3GettableResource<ConfigurationResource> {\n  private $configuration:Observable<ConfigurationResource>;\n\n  constructor(protected apiRoot:ApiV3Service,\n    readonly basePath:string) {\n    super(apiRoot, basePath, 'configuration');\n  }\n\n  public get():Observable<ConfigurationResource> {\n    if (this.$configuration) {\n      return this.$configuration;\n    }\n\n    return this.$configuration = this.halResourceService\n      .get<ConfigurationResource>(this.path)\n      .pipe(\n        shareReplay(),\n      );\n  }\n}\n","import { GridWidgetResource } from 'core-app/features/hal/resources/grid-widget-resource';\nimport { GridResource } from 'core-app/features/hal/resources/grid-resource';\nimport { CardHighlightingMode } from 'core-app/features/work-packages/components/wp-fast-table/builders/highlighting/highlighting-mode.const';\nimport { ApiV3Filter } from 'core-app/shared/helpers/api-v3/api-v3-filter-builder';\n\nexport type BoardType = 'free'|'action';\n\nexport interface BoardWidgetOption {\n  queryId:string;\n  filters:ApiV3Filter[];\n}\n\nexport class Board {\n  constructor(public grid:GridResource) {\n  }\n\n  public get id() {\n    return this.grid.id;\n  }\n\n  public get name() {\n    return this.grid.name;\n  }\n\n  public get editable() {\n    return !!this.grid.updateImmediately;\n  }\n\n  public get isFree() {\n    return !this.isAction;\n  }\n\n  public get isAction() {\n    return this.grid.options.type === 'action';\n  }\n\n  public get actionAttribute():string|undefined {\n    if (this.isFree) {\n      return undefined;\n    }\n\n    return this.grid.options.attribute as string;\n  }\n\n  public set highlightingMode(val:CardHighlightingMode) {\n    this.grid.options.highlightingMode = val;\n  }\n\n  public get highlightingMode():CardHighlightingMode {\n    return (this.grid.options.highlightingMode || 'none') as CardHighlightingMode;\n  }\n\n  public set name(name:string) {\n    this.grid.name = name;\n  }\n\n  public addQuery(widget:GridWidgetResource) {\n    widget.isNewWidget = true;\n    this.grid.widgets.push(widget);\n  }\n\n  public removeQuery(widget:GridWidgetResource) {\n    this.grid.widgets = this.grid.widgets.filter((el) => el.options.queryId !== widget.options.queryId);\n  }\n\n  public get queries():GridWidgetResource[] {\n    return this.grid.widgets;\n  }\n\n  public get createdAt() {\n    return this.grid.createdAt;\n  }\n\n  public get filters():ApiV3Filter[] {\n    return (this.grid.options.filters || []) as ApiV3Filter[];\n  }\n\n  public set filters(filters:ApiV3Filter[]) {\n    this.grid.options.filters = filters;\n  }\n\n  public sortWidgets() {\n    this.grid.widgets = this.grid.widgets.sort((a, b) => a.startColumn - b.startColumn);\n  }\n\n  public showStatusButton() {\n    return this.actionAttribute !== 'status';\n  }\n}\n","// -- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2023 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\nimport { Injectable } from '@angular/core';\nimport { input } from '@openproject/reactivestates';\nimport { Observable } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nexport type ModelLinks = { [action:string]:any };\nexport type ModelLinksHash = { [model:string]:ModelLinks };\n\n@Injectable({ providedIn: 'root' })\nexport class AuthorisationService {\n  private links = input<ModelLinksHash>({});\n\n  public initModelAuth(modelName:string, modelLinks:ModelLinks) {\n    this.links.doModify((value:ModelLinksHash) => {\n      const links = { ...value };\n      links[modelName] = modelLinks;\n      return links;\n    });\n  }\n\n  public observeUntil(unsubscribe:Observable<any>) {\n    return this.links.values$().pipe(takeUntil(unsubscribe));\n  }\n\n  public can(modelName:string, action:string) {\n    const links:ModelLinksHash = this.links.getValueOr({});\n    return links[modelName] && (action in links[modelName]);\n  }\n\n  public cannot(modelName:string, action:string) {\n    return !this.can(modelName, action);\n  }\n}\n","// -- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2023 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\nimport { Board } from 'core-app/features/boards/board/board';\nimport { Observable } from 'rxjs';\nimport { map, switchMap, tap } from 'rxjs/operators';\nimport { SchemaResource } from 'core-app/features/hal/resources/schema-resource';\nimport { ApiV3Resource } from 'core-app/core/apiv3/cache/cachable-apiv3-resource';\nimport { StateCacheService } from 'core-app/core/apiv3/cache/state-cache.service';\nimport { ApiV3BoardsPaths } from 'core-app/core/apiv3/virtual/apiv3-boards-paths';\n\nexport class ApiV3BoardPath extends ApiV3Resource<Board> {\n  /**\n   * Perform a request to the HalResourceService with the current path\n   */\n  protected load():Observable<Board> {\n    return this\n      .apiRoot\n      .grids\n      .id(this.id)\n      .get()\n      .pipe(\n        map((grid) => {\n          const newBoard = new Board(grid);\n\n          newBoard.sortWidgets();\n\n          return newBoard;\n        }),\n      );\n  }\n\n  /**\n   * Save the changes to the board\n   */\n  public save(board:Board):Observable<Board> {\n    return this\n      .fetchSchema(board)\n      .pipe(\n        switchMap((schema:SchemaResource) => this\n          .apiRoot\n          .grids\n          .id(board.grid)\n          .patch(board.grid, schema)),\n        map((grid) => {\n          board.grid = grid;\n          board.sortWidgets();\n          return board;\n        }),\n        this.cacheResponse(),\n      );\n  }\n\n  public delete():Observable<unknown> {\n    return this\n      .apiRoot\n      .grids\n      .id(this.id)\n      .delete()\n      .pipe(\n        tap(() => this.cache.clearSome(this.id.toString())),\n      );\n  }\n\n  private fetchSchema(board:Board):Observable<SchemaResource> {\n    return this\n      .apiRoot\n      .grids\n      .id(board.grid)\n      .form\n      .post({})\n      .pipe(\n        map((form) => form.schema),\n      );\n  }\n\n  protected createCache():StateCacheService<Board> {\n    return (this.parent as ApiV3BoardsPaths).cache;\n  }\n}\n","// -- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2023 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\nimport { GridResource } from 'core-app/features/hal/resources/grid-resource';\nimport { ApiV3Service } from 'core-app/core/apiv3/api-v3.service';\nimport { Observable } from 'rxjs';\nimport { ApiV3ListParameters, listParamsString } from 'core-app/core/apiv3/paths/apiv3-list-resource.interface';\nimport { CollectionResource } from 'core-app/features/hal/resources/collection-resource';\nimport { Board, BoardType } from 'core-app/features/boards/board/board';\nimport { map, switchMap, tap } from 'rxjs/operators';\nimport { InjectField } from 'core-app/shared/helpers/angular/inject-field.decorator';\nimport { AuthorisationService } from 'core-app/core/model-auth/model-auth.service';\nimport { ApiV3Collection } from 'core-app/core/apiv3/cache/cachable-apiv3-collection';\nimport { PathHelperService } from 'core-app/core/path-helper/path-helper.service';\nimport { ApiV3BoardPath } from 'core-app/core/apiv3/virtual/apiv3-board-path';\nimport { StateCacheService } from 'core-app/core/apiv3/cache/state-cache.service';\nimport { MAGIC_PAGE_NUMBER } from 'core-app/core/apiv3/helpers/get-paginated-results';\n\nexport class ApiV3BoardsPaths extends ApiV3Collection<Board, ApiV3BoardPath> {\n  @InjectField() private authorisationService:AuthorisationService;\n\n  @InjectField() private PathHelper:PathHelperService;\n\n  constructor(protected apiRoot:ApiV3Service,\n    protected basePath:string) {\n    super(apiRoot, basePath, 'grids', ApiV3BoardPath);\n  }\n\n  /**\n   * Load a list of grids with a given list parameter filter\n   * @param params\n   */\n  public list(params?:ApiV3ListParameters):Observable<Board[]> {\n    return this\n      .halResourceService\n      .get<CollectionResource<GridResource>>(this.path + listParamsString(params))\n      .pipe(\n        tap((collection) => this.authorisationService.initModelAuth('boards', collection.$links)),\n        map((collection) => collection.elements.map((grid) => {\n          const board = new Board(grid);\n          board.sortWidgets();\n          this.touch(board);\n\n          return board;\n        })),\n      );\n  }\n\n  /**\n   * Return all boards in the current scope of the project\n   *\n   * @param projectIdentifier\n   */\n  public allInScope(projectIdentifier:string):Observable<Board[]> {\n    const path = this.boardPath(projectIdentifier);\n    return this.list({ filters: [['scope', '=', [path]]], pageSize: MAGIC_PAGE_NUMBER });\n  }\n\n  /**\n   * Create a new board\n   * @param type\n   * @param name\n   * @param projectIdentifier\n   */\n  public create(type:BoardType, name:string, projectIdentifier:string, actionAttribute?:string):Observable<Board> {\n    const scope = this.boardPath(projectIdentifier);\n    return this\n      .createGrid(type, name, scope, actionAttribute)\n      .pipe(\n        map((grid) => new Board(grid)),\n      );\n  }\n\n  /**\n   * Retrieve the board path identifier for looking up grids.\n   *\n   * @param projectIdentifier The current project identifier\n   */\n  public boardPath(projectIdentifier:string) {\n    return this.PathHelper.projectBoardsPath(projectIdentifier);\n  }\n\n  protected createCache():StateCacheService<Board> {\n    const state = this.states.forType<Board>('boards');\n    return new StateCacheService<Board>(state);\n  }\n\n  private createGrid(type:BoardType, name:string, scope:string, actionAttribute?:string):Observable<GridResource> {\n    const payload:any = _.set({ name }, '_links.scope.href', scope);\n    payload.options = {\n      type,\n    };\n\n    if (actionAttribute) {\n      payload.options.attribute = actionAttribute;\n    }\n\n    return this\n      .apiRoot\n      .grids\n      .form\n      .post(payload)\n      .pipe(\n        switchMap((form) => this\n          .apiRoot\n          .grids\n          .post(form.payload.$source)),\n      );\n  }\n}\n","// -- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2023 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\nimport { ApiV3GettableResource } from 'core-app/core/apiv3/paths/apiv3-resource';\nimport { PlaceholderUserResource } from 'core-app/features/hal/resources/placeholder-user-resource';\nimport { Observable } from 'rxjs';\n\nexport class ApiV3PlaceholderUserPaths extends ApiV3GettableResource<PlaceholderUserResource> {\n  /**\n   * Update a placeholder user resource or payload\n   * @param resource\n   */\n  public patch(resource:PlaceholderUserResource|{ name:string }):Observable<PlaceholderUserResource> {\n    return this\n      .halResourceService\n      .patch<PlaceholderUserResource>(this.path, {\n      name: resource.name,\n    });\n  }\n\n  /**\n   * Delete a placeholder user resource\n   */\n  public delete():Observable<unknown> {\n    return this\n      .halResourceService\n      .delete(this.path);\n  }\n}\n","// -- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2023 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\nimport { ApiV3ResourceCollection } from 'core-app/core/apiv3/paths/apiv3-resource';\nimport { ApiV3PlaceholderUserPaths } from 'core-app/core/apiv3/endpoints/placeholder-users/apiv3-placeholder-user-paths';\nimport { PlaceholderUserResource } from 'core-app/features/hal/resources/placeholder-user-resource';\nimport { ApiV3Service } from 'core-app/core/apiv3/api-v3.service';\nimport { Observable } from 'rxjs';\nimport {\n  ApiV3ListParameters,\n  ApiV3ListResourceInterface,\n  listParamsString,\n} from 'core-app/core/apiv3/paths/apiv3-list-resource.interface';\nimport { CollectionResource } from 'core-app/features/hal/resources/collection-resource';\n\nexport class ApiV3PlaceholderUsersPaths\n  extends ApiV3ResourceCollection<PlaceholderUserResource, ApiV3PlaceholderUserPaths>\n  implements ApiV3ListResourceInterface<PlaceholderUserResource> {\n  constructor(protected apiRoot:ApiV3Service,\n    protected basePath:string) {\n    super(apiRoot, basePath, 'placeholder_users', ApiV3PlaceholderUserPaths);\n  }\n\n  /**\n   * Load a list of placeholder users with a given list parameter filter\n   * @param params\n   */\n  public list(params?:ApiV3ListParameters):Observable<CollectionResource<PlaceholderUserResource>> {\n    return this\n      .halResourceService\n      .get<CollectionResource<PlaceholderUserResource>>(this.path + listParamsString(params));\n  }\n\n  /**\n   * Create a new PlaceholderUserResource\n   *\n   * @param resource\n   */\n  public post(resource:{ name:string }):Observable<PlaceholderUserResource> {\n    return this\n      .halResourceService\n      .post<PlaceholderUserResource>(\n      this.path,\n      resource,\n    );\n  }\n}\n","// -- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2023 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\nimport { ApiV3GettableResource } from 'core-app/core/apiv3/paths/apiv3-resource';\nimport { GroupResource } from 'core-app/features/hal/resources/group-resource';\nimport { Observable } from 'rxjs';\n\nexport class ApiV3GroupPaths extends ApiV3GettableResource<GroupResource> {\n  /**\n   * Update a placeholder user resource or payload\n   * @param resource\n   */\n  public patch(resource:GroupResource|{ name:string }):Observable<GroupResource> {\n    return this\n      .halResourceService\n      .patch<GroupResource>(this.path, {\n      name: resource.name,\n    });\n  }\n\n  /**\n   * Delete a placeholder user resource\n   */\n  public delete():Observable<unknown> {\n    return this\n      .halResourceService\n      .delete(this.path);\n  }\n}\n","// -- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2023 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\nimport { ApiV3ResourceCollection } from 'core-app/core/apiv3/paths/apiv3-resource';\nimport { ApiV3GroupPaths } from 'core-app/core/apiv3/endpoints/groups/apiv3-group-paths';\nimport { ApiV3Service } from 'core-app/core/apiv3/api-v3.service';\nimport { Observable } from 'rxjs';\nimport {\n  ApiV3ListParameters,\n  ApiV3ListResourceInterface,\n  listParamsString,\n} from 'core-app/core/apiv3/paths/apiv3-list-resource.interface';\nimport { CollectionResource } from 'core-app/features/hal/resources/collection-resource';\nimport { GroupResource } from 'core-app/features/hal/resources/group-resource';\n\nexport class ApiV3GroupsPaths\n  extends ApiV3ResourceCollection<GroupResource, ApiV3GroupPaths>\n  implements ApiV3ListResourceInterface<GroupResource> {\n  constructor(protected apiRoot:ApiV3Service,\n    protected basePath:string) {\n    super(apiRoot, basePath, 'groups', ApiV3GroupPaths);\n  }\n\n  /**\n   * Load a list of placeholder users with a given list parameter filter\n   * @param params\n   */\n  public list(params?:ApiV3ListParameters):Observable<CollectionResource<GroupResource>> {\n    return this\n      .halResourceService\n      .get<CollectionResource<GroupResource>>(this.path + listParamsString(params));\n  }\n\n  /**\n   * Create a new GroupResource\n   *\n   * @param resource\n   */\n  public post(resource:{ name:string }):Observable<GroupResource> {\n    return this\n      .halResourceService\n      .post<GroupResource>(\n      this.path,\n      resource,\n    );\n  }\n}\n","// -- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2023 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\nimport { ApiV3GettableResource } from 'core-app/core/apiv3/paths/apiv3-resource';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { InjectField } from 'core-app/shared/helpers/angular/inject-field.decorator';\nimport { INotification } from 'core-app/core/state/in-app-notifications/in-app-notification.model';\n\nexport class ApiV3NotificationPaths extends ApiV3GettableResource<INotification> {\n  @InjectField() http:HttpClient;\n\n  public markRead():Observable<unknown> {\n    return this\n      .http\n      .post(\n        `${this.path}/read_ian`,\n        {},\n        {\n          withCredentials: true,\n          responseType: 'json',\n        },\n      );\n  }\n\n  public markUnread():Observable<unknown> {\n    return this\n      .http\n      .post(\n        `${this.path}/unread_ian`,\n        {},\n        {\n          withCredentials: true,\n          responseType: 'json',\n        },\n      );\n  }\n}\n","// -- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2023 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { ID } from '@datorama/akita';\n\nimport { ApiV3ResourceCollection } from 'core-app/core/apiv3/paths/apiv3-resource';\nimport { ApiV3Service } from 'core-app/core/apiv3/api-v3.service';\nimport {\n  ApiV3ListFilter,\n  ApiV3ListParameters,\n  listParamsString,\n} from 'core-app/core/apiv3/paths/apiv3-list-resource.interface';\nimport { ApiV3NotificationPaths } from 'core-app/core/apiv3/endpoints/notifications/apiv3-notification-paths';\nimport { InjectField } from 'core-app/shared/helpers/angular/inject-field.decorator';\nimport { IHALCollection } from 'core-app/core/apiv3/types/hal-collection.type';\nimport { INotification } from 'core-app/core/state/in-app-notifications/in-app-notification.model';\n\nexport class ApiV3NotificationsPaths\n  extends ApiV3ResourceCollection<INotification, ApiV3NotificationPaths> {\n  @InjectField() http:HttpClient;\n\n  constructor(\n    protected apiRoot:ApiV3Service,\n    protected basePath:string,\n  ) {\n    super(apiRoot, basePath, 'notifications', ApiV3NotificationPaths);\n  }\n\n  public facet(facet:string, params?:ApiV3ListParameters):Observable<IHALCollection<INotification>> {\n    if (facet === 'unread') {\n      return this.unread(params);\n    }\n    return this.list(params);\n  }\n\n  /**\n   * Load a list of events with a given list parameter filter\n   * @param params\n   */\n  public list(params?:ApiV3ListParameters):Observable<IHALCollection<INotification>> {\n    return this\n      .http\n      .get<IHALCollection<INotification>>(this.path + listParamsString(params));\n  }\n\n  public listPath(params?:ApiV3ListParameters):string {\n    return this.path + listParamsString(params);\n  }\n\n  /**\n   * Load unread events\n   */\n  public unread(additional?:ApiV3ListParameters):Observable<IHALCollection<INotification>> {\n    const unreadFilter:ApiV3ListFilter = ['readIAN', '=', false];\n    const filters = [\n      ...(additional?.filters ? additional.filters : []),\n      unreadFilter,\n    ];\n    const params:ApiV3ListParameters = {\n      ...additional,\n      filters,\n    };\n\n    return this.list(params);\n  }\n\n  /**\n   * Mark all notifications as read\n   * @param ids\n   */\n  public markAsReadByIds(ids:Array<ID>):Observable<unknown> {\n    return this\n      .http\n      .post(\n        `${this.path}/read_ian${listParamsString({ filters: [['id', '=', ids.map((id) => id.toString())]] })}`,\n        {},\n        {\n          withCredentials: true,\n          responseType: 'json',\n        },\n      );\n  }\n\n  public markAsReadByFilter(filters:ApiV3ListFilter[]):Observable<unknown> {\n    return this.http.post(\n      `${this.path}/read_ian${(listParamsString({ filters: filters.map((f) => [f[0], f[1], f[2]]) }))}`,\n      {},\n      {\n        withCredentials: true,\n        responseType: 'json',\n      },\n    );\n  }\n}\n","// -- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2023 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\nimport { Observable } from 'rxjs';\nimport { IView, IViewCreatePayload } from 'core-app/core/state/views/view.model';\nimport { InjectField } from 'core-app/shared/helpers/angular/inject-field.decorator';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport {\n  ApiV3GettableResource,\n  ApiV3ResourceCollection,\n} from 'core-app/core/apiv3/paths/apiv3-resource';\nimport { ApiV3Service } from 'core-app/core/apiv3/api-v3.service';\n\nexport class ApiV3ViewsPaths extends ApiV3ResourceCollection<IView, ApiV3GettableResource<IView>> {\n  @InjectField() http:HttpClient;\n\n  constructor(\n    protected apiRoot:ApiV3Service,\n    protected basePath:string,\n  ) {\n    super(apiRoot, basePath, 'views');\n  }\n\n  /**\n   * Create a new view\n   *\n   * @param resource\n   * @param type The query's view type\n   */\n  post(resource:IViewCreatePayload, type:string):Observable<IView> {\n    return this\n      .http\n      .post(\n        `${this.path}/${type}`,\n        resource,\n        {\n          withCredentials: true,\n          responseType: 'json',\n        },\n      ).pipe(\n        map((view:IView) => view),\n      );\n  }\n}\n","// -- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2023 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\nimport { ConfigurationResource } from 'core-app/features/hal/resources/configuration-resource';\nimport { Observable } from 'rxjs';\nimport { HalResource } from 'core-app/features/hal/resources/hal-resource';\nimport { ApiV3Service } from 'core-app/core/apiv3/api-v3.service';\nimport { ApiV3GettableResource } from 'core-app/core/apiv3/paths/apiv3-resource';\n\nexport class Apiv3BackupsPath extends ApiV3GettableResource<ConfigurationResource> {\n  constructor(protected apiRoot:ApiV3Service,\n    readonly basePath:string) {\n    super(apiRoot, basePath, 'backups');\n  }\n\n  public post(backupToken:string, includeAttachments:boolean):Observable<HalResource> {\n    return this\n      .halResourceService\n      .post(\n        this.path,\n        { backupToken, attachments: includeAttachments },\n      );\n  }\n}\n","// -- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2023 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\nimport { ApiV3GettableResource } from 'core-app/core/apiv3/paths/apiv3-resource';\nimport { IDay } from 'core-app/core/state/days/day.model';\n\nexport class ApiV3DayPaths extends ApiV3GettableResource<IDay> {\n}\n","// -- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2023 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\nimport { ApiV3Service } from 'core-app/core/apiv3/api-v3.service';\nimport { ApiV3DayPaths } from 'core-app/core/apiv3/endpoints/days/api-v3-day-paths';\nimport { IDay } from 'core-app/core/state/days/day.model';\nimport {\n  ApiV3GettableResource,\n  ApiV3ResourceCollection,\n} from 'core-app/core/apiv3/paths/apiv3-resource';\n\nexport class ApiV3DaysPaths extends ApiV3ResourceCollection<IDay, ApiV3DayPaths> {\n  // Base path\n  public readonly path:string;\n\n  constructor(readonly apiRoot:ApiV3Service,\n    protected basePath:string) {\n    super(apiRoot, basePath, 'days', ApiV3DayPaths);\n  }\n\n  // Static paths\n\n  // /api/v3/days/week\n  public readonly week = new ApiV3ResourceCollection<IDay, ApiV3DayPaths>(this.apiRoot, this.path, 'week');\n\n  // /api/v3/days/nonWorkingDays\n  public readonly nonWorkingDays = new ApiV3ResourceCollection<IDay, ApiV3DayPaths>(this.apiRoot, this.path, 'non_working');\n}\n","// -- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2023 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\nimport {\n  ApiV3GettableResource,\n  ApiV3ResourceCollection,\n} from 'core-app/core/apiv3/paths/apiv3-resource';\nimport { ApiV3Service } from 'core-app/core/apiv3/api-v3.service';\nimport { IStorage } from 'core-app/core/state/storages/storage.model';\n\nexport class ApiV3StoragesPaths\n  extends ApiV3ResourceCollection<IStorage, ApiV3GettableResource<IStorage>> {\n  // /api/v3/storages/files\n  public readonly files = this.subResource('files');\n\n  constructor(\n    protected apiRoot:ApiV3Service,\n    protected basePath:string,\n  ) {\n    super(apiRoot, basePath, 'storages');\n  }\n}\n","// -- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2023 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\nimport {\n  ApiV3GettableResource,\n  ApiV3ResourceCollection,\n} from 'core-app/core/apiv3/paths/apiv3-resource';\nimport { ApiV3Service } from 'core-app/core/apiv3/api-v3.service';\nimport { IProjectStorage } from 'core-app/core/state/project-storages/project-storage.model';\n\nexport class ApiV3ProjectStoragesPaths\n  extends ApiV3ResourceCollection<IProjectStorage, ApiV3GettableResource<IProjectStorage>> {\n  constructor(\n    protected apiRoot:ApiV3Service,\n    protected basePath:string,\n  ) {\n    super(apiRoot, basePath, 'project_storages');\n  }\n}\n","// -- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2023 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\nimport {\n  Injectable,\n  Injector,\n} from '@angular/core';\nimport {\n  ApiV3GettableResource,\n  ApiV3ResourceCollection,\n} from 'core-app/core/apiv3/paths/apiv3-resource';\nimport { Constructor } from '@angular/cdk/table';\nimport { PathHelperService } from 'core-app/core/path-helper/path-helper.service';\nimport { ApiV3GridsPaths } from 'core-app/core/apiv3/endpoints/grids/apiv3-grids-paths';\nimport { ApiV3TimeEntriesPaths } from 'core-app/core/apiv3/endpoints/time-entries/apiv3-time-entries-paths';\nimport { ApiV3CapabilitiesPaths } from 'core-app/core/apiv3/endpoints/capabilities/apiv3-capabilities-paths';\nimport { ApiV3MembershipsPaths } from 'core-app/core/apiv3/endpoints/memberships/apiv3-memberships-paths';\nimport { ApiV3UsersPaths } from 'core-app/core/apiv3/endpoints/users/apiv3-users-paths';\nimport { ApiV3TypesPaths } from 'core-app/core/apiv3/endpoints/types/apiv3-types-paths';\nimport { ApiV3QueriesPaths } from 'core-app/core/apiv3/endpoints/queries/apiv3-queries-paths';\nimport { ApiV3WorkPackagesPaths } from 'core-app/core/apiv3/endpoints/work_packages/api-v3-work-packages-paths';\nimport { ApiV3ProjectPaths } from 'core-app/core/apiv3/endpoints/projects/apiv3-project-paths';\nimport { ApiV3ProjectsPaths } from 'core-app/core/apiv3/endpoints/projects/apiv3-projects-paths';\nimport { ApiV3StatusesPaths } from 'core-app/core/apiv3/endpoints/statuses/apiv3-statuses-paths';\nimport { ApiV3RolesPaths } from 'core-app/core/apiv3/endpoints/roles/apiv3-roles-paths';\nimport { ApiV3VersionsPaths } from 'core-app/core/apiv3/endpoints/versions/apiv3-versions-paths';\nimport { ApiV3RelationsPaths } from 'core-app/core/apiv3/endpoints/relations/apiv3-relations-paths';\nimport { ApiV3NewsPaths } from 'core-app/core/apiv3/endpoints/news/apiv3-news-paths';\nimport { ApiV3HelpTextsPaths } from 'core-app/core/apiv3/endpoints/help_texts/apiv3-help-texts-paths';\nimport { ApiV3ConfigurationPath } from 'core-app/core/apiv3/endpoints/configuration/apiv3-configuration-path';\nimport { ApiV3BoardsPaths } from 'core-app/core/apiv3/virtual/apiv3-boards-paths';\nimport { RootResource } from 'core-app/features/hal/resources/root-resource';\nimport {\n  ApiV3PlaceholderUsersPaths,\n} from 'core-app/core/apiv3/endpoints/placeholder-users/apiv3-placeholder-users-paths';\nimport { ApiV3GroupsPaths } from 'core-app/core/apiv3/endpoints/groups/apiv3-groups-paths';\nimport { HalResource } from 'core-app/features/hal/resources/hal-resource';\nimport { ApiV3NotificationsPaths } from 'core-app/core/apiv3/endpoints/notifications/apiv3-notifications-paths';\nimport { ApiV3ViewsPaths } from 'core-app/core/apiv3/endpoints/views/apiv3-views-paths';\nimport { Apiv3BackupsPath } from 'core-app/core/apiv3/endpoints/backups/apiv3-backups-path';\nimport { ApiV3DaysPaths } from 'core-app/core/apiv3/endpoints/days/api-v3-days-paths';\nimport { ApiV3StoragesPaths } from 'core-app/core/apiv3/endpoints/storages/api-v3-storages-paths';\nimport {\n  ApiV3ProjectStoragesPaths,\n} from 'core-app/core/apiv3/endpoints/project-storages/api-v3-project-storages-paths';\n\n@Injectable({ providedIn: 'root' })\nexport class ApiV3Service {\n  // /api/v3/attachments\n  public readonly attachments = this.apiV3CollectionEndpoint('attachments');\n\n  // /api/v3/backups\n  public readonly backups = this.apiV3CustomEndpoint(Apiv3BackupsPath);\n\n  // /api/v3/configuration\n  public readonly configuration = this.apiV3CustomEndpoint(ApiV3ConfigurationPath);\n\n  // /api/v3/days\n  public readonly days = this.apiV3CustomEndpoint(ApiV3DaysPaths);\n\n  // /api/v3/documents\n  public readonly documents = this.apiV3CollectionEndpoint('documents');\n\n  // /api/v3/file_links\n  public readonly file_links = this.apiV3CollectionEndpoint('file_links');\n\n  // /api/v3/notifications\n  public readonly notifications = this.apiV3CustomEndpoint(ApiV3NotificationsPaths);\n\n  // /api/v3/github_pull_requests\n  public readonly github_pull_requests = this.apiV3CollectionEndpoint('github_pull_requests');\n\n  // /api/v3/grids\n  public readonly grids = this.apiV3CustomEndpoint(ApiV3GridsPaths);\n\n  // /api/v3/principals\n  public readonly principals = this.apiV3CollectionEndpoint('principals');\n\n  // /api/v3/root\n  public readonly root = this.apiV3SingularEndpoint<RootResource>('');\n\n  // /api/v3/statuses\n  public readonly statuses = this.apiV3CustomEndpoint(ApiV3StatusesPaths);\n\n  // /api/v3/relations\n  public readonly relations = this.apiV3CustomEndpoint(ApiV3RelationsPaths);\n\n  // /api/v3/priorities\n  public readonly priorities = this.apiV3CollectionEndpoint('priorities');\n\n  // /api/v3/time_entries\n  public readonly time_entries = this.apiV3CustomEndpoint(ApiV3TimeEntriesPaths);\n\n  // /api/v3/actions\n  public readonly actions = this.apiV3CollectionEndpoint('actions');\n\n  // /api/v3/capabilities\n  public readonly capabilities = this.apiV3CustomEndpoint(ApiV3CapabilitiesPaths);\n\n  // /api/v3/memberships\n  public readonly memberships = this.apiV3CustomEndpoint(ApiV3MembershipsPaths);\n\n  // /api/v3/news\n  public readonly news = this.apiV3CustomEndpoint(ApiV3NewsPaths);\n\n  // /api/v3/storages\n  public readonly storages = this.apiV3CustomEndpoint(ApiV3StoragesPaths);\n\n  // /api/v3/project_storages\n  public readonly projectStorages = this.apiV3CustomEndpoint(ApiV3ProjectStoragesPaths);\n\n  // /api/v3/types\n  public readonly types = this.apiV3CustomEndpoint(ApiV3TypesPaths);\n\n  // /api/v3/versions\n  public readonly versions = this.apiV3CustomEndpoint(ApiV3VersionsPaths);\n\n  // /api/v3/work_packages\n  public readonly work_packages = this.apiV3CustomEndpoint(ApiV3WorkPackagesPaths);\n\n  // /api/v3/queries\n  public readonly queries = this.apiV3CustomEndpoint(ApiV3QueriesPaths);\n\n  // /api/v3/projects\n  public readonly projects = this.apiV3CustomEndpoint(ApiV3ProjectsPaths);\n\n  // /api/v3/users\n  public readonly users = this.apiV3CustomEndpoint(ApiV3UsersPaths);\n\n  // /api/v3/placeholder_users\n  public readonly placeholder_users = this.apiV3CustomEndpoint(ApiV3PlaceholderUsersPaths);\n\n  // /api/v3/groups\n  public readonly groups = this.apiV3CustomEndpoint(ApiV3GroupsPaths);\n\n  // /api/v3/roles\n  public readonly roles = this.apiV3CustomEndpoint(ApiV3RolesPaths);\n\n  // /api/v3/help_texts\n  public readonly help_texts = this.apiV3CustomEndpoint(ApiV3HelpTextsPaths);\n\n  // /api/v3/job_statuses\n  public readonly job_statuses = this.apiV3CollectionEndpoint('job_statuses');\n\n  // /api/v3/views\n  public readonly views = this.apiV3CustomEndpoint(ApiV3ViewsPaths);\n\n  // VIRTUAL boards are /api/v3/grids + a scope filter\n  public readonly boards = this.apiV3CustomEndpoint(ApiV3BoardsPaths);\n\n  constructor(\n    readonly injector:Injector,\n    readonly pathHelper:PathHelperService,\n  ) { }\n\n  /**\n   * Returns the part of the API that exists both\n   *  - WITHIN a project scope /api/v3/projects/*\n   *  - GLOBALLY /api/v3/*\n   *\n   *  The available API endpoints are being restricted automatically by typescript.\n   *\n   * @param projectIdentifier\n   */\n  public withOptionalProject(projectIdentifier:string|number|null|undefined):ApiV3ProjectPaths|this {\n    if (_.isNil(projectIdentifier)) {\n      return this;\n    }\n    return this.projects.id(projectIdentifier);\n  }\n\n  public collectionFromString(fullPath:string) {\n    const path = fullPath.replace(`${this.pathHelper.api.v3.apiV3Base}/`, '');\n\n    return this.apiV3CollectionEndpoint(path);\n  }\n\n  private apiV3CollectionEndpoint<V extends HalResource, T extends ApiV3GettableResource<V>>(segment:string, resource?:Constructor<T>) {\n    return new ApiV3ResourceCollection<V, T>(this, this.pathHelper.api.v3.apiV3Base, segment, resource);\n  }\n\n  private apiV3CustomEndpoint<T>(cls:Constructor<T>):T {\n    // eslint-disable-next-line new-cap\n    return new cls(this, this.pathHelper.api.v3.apiV3Base);\n  }\n\n  private apiV3SingularEndpoint<T extends HalResource = HalResource>(segment:string):ApiV3GettableResource<T> {\n    return new ApiV3GettableResource<T>(this, this.pathHelper.api.v3.apiV3Base, segment);\n  }\n}\n","// -- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2023 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\nimport { CollectionResource } from 'core-app/features/hal/resources/collection-resource';\nimport { Observable } from 'rxjs';\nimport { ApiV3FilterBuilder, FilterOperator } from 'core-app/shared/helpers/api-v3/api-v3-filter-builder';\n\nexport type ApiV3ListFilter = [string, FilterOperator, boolean|string[]];\n\nexport interface ApiV3PaginationParameters {\n  pageSize:number;\n  offset:number;\n}\n\nexport interface ApiV3ListParameters extends Partial<ApiV3PaginationParameters> {\n  filters?:ApiV3ListFilter[];\n  sortBy?:[string, string][];\n  groupBy?:string;\n  select?:string[];\n}\n\nexport interface ApiV3ListResourceInterface<T> {\n  list(params:ApiV3ListParameters):Observable<CollectionResource<T>>;\n}\n\nexport function listParamsString(params?:ApiV3ListParameters):string {\n  const queryProps = [];\n\n  if (params && params.sortBy) {\n    queryProps.push(`sortBy=${JSON.stringify(params.sortBy)}`);\n  }\n\n  if (params && params.groupBy) {\n    queryProps.push(`groupBy=${params.groupBy}`);\n  }\n\n  // 0 should not be treated as false\n  if (params && params.pageSize !== undefined) {\n    queryProps.push(`pageSize=${params.pageSize}`);\n  }\n\n  // 0 should not be treated as false\n  if (params && params.offset !== undefined) {\n    queryProps.push(`offset=${params.offset}`);\n  }\n\n  if (params && params.select !== undefined) {\n    queryProps.push(`select=${params.select.join(',')}`);\n  }\n\n  if (params && params.filters) {\n    const filters = new ApiV3FilterBuilder();\n\n    params.filters.forEach((filterParam) => {\n      filters.add(...filterParam);\n    });\n\n    queryProps.push(filters.toParams());\n  }\n\n  let queryPropsString = '';\n\n  if (queryProps.length) {\n    queryPropsString = `?${queryProps.join('&')}`;\n  }\n\n  return queryPropsString;\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({ providedIn: 'root' })\nexport class DeviceService {\n  public mobileWidthTreshold = 680;\n\n  public get isMobile():boolean {\n    return (window.innerWidth < this.mobileWidthTreshold);\n  }\n}\n","// -- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2023 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\nimport { Injectable } from '@angular/core';\nimport * as moment from 'moment';\n\nimport { ConfigurationResource } from 'core-app/features/hal/resources/configuration-resource';\nimport { ApiV3Service } from 'core-app/core/apiv3/api-v3.service';\n\n@Injectable({ providedIn: 'root' })\nexport class ConfigurationService {\n  // fetches configuration from the ApiV3 endpoint\n  // TODO: this currently saves the request between page reloads,\n  // but could easily be stored in localStorage\n  private configuration:ConfigurationResource;\n\n  public constructor(\n    private readonly apiV3Service:ApiV3Service,\n  ) { }\n\n  public initialize():Promise<void> {\n    return this.loadConfiguration();\n  }\n\n  public commentsSortedInDescendingOrder():boolean {\n    return this.userPreference('commentSortDescending');\n  }\n\n  public warnOnLeavingUnsaved():boolean {\n    return this.userPreference('warnOnLeavingUnsaved');\n  }\n\n  public autoHidePopups():boolean {\n    return this.userPreference('autoHidePopups');\n  }\n\n  public isTimezoneSet():boolean {\n    return !!this.timezone();\n  }\n\n  public isDefaultTimezoneSet():boolean {\n    return !!this.defaultTimezone();\n  }\n\n  public timezone():string {\n    return this.userPreference('timeZone');\n  }\n\n  public isDirectUploads():boolean {\n    return !!this.prepareAttachmentURL;\n  }\n\n  public get prepareAttachmentURL():string {\n    return _.get(this.configuration, ['prepareAttachment', 'href']) as string;\n  }\n\n  public get maximumAttachmentFileSize():number {\n    return this.systemPreference('maximumAttachmentFileSize');\n  }\n\n  public get perPageOptions():number[] {\n    return this.systemPreference('perPageOptions');\n  }\n\n  public dateFormatPresent():boolean {\n    return !!this.systemPreference('dateFormat');\n  }\n\n  public dateFormat():string {\n    return this.systemPreference('dateFormat');\n  }\n\n  public timeFormatPresent():boolean {\n    return !!this.systemPreference('timeFormat');\n  }\n\n  public timeFormat():string {\n    return this.systemPreference('timeFormat');\n  }\n\n  public defaultTimezone():string {\n    return this.systemPreference('userDefaultTimezone');\n  }\n\n  public startOfWeekPresent():boolean {\n    return !!this.systemPreference('startOfWeek');\n  }\n\n  public startOfWeek():number {\n    if (this.startOfWeekPresent()) {\n      return this.systemPreference('startOfWeek');\n    }\n    return moment.localeData(I18n.locale).firstDayOfWeek();\n  }\n\n  public get hostName():string {\n    return this.systemPreference('hostName');\n  }\n\n  public get activeFeatureFlags():string[] {\n    return this.systemPreference<string[]>('activeFeatureFlags');\n  }\n\n  private loadConfiguration() {\n    return this\n      .apiV3Service\n      .configuration\n      .get()\n      .toPromise()\n      .then((configuration:ConfigurationResource) => {\n        this.configuration = configuration;\n      });\n  }\n\n  private userPreference<T>(pref:string):T {\n    return _.get(this.configuration, ['userPreferences', pref]) as T;\n  }\n\n  private systemPreference<T>(pref:string):T {\n    return _.get(this.configuration, pref) as T;\n  }\n}\n","// -- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2023 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\nimport { Injectable } from '@angular/core';\nimport { ConfigurationService } from 'core-app/core/config/configuration.service';\nimport { I18nService } from 'core-app/core/i18n/i18n.service';\nimport * as moment from 'moment-timezone';\nimport {\n  Moment,\n} from 'moment';\n\n@Injectable({ providedIn: 'root' })\nexport class TimezoneService {\n  constructor(\n    readonly configurationService:ConfigurationService,\n    readonly I18n:I18nService,\n  ) {\n    this.setupLocale();\n  }\n\n  public setupLocale():void {\n    moment.locale(I18n.locale);\n  }\n\n  /**\n   * Returns the user's configured timezone or guesses it through moment\n   */\n  public userTimezone():string {\n    return this.configurationService.isTimezoneSet() ? this.configurationService.timezone() : moment.tz.guess();\n  }\n\n  /**\n   * Takes a utc date time string and turns it into\n   * a local date time moment object.\n   */\n  public parseDatetime(datetime:string, format?:string):Moment {\n    return moment\n      .utc(datetime, format)\n      .tz(this.userTimezone());\n  }\n\n  public parseDate(date:Date|string, format?:string):Moment {\n    return moment(date, format);\n  }\n\n  /**\n   * Parses the specified datetime and applies the user's configured timezone, if any.\n   *\n   * This will effectfully transform the [server] provided datetime object to the user's configured local timezone.\n   *\n   * @param {String} datetime in 'YYYY-MM-DDTHH:mm:ssZ' format\n   * @returns {Moment}\n   */\n  public parseISODatetime(datetime:string):Moment {\n    return this.parseDatetime(datetime, 'YYYY-MM-DDTHH:mm:ssZ');\n  }\n\n  public parseISODate(date:string):Moment {\n    return this.parseDate(date, 'YYYY-MM-DD');\n  }\n\n  public formattedDate(date:string):string {\n    const d = this.parseDate(date);\n    return d.format(this.getDateFormat());\n  }\n\n  /**\n   * Returns the number of days from today the given dateString is apart.\n   * Negative means the date lies in the past.\n   * @param dateString\n   */\n  public daysFromToday(dateString:string):number {\n    const date = this.parseDate(dateString);\n    const today = moment().startOf('day');\n\n    return date.diff(today, 'days');\n  }\n\n  public formattedTime(datetimeString:string, format?:string):string {\n    return this.parseDatetime(datetimeString).format(format || this.getTimeFormat());\n  }\n\n  public formattedDatetime(datetimeString:string):string {\n    const c = this.formattedDatetimeComponents(datetimeString);\n    return `${c[0]} ${c[1]}`;\n  }\n\n  public formattedRelativeDateTime(datetimeString:string):string {\n    const d = this.parseDatetime(datetimeString);\n    return d.fromNow();\n  }\n\n  public formattedDatetimeComponents(datetimeString:string):string[] {\n    const d = this.parseDatetime(datetimeString);\n    return [\n      d.format(this.getDateFormat()),\n      d.format(this.getTimeFormat()),\n    ];\n  }\n\n  public toHours(durationString:string):number {\n    return Number(moment.duration(durationString).asHours().toFixed(2));\n  }\n\n  public toDays(durationString:string):number {\n    return Number(moment.duration(durationString).asDays().toFixed(2));\n  }\n\n  public toISODuration(input:string|number, unit:'hours'|'days'):string {\n    return moment.duration(input, unit).toIsoString();\n  }\n\n  public formattedDuration(durationString:string, unit:'hour'|'days' = 'hour'):string {\n    switch (unit) {\n      case 'hour':\n        return this.I18n.t('js.units.hour', { count: this.toHours(durationString) });\n      case 'days':\n        return this.I18n.t('js.units.day', { count: this.toDays(durationString) });\n      default:\n        // Case fallthrough for eslint\n        return '';\n    }\n  }\n\n  public formattedISODate(date:any):string {\n    return this.parseDate(date).format('YYYY-MM-DD');\n  }\n\n  public formattedISODateTime(datetime:any):string {\n    return datetime.format();\n  }\n\n  public isValidISODate(date:any):boolean {\n    return this.isValid(date, 'YYYY-MM-DD');\n  }\n\n  public isValidISODateTime(dateTime:string):boolean {\n    return this.isValid(dateTime, 'YYYY-MM-DDTHH:mm:ssZ');\n  }\n\n  public isValid(date:string, dateFormat:string):boolean {\n    const format = dateFormat || this.getDateFormat();\n    return moment(date, [format], true).isValid();\n  }\n\n  public getDateFormat():string {\n    return this.configurationService.dateFormatPresent() ? this.configurationService.dateFormat() : 'L';\n  }\n\n  public getTimeFormat():string {\n    return this.configurationService.timeFormatPresent() ? this.configurationService.timeFormat() : 'LT';\n  }\n}\n","import {\n  EntityStore,\n  StoreConfig,\n} from '@datorama/akita';\nimport {\n  ResourceState,\n  createInitialResourceState,\n} from 'core-app/core/state/resource-store';\nimport { IWeekday } from 'core-app/core/state/days/weekday.model';\n\nexport interface WeekdayState extends ResourceState<IWeekday> {\n}\n\n@StoreConfig({ name: 'weekdays' })\nexport class WeekdayStore extends EntityStore<WeekdayState> {\n  constructor() {\n    super(createInitialResourceState());\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  map,\n  switchMap,\n  tap,\n} from 'rxjs/operators';\nimport {\n  EMPTY,\n  Observable,\n} from 'rxjs';\nimport { IHALCollection } from 'core-app/core/apiv3/types/hal-collection.type';\nimport {\n  extendCollectionElementsWithId,\n  insertCollectionIntoState,\n} from 'core-app/core/state/resource-store';\nimport { WeekdayStore } from 'core-app/core/state/days/weekday.store';\nimport { IWeekday } from 'core-app/core/state/days/weekday.model';\nimport {\n  ResourceStore,\n  ResourceStoreService,\n} from 'core-app/core/state/resource-store.service';\n\n@Injectable()\nexport class WeekdayResourceService extends ResourceStoreService<IWeekday> {\n  requireCollection():Observable<IWeekday[]> {\n    return this\n      .query\n      .selectHasCache()\n      .pipe(\n        switchMap((hasCache) => (hasCache ? EMPTY : this.fetchWeekdays())),\n        switchMap(() => this.query.selectAll()),\n      );\n  }\n\n  protected fetchWeekdays():Observable<IHALCollection<IWeekday>> {\n    const collectionURL = 'all'; // We load all weekdays\n\n    return this\n      .http\n      .get<IHALCollection<IWeekday>>(this.basePath())\n      .pipe(\n        map((collection) => extendCollectionElementsWithId(collection)),\n        tap((collection) => insertCollectionIntoState(this.store, collection, collectionURL)),\n      );\n  }\n\n  protected createStore():ResourceStore<IWeekday> {\n    return new WeekdayStore();\n  }\n\n  protected basePath():string {\n    return this.apiV3Service.days.week.path;\n  }\n}\n","// -- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2023 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\nimport {\n  Injectable,\n  Injector,\n} from '@angular/core';\nimport * as moment from 'moment';\nimport {\n  take,\n  tap,\n} from 'rxjs/operators';\nimport { InjectField } from 'core-app/shared/helpers/angular/inject-field.decorator';\nimport { WeekdayResourceService } from 'core-app/core/state/days/weekday.service';\nimport { IWeekday } from 'core-app/core/state/days/weekday.model';\nimport {\n  Observable,\n  of,\n} from 'rxjs';\nimport { Moment } from 'moment';\n\n@Injectable({ providedIn: 'root' })\nexport class WeekdayService {\n  @InjectField() weekdaysService:WeekdayResourceService;\n\n  private weekdays:IWeekday[];\n\n  constructor(\n    readonly injector:Injector,\n  ) {}\n\n  /**\n   * @param date The iso day number (1-7) or a date instance\n   * @return {boolean} whether the given iso day is working or not\n   */\n  public isNonWorkingDay(date:Moment|Date|number):boolean {\n    const isoDayOfWeek = (typeof date === 'number') ? date : moment(date).isoWeekday();\n    return !!(this.weekdays || []).find((wd) => wd.day === isoDayOfWeek && !wd.working);\n  }\n\n  public get nonWorkingDays():IWeekday[] {\n    return this.weekdays.filter((day) => !day.working);\n  }\n\n  loadWeekdays():Observable<IWeekday[]> {\n    if (this.weekdays) {\n      return of(this.weekdays);\n    }\n\n    return this\n      .weekdaysService\n      .requireCollection()\n      .pipe(\n        take(1),\n        tap((weekdays) => {\n          this.weekdays = weekdays;\n        }),\n      );\n  }\n}\n","import { Injectable } from '@angular/core';\n\n/**\n * General components\n */\nexport interface GlobalI18n {\n  t<T=string>(translateId:string, parameters?:unknown):T;\n\n  lookup(translateId:string):boolean|undefined;\n\n  toNumber(num:number, options?:ToNumberOptions):string;\n\n  toPercentage(num:number, options?:ToPercentageOptions):string;\n\n  toCurrency(num:number, options?:ToCurrencyOptions):string;\n\n  strftime(date:Date, format:string):string;\n\n  toHumanSize(num:number, options?:ToHumanSizeOptions):string;\n\n  toTime(format:string, date:Date):string;\n\n  locale:string;\n  firstDayOfWeek:number;\n  pluralization:any;\n}\n\ninterface ToNumberOptions {\n  precision?:number;\n  separator?:string;\n  delimiter?:string;\n  strip_insignificant_zeros?:boolean;\n}\n\ntype ToPercentageOptions = ToNumberOptions;\n\ninterface ToCurrencyOptions extends ToNumberOptions {\n  format?:string;\n  unit?:string;\n  sign_first?:boolean;\n}\n\ninterface ToHumanSizeOptions extends ToNumberOptions {\n  format?:string;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class I18nService {\n  private i18n:GlobalI18n = window.I18n;\n\n  public get locale():string {\n    return this.i18n.locale;\n  }\n\n  public t = this.i18n.t.bind(this.i18n) as GlobalI18n['t'];\n\n  public lookup = this.i18n.lookup.bind(this.i18n) as GlobalI18n['lookup'];\n\n  public toTime = this.i18n.toTime.bind(this.i18n) as GlobalI18n['toTime'];\n\n  public toNumber = this.i18n.toNumber.bind(this.i18n) as GlobalI18n['toNumber'];\n\n  public toPercentage = this.i18n.toPercentage.bind(this.i18n) as GlobalI18n['toPercentage'];\n\n  public toCurrency = this.i18n.toCurrency.bind(this.i18n) as GlobalI18n['toCurrency'];\n\n  public strftime = this.i18n.strftime.bind(this.i18n) as GlobalI18n['strftime'];\n\n  public toHumanSize = this.i18n.toHumanSize.bind(this.i18n) as GlobalI18n['toHumanSize'];\n}\n","import { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { firstValueFrom, Observable } from 'rxjs';\n\nimport { ApiV3ListFilter } from 'core-app/core/apiv3/paths/apiv3-list-resource.interface';\nimport { DayStore } from 'core-app/core/state/days/day.store';\nimport { IDay } from 'core-app/core/state/days/day.model';\nimport {\n  ResourceStore,\n  ResourceStoreService,\n} from 'core-app/core/state/resource-store.service';\nimport * as moment from 'moment-timezone';\n\n@Injectable()\nexport class DayResourceService extends ResourceStoreService<IDay> {\n  protected basePath():string {\n    return this\n      .apiV3Service\n      .days\n      .nonWorkingDays\n      .path;\n  }\n\n  isNonWorkingDay$(input:Date):Promise<boolean> {\n    const date = moment(input).format('YYYY-MM-DD');\n\n    return firstValueFrom(\n      this\n        .requireNonWorkingYear$(input)\n        .pipe(\n          map((days) => days.findIndex((day:IDay) => day.date === date) !== -1),\n        ),\n    );\n  }\n\n  requireNonWorkingYear$(date:Date|string):Observable<IDay[]> {\n    const from = moment(date).startOf('year').format('YYYY-MM-DD');\n    const to = moment(date).endOf('year').format('YYYY-MM-DD');\n\n    const filters:ApiV3ListFilter[] = [\n      ['date', '<>d', [from, to]],\n    ];\n\n    return this.requireCollection({ filters });\n  }\n\n  requireNonWorkingYears$(start:Date|string, end:Date|string):Observable<IDay[]> {\n    const from = moment(start).startOf('year').format('YYYY-MM-DD');\n    const to = moment(end).endOf('year').format('YYYY-MM-DD');\n\n    const filters:ApiV3ListFilter[] = [\n      ['date', '<>d', [from, to]],\n    ];\n\n    return this.requireCollection({ filters });\n  }\n\n  protected createStore():ResourceStore<IDay> {\n    return new DayStore();\n  }\n}\n","import {\n  EntityStore,\n  StoreConfig,\n} from '@datorama/akita';\nimport {\n  ResourceState,\n  createInitialResourceState,\n} from 'core-app/core/state/resource-store';\nimport { IDay } from 'core-app/core/state/days/day.model';\n\nexport interface DayState extends ResourceState<IDay> {\n}\n\n@StoreConfig({ name: 'days' })\nexport class DayStore extends EntityStore<DayState> {\n  constructor() {\n    super(createInitialResourceState());\n  }\n}\n","// -- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2023 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\nexport default function isDefinedEntity<T>(entity:T|undefined):entity is T {\n  return entity !== undefined;\n}\n","// -- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2023 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\nimport { HttpEvent, HttpEventType, HttpResponse } from '@angular/common/http';\n\nexport default function isHttpResponse<T>(event:HttpEvent<T>):event is HttpResponse<T> {\n  return event.type === HttpEventType.Response;\n}\n","// -- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2023 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { input, State } from '@openproject/reactivestates';\nimport { Injectable } from '@angular/core';\nimport { HttpErrorResponse, HttpEvent } from '@angular/common/http';\n\nimport { I18nService } from 'core-app/core/i18n/i18n.service';\nimport { ConfigurationService } from 'core-app/core/config/configuration.service';\nimport waitForUploadsFinished from 'core-app/core/upload/wait-for-uploads-finished';\nimport {\n  IHalErrorBase,\n  IHalMultipleError,\n  isHalError,\n} from 'core-app/features/hal/resources/error-resource';\n\nexport function removeSuccessFlashMessages():void {\n  jQuery('.flash.notice').remove();\n}\n\nexport type ToastType = 'success'|'error'|'warning'|'info'|'upload'|'loading';\nexport const OPToastEvent = 'op:toasters:add';\n\nexport interface IToast {\n  message:string;\n  link?:{ text:string, target:() => void };\n  type:ToastType;\n  data?:unknown;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class ToastService {\n  // The current stack of toasters\n  private stack = input<IToast[]>([]);\n\n  constructor(\n    readonly configurationService:ConfigurationService,\n    readonly I18n:I18nService,\n  ) {\n    jQuery(window).on(\n      OPToastEvent,\n      (event:JQuery.TriggeredEvent, toast:IToast) => { this.add(toast); },\n    );\n  }\n\n  /**\n   * Get a read-only view of the current stack of toasters.\n   */\n  public get current():State<IToast[]> {\n    return this.stack;\n  }\n\n  public add(toast:IToast, timeoutAfter = 5000):IToast {\n    // Remove flash messages\n    removeSuccessFlashMessages();\n\n    this.stack.doModify((current) => {\n      const nextValue = [toast].concat(current);\n      _.remove(nextValue, (n, i) => i > 0 && this.removeOnAdd(n));\n      return nextValue;\n    });\n\n    // auto-hide if success\n    if (toast.type === 'success' && this.configurationService.autoHidePopups()) {\n      setTimeout(() => this.remove(toast), timeoutAfter);\n    }\n\n    return toast;\n  }\n\n  private removeOnAdd(toast:IToast):boolean {\n    return ['success', 'error', 'loading'].includes(toast.type);\n  }\n\n  public addError(obj:HttpErrorResponse|IToast|string, additionalErrors:unknown[]|string = []):IToast {\n    let message:IToast|string;\n    let errors:string[];\n\n    if (typeof additionalErrors === 'string') {\n      errors = [additionalErrors];\n    } else {\n      errors = [...additionalErrors] as string[];\n    }\n\n    if (obj instanceof HttpErrorResponse) {\n      message = isHalError(obj.error) ? obj.error.message : obj.message;\n\n      if ((obj.error as IHalMultipleError)?._embedded?.errors) {\n        errors = [\n          ...errors,\n          ...(obj.error as IHalMultipleError)._embedded.errors.map((el:IHalErrorBase) => el.message),\n        ];\n      }\n    } else {\n      message = obj;\n    }\n\n    const toast:IToast = this.createToast(message, 'error');\n    toast.data = errors;\n\n    return this.add(toast);\n  }\n\n  public addWarning(message:IToast|string):IToast {\n    return this.add(this.createToast(message, 'warning'));\n  }\n\n  public addSuccess(message:IToast|string):IToast {\n    return this.add(this.createToast(message, 'success'));\n  }\n\n  public addNotice(message:IToast|string):IToast {\n    return this.add(this.createToast(message, 'info'));\n  }\n\n  public addUpload(message:string, uploads:[File, Observable<HttpEvent<unknown>>][]):IToast {\n    if (!uploads.length) {\n      throw new Error('Cannot create an upload toast without uploads!');\n    }\n\n    const notification = this.add({\n      data: uploads,\n      type: 'upload',\n      message,\n    });\n\n    waitForUploadsFinished(uploads.map((o) => o[1]))\n      .pipe(take(1))\n      .subscribe(() => {\n        setTimeout(() => this.remove(notification), 700);\n      });\n\n    return notification;\n  }\n\n  public addLoading(observable:Observable<unknown>):IToast {\n    return this.add(this.createLoadingToast(this.I18n.t('js.ajax.updating'), observable));\n  }\n\n  public remove(toast:IToast):void {\n    this.stack.doModify((current) => {\n      _.remove(current, (n) => n === toast);\n      return current;\n    });\n  }\n\n  public clear():void {\n    this.stack.putValue([]);\n  }\n\n  private createToast(toast:IToast|string, type:ToastType):IToast {\n    return (typeof toast === 'string')\n      ? { message: toast, type }\n      : {\n        message: toast.message,\n        type,\n        link: toast.link,\n        data: toast.data,\n      };\n  }\n\n  private createLoadingToast(message:IToast|string, observable:Observable<unknown>) {\n    const toast = this.createToast(message, 'loading');\n    toast.data = observable;\n\n    return toast;\n  }\n}\n","// -- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2023 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\nimport { HalResource } from 'core-app/features/hal/resources/hal-resource';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nexport const v3ErrorIdentifierQueryInvalid = 'urn:openproject-org:api:v3:errors:InvalidQuery';\nexport const v3ErrorIdentifierMultipleErrors = 'urn:openproject-org:api:v3:errors:MultipleErrors';\n\nexport interface IHalErrorBase {\n  _type:string;\n  message:string;\n  errorIdentifier:string;\n}\n\nexport function isHalError(err:unknown):err is IHalErrorBase {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n  const hasOwn = (key:string):boolean => Object.prototype.hasOwnProperty.call(err, key);\n  return !!err && hasOwn('_type') && hasOwn('message') && hasOwn('errorIdentifier');\n}\n\nexport interface IHalSingleError extends IHalErrorBase {\n  _embedded:{\n    details:{\n      attribute:string;\n    }\n  }\n}\n\nexport interface IHalMultipleError extends IHalErrorBase {\n  _embedded:{\n    errors:IHalSingleError[];\n  }\n}\n\nexport class ErrorResource extends HalResource {\n  public errors:any[];\n\n  public message:string;\n\n  public details:any;\n\n  public errorIdentifier:string;\n\n  /** We may get a reference to the underlying http error */\n  public httpError?:HttpErrorResponse;\n\n  public isValidationError = false;\n\n  /**\n   * Override toString to ensure the resource can\n   * be printed nicely on console and in errors\n   */\n  public toString():string {\n    return `[ErrorResource ${this.message}]`;\n  }\n\n  public get errorMessages():string[] {\n    if (this.isMultiErrorMessage()) {\n      return this.errors.map((error) => error.message);\n    }\n\n    return [this.message];\n  }\n\n  public isMultiErrorMessage():boolean {\n    return this.errorIdentifier === v3ErrorIdentifierMultipleErrors;\n  }\n\n  public getInvolvedAttributes():string[] {\n    let columns = [];\n\n    if (this.details) {\n      columns = [{ details: this.details }];\n    } else if (this.errors) {\n      columns = this.errors;\n    }\n\n    return _.flatten(columns.map((resource:ErrorResource) => {\n      if (resource.errorIdentifier === v3ErrorIdentifierMultipleErrors) {\n        return this.extractMultiError(resource)[0];\n      }\n      return resource.details.attribute;\n    }));\n  }\n\n  public getMessagesPerAttribute():{ [attribute:string]:string[] } {\n    const perAttribute:any = {};\n\n    if (this.details) {\n      perAttribute[this.details.attribute] = [this.message];\n    } else {\n      _.forEach(this.errors, (error:any) => {\n        if (error.errorIdentifier === v3ErrorIdentifierMultipleErrors) {\n          const [attribute, messages] = this.extractMultiError(error);\n          const current = perAttribute[attribute] || [];\n          perAttribute[attribute] = current.concat(messages);\n        } else if (perAttribute[error.details.attribute]) {\n          perAttribute[error.details.attribute].push(error.message);\n        } else {\n          perAttribute[error.details.attribute] = [error.message];\n        }\n      });\n    }\n\n    return perAttribute;\n  }\n\n  protected extractMultiError(resource:ErrorResource):[string, string[]] {\n    const { attribute } = resource.errors[0].details;\n    const messages = resource.errors.map((el:ErrorResource) => el.message);\n\n    return [attribute, messages];\n  }\n}\n","// -- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2023 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\nimport { forkJoin, Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { HttpEvent, HttpResponse } from '@angular/common/http';\n\nimport isHttpResponse from 'core-app/core/upload/is-http-response';\n\nexport default function waitForUploadsFinished<T>(uploads:Observable<HttpEvent<T>>[]):Observable<HttpResponse<T>[]> {\n  return forkJoin(\n    uploads.map((o) => o.pipe(filter(isHttpResponse))),\n  );\n}\n","// -- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2023 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\nimport {\n  EntityStore,\n  ID,\n  QueryEntity,\n} from '@datorama/akita';\nimport { Observable } from 'rxjs';\nimport {\n  catchError,\n  filter,\n  finalize,\n  map,\n  shareReplay,\n  switchMap,\n  tap,\n} from 'rxjs/operators';\nimport {\n  CollectionResponse,\n  insertCollectionIntoState,\n  removeResourceLoading,\n  ResourceState,\n  setResourceLoading,\n} from 'core-app/core/state/resource-store';\nimport { omit } from 'lodash';\nimport isDefinedEntity from 'core-app/core/state/is-defined-entity';\nimport {\n  ApiV3ListParameters,\n  listParamsString,\n} from 'core-app/core/apiv3/paths/apiv3-list-resource.interface';\nimport { IHALCollection } from 'core-app/core/apiv3/types/hal-collection.type';\nimport {\n  HttpClient,\n  HttpErrorResponse,\n} from '@angular/common/http';\nimport {\n  Injectable,\n  Injector,\n} from '@angular/core';\nimport { ApiV3Service } from 'core-app/core/apiv3/api-v3.service';\nimport { ToastService } from 'core-app/shared/components/toaster/toast.service';\nimport idFromLink from 'core-app/features/hal/helpers/id-from-link';\n\nexport type ResourceStore<T> = EntityStore<ResourceState<T>>;\n\nexport interface ResourceStoreLoadOptions {\n  handleErrors:boolean;\n}\n\nexport type ResourceKeyInput = ApiV3ListParameters|string;\n\n@Injectable()\nexport abstract class ResourceStoreService<T extends { id:ID }> {\n  protected store:ResourceStore<T> = this.createStore();\n\n  protected query = new QueryEntity(this.store);\n\n  constructor(\n    readonly injector:Injector,\n    readonly http:HttpClient,\n    readonly apiV3Service:ApiV3Service,\n    readonly toastService:ToastService,\n  ) {\n  }\n\n  /**\n   * Require the results for the given filter params\n   * Returns a cached set if it was loaded already.\n   *\n   * @param input List params to require, or href of the resource\n   * @private\n   */\n  public requireCollection(input:ResourceKeyInput):Observable<T[]> {\n    const href = this.buildResourceLink(input);\n    if (this.collectionExists(href) || this.resourceLoading(href)) {\n      return this.loadedCollection(href);\n    }\n\n    return this\n      .fetchCollection(href)\n      .pipe(\n        switchMap(() => this.loadedCollection(href)),\n      );\n  }\n\n  /**\n   * Require a single entity to be loaded.\n   * Returnes the cached entity if it was loaded already\n   *\n   * @param href {string}\n   */\n  public requireEntity(href:string):Observable<T> {\n    const id = idFromLink(href);\n    if (this.query.hasEntity(id) || this.resourceLoading(href)) {\n      return this.lookup(id);\n    }\n\n    return this.fetchEntity(href);\n  }\n\n  /**\n   * Retrieve a collection from the store\n   *\n   * @param input List params to require, or href of the resource\n   */\n  collection(input:ResourceKeyInput):Observable<T[]> {\n    const href = this.buildResourceLink(input);\n\n    return this\n      .collectionState(href)\n      .pipe(\n        switchMap((collection) => this.query.selectMany(collection?.ids || [])),\n      );\n  }\n\n  /**\n   * Return a collection observable that triggers only when the collection is loaded.\n   * @param input List params to require, or href of the resource\n   */\n  loadedCollection(input:ResourceKeyInput):Observable<T[]> {\n    const href = this.buildResourceLink(input);\n\n    return this\n      .collectionState(href)\n      .pipe(\n        filter(isDefinedEntity),\n        switchMap((collection:CollectionResponse) => this.query.selectMany(collection.ids)),\n      );\n  }\n\n  /**\n   * Return a collection observable that triggers only when the collection is loaded.\n   * @param input List params to require, or href of the resource\n   */\n  collectionState(input:ResourceKeyInput):Observable<CollectionResponse|undefined> {\n    const href = this.buildResourceLink(input);\n\n    return this\n      .query\n      .select()\n      .pipe(\n        map((state) => state.collections[href]),\n      );\n  }\n\n  /**\n   * Lookup a single entity from the store\n   * @param id\n   */\n  lookup(id:ID):Observable<T> {\n    return this\n      .query\n      .selectEntity(id)\n      .pipe(filter(isDefinedEntity));\n  }\n\n  /**\n   * Lookup multiple entities from the store\n   */\n  lookupMany(ids:ID[]):Observable<T[]> {\n    return this\n      .query\n      .selectMany(ids);\n  }\n\n  /**\n   * Checks, if the store already has a resource loaded by id.\n   * @param id\n   */\n  exists(id:ID):boolean {\n    return this.query.hasEntity(id);\n  }\n\n  /**\n   * Checks, if the store already has a collection given the key\n   *\n   * @param input List params to require, or href of the resource\n   */\n  collectionExists(input:ResourceKeyInput):boolean {\n    const href = this.buildResourceLink(input);\n\n    return !!this\n      .query\n      .getValue()\n      .collections[href];\n  }\n\n  /**\n   * Checks, if the store already has a collection given the key\n   *\n   * @param input List params to require, or href of the resource\n   */\n  resourceLoading(input:ResourceKeyInput):boolean {\n    const href = this.buildResourceLink(input);\n\n    return this\n      .query\n      .getValue()\n      .loadingResources[href] === true;\n  }\n\n  /**\n   * Clear a collection key\n   * @param input List params to require, or href of the resource\n   */\n  clear(input:ResourceKeyInput):void {\n    const href = this.buildResourceLink(input);\n\n    this\n      .store\n      .update(\n        ({ collections }) => ({\n          collections: omit(collections, href),\n        }),\n      );\n  }\n\n  /**\n   * Update a single entity in the store\n   *\n   * @param id The id to update\n   * @param entity A section of the entity to update\n   */\n  update(id:ID, entity:Partial<T>):void {\n    this.store.update(id, entity);\n  }\n\n  /**\n   * Fetch a given collection, returning only its results\n   */\n  fetchResults(params:ResourceKeyInput):Observable<T[]> {\n    return this\n      .fetchCollection(params)\n      .pipe(\n        map((collection) => collection._embedded.elements),\n      );\n  }\n\n  /**\n   * Fetch a given collection, ensuring it is being flagged as loaded\n   *\n   * @param params {ResourceKeyInput} collection key or list params to build collection key from\n   * @param options {ResourceStoreLoadOptions} Handle collection loading errors within the resource service\n   */\n  fetchCollection(\n    params:ResourceKeyInput,\n    options:ResourceStoreLoadOptions = { handleErrors: true },\n  ):Observable<IHALCollection<T>> {\n    const href = this.buildResourceLink(params);\n\n    setResourceLoading(this.store, href);\n\n    return this\n      .http\n      .get<IHALCollection<T>>(href)\n      .pipe(\n        tap((collection) => insertCollectionIntoState(this.store, collection, href)),\n        finalize(() => removeResourceLoading(this.store, href)),\n        catchError((error:unknown) => {\n          if (options.handleErrors) {\n            this.handleResourceLoadingError(error as HttpErrorResponse, href);\n          }\n\n          throw error;\n        }),\n        shareReplay(1),\n      );\n  }\n\n  /**\n   * Fetch a single entity, ensuring it is being flagged as loaded\n   *\n   * @param href {string} of the resource to load\n   * @param options {ResourceStoreLoadOptions} Handle loading errors within the resource service\n   */\n  fetchEntity(\n    href:string,\n    options:ResourceStoreLoadOptions = { handleErrors: true },\n  ):Observable<T> {\n    setResourceLoading(this.store, href);\n\n    return this\n      .http\n      .get<T>(href)\n      .pipe(\n        tap((entity) => this.store.add(entity)),\n        finalize(() => removeResourceLoading(this.store, href)),\n        catchError((error:unknown) => {\n          if (options.handleErrors) {\n            this.handleResourceLoadingError(error as HttpErrorResponse, href);\n          }\n\n          throw error;\n        }),\n        shareReplay(1),\n      );\n  }\n\n  protected buildResourceLink(input:ResourceKeyInput):string {\n    if (typeof input === 'string') {\n      return input;\n    }\n\n    return this.basePath() + listParamsString(input);\n  }\n\n  /**\n   * Create a new instance of this resource service's underlying store.\n   * @protected\n   */\n  protected abstract createStore():ResourceStore<T>;\n\n  /**\n   * Base path for this collection\n   * @protected\n   */\n  protected abstract basePath():string;\n\n  /**\n   * By default, add a toast error in case of loading errors\n   * @param error\n   * @param _path\n   * @protected\n   */\n  protected handleResourceLoadingError(error:HttpErrorResponse, _path:string):void {\n    this.toastService.addError(error);\n  }\n}\n","import {\n  applyTransaction,\n  EntityState,\n  EntityStore,\n  ID,\n} from '@datorama/akita';\nimport { IHALCollection } from 'core-app/core/apiv3/types/hal-collection.type';\nimport { IHalResourceLinks } from 'core-app/core/state/hal-resource';\nimport idFromLink from 'core-app/features/hal/helpers/id-from-link';\nimport { filter } from 'lodash';\n\nexport interface CollectionResponse {\n  ids:ID[];\n}\n\nexport interface ResourceState<T> extends EntityState<T> {\n  /** Loaded notification collections */\n  collections:Record<string, CollectionResponse>;\n\n  /** Loading resources, collections or singular entities */\n  loadingResources:Record<string, boolean>;\n}\n\nexport interface CollectionItem {\n  id:ID;\n}\n\nexport function mapHALCollectionToIDCollection<T extends CollectionItem>(collection:IHALCollection<T>):CollectionResponse {\n  return {\n    ids: collection._embedded.elements.map((el) => el.id),\n  };\n}\n\n/**\n * Initialize the resource part of the entity store\n */\nexport function createInitialResourceState<T>():ResourceState<T> {\n  return {\n    collections: {},\n    loadingResources: {},\n  };\n}\n\n/**\n * Mark a resource path as being loaded\n *\n * @param store An entity store for the collection\n * @param url The resource path to mark as loading\n */\nexport function setResourceLoading<T extends { id:ID }>(\n  store:EntityStore<ResourceState<T>>,\n  url:string,\n):void {\n  store.update(({ loadingResources }) => (\n    {\n      loadingResources: {\n        ...loadingResources,\n        [url]: true,\n      },\n    }\n  ));\n}\n\n/**\n * Mark a resource path as no longer loading\n *\n * @param store An entity store for the collection\n * @param url The resource path to unmark as loading\n */\nexport function removeResourceLoading<T extends { id:ID }>(\n  store:EntityStore<ResourceState<T>>,\n  url:string,\n):void {\n  store.update(({ loadingResources }) => (\n    {\n      loadingResources: filter(loadingResources, (_, key) => key !== url),\n    }\n  ));\n}\n\n/**\n * Insert a collection into the given entity store\n *\n * @param store An entity store for the collection\n * @param collection A loaded collection\n * @param collectionUrl The key to insert the collection at\n */\nexport function insertCollectionIntoState<T extends { id:ID }>(\n  store:EntityStore<ResourceState<T>>,\n  collection:IHALCollection<T>,\n  collectionUrl:string,\n):void {\n  const { elements } = collection._embedded as { elements:undefined|T[] };\n\n  // Some JSON endpoints return no elements result if there are no elements\n  const ids = elements?.map((el) => el.id) || [];\n\n  applyTransaction(() => {\n    // Avoid inserting when elements is not defined\n    if (elements && elements.length > 0) {\n      store.upsertMany(elements);\n    }\n\n    store.update(({ collections }) => (\n      {\n        collections: {\n          ...collections,\n          [collectionUrl]: {\n            ids,\n          },\n        },\n      }\n    ));\n  });\n}\n\nexport function removeEntityFromCollectionAndState<T extends { id:ID }>(\n  store:EntityStore<ResourceState<T>>,\n  entityId:ID,\n  collectionUrl:string,\n):void {\n  applyTransaction(() => {\n    store.remove(entityId);\n    store.update(({ collections }) => (\n      {\n        collections: {\n          ...collections,\n          [collectionUrl]: {\n            ...collections[collectionUrl],\n            ids: (collections[collectionUrl]?.ids || []).filter((id) => id !== entityId),\n          },\n        },\n      }\n    ));\n  });\n}\n\nexport function collectionFrom<T>(elements:T[]):IHALCollection<T> {\n  const count = elements.length;\n\n  return {\n    _type: 'Collection',\n    count,\n    total: count,\n    pageSize: count,\n    offset: 1,\n    _embedded: {\n      elements,\n    },\n  };\n}\n\n/**\n * Takes a collection of elements that do not have an ID, and extract the ID from self link.\n * @param collection a IHALCollection with elements that have a self link\n * @returns the same collection with elements extended with an ID derived from the self link.\n */\nexport function extendCollectionElementsWithId<T extends { _links:IHalResourceLinks }>(\n  collection:IHALCollection<T>,\n):IHALCollection<T&{ id:ID }> {\n  const elements = collection._embedded.elements.map((element) => ({\n    ...element,\n    id: idFromLink(element._links.self.href),\n  }));\n\n  return {\n    ...collection,\n    _embedded: {\n      ...collection._embedded,\n      elements,\n    },\n  };\n}\n","import {\n  InputState,\n  multiInput,\n  MultiInputState,\n  StatesGroup,\n} from '@openproject/reactivestates';\nimport { Subject } from 'rxjs';\nimport { TypeResource } from 'core-app/features/hal/resources/type-resource';\nimport { TimeEntryResource } from 'core-app/features/hal/resources/time-entry-resource';\nimport { WorkPackageResource } from 'core-app/features/hal/resources/work-package-resource';\nimport { UserResource } from 'core-app/features/hal/resources/user-resource';\nimport { VersionResource } from 'core-app/features/hal/resources/version-resource';\nimport { HalResource } from 'core-app/features/hal/resources/hal-resource';\nimport { StatusResource } from 'core-app/features/hal/resources/status-resource';\nimport { PlaceholderUserResource } from 'core-app/features/hal/resources/placeholder-user-resource';\nimport { RoleResource } from 'core-app/features/hal/resources/role-resource';\nimport { ProjectResource } from 'core-app/features/hal/resources/project-resource';\nimport { PostResource } from 'core-app/features/hal/resources/post-resource';\nimport { SchemaResource } from 'core-app/features/hal/resources/schema-resource';\n\nexport class States extends StatesGroup {\n  name = 'MainStore';\n\n  /* /api/v3/projects */\n  projects:MultiInputState<ProjectResource> = multiInput<ProjectResource>();\n\n  /* /api/v3/work_packages */\n  workPackages = multiInput<WorkPackageResource>();\n\n  /* /api/v3/wiki_pages */\n  posts = multiInput<PostResource>();\n\n  /* /api/v3/schemas */\n  schemas = multiInput<SchemaResource>();\n\n  /* /api/v3/types */\n  types = multiInput<TypeResource>();\n\n  /* /api/v3/statuses */\n  statuses = multiInput<StatusResource>();\n\n  /* /api/v3/time_entries */\n  timeEntries = multiInput<TimeEntryResource>();\n\n  /* /api/v3/versions */\n  versions = multiInput<VersionResource>();\n\n  /* /api/v3/users */\n  users = multiInput<UserResource>();\n\n  /* /api/v3/placeholder_users */\n  placeholderUsers = multiInput<PlaceholderUserResource>();\n\n  /* /api/v3/roles */\n  roles = multiInput<RoleResource>();\n\n  // Global events to isolated changes\n  changes = {\n    // Global subject on changes to the given query ID\n    queries: new Subject(),\n  };\n\n  // Additional state map that can be dynamically registered.\n  additional:{ [id:string]:MultiInputState<unknown> } = {};\n\n  forType<T>(stateName:string):MultiInputState<T> {\n    let state = (this as any)[stateName] || this.additional[stateName];\n\n    if (!state) {\n      state = this.additional[stateName] = multiInput<T>();\n    }\n\n    return state;\n  }\n\n  forResource<T extends HalResource = HalResource>(resource:T):InputState<T>|undefined {\n    const stateName = `${_.camelCase(resource._type)}s`;\n    const state = this.forType<T>(stateName);\n\n    return state && state.get(resource.id!);\n  }\n\n  public add(name:string, state:MultiInputState<HalResource>) {\n    this.additional[name] = state;\n  }\n}\n","export default function idFromLink(href:string|null):string {\n  const idPart = (href || '').split('/').pop()!.split('?')[0];\n  return decodeURIComponent(idPart);\n}\n","export const HAL_NEW_RESOURCE_ID = 'new';\n\nexport default function isNewResource(resource:{ id:string|null }):boolean {\n  return !resource.id || resource.id === HAL_NEW_RESOURCE_ID;\n}\n","// -- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2023 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\nimport { InputState } from '@openproject/reactivestates';\nimport { Injector } from '@angular/core';\nimport { States } from 'core-app/core/states/states.service';\nimport { I18nService } from 'core-app/core/i18n/i18n.service';\nimport { InjectField } from 'core-app/shared/helpers/angular/inject-field.decorator';\nimport { HalLinkInterface } from 'core-app/features/hal/hal-link/hal-link';\nimport { ICKEditorContext } from 'core-app/shared/components/editor/components/ckeditor/ckeditor.types';\nimport idFromLink from 'core-app/features/hal/helpers/id-from-link';\nimport isNewResource from 'core-app/features/hal/helpers/is-new-resource';\n\nexport interface HalResourceClass<T extends HalResource = HalResource> {\n  new(injector:Injector,\n    source:any,\n    $loaded:boolean,\n    halInitializer:(halResource:T) => void,\n    $halType:string):T;\n}\n\nexport type HalSourceLink = { href:string|null, title?:string };\n\nexport type HalSourceLinks = {\n  [key:string]:HalSourceLink\n};\n\nexport type HalSource = {\n  [key:string]:string|number|boolean|null|HalSourceLinks,\n  _links:HalSourceLinks\n};\n\nexport class HalResource {\n  // TODO this is the source of many issues in the frontend\n  // because it no longer properly type checks stuff\n  // Since 2019-10-21 I'm documenting what bugs this caused:\n  // https://community.openproject.com/wp/31462\n  [attribute:string]:any;\n\n  // The API type reported from API\n  public _type:string;\n\n  // Internal initialization time for objects\n  // created in the frontend\n  public __initialized_at:number;\n\n  // The HalResource that this type maps to\n  // This will almost always be equal to _type, however may be different for dynamic types\n  // e.g., { _type: 'StatusFilterInstance', $halType: 'QueryFilterInstance' }.\n  //\n  // This is required for attributes to be correctly mapped according to their configuration.\n  public $halType:string;\n\n  @InjectField() states:States;\n\n  @InjectField() I18n!:I18nService;\n\n  /**\n   * Constructs and initializes the HalResource. For this, the halResoureFactory is required.\n   *\n   * However, We can't inject the HalResourceFactory here because it itself depends on this class.\n   * So if you need to initialize a HalResource, use +HalResourceFactory.createHalResource+ instead.\n   *\n   * @param {Injector} injector\n   * @param $halType The HalResource type that this instance maps to\n   * @param $source\n   * @param {boolean} $loaded\n   * @param {Function} initializer The initializer callback to HAL-transform all linked and embedded resources.\n   *\n   */\n  public constructor(\n    public injector:Injector,\n    public $source:any,\n    public $loaded:boolean,\n    public halInitializer:(halResource:any) => void,\n    $halType:string,\n  ) {\n    this.$halType = $halType;\n    this.$initialize($source);\n  }\n\n  public static getEmptyResource(self:{ href:string|null } = { href: null }):any {\n    return { _links: { self } };\n  }\n\n  public $links:any = {};\n\n  public $embedded:any = {};\n\n  public $self:Promise<this>;\n\n  public _name:string;\n\n  public static matchFromLink(href:string, expectedResource:string):string|null {\n    const match = new RegExp(`/api/v3/${expectedResource}/(\\\\d+)`).exec(href);\n    return match && match[1];\n  }\n\n  public $initialize(source:any) {\n    this.$source = source.$source || source;\n    this.halInitializer(this);\n  }\n\n  /**\n   * Override toString to ensure the resource can\n   * be printed nicely on console and in errors\n   */\n  public toString() {\n    if (this.href) {\n      return `[HalResource href=${this.href}]`;\n    }\n    return `[HalResource id=${this.id}]`;\n  }\n\n  /**\n   * Returns the ID and ensures it's a string, null.\n   * Returns a string when:\n   *  - The embedded ID is actually set\n   *  - The self link is terminated by a number.\n   */\n  public get id():string|null {\n    if (this.$source.id) {\n      return this.$source.id.toString();\n    }\n\n    const id = idFromLink(this.href);\n    if (/^\\d+$/.exec(id)) {\n      return id;\n    }\n\n    return null;\n  }\n\n  public set id(val:string|null) {\n    this.$source.id = val;\n  }\n\n  /**\n   * Retain the internal tracking identifier from the given other work package.\n   * This is due to us needing to identify a work package beyond its actual ID,\n   * because that changes upon saving.\n   *\n   * @param other\n   */\n  public retainFrom(other:HalResource) {\n    this.__initialized_at = other.__initialized_at;\n  }\n\n  /**\n   * Create a HalResource from the copied source of the given, other HalResource.\n   *\n   * @param {HalResource} other\n   * @returns A HalResource with the identitical copied source of other.\n   */\n  public $copy<T extends HalResource = HalResource>(source:Object = {}):T {\n    const clone:HalResourceClass<T> = this.constructor as any;\n\n    return new clone(this.injector, _.merge(this.$plain(), source), this.$loaded, this.halInitializer, this.$halType);\n  }\n\n  public $plain():any {\n    return _.cloneDeep(this.$source);\n  }\n\n  public get $isHal():boolean {\n    return true;\n  }\n\n  public get $link():HalLinkInterface {\n    return this.$links.self.$link;\n  }\n\n  public get name():string {\n    return this._name || this.$link.title || '';\n  }\n\n  public set name(name:string) {\n    this._name = name;\n  }\n\n  public get href():string|null {\n    return this.$link.href;\n  }\n\n  /**\n   * Return the associated state to this HAL resource, if any.\n   */\n  public get state():InputState<this>|null {\n    return null;\n  }\n\n  /**\n   * Update the state\n   */\n  public push(newValue:this):Promise<unknown> {\n    if (this.state) {\n      this.state.putValue(newValue);\n    }\n\n    return Promise.resolve();\n  }\n\n  public previewPath():string|undefined {\n    if (isNewResource(this) && this.project) {\n      return this.project.href;\n    }\n\n    return undefined;\n  }\n\n  public getEditorContext(fieldName:string):ICKEditorContext {\n    return { type: 'constrained' };\n  }\n\n  public $load(force = false):Promise<this> {\n    if (!this.state) {\n      return this.$loadResource(force);\n    }\n\n    const { state } = this;\n\n    if (force) {\n      state.clear();\n    }\n\n    // If nobody has asked yet for the resource to be $loaded, do it ourselves.\n    // Otherwise, we risk returning a promise, that will never be resolved.\n    state.putFromPromiseIfPristine(() => this.$loadResource(force));\n\n    return <Promise<this>>state.valuesPromise().then((source:any) => {\n      this.$initialize(source);\n      this.$loaded = true;\n      return this;\n    });\n  }\n\n  protected $loadResource(force = false):Promise<this> {\n    if (!force) {\n      if (this.$loaded) {\n        return Promise.resolve(this);\n      }\n\n      if (!this.$loaded && this.$self) {\n        return this.$self;\n      }\n    }\n\n    // Reset and load this resource\n    this.$loaded = false;\n    this.$self = this.$links.self({}).then((source:any) => {\n      this.$loaded = true;\n      this.$initialize(source.$source);\n      return this;\n    });\n\n    return this.$self;\n  }\n\n  /**\n   * Update the resource ignoring the cache.\n   */\n  public $update() {\n    return this.$load(true);\n  }\n\n  /**\n   * Specify this resource's embedded keys that should be transformed with resources.\n   * Use this to restrict, e.g., links that should not be made properties if you have a custom get/setter.\n   */\n  public $embeddableKeys():string[] {\n    const properties = Object.keys(this.$source);\n    return _.without(properties, '_links', '_embedded', 'id');\n  }\n\n  /**\n   * Specify this resource's keys that should not be transformed with resources.\n   * Use this to restrict, e.g., links that should not be made properties if you have a custom get/setter.\n   */\n  public $linkableKeys():string[] {\n    const properties = Object.keys(this.$links);\n    return _.without(properties, 'self');\n  }\n}\n","import 'reflect-metadata';\nimport {\n  Component,\n  ElementRef,\n  ɵDirectiveDef,\n} from '@angular/core';\n\n/** We expect an ElementRef to be present on the target class */\nexport interface DatasetInputsDecorated extends Component {\n  elementRef:ElementRef<HTMLElement>;\n}\n\nexport interface DatasetInputsComponent extends DatasetInputsDecorated {\n  elementRef:ElementRef<HTMLElement>;\n  [key:string]:unknown;\n}\n\n/**\n * The populateInputsFromDataset function automatically sets input values from `data` attributes set on a component tag.\n * This is useful if you're rendering the tag in the backend but want to provide data to the component via its inputs.\n *\n * Usage:\n *\n * ```\n * @Component({ selector: 'my-component' })\n * export class MyComponent {\n *   @Input() someInput:string[] = [];\n *\n *   constructor(\n *    elementRef:ElementRef,\n *   ) {\n *     populateInputsFromDataset(this);\n *   }\n * }\n * ```\n *\n * Now you can send data from the backend to the component by JSON:\n *\n * <%= content_tag 'my-component',\n *                 '',\n *                 data: {\n *                   'some-input': ['a', 'b'].to_json\n *                 }\n * %>\n * Warning: this is only checked during the constructor phase once. Changes to the dataset\n * will not be reflected in the inputs. If you need inputs that update, use normal Angular bindings.\n */\n/* eslint-disable-next-line @typescript-eslint/no-explicit-any */\nexport function populateInputsFromDataset(instance:DatasetInputsDecorated):any {\n  // TypeScript won't allow us to do the necessary metaprogramming here since it does not\n  // know about these keys (probably because we should not touch them)\n  const cstr = instance.constructor as unknown as DatasetInputsComponent;\n\n  // Here we find the declared input names of the component.\n  // With them way we can make sure we don't overwrite any non-input values.\n  // This seems to always be ɵcmp, but we don't want to depend on that knowledge.\n  // FIXME: Is there a better way to get to this information? It does not seem to be part of Reflect metadata\n  const declaredInputsParentKey = Object.keys(cstr)\n    .find((key:string) => typeof (cstr[key] as ɵDirectiveDef<unknown>).declaredInputs === 'object');\n\n  if (!declaredInputsParentKey) {\n    console.warn('Could not find declared inputs for component');\n    return;\n  }\n\n  const input = cstr[declaredInputsParentKey] as ɵDirectiveDef<unknown>;\n  const inputs = input.declaredInputs as { [key:string]:string };\n\n  Object.keys(inputs)\n    .forEach((outsideName) => {\n      const insideName = inputs[outsideName];\n\n      const { dataset } = (instance as unknown as DatasetInputsComponent).elementRef.nativeElement;\n\n      if (!dataset[outsideName]) {\n        return;\n      }\n\n      try {\n        (instance as unknown as DatasetInputsComponent)[insideName] = JSON.parse(dataset[outsideName] || '');\n      } catch (err) {\n        console.error(\"Couldn't parse input: \", outsideName, instance.elementRef.nativeElement.dataset);\n        console.error(`\nMake sure to make all data attributes you want to use as input JSON parseable.\nThis means that plain strings have to be wrapped in double quotes, and the attribute value is easiest to set with single quotes.\nAn example:\n\n<op-example example-input='\"myString\"'></op-example>\n`);\n\n        // Rethrow since an error at this point is basically a syntax error and should be fixed\n        throw err;\n      }\n    });\n}\n","// -- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2022 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  HostBinding,\n  Injector,\n  Input,\n  OnInit,\n  Output,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { I18nService } from 'core-app/core/i18n/i18n.service';\nimport {\n  ControlValueAccessor,\n  NG_VALUE_ACCESSOR,\n} from '@angular/forms';\nimport {\n  onDayCreate,\n  validDate,\n} from 'core-app/shared/components/datepicker/helpers/date-modal.helpers';\nimport { TimezoneService } from 'core-app/core/datetime/timezone.service';\nimport { DatePicker } from '../datepicker';\nimport flatpickr from 'flatpickr';\nimport { DayElement } from 'flatpickr/dist/types/instance';\nimport { populateInputsFromDataset } from '../../dataset-inputs';\nimport { debounce } from 'lodash';\nimport { DeviceService } from 'core-app/core/browser/device.service';\n\nexport const rangeSeparator = '-';\n\nexport const opBasicRangeDatePickerSelector = 'op-basic-range-date-picker';\n\n@Component({\n  selector: opBasicRangeDatePickerSelector,\n  templateUrl: './basic-range-date-picker.component.html',\n  styleUrls: [\n    '../styles/datepicker.modal.sass',\n    './basic-range-date-picker.component.sass',\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => OpBasicRangeDatePickerComponent),\n      multi: true,\n    },\n  ],\n})\nexport class OpBasicRangeDatePickerComponent implements OnInit, ControlValueAccessor, AfterViewInit {\n  @HostBinding('class.op-basic-range-datepicker') className = true;\n\n  @HostBinding('class.op-basic-range-datepicker_mobile') mobile = false;\n\n  @Output() valueChange = new EventEmitter();\n\n  private _value:string[] = [];\n\n  @Input() set value(newValue:string[]) {\n    this._value = newValue;\n    this.stringValue = this.resolveDateArrayToString(newValue);\n  }\n\n  get value() {\n    return this._value;\n  }\n\n  @Input() id = `flatpickr-input-${+(new Date())}`;\n\n  @Input() name = '';\n\n  @Input() required = false;\n\n  @Input() disabled = false;\n\n  @Input() minimalDate:Date|null = null;\n\n  @Input() inputClassNames = '';\n\n  @ViewChild('input') input:ElementRef;\n\n  stringValue = '';\n\n  datePickerInstance:DatePicker;\n\n  text = {\n    date: this.I18n.t('js.work_packages.properties.date'),\n    placeholder: this.I18n.t('js.placeholders.default'),\n    spacer: this.I18n.t('js.filter.value_spacer'),\n  };\n\n  constructor(\n    readonly I18n:I18nService,\n    readonly timezoneService:TimezoneService,\n    readonly injector:Injector,\n    readonly cdRef:ChangeDetectorRef,\n    readonly elementRef:ElementRef,\n    readonly deviceService:DeviceService,\n  ) {\n    populateInputsFromDataset(this);\n  }\n\n  ngOnInit() {\n    this.mobile = this.deviceService.isMobile;\n  }\n\n  ngAfterViewInit():void {\n    if (!this.mobile) {\n      this.initializeDatePicker();\n    }\n  }\n\n  changeValueFromInputDebounced = debounce(this.changeValueFromInput.bind(this), 16);\n\n  changeValueFromInput(value:string|string[]) {\n    const newDates = (typeof value === 'string') ? this.resolveDateStringToArray(value) : value;\n\n    this.onChange(newDates);\n    this.onTouched(newDates);\n    this.writeValue(newDates);\n    this.cdRef.detectChanges();\n\n    if (newDates.find((el) => !validDate(el))) {\n      return;\n    }\n\n    this.valueChange.emit(newDates);\n  }\n\n  showDatePicker():void {\n    this.datePickerInstance?.show();\n  }\n\n  private initializeDatePicker() {\n    this.datePickerInstance = new DatePicker(\n      this.injector,\n      this.id,\n      this.value || '',\n      {\n        allowInput: true,\n        mode: 'range',\n        showMonths: 2,\n        onReady: (_date:Date[], _datestr:string, instance:flatpickr.Instance) => {\n          instance.calendarContainer.classList.add('op-datepicker-modal--flatpickr-instance');\n        },\n        onChange: (dates:Date[], dateStr:string) => {\n          if (dates.length === 2) {\n            const value = this.resolveDateStringToArray(dateStr);\n            this.writeValue(value);\n            this.onChange(value);\n            this.onTouched(value);\n          }\n\n          this.cdRef.detectChanges();\n        },\n        onDayCreate: async (dObj:Date[], dStr:string, fp:flatpickr.Instance, dayElem:DayElement) => {\n          onDayCreate(\n            dayElem,\n            true,\n            await this.datePickerInstance?.isNonWorkingDay(dayElem.dateObj),\n            !!this.minimalDate && dayElem.dateObj <= this.minimalDate,\n          );\n        },\n      },\n      this.input.nativeElement as HTMLInputElement,\n    );\n  }\n\n  writeValue(value:string[]):void {\n    this.value = value;\n  }\n\n  onChange = (_:string[]):void => {};\n\n  onTouched = (_:string[]):void => {};\n\n  registerOnChange(fn:(_:string[]) => void):void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn:(_:string[]) => void):void {\n    this.onTouched = fn;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  private resolveDateStringToArray(dates:string):string[] {\n    return dates.split(` ${rangeSeparator} `).map((date) => date.trim());\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  private resolveDateArrayToString(dates:string[]):string {\n    return dates.join(` ${rangeSeparator} `);\n  }\n}\n","// -- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2022 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Injector,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { I18nService } from 'core-app/core/i18n/i18n.service';\nimport {\n  ControlValueAccessor,\n  NG_VALUE_ACCESSOR,\n} from '@angular/forms';\nimport {\n  onDayCreate,\n  validDate,\n} from 'core-app/shared/components/datepicker/helpers/date-modal.helpers';\nimport { TimezoneService } from 'core-app/core/datetime/timezone.service';\nimport { DatePicker } from '../datepicker';\nimport flatpickr from 'flatpickr';\nimport { DayElement } from 'flatpickr/dist/types/instance';\nimport { populateInputsFromDataset } from '../../dataset-inputs';\nimport { DeviceService } from 'core-app/core/browser/device.service';\n\nexport const opBasicSingleDatePickerSelector = 'op-basic-single-date-picker';\n\n@Component({\n  selector: opBasicSingleDatePickerSelector,\n  templateUrl: './basic-single-date-picker.component.html',\n  styleUrls: ['../styles/datepicker.modal.sass'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => OpBasicSingleDatePickerComponent),\n      multi: true,\n    },\n  ],\n})\nexport class OpBasicSingleDatePickerComponent implements ControlValueAccessor, OnInit, AfterViewInit, OnDestroy {\n  @Output() valueChange = new EventEmitter();\n\n  @Output() picked = new EventEmitter();\n\n  private _value = '';\n\n  @Input() set value(newValue:string) {\n    this._value = newValue;\n  }\n\n  get value() {\n    return this._value;\n  }\n\n  @Input() id = `flatpickr-input-${+(new Date())}`;\n\n  @Input() name = '';\n\n  @Input() required = false;\n\n  @Input() disabled = false;\n\n  @Input() minimalDate:Date|null = null;\n\n  @Input() inputClassNames = '';\n\n  @Input() remoteFieldKey = null;\n\n  @ViewChild('input') input:ElementRef;\n\n  mobile = false;\n\n  text = {\n    date: this.I18n.t('js.work_packages.properties.date'),\n    placeholder: this.I18n.t('js.placeholders.default'),\n  };\n\n  public datePickerInstance:DatePicker;\n\n  constructor(\n    readonly I18n:I18nService,\n    readonly timezoneService:TimezoneService,\n    readonly injector:Injector,\n    readonly cdRef:ChangeDetectorRef,\n    readonly elementRef:ElementRef,\n    readonly deviceService:DeviceService,\n  ) {\n    populateInputsFromDataset(this);\n  }\n\n  ngOnInit() {\n    this.mobile = this.deviceService.isMobile;\n  }\n\n  ngAfterViewInit():void {\n    if (!this.mobile) {\n      this.initializeDatePicker();\n    }\n  }\n\n  ngOnDestroy():void {\n    this.datePickerInstance?.destroy();\n  }\n\n  changeValueFromInput(value:string) {\n    if (validDate(value)) {\n      this.onTouched(value);\n      this.onChange(value);\n      this.writeValue(value);\n      this.datePickerInstance?.setDates(value);\n      this.valueChange.emit(value);\n    }\n  }\n\n  showDatePicker():void {\n    this.datePickerInstance?.show();\n  }\n\n  private initializeDatePicker() {\n    this.datePickerInstance = new DatePicker(\n      this.injector,\n      this.id,\n      this.value || '',\n      {\n        allowInput: true,\n        mode: 'single',\n        showMonths: 1,\n        onReady: (_date:Date[], _datestr:string, instance:flatpickr.Instance) => {\n          instance.calendarContainer.classList.add('op-datepicker-modal--flatpickr-instance');\n        },\n        onChange: (_:Date[], dateStr:string) => {\n          this.writeValue(dateStr);\n          if (dateStr.length > 0) {\n            const dateString = this.timezoneService.formattedISODate(dateStr);\n            this.valueChange.emit(dateString);\n            this.onTouched(dateString);\n            this.onChange(dateString);\n            this.writeValue(dateString);\n            this.picked.emit();\n          }\n\n          this.cdRef.detectChanges();\n        },\n        onDayCreate: async (_dObj:Date[], _dStr:string, _fp:flatpickr.Instance, dayElem:DayElement) => {\n          onDayCreate(\n            dayElem,\n            true,\n            await this.datePickerInstance?.isNonWorkingDay(dayElem.dateObj),\n            !!this.minimalDate && dayElem.dateObj <= this.minimalDate,\n          );\n        },\n      },\n      this.input.nativeElement as HTMLInputElement,\n    );\n  }\n\n  writeValue(value:string):void {\n    this.value = value;\n    this.datePickerInstance?.setDates(this.value);\n  }\n\n  onChange = (_:string):void => {};\n\n  onTouched = (_:string):void => {};\n\n  registerOnChange(fn:(_:string) => void):void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn:(_:string) => void):void {\n    this.onTouched = fn;\n  }\n}\n","// -- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2023 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\nimport * as moment from 'moment';\nimport flatpickr from 'flatpickr';\nimport { Instance } from 'flatpickr/dist/types/instance';\nimport { ConfigurationService } from 'core-app/core/config/configuration.service';\nimport { I18nService } from 'core-app/core/i18n/i18n.service';\nimport { Injector } from '@angular/core';\nimport { InjectField } from 'core-app/shared/helpers/angular/inject-field.decorator';\nimport { WeekdayService } from 'core-app/core/days/weekday.service';\nimport { rangeSeparator } from './constants';\n\nimport Options = flatpickr.Options;\nimport FlatpickrOptions = flatpickr.Options.Options;\nimport DateOption = Options.DateOption;\nimport { DayResourceService } from 'core-app/core/state/days/day.service';\n\nexport class DatePicker {\n  private datepickerFormat = 'Y-m-d';\n\n  public datepickerInstance:Instance;\n\n  @InjectField() configurationService:ConfigurationService;\n\n  @InjectField() weekdaysService:WeekdayService;\n\n  @InjectField() daysService:DayResourceService;\n\n  @InjectField() I18n:I18nService;\n\n  private weekdaysPromise:Promise<unknown>;\n\n  constructor(\n    readonly injector:Injector,\n    private datepickerElemIdentifier:string,\n    private date:Date|Date[]|string[]|string,\n    private options:flatpickr.Options.Options,\n    private datepickerTarget:HTMLElement|null,\n  ) {\n    void this.initialize(options);\n  }\n\n  private initialize(options:flatpickr.Options.Options) {\n    this.weekdaysPromise = this\n      .weekdaysService\n      .loadWeekdays()\n      .toPromise()\n      .then(() => {\n        if (this.datepickerInstance) {\n          this.datepickerInstance.redraw();\n        }\n      });\n\n    const mergedOptions = _.extend({}, this.defaultOptions, options);\n\n    let datePickerInstances:Instance|Instance[];\n    if (this.datepickerTarget) {\n      datePickerInstances = flatpickr(this.datepickerTarget as Node, mergedOptions);\n    } else {\n      datePickerInstances = flatpickr(this.datepickerElemIdentifier, mergedOptions);\n    }\n\n    this.datepickerInstance = Array.isArray(datePickerInstances) ? datePickerInstances[0] : datePickerInstances;\n  }\n\n  public async isNonWorkingDay(day:Date):Promise<boolean> {\n    return this.weekdaysService.isNonWorkingDay(day) || await this.daysService.isNonWorkingDay$(day);\n  }\n\n  public clear():void {\n    this.datepickerInstance.clear();\n  }\n\n  public destroy():void {\n    this.hide();\n    this.datepickerInstance?.destroy();\n  }\n\n  public hide():void {\n    if (this.isOpen) {\n      this.datepickerInstance.close();\n    }\n  }\n\n  public show():void {\n    this.datepickerInstance.open();\n  }\n\n  public setDates(dates:DateOption|DateOption[]):void {\n    this.datepickerInstance.setDate(dates);\n  }\n\n  public setOption(\n    option:keyof FlatpickrOptions|{ [k in keyof FlatpickrOptions]?:FlatpickrOptions[k] },\n    value:unknown,\n  ):void {\n    this.datepickerInstance.set(option, value);\n  }\n\n  public get isOpen():boolean {\n    return this.datepickerInstance.isOpen;\n  }\n\n  private get defaultOptions() {\n    const firstDayOfWeek = this.configurationService.startOfWeek();\n\n    return {\n      weekNumbers: true,\n      getWeek(dateObj:Date) {\n        return moment(dateObj).format('W');\n      },\n      dateFormat: this.datepickerFormat,\n      defaultDate: this.date,\n      locale: {\n        weekdays: {\n          shorthand: this.I18n.t('date.abbr_day_names'),\n          longhand: this.I18n.t('date.day_names'),\n        },\n        months: {\n          shorthand: this.I18n.t<string[]>('date.abbr_month_names').slice(1),\n          longhand: this.I18n.t<string[]>('date.month_names').slice(1),\n        },\n        firstDayOfWeek,\n        weekAbbreviation: this.I18n.t('date.abbr_week'),\n        rangeSeparator: ` ${rangeSeparator} `,\n      },\n    };\n  }\n}\n","// -- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2023 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\nimport { DatePicker } from 'core-app/shared/components/datepicker/datepicker';\nimport { DateOption } from 'flatpickr/dist/types/options';\nimport { DayElement } from 'flatpickr/dist/types/instance';\nimport * as moment from 'moment-timezone';\n\n/**\n * Map the date to the internal format,\n * setting to null if it's empty.\n * @param date\n */\n// eslint-disable-next-line class-methods-use-this\nexport function mappedDate(date:string|null):string|null {\n  return (date === '') ? null : date;\n}\n\n// eslint-disable-next-line class-methods-use-this\nexport function parseDate(date:Date|string):Date|'' {\n  if (date instanceof Date) {\n    return new Date(date.setHours(0, 0, 0, 0));\n  }\n  if (date === '') {\n    return '';\n  }\n  return new Date(moment(date).toDate().setHours(0, 0, 0, 0));\n}\n\nexport function validDate(date:Date|string):boolean {\n  return (date instanceof Date)\n    || (date === '')\n    || !!/^\\d{4}-\\d{2}-\\d{2}$/.exec(date);\n}\n\nexport function areDatesEqual(firstDate:Date|string, secondDate:Date|string):boolean {\n  const parsedDate1 = parseDate(firstDate);\n  const parsedDate2 = parseDate(secondDate);\n\n  if ((typeof (parsedDate1) === 'string') || (typeof (parsedDate2) === 'string')) {\n    return false;\n  }\n  return parsedDate1.getTime() === parsedDate2.getTime();\n}\n\nexport function keepCurrentlyActiveMonth(datePicker:DatePicker, currentMonth:number, currentYear:number):void {\n  // Keep currently active month and avoid jump because of two-month layout\n  datePicker.datepickerInstance.currentMonth = currentMonth;\n  datePicker.datepickerInstance.currentYear = currentYear;\n}\n\nexport function comparableDate(date?:DateOption):number|null {\n  if (!date || typeof date === 'string') {\n    return null;\n  }\n\n  if (typeof date === 'number') {\n    return date;\n  }\n\n  return date.getTime();\n}\n\nexport function setDates(dates:DateOption|DateOption[], datePicker:DatePicker, enforceDate?:Date):void {\n  const { currentMonth, currentYear, selectedDates } = datePicker.datepickerInstance;\n\n  const [newStart, newEnd] = _.castArray(dates);\n  const [selectedStart, selectedEnd] = selectedDates;\n\n  // In case the new times match the current times, do not try to update\n  // the current selected months (Regression #46488)\n  if (selectedDates.length > 0\n    && comparableDate(newStart) === comparableDate(selectedStart)\n    && comparableDate(newEnd) === comparableDate(selectedEnd)\n  ) {\n    return;\n  }\n\n  datePicker.setDates(dates);\n\n  if (enforceDate) {\n    const enforcedMonth = enforceDate.getMonth();\n    const enforcedYear = enforceDate.getFullYear();\n    const monthDiff = enforcedMonth - currentMonth + 12 * (enforcedYear - currentYear);\n\n    // Because of the two-month layout we only have to update the calendar\n    // if the month is further in the past/future than the one additional month that is shown anyway\n    if (Math.abs(monthDiff) > 1) {\n      datePicker.datepickerInstance.currentMonth = enforcedMonth;\n      datePicker.datepickerInstance.currentYear = enforcedYear;\n    } else {\n      keepCurrentlyActiveMonth(datePicker, currentMonth, currentYear);\n    }\n  } else {\n    keepCurrentlyActiveMonth(datePicker, currentMonth, currentYear);\n  }\n\n  datePicker.datepickerInstance.redraw();\n}\n\nexport function onDayCreate(\n  dayElem:DayElement,\n  ignoreNonWorkingDays:boolean,\n  isNonWorkingDay:boolean,\n  isDayDisabled:boolean,\n):void {\n  dayElem.setAttribute('data-iso-date', dayElem.dateObj.toISOString());\n\n  if (isDayDisabled) {\n    dayElem.classList.add('flatpickr-disabled');\n    return;\n  }\n\n  if (ignoreNonWorkingDays && isNonWorkingDay) {\n    dayElem.classList.add('flatpickr-non-working-day_enabled');\n  } else if (!ignoreNonWorkingDays && isNonWorkingDay) {\n    dayElem.classList.add('flatpickr-non-working-day');\n  }\n}\n","import 'reflect-metadata';\nimport { InjectFlags, Injector } from '@angular/core';\nimport { debugLog } from 'core-app/shared/helpers/debug_output';\n\nexport interface InjectableClass {\n  injector:Injector;\n}\n\nexport function InjectField(token?:any, defaultValue:any = null, flags?:InjectFlags) {\n  return (target:InjectableClass, property:string) => {\n    // eslint-ignore-next-line no-param-reassign\n    if (delete (target as any)[property]) {\n      Object.defineProperty(target, property, {\n        get(this:InjectableClass) {\n          if (token) {\n            return this.injector.get<any>(token, defaultValue, flags);\n          }\n          const type = Reflect.getMetadata('design:type', target, property);\n          return this.injector.get<any>(type, defaultValue, flags);\n        },\n        set(this:InjectableClass) {\n          debugLog(`Trying to set InjectField property ${property}`);\n        },\n      });\n    }\n  };\n}\n","// -- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2023 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\nexport type FilterOperator = '='|'!*'|'!'|'~'|'o'|'>t-'|'<>d'|'**'|'ow';\nexport const FalseValue = ['f'];\nexport const TrueValue = ['t'];\n\nexport type ApiV3FilterValueType = string|number|boolean;\n\nexport interface ApiV3FilterValue {\n  operator:FilterOperator;\n  values:ApiV3FilterValueType[];\n}\n\nexport interface ApiV3Filter {\n  [filter:string]:ApiV3FilterValue;\n}\n\nexport type ApiV3FilterObject = { [filter:string]:ApiV3FilterValue };\n\nexport class ApiV3FilterBuilder {\n  private filterMap:ApiV3FilterObject = {};\n\n  public add(name:string, operator:FilterOperator, filterValues:ApiV3FilterValueType[]|boolean):this {\n    const values = (() => {\n      if (filterValues === true) {\n        return TrueValue;\n      }\n\n      if (filterValues === false) {\n        return FalseValue;\n      }\n\n      return filterValues;\n    })();\n\n    this.filterMap[name] = {\n      operator,\n      values,\n    };\n\n    return this;\n  }\n\n  /**\n   * Remove from the filter set\n   * @param name\n   */\n  public remove(name:string):void {\n    delete this.filterMap[name];\n  }\n\n  /**\n   * Turns the array-map style of query filters to an actual object\n   *\n   * @param filters APIv3 filter array [ {foo: { operator: '=', val: ['bar'] } }, ...]\n   * @return A map { foo: { operator: '=', val: ['bar'] } , ... }\n   */\n  public static toFilterObject(filters:ApiV3Filter[]):ApiV3FilterObject {\n    const map:ApiV3FilterObject = {};\n\n    filters.forEach((item:ApiV3Filter) => {\n      _.each(item, (val:ApiV3FilterValue, filter:string) => {\n        map[filter] = val;\n      });\n    });\n\n    return map;\n  }\n\n  /**\n   * Merges the other filters into the current set,\n   * replacing them if the are duplicated.\n   *\n   * @param filters\n   * @param only Only apply the given filters\n   */\n  public merge(filters:ApiV3Filter[], ...only:string[]):void {\n    const toAdd:ApiV3FilterObject = _.pickBy(\n      ApiV3FilterBuilder.toFilterObject(filters),\n      (_, filter:string) => only.includes(filter),\n    );\n\n    this.filterMap = {\n      ...this.filterMap,\n      ...toAdd,\n    };\n  }\n\n  public get filters():ApiV3Filter[] {\n    const filters:ApiV3Filter[] = [];\n    _.each(this.filterMap, (val:ApiV3FilterValue, filter:string) => {\n      filters.push({ [filter]: val });\n    });\n\n    return filters;\n  }\n\n  public toJson():string {\n    return JSON.stringify(this.filters);\n  }\n\n  public toParams(mergeParams:{ [key:string]:string } = {}):string {\n    const params = { filters: this.toJson(), ...mergeParams };\n    return new URLSearchParams(params).toString();\n  }\n\n  public clone():ApiV3FilterBuilder {\n    const newFilters = new ApiV3FilterBuilder();\n\n    this.filters.forEach((filter) => {\n      Object.keys(filter).forEach((name) => {\n        newFilters.add(name, filter[name].operator, filter[name].values);\n      });\n    });\n\n    return newFilters;\n  }\n}\n\nexport function ApiV3Filter(name:string, operator:FilterOperator, values:ApiV3FilterValueType[]):ApiV3FilterBuilder {\n  return new ApiV3FilterBuilder().add(name, operator, values);\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false,\n};\n","import { environment } from '../../../environments/environment';\n\n/**\n * Execute the callback when DEBUG is defined\n * through webpack.\n */\nexport function whenDebugging(cb:() => void) {\n  if (!environment.production) {\n    cb();\n  }\n}\n\n/**\n * Log with console.log when DEBUG is defined\n * through webpack.\n */\nexport function debugLog(message:string, ...args:unknown[]):void {\n  // eslint-disable-next-line no-console\n  whenDebugging(() => console.log(`[DEBUG] ${message}`, ...args));\n}\n\nexport function timeOutput(msg:string, cb:() => void):any {\n  if (!environment.production) {\n    const t0 = performance.now();\n\n    const results = cb();\n\n    const t1 = performance.now();\n    // eslint-disable-next-line no-console\n    console.log(`%c${msg} completed in ${(t1 - t0)} milliseconds.`, 'color:#00A093;');\n\n    return results;\n  }\n  return cb();\n}\n\nexport function asyncTimeOutput(msg:string, promise:Promise<any>):any {\n  if (!environment.production) {\n    const t0 = performance.now();\n\n    return promise.then(() => {\n      const t1 = performance.now();\n      // eslint-disable-next-line no-console\n      console.log(`%c${msg} completed in ${(t1 - t0)} milliseconds.`, 'color:#00A093;');\n    });\n  }\n  return promise;\n}\n","export const I18nServiceStub = {\n  t<T=string>(name:string):any {\n    return {\n      'date.abbr_day_names': [\n        'Mon',\n        'Tue',\n        'Wed',\n        'Thu',\n        'Fri',\n        'Sat',\n        'Sun',\n      ],\n      'date.day_names': [\n        'Monday',\n        'Tuesday',\n        'Wednesday',\n        'Thursday',\n        'Friday',\n        'Saturday',\n        'Sunday',\n      ],\n      'date.abbr_month_names': [\n        'Jan',\n        'Feb',\n        'Mar',\n        'Apr',\n        'May',\n        'Jun',\n        'Jul',\n        'Aug',\n        'Sep',\n        'Oct',\n        'Nov',\n        'Dec',\n      ],\n      'date.month_names': [\n        'January',\n        'February',\n        'March',\n        'April',\n        'May',\n        'June',\n        'July',\n        'August',\n        'September',\n        'October',\n        'November',\n        'December',\n      ],\n    }[name] || name as T;\n  },\n};\n","var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn-bd\": \"./node_modules/moment/locale/bn-bd.js\",\n\t\"./bn-bd.js\": \"./node_modules/moment/locale/bn-bd.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-in\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-in.js\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-sg\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./en-sg.js\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-mx\": \"./node_modules/moment/locale/es-mx.js\",\n\t\"./es-mx.js\": \"./node_modules/moment/locale/es-mx.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fil\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fil.js\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-deva\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-deva.js\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./oc-lnc\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./oc-lnc.js\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tk\": \"./node_modules/moment/locale/tk.js\",\n\t\"./tk.js\": \"./node_modules/moment/locale/tk.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-mo\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-mo.js\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";"],"names":["___CSS_LOADER_API_SOURCEMAP_IMPORT___","___CSS_LOADER_EXPORT___","___CSS_LOADER_API_IMPORT___","push","module","id","exports","toString","WeekdayServiceStub","constructor","weekdays","isNonWorkingDay","date","isoDayOfWeek","moment","isoWeekday","this","find","wd","day","working","nonWorkingDays","filter","loadWeekdays","of","Injectable","providedIn","DayResourceServiceStub","basePath","isNonWorkingDay$","input","getDay","requireNonWorkingYear$","_date","requireNonWorkingYears$","_start","_end","fetchCollection","_params","_type","count","pageSize","offset","total","_embedded","elements","createStore","DayStore","OpBasicDatePickerModule","NgModule","imports","FormsModule","ReactiveFormsModule","CommonModule","providers","I18nService","declarations","OpBasicRangeDatePickerComponent","OpBasicSingleDatePickerComponent","title","component","decorators","moduleMetadata","provide","TimezoneService","useValue","ConfigurationService","startOfWeek","startOfWeekPresent","States","I18nServiceStub","WeekdayService","useFactory","DayResourceService","Single","render","args","props","template","SingleWithValue","Date","format","RangeWithValue","dates","add","SimpleResourceCollection","segment","resource","path","SimpleResource","withOptionalId","_","isNil","toPath","separator","startsWith","HalLink","requestMethod","href","method","templated","payload","type","identifier","static","halResourceService","link","data","headers","firstValueFrom","request","$fetch","params","$prepare","templateValues","Error","clone","each","value","key","regexp","RegExp","replace","$callable","linkFunc","extend","$link","URLParamsEncoder","encodeKey","encodeURIComponent","encodeValue","decodeKey","decodeURIComponent","decodeValue","OpenprojectHalModuleHelpers","initializeHalProperties","halResource","asHalResource","loaded","_links","createHalResource","setupProperty","name","callback","instanceName","sourceName","sourceObj","$source","isObject","Object","keys","forEach","propName","lazy","setter","val","linkName","isArray","Array","map","el","hasOwnProperty","$embedded","get","setSource","self","setupLinks","l","fromObject","setupEmbedded","element","source","child","proxyProperties","$embeddableKeys","property","defineProperty","set","enumerable","configurable","setLinksAsProperties","$linkableKeys","$links","items","item","createLinkedResource","ObservableArray","on","splice","indexOf","setEmbeddedAsProperties","obj","getter","done","config","HalError","message","httpError","errorIdentifier","super","setPrototypeOf","prototype","MAGIC_PAGE_NUMBER","getPaginatedCollections","pipe","mergeMap","collection","resolvedSize","remaining","pagesRemaining","Math","ceil","calls","fill","i","forkJoin","results","getPaginatedResults","reduce","acc","next","concat","extractCollectionElements","HalResource","HalResourceService","injector","http","body","withCredentials","responseType","performRequest","response","catchError","error","whenDebugging","console","createErrorObservable","HttpParams","encoder","getAllPaginated","pageParams","requestParams","toEprops","put","post","patch","delete","registerResource","entry","defaultClass","createHalResourceOfType","getResourceClassOfType","createHalResourceOfClass","resourceClass","fromLink","fromSelfLink","fromType","$halType","toType","getResourceClassOfAttribute","cls","attribute","typeConfig","attrTypes","deflatedArray","Pako","JSON","stringify","eprops","base64","throwError","addFiltersToPath","filters","url","URL","window","location","origin","searchParams","has","existingFilters","parse","toJson","Injector","HttpClient","ApiV3ResourcePath","apiRoot","parent","subResource","ApiV3GettableResource","__decorate","InjectField","ApiV3GettableResourceCollection","ApiV3ResourceCollection","filtered","pathname","search","signalled","select","join","ApiV3Paths","apiV3Base","openApiSpecPath","previewMarkup","context","base","principals","projectId","term","ApiV3FilterBuilder","length","toParams","sortBy","PathHelperService","appBasePath","api","v3","staticBase","attachmentDownloadPath","attachmentIdentifier","slug","attachmentContentPath","fileLinksPath","ifcModelsPath","projectIdentifier","ifcModelsNewPath","ifcModelsEditPath","modelId","ifcModelsDeletePath","bimDetailsPath","workPackageId","viewpoint","projectPath","highlightingCssPath","forumPath","forumIdentifier","projectForumPath","keyboardShortcutsHelpPath","messagePath","messageIdentifier","myPagePath","myNotificationsSettingsPath","newsPath","newsId","notificationsPath","loginPath","projectsPath","projectsNewPath","projectActivityPath","projectCalendarPath","projectMembershipsPath","projectNewsPath","projectTimeEntriesPath","projectWikiPath","projectWorkPackagePath","wpId","projectWorkPackagesPath","projectWorkPackageNewPath","projectBoardsPath","projectDashboardsPath","timeEntriesPath","workPackagePath","usersPath","groupsPath","placeholderUsersPath","userPath","placeholderUserPath","groupPath","rolesPath","rolePath","versionsPath","versionEditPath","versionShowPath","workPackagesPath","workPackageCopyPath","workPackageDetailsCopyPath","workPackagesBulkDeletePath","textFormattingHelp","HalPayloadHelper","schema","extractPayloadFromSchema","nonLinkProperties","writable","currentSchema","ApiV3FormResource","extractPayload","ApiV3GridForm","grid","widgets","widget","startRow","endRow","startColumn","endColumn","options","ApiV3GridPaths","form","ApiV3GridsPaths","list","listParamsString","StateCacheService","state","holdValuesForSeconds","multiState","cacheDurationInMs","touch","putValue","current","fallback","getValueOr","clearAndLoad","loader","observable","take","share","clearAndPutFromPromise","updateValue","Promise","resolve","updateFor","observe","values$","changes$","observeAll","observeChange","startWith","auditTime","mapped","clearSome","ids","clear","stale","hasActivePromiseRequest","isPristine","isValueOlderThan","SchemaProxy","Proxy","receiver","proxyMethod","ofProperty","isAttributeEditable","mappedName","isEditable","Reflect","propertySchema","isNewResource","update","apply","__","argumentsList","WorkPackageSchemaProxy","isMilestone","isReadonly","readonly","status","includes","scheduleManually","SchemaCacheService","states","schemas","stateKey","create","getSchemaHref","ensureLoaded","requireAndStream","toPromise","force","load","loadAll","hrefs","all","ApiV3Resource","cache","createCache","shareReplay","refresh","switchMap","schemaCache","mapTo","cacheResponse","source$","tap","ApiV3TimeEntryPaths","CollectionResource","updateElements","$load","then","ApiV3Collection","bind","TimeEntryCacheService","ApiV3TimeEntriesPaths","timeEntries","ApiV3CapabilityPaths","ApiV3CapabilitiesPaths","ApiV3AvailableProjectsPaths","exists","ApiV3Filter","ApiV3MembershipsForm","project","principal","roles","role","_meta","notificationMessage","raw","ApiV3MembershipsPaths","available_projects","ApiV3UserPreferencesPaths","ApiV3UserPaths","avatar","preferences","users","ApiV3UsersPaths","me","ApiV3TypePaths","ApiV3TypesPaths","types","QueryFilterInstanceResource","memoizedCurrentSchemas","$initialize","pathHelper","idFromLink","operator","undefined","resultingSchema","e","isCompletelyDefined","values","isValueRequired","findOperator","operatorSymbol","availableOperators","isTemplated","flag","QueryResource","setSortBy","newSortBy","halInitializer","ApiV3QueryOrder","result","delta","t","wpIds","QueryFiltersService","getFilterSchema","available","filtersSchemas","allowedFilterValue","mapSchemasIntoFilters","query","setSchemas","ApiV3QueryForm","queries","queryFilters","buildQueryResource","loadWithParams","queryId","projects","URI","ApiV3QueryPaths","order","parameterised","paginated","pagination","ApiV3QueriesPaths","default","filter_instance_schemas","queryData","withOptionalProject","toggleStarred","starred","unstar","star","getIcalUrl","tokenName","icalUrl","token_name","ApiV3RelationsPaths","loadInvolved","workPackageIds","validIds","test","from","ApiV3WorkPackageForm","forTypePayload","forPayload","ApiV3WorkPackagePaths","relations","revisions","activities","available_watchers","github_pull_requests","WorkPackageCache","schemaCacheService","updateWorkPackage","wp","immediate","updateWorkPackageList","skipOnIdentical","hasValue","isEqual","debugLog","MultiInputState","ApiV3WorkPackageCachedSubresource","updateSchemas","ApiV3WorkPackagesPaths","requireAll","reject","loadCollectionsFor","uniq","pagedResults","filterByTypeaheadOrId","idOnly","additionalParams","filterUpdatedSince","timestamp","n","workPackages","ApiV3VersionPaths","version","versions","ApiV3VersionsPaths","ApiV3ProjectCopyPaths","ApiV3ProjectPaths","available_assignees","work_packages","copy","ProjectCache","ApiV3ProjectsPaths","ApiV3StatusPaths","statuses","ApiV3StatusesPaths","ApiV3RolePaths","ApiV3RolesPaths","ApiV3NewsPaths","ApiV3HelpTextsPaths","ApiV3ConfigurationPath","$configuration","Board","editable","updateImmediately","isFree","isAction","actionAttribute","highlightingMode","addQuery","isNewWidget","removeQuery","createdAt","sortWidgets","sort","a","b","showStatusButton","AuthorisationService","links","initModelAuth","modelName","modelLinks","doModify","observeUntil","unsubscribe","takeUntil","can","action","cannot","ApiV3BoardPath","grids","newBoard","save","board","fetchSchema","ApiV3BoardsPaths","authorisationService","allInScope","boardPath","scope","createGrid","PathHelper","forType","ApiV3PlaceholderUserPaths","ApiV3PlaceholderUsersPaths","ApiV3GroupPaths","ApiV3GroupsPaths","ApiV3NotificationPaths","markRead","markUnread","ApiV3NotificationsPaths","facet","unread","listPath","additional","markAsReadByIds","markAsReadByFilter","f","ApiV3ViewsPaths","view","Apiv3BackupsPath","backupToken","includeAttachments","attachments","ApiV3DayPaths","ApiV3DaysPaths","week","ApiV3StoragesPaths","files","ApiV3ProjectStoragesPaths","ApiV3Service","apiV3CollectionEndpoint","backups","apiV3CustomEndpoint","configuration","days","documents","file_links","notifications","root","apiV3SingularEndpoint","priorities","time_entries","actions","capabilities","memberships","news","storages","projectStorages","placeholder_users","groups","help_texts","job_statuses","views","boards","collectionFromString","fullPath","queryProps","groupBy","filterParam","queryPropsString","DeviceService","mobileWidthTreshold","isMobile","innerWidth","apiV3Service","initialize","loadConfiguration","commentsSortedInDescendingOrder","userPreference","warnOnLeavingUnsaved","autoHidePopups","isTimezoneSet","timezone","isDefaultTimezoneSet","defaultTimezone","isDirectUploads","prepareAttachmentURL","maximumAttachmentFileSize","systemPreference","perPageOptions","dateFormatPresent","dateFormat","timeFormatPresent","timeFormat","I18n","locale","firstDayOfWeek","hostName","activeFeatureFlags","pref","configurationService","setupLocale","userTimezone","parseDatetime","datetime","tz","parseDate","parseISODatetime","parseISODate","formattedDate","getDateFormat","daysFromToday","dateString","today","startOf","diff","formattedTime","datetimeString","getTimeFormat","formattedDatetime","c","formattedDatetimeComponents","formattedRelativeDateTime","fromNow","d","toHours","durationString","Number","asHours","toFixed","toDays","asDays","toISODuration","unit","toIsoString","formattedDuration","formattedISODate","formattedISODateTime","isValidISODate","isValid","isValidISODateTime","dateTime","WeekdayStore","EntityStore","createInitialResourceState","StoreConfig","WeekdayResourceService","ResourceStoreService","requireCollection","selectHasCache","hasCache","EMPTY","fetchWeekdays","selectAll","extendCollectionElementsWithId","insertCollectionIntoState","store","weekdaysService","i18n","lookup","toTime","toNumber","toPercentage","toCurrency","strftime","toHumanSize","findIndex","endOf","start","end","isDefinedEntity","entity","isHttpResponse","event","HttpEventType","ToastService","stack","jQuery","toast","timeoutAfter","removeSuccessFlashMessages","remove","nextValue","removeOnAdd","setTimeout","addError","additionalErrors","errors","HttpErrorResponse","isHalError","err","hasOwn","call","createToast","addWarning","addSuccess","addNotice","addUpload","uploads","notification","waitForUploadsFinished","o","subscribe","addLoading","createLoadingToast","toastService","QueryEntity","buildResourceLink","collectionExists","resourceLoading","loadedCollection","requireEntity","hasEntity","fetchEntity","collectionState","selectMany","collections","selectEntity","lookupMany","getValue","loadingResources","omit","fetchResults","handleErrors","setResourceLoading","finalize","removeResourceLoading","handleResourceLoadingError","_path","collectionUrl","applyTransaction","upsertMany","StatesGroup","multiInput","posts","placeholderUsers","changes","Subject","stateName","forResource","camelCase","idPart","split","pop","HAL_NEW_RESOURCE_ID","$loaded","expectedResource","match","exec","retainFrom","other","__initialized_at","$copy","merge","$plain","cloneDeep","$isHal","_name","newValue","previewPath","getEditorContext","fieldName","$loadResource","putFromPromiseIfPristine","valuesPromise","$self","$update","properties","without","populateInputsFromDataset","instance","cstr","declaredInputsParentKey","declaredInputs","warn","inputs","outsideName","insideName","elementRef","nativeElement","dataset","_value","stringValue","resolveDateArrayToString","timezoneService","cdRef","deviceService","className","mobile","valueChange","EventEmitter","required","disabled","minimalDate","inputClassNames","text","placeholder","spacer","changeValueFromInputDebounced","debounce","changeValueFromInput","onChange","onTouched","ngOnInit","ngAfterViewInit","initializeDatePicker","newDates","resolveDateStringToArray","writeValue","detectChanges","validDate","emit","showDatePicker","datePickerInstance","show","DatePicker","allowInput","mode","showMonths","onReady","_datestr","calendarContainer","classList","dateStr","onDayCreate","dObj","dStr","fp","dayElem","__awaiter","dateObj","registerOnChange","fn","registerOnTouched","trim","HostBinding","Output","Input","ViewChild","Component","selector","changeDetection","ChangeDetectionStrategy","encapsulation","ViewEncapsulation","NG_VALUE_ACCESSOR","useExisting","forwardRef","OpBasicRangeDatePickerComponent_1","multi","ChangeDetectorRef","ElementRef","picked","remoteFieldKey","ngOnDestroy","destroy","setDates","_dObj","_dStr","_fp","OpBasicSingleDatePickerComponent_1","datepickerElemIdentifier","datepickerTarget","datepickerFormat","weekdaysPromise","datepickerInstance","redraw","mergedOptions","defaultOptions","datePickerInstances","flatpickr","daysService","hide","isOpen","close","open","setDate","setOption","option","weekNumbers","getWeek","defaultDate","shorthand","longhand","months","slice","weekAbbreviation","rangeSeparator","ignoreNonWorkingDays","isDayDisabled","setAttribute","toISOString","token","defaultValue","flags","target","getMetadata","FalseValue","TrueValue","filterMap","filterValues","only","toAdd","pickBy","toFilterObject","mergeParams","URLSearchParams","newFilters","environment","production","cb","log","webpackContext","req","webpackContextResolve","__webpack_require__","code","webpackContextKeys"],"sourceRoot":"webpack:///","x_google_ignoreList":[119]}