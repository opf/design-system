{"version":3,"file":"3617.a8f27328.iframe.bundle.js","mappings":"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","sources":["./node_modules/@angular/cdk/fesm2020/platform.mjs","./node_modules/rxjs/dist/esm5/internal/operators/skip.js","./node_modules/@angular/cdk/fesm2020/coercion.mjs","./node_modules/rxjs/dist/esm5/internal/operators/debounceTime.js","./node_modules/@angular/cdk/fesm2020/observers.mjs","./node_modules/@angular/cdk/fesm2020/layout.mjs","./node_modules/@angular/cdk/fesm2020/a11y.mjs","./node_modules/@angular/cdk/fesm2020/keycodes.mjs","./node_modules/@floating-ui/core/dist/floating-ui.core.browser.min.mjs","./node_modules/@floating-ui/dom/dist/floating-ui.dom.browser.min.mjs","./node_modules/@w11k/ngx-componentdestroyed/dist/es2015/index.js"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { PLATFORM_ID, Injectable, Inject, NgModule } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Whether the current platform supports the V8 Break Iterator. The V8 check\n// is necessary to detect all Blink based browsers.\nlet hasV8BreakIterator;\n// We need a try/catch around the reference to `Intl`, because accessing it in some cases can\n// cause IE to throw. These cases are tied to particular versions of Windows and can happen if\n// the consumer is providing a polyfilled `Map`. See:\n// https://github.com/Microsoft/ChakraCore/issues/3189\n// https://github.com/angular/components/issues/15687\ntry {\n    hasV8BreakIterator = typeof Intl !== 'undefined' && Intl.v8BreakIterator;\n}\ncatch {\n    hasV8BreakIterator = false;\n}\n/**\n * Service to detect the current platform by comparing the userAgent strings and\n * checking browser-specific global properties.\n */\nclass Platform {\n    constructor(_platformId) {\n        this._platformId = _platformId;\n        // We want to use the Angular platform check because if the Document is shimmed\n        // without the navigator, the following checks will fail. This is preferred because\n        // sometimes the Document may be shimmed without the user's knowledge or intention\n        /** Whether the Angular application is being rendered in the browser. */\n        this.isBrowser = this._platformId\n            ? isPlatformBrowser(this._platformId)\n            : typeof document === 'object' && !!document;\n        /** Whether the current browser is Microsoft Edge. */\n        this.EDGE = this.isBrowser && /(edge)/i.test(navigator.userAgent);\n        /** Whether the current rendering engine is Microsoft Trident. */\n        this.TRIDENT = this.isBrowser && /(msie|trident)/i.test(navigator.userAgent);\n        // EdgeHTML and Trident mock Blink specific things and need to be excluded from this check.\n        /** Whether the current rendering engine is Blink. */\n        this.BLINK = this.isBrowser &&\n            !!(window.chrome || hasV8BreakIterator) &&\n            typeof CSS !== 'undefined' &&\n            !this.EDGE &&\n            !this.TRIDENT;\n        // Webkit is part of the userAgent in EdgeHTML, Blink and Trident. Therefore we need to\n        // ensure that Webkit runs standalone and is not used as another engine's base.\n        /** Whether the current rendering engine is WebKit. */\n        this.WEBKIT = this.isBrowser &&\n            /AppleWebKit/i.test(navigator.userAgent) &&\n            !this.BLINK &&\n            !this.EDGE &&\n            !this.TRIDENT;\n        /** Whether the current platform is Apple iOS. */\n        this.IOS = this.isBrowser && /iPad|iPhone|iPod/.test(navigator.userAgent) && !('MSStream' in window);\n        // It's difficult to detect the plain Gecko engine, because most of the browsers identify\n        // them self as Gecko-like browsers and modify the userAgent's according to that.\n        // Since we only cover one explicit Firefox case, we can simply check for Firefox\n        // instead of having an unstable check for Gecko.\n        /** Whether the current browser is Firefox. */\n        this.FIREFOX = this.isBrowser && /(firefox|minefield)/i.test(navigator.userAgent);\n        /** Whether the current platform is Android. */\n        // Trident on mobile adds the android platform to the userAgent to trick detections.\n        this.ANDROID = this.isBrowser && /android/i.test(navigator.userAgent) && !this.TRIDENT;\n        // Safari browsers will include the Safari keyword in their userAgent. Some browsers may fake\n        // this and just place the Safari keyword in the userAgent. To be more safe about Safari every\n        // Safari browser should also use Webkit as its layout engine.\n        /** Whether the current browser is Safari. */\n        this.SAFARI = this.isBrowser && /safari/i.test(navigator.userAgent) && this.WEBKIT;\n    }\n}\nPlatform.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: Platform, deps: [{ token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Injectable });\nPlatform.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: Platform, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: Platform, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: Object, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass PlatformModule {\n}\nPlatformModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: PlatformModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nPlatformModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: PlatformModule });\nPlatformModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: PlatformModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: PlatformModule, decorators: [{\n            type: NgModule,\n            args: [{}]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Cached result Set of input types support by the current browser. */\nlet supportedInputTypes;\n/** Types of `<input>` that *might* be supported. */\nconst candidateInputTypes = [\n    // `color` must come first. Chrome 56 shows a warning if we change the type to `color` after\n    // first changing it to something else:\n    // The specified value \"\" does not conform to the required format.\n    // The format is \"#rrggbb\" where rr, gg, bb are two-digit hexadecimal numbers.\n    'color',\n    'button',\n    'checkbox',\n    'date',\n    'datetime-local',\n    'email',\n    'file',\n    'hidden',\n    'image',\n    'month',\n    'number',\n    'password',\n    'radio',\n    'range',\n    'reset',\n    'search',\n    'submit',\n    'tel',\n    'text',\n    'time',\n    'url',\n    'week',\n];\n/** @returns The input types supported by this browser. */\nfunction getSupportedInputTypes() {\n    // Result is cached.\n    if (supportedInputTypes) {\n        return supportedInputTypes;\n    }\n    // We can't check if an input type is not supported until we're on the browser, so say that\n    // everything is supported when not on the browser. We don't use `Platform` here since it's\n    // just a helper function and can't inject it.\n    if (typeof document !== 'object' || !document) {\n        supportedInputTypes = new Set(candidateInputTypes);\n        return supportedInputTypes;\n    }\n    let featureTestInput = document.createElement('input');\n    supportedInputTypes = new Set(candidateInputTypes.filter(value => {\n        featureTestInput.setAttribute('type', value);\n        return featureTestInput.type === value;\n    }));\n    return supportedInputTypes;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Cached result of whether the user's browser supports passive event listeners. */\nlet supportsPassiveEvents;\n/**\n * Checks whether the user's browser supports passive event listeners.\n * See: https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n */\nfunction supportsPassiveEventListeners() {\n    if (supportsPassiveEvents == null && typeof window !== 'undefined') {\n        try {\n            window.addEventListener('test', null, Object.defineProperty({}, 'passive', {\n                get: () => (supportsPassiveEvents = true),\n            }));\n        }\n        finally {\n            supportsPassiveEvents = supportsPassiveEvents || false;\n        }\n    }\n    return supportsPassiveEvents;\n}\n/**\n * Normalizes an `AddEventListener` object to something that can be passed\n * to `addEventListener` on any browser, no matter whether it supports the\n * `options` parameter.\n * @param options Object to be normalized.\n */\nfunction normalizePassiveListenerOptions(options) {\n    return supportsPassiveEventListeners() ? options : !!options.capture;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Cached result of the way the browser handles the horizontal scroll axis in RTL mode. */\nlet rtlScrollAxisType;\n/** Cached result of the check that indicates whether the browser supports scroll behaviors. */\nlet scrollBehaviorSupported;\n/** Check whether the browser supports scroll behaviors. */\nfunction supportsScrollBehavior() {\n    if (scrollBehaviorSupported == null) {\n        // If we're not in the browser, it can't be supported. Also check for `Element`, because\n        // some projects stub out the global `document` during SSR which can throw us off.\n        if (typeof document !== 'object' || !document || typeof Element !== 'function' || !Element) {\n            scrollBehaviorSupported = false;\n            return scrollBehaviorSupported;\n        }\n        // If the element can have a `scrollBehavior` style, we can be sure that it's supported.\n        if ('scrollBehavior' in document.documentElement.style) {\n            scrollBehaviorSupported = true;\n        }\n        else {\n            // At this point we have 3 possibilities: `scrollTo` isn't supported at all, it's\n            // supported but it doesn't handle scroll behavior, or it has been polyfilled.\n            const scrollToFunction = Element.prototype.scrollTo;\n            if (scrollToFunction) {\n                // We can detect if the function has been polyfilled by calling `toString` on it. Native\n                // functions are obfuscated using `[native code]`, whereas if it was overwritten we'd get\n                // the actual function source. Via https://davidwalsh.name/detect-native-function. Consider\n                // polyfilled functions as supporting scroll behavior.\n                scrollBehaviorSupported = !/\\{\\s*\\[native code\\]\\s*\\}/.test(scrollToFunction.toString());\n            }\n            else {\n                scrollBehaviorSupported = false;\n            }\n        }\n    }\n    return scrollBehaviorSupported;\n}\n/**\n * Checks the type of RTL scroll axis used by this browser. As of time of writing, Chrome is NORMAL,\n * Firefox & Safari are NEGATED, and IE & Edge are INVERTED.\n */\nfunction getRtlScrollAxisType() {\n    // We can't check unless we're on the browser. Just assume 'normal' if we're not.\n    if (typeof document !== 'object' || !document) {\n        return 0 /* RtlScrollAxisType.NORMAL */;\n    }\n    if (rtlScrollAxisType == null) {\n        // Create a 1px wide scrolling container and a 2px wide content element.\n        const scrollContainer = document.createElement('div');\n        const containerStyle = scrollContainer.style;\n        scrollContainer.dir = 'rtl';\n        containerStyle.width = '1px';\n        containerStyle.overflow = 'auto';\n        containerStyle.visibility = 'hidden';\n        containerStyle.pointerEvents = 'none';\n        containerStyle.position = 'absolute';\n        const content = document.createElement('div');\n        const contentStyle = content.style;\n        contentStyle.width = '2px';\n        contentStyle.height = '1px';\n        scrollContainer.appendChild(content);\n        document.body.appendChild(scrollContainer);\n        rtlScrollAxisType = 0 /* RtlScrollAxisType.NORMAL */;\n        // The viewport starts scrolled all the way to the right in RTL mode. If we are in a NORMAL\n        // browser this would mean that the scrollLeft should be 1. If it's zero instead we know we're\n        // dealing with one of the other two types of browsers.\n        if (scrollContainer.scrollLeft === 0) {\n            // In a NEGATED browser the scrollLeft is always somewhere in [-maxScrollAmount, 0]. For an\n            // INVERTED browser it is always somewhere in [0, maxScrollAmount]. We can determine which by\n            // setting to the scrollLeft to 1. This is past the max for a NEGATED browser, so it will\n            // return 0 when we read it again.\n            scrollContainer.scrollLeft = 1;\n            rtlScrollAxisType =\n                scrollContainer.scrollLeft === 0 ? 1 /* RtlScrollAxisType.NEGATED */ : 2 /* RtlScrollAxisType.INVERTED */;\n        }\n        scrollContainer.remove();\n    }\n    return rtlScrollAxisType;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet shadowDomIsSupported;\n/** Checks whether the user's browser support Shadow DOM. */\nfunction _supportsShadowDom() {\n    if (shadowDomIsSupported == null) {\n        const head = typeof document !== 'undefined' ? document.head : null;\n        shadowDomIsSupported = !!(head && (head.createShadowRoot || head.attachShadow));\n    }\n    return shadowDomIsSupported;\n}\n/** Gets the shadow root of an element, if supported and the element is inside the Shadow DOM. */\nfunction _getShadowRoot(element) {\n    if (_supportsShadowDom()) {\n        const rootNode = element.getRootNode ? element.getRootNode() : null;\n        // Note that this should be caught by `_supportsShadowDom`, but some\n        // teams have been able to hit this code path on unsupported browsers.\n        if (typeof ShadowRoot !== 'undefined' && ShadowRoot && rootNode instanceof ShadowRoot) {\n            return rootNode;\n        }\n    }\n    return null;\n}\n/**\n * Gets the currently-focused element on the page while\n * also piercing through Shadow DOM boundaries.\n */\nfunction _getFocusedElementPierceShadowDom() {\n    let activeElement = typeof document !== 'undefined' && document\n        ? document.activeElement\n        : null;\n    while (activeElement && activeElement.shadowRoot) {\n        const newActiveElement = activeElement.shadowRoot.activeElement;\n        if (newActiveElement === activeElement) {\n            break;\n        }\n        else {\n            activeElement = newActiveElement;\n        }\n    }\n    return activeElement;\n}\n/** Gets the target of an event while accounting for Shadow DOM. */\nfunction _getEventTarget(event) {\n    // If an event is bound outside the Shadow DOM, the `event.target` will\n    // point to the shadow root so we have to use `composedPath` instead.\n    return (event.composedPath ? event.composedPath()[0] : event.target);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Gets whether the code is currently running in a test environment. */\nfunction _isTestEnvironment() {\n    // We can't use `declare const` because it causes conflicts inside Google with the real typings\n    // for these symbols and we can't read them off the global object, because they don't appear to\n    // be attached there for some runners like Jest.\n    // (see: https://github.com/angular/components/issues/23365#issuecomment-938146643)\n    return (\n    // @ts-ignore\n    (typeof __karma__ !== 'undefined' && !!__karma__) ||\n        // @ts-ignore\n        (typeof jasmine !== 'undefined' && !!jasmine) ||\n        // @ts-ignore\n        (typeof jest !== 'undefined' && !!jest) ||\n        // @ts-ignore\n        (typeof Mocha !== 'undefined' && !!Mocha));\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Platform, PlatformModule, _getEventTarget, _getFocusedElementPierceShadowDom, _getShadowRoot, _isTestEnvironment, _supportsShadowDom, getRtlScrollAxisType, getSupportedInputTypes, normalizePassiveListenerOptions, supportsPassiveEventListeners, supportsScrollBehavior };\n","import { filter } from './filter';\nexport function skip(count) {\n    return filter(function (_, index) { return count <= index; });\n}\n","import { ElementRef } from '@angular/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Coerces a data-bound value (typically a string) to a boolean. */\nfunction coerceBooleanProperty(value) {\n    return value != null && `${value}` !== 'false';\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction coerceNumberProperty(value, fallbackValue = 0) {\n    return _isNumberValue(value) ? Number(value) : fallbackValue;\n}\n/**\n * Whether the provided value is considered a number.\n * @docs-private\n */\nfunction _isNumberValue(value) {\n    // parseFloat(value) handles most of the cases we're interested in (it treats null, empty string,\n    // and other non-number values as NaN, where Number just uses 0) but it considers the string\n    // '123hello' to be a valid number. Therefore we also check if Number(value) is NaN.\n    return !isNaN(parseFloat(value)) && !isNaN(Number(value));\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction coerceArray(value) {\n    return Array.isArray(value) ? value : [value];\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Coerces a value to a CSS pixel value. */\nfunction coerceCssPixelValue(value) {\n    if (value == null) {\n        return '';\n    }\n    return typeof value === 'string' ? value : `${value}px`;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Coerces an ElementRef or an Element into an element.\n * Useful for APIs that can accept either a ref or the native element itself.\n */\nfunction coerceElement(elementOrRef) {\n    return elementOrRef instanceof ElementRef ? elementOrRef.nativeElement : elementOrRef;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Coerces a value to an array of trimmed non-empty strings.\n * Any input that is not an array, `null` or `undefined` will be turned into a string\n * via `toString()` and subsequently split with the given separator.\n * `null` and `undefined` will result in an empty array.\n * This results in the following outcomes:\n * - `null` -&gt; `[]`\n * - `[null]` -&gt; `[\"null\"]`\n * - `[\"a\", \"b \", \" \"]` -&gt; `[\"a\", \"b\"]`\n * - `[1, [2, 3]]` -&gt; `[\"1\", \"2,3\"]`\n * - `[{ a: 0 }]` -&gt; `[\"[object Object]\"]`\n * - `{ a: 0 }` -&gt; `[\"[object\", \"Object]\"]`\n *\n * Useful for defining CSS classes or table columns.\n * @param value the value to coerce into an array of strings\n * @param separator split-separator if value isn't an array\n */\nfunction coerceStringArray(value, separator = /\\s+/) {\n    const result = [];\n    if (value != null) {\n        const sourceValues = Array.isArray(value) ? value : `${value}`.split(separator);\n        for (const sourceValue of sourceValues) {\n            const trimmedString = `${sourceValue}`.trim();\n            if (trimmedString) {\n                result.push(trimmedString);\n            }\n        }\n    }\n    return result;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport { _isNumberValue, coerceArray, coerceBooleanProperty, coerceCssPixelValue, coerceElement, coerceNumberProperty, coerceStringArray };\n","import { asyncScheduler } from '../scheduler/async';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function debounceTime(dueTime, scheduler) {\n    if (scheduler === void 0) { scheduler = asyncScheduler; }\n    return operate(function (source, subscriber) {\n        var activeTask = null;\n        var lastValue = null;\n        var lastTime = null;\n        var emit = function () {\n            if (activeTask) {\n                activeTask.unsubscribe();\n                activeTask = null;\n                var value = lastValue;\n                lastValue = null;\n                subscriber.next(value);\n            }\n        };\n        function emitWhenIdle() {\n            var targetTime = lastTime + dueTime;\n            var now = scheduler.now();\n            if (now < targetTime) {\n                activeTask = this.schedule(undefined, targetTime - now);\n                subscriber.add(activeTask);\n                return;\n            }\n            emit();\n        }\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n            lastValue = value;\n            lastTime = scheduler.now();\n            if (!activeTask) {\n                activeTask = scheduler.schedule(emitWhenIdle, dueTime);\n                subscriber.add(activeTask);\n            }\n        }, function () {\n            emit();\n            subscriber.complete();\n        }, undefined, function () {\n            lastValue = activeTask = null;\n        }));\n    });\n}\n","import { coerceElement, coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, Directive, Output, Input, NgModule } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Factory that creates a new MutationObserver and allows us to stub it out in unit tests.\n * @docs-private\n */\nclass MutationObserverFactory {\n    create(callback) {\n        return typeof MutationObserver === 'undefined' ? null : new MutationObserver(callback);\n    }\n}\nMutationObserverFactory.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MutationObserverFactory, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nMutationObserverFactory.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MutationObserverFactory, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MutationObserverFactory, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n/** An injectable service that allows watching elements for changes to their content. */\nclass ContentObserver {\n    constructor(_mutationObserverFactory) {\n        this._mutationObserverFactory = _mutationObserverFactory;\n        /** Keeps track of the existing MutationObservers so they can be reused. */\n        this._observedElements = new Map();\n    }\n    ngOnDestroy() {\n        this._observedElements.forEach((_, element) => this._cleanupObserver(element));\n    }\n    observe(elementOrRef) {\n        const element = coerceElement(elementOrRef);\n        return new Observable((observer) => {\n            const stream = this._observeElement(element);\n            const subscription = stream.subscribe(observer);\n            return () => {\n                subscription.unsubscribe();\n                this._unobserveElement(element);\n            };\n        });\n    }\n    /**\n     * Observes the given element by using the existing MutationObserver if available, or creating a\n     * new one if not.\n     */\n    _observeElement(element) {\n        if (!this._observedElements.has(element)) {\n            const stream = new Subject();\n            const observer = this._mutationObserverFactory.create(mutations => stream.next(mutations));\n            if (observer) {\n                observer.observe(element, {\n                    characterData: true,\n                    childList: true,\n                    subtree: true,\n                });\n            }\n            this._observedElements.set(element, { observer, stream, count: 1 });\n        }\n        else {\n            this._observedElements.get(element).count++;\n        }\n        return this._observedElements.get(element).stream;\n    }\n    /**\n     * Un-observes the given element and cleans up the underlying MutationObserver if nobody else is\n     * observing this element.\n     */\n    _unobserveElement(element) {\n        if (this._observedElements.has(element)) {\n            this._observedElements.get(element).count--;\n            if (!this._observedElements.get(element).count) {\n                this._cleanupObserver(element);\n            }\n        }\n    }\n    /** Clean up the underlying MutationObserver for the specified element. */\n    _cleanupObserver(element) {\n        if (this._observedElements.has(element)) {\n            const { observer, stream } = this._observedElements.get(element);\n            if (observer) {\n                observer.disconnect();\n            }\n            stream.complete();\n            this._observedElements.delete(element);\n        }\n    }\n}\nContentObserver.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: ContentObserver, deps: [{ token: MutationObserverFactory }], target: i0.ɵɵFactoryTarget.Injectable });\nContentObserver.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: ContentObserver, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: ContentObserver, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: MutationObserverFactory }]; } });\n/**\n * Directive that triggers a callback whenever the content of\n * its associated element has changed.\n */\nclass CdkObserveContent {\n    /**\n     * Whether observing content is disabled. This option can be used\n     * to disconnect the underlying MutationObserver until it is needed.\n     */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._disabled ? this._unsubscribe() : this._subscribe();\n    }\n    /** Debounce interval for emitting the changes. */\n    get debounce() {\n        return this._debounce;\n    }\n    set debounce(value) {\n        this._debounce = coerceNumberProperty(value);\n        this._subscribe();\n    }\n    constructor(_contentObserver, _elementRef, _ngZone) {\n        this._contentObserver = _contentObserver;\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        /** Event emitted for each change in the element's content. */\n        this.event = new EventEmitter();\n        this._disabled = false;\n        this._currentSubscription = null;\n    }\n    ngAfterContentInit() {\n        if (!this._currentSubscription && !this.disabled) {\n            this._subscribe();\n        }\n    }\n    ngOnDestroy() {\n        this._unsubscribe();\n    }\n    _subscribe() {\n        this._unsubscribe();\n        const stream = this._contentObserver.observe(this._elementRef);\n        // TODO(mmalerba): We shouldn't be emitting on this @Output() outside the zone.\n        // Consider brining it back inside the zone next time we're making breaking changes.\n        // Bringing it back inside can cause things like infinite change detection loops and changed\n        // after checked errors if people's code isn't handling it properly.\n        this._ngZone.runOutsideAngular(() => {\n            this._currentSubscription = (this.debounce ? stream.pipe(debounceTime(this.debounce)) : stream).subscribe(this.event);\n        });\n    }\n    _unsubscribe() {\n        this._currentSubscription?.unsubscribe();\n    }\n}\nCdkObserveContent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: CdkObserveContent, deps: [{ token: ContentObserver }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\nCdkObserveContent.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", type: CdkObserveContent, selector: \"[cdkObserveContent]\", inputs: { disabled: [\"cdkObserveContentDisabled\", \"disabled\"], debounce: \"debounce\" }, outputs: { event: \"cdkObserveContent\" }, exportAs: [\"cdkObserveContent\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: CdkObserveContent, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkObserveContent]',\n                    exportAs: 'cdkObserveContent',\n                }]\n        }], ctorParameters: function () { return [{ type: ContentObserver }, { type: i0.ElementRef }, { type: i0.NgZone }]; }, propDecorators: { event: [{\n                type: Output,\n                args: ['cdkObserveContent']\n            }], disabled: [{\n                type: Input,\n                args: ['cdkObserveContentDisabled']\n            }], debounce: [{\n                type: Input\n            }] } });\nclass ObserversModule {\n}\nObserversModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: ObserversModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nObserversModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: ObserversModule, declarations: [CdkObserveContent], exports: [CdkObserveContent] });\nObserversModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: ObserversModule, providers: [MutationObserverFactory] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: ObserversModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [CdkObserveContent],\n                    declarations: [CdkObserveContent],\n                    providers: [MutationObserverFactory],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkObserveContent, ContentObserver, MutationObserverFactory, ObserversModule };\n","import * as i0 from '@angular/core';\nimport { NgModule, Injectable } from '@angular/core';\nimport { coerceArray } from '@angular/cdk/coercion';\nimport { Subject, combineLatest, concat, Observable } from 'rxjs';\nimport { take, skip, debounceTime, map, startWith, takeUntil } from 'rxjs/operators';\nimport * as i1 from '@angular/cdk/platform';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass LayoutModule {\n}\nLayoutModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: LayoutModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nLayoutModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: LayoutModule });\nLayoutModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: LayoutModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: LayoutModule, decorators: [{\n            type: NgModule,\n            args: [{}]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Global registry for all dynamically-created, injected media queries. */\nconst mediaQueriesForWebkitCompatibility = new Set();\n/** Style tag that holds all of the dynamically-created media queries. */\nlet mediaQueryStyleNode;\n/** A utility for calling matchMedia queries. */\nclass MediaMatcher {\n    constructor(_platform) {\n        this._platform = _platform;\n        this._matchMedia =\n            this._platform.isBrowser && window.matchMedia\n                ? // matchMedia is bound to the window scope intentionally as it is an illegal invocation to\n                    // call it from a different scope.\n                    window.matchMedia.bind(window)\n                : noopMatchMedia;\n    }\n    /**\n     * Evaluates the given media query and returns the native MediaQueryList from which results\n     * can be retrieved.\n     * Confirms the layout engine will trigger for the selector query provided and returns the\n     * MediaQueryList for the query provided.\n     */\n    matchMedia(query) {\n        if (this._platform.WEBKIT || this._platform.BLINK) {\n            createEmptyStyleRule(query);\n        }\n        return this._matchMedia(query);\n    }\n}\nMediaMatcher.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MediaMatcher, deps: [{ token: i1.Platform }], target: i0.ɵɵFactoryTarget.Injectable });\nMediaMatcher.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MediaMatcher, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MediaMatcher, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i1.Platform }]; } });\n/**\n * Creates an empty stylesheet that is used to work around browser inconsistencies related to\n * `matchMedia`. At the time of writing, it handles the following cases:\n * 1. On WebKit browsers, a media query has to have at least one rule in order for `matchMedia`\n * to fire. We work around it by declaring a dummy stylesheet with a `@media` declaration.\n * 2. In some cases Blink browsers will stop firing the `matchMedia` listener if none of the rules\n * inside the `@media` match existing elements on the page. We work around it by having one rule\n * targeting the `body`. See https://github.com/angular/components/issues/23546.\n */\nfunction createEmptyStyleRule(query) {\n    if (mediaQueriesForWebkitCompatibility.has(query)) {\n        return;\n    }\n    try {\n        if (!mediaQueryStyleNode) {\n            mediaQueryStyleNode = document.createElement('style');\n            mediaQueryStyleNode.setAttribute('type', 'text/css');\n            document.head.appendChild(mediaQueryStyleNode);\n        }\n        if (mediaQueryStyleNode.sheet) {\n            mediaQueryStyleNode.sheet.insertRule(`@media ${query} {body{ }}`, 0);\n            mediaQueriesForWebkitCompatibility.add(query);\n        }\n    }\n    catch (e) {\n        console.error(e);\n    }\n}\n/** No-op matchMedia replacement for non-browser platforms. */\nfunction noopMatchMedia(query) {\n    // Use `as any` here to avoid adding additional necessary properties for\n    // the noop matcher.\n    return {\n        matches: query === 'all' || query === '',\n        media: query,\n        addListener: () => { },\n        removeListener: () => { },\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Utility for checking the matching state of @media queries. */\nclass BreakpointObserver {\n    constructor(_mediaMatcher, _zone) {\n        this._mediaMatcher = _mediaMatcher;\n        this._zone = _zone;\n        /**  A map of all media queries currently being listened for. */\n        this._queries = new Map();\n        /** A subject for all other observables to takeUntil based on. */\n        this._destroySubject = new Subject();\n    }\n    /** Completes the active subject, signalling to all other observables to complete. */\n    ngOnDestroy() {\n        this._destroySubject.next();\n        this._destroySubject.complete();\n    }\n    /**\n     * Whether one or more media queries match the current viewport size.\n     * @param value One or more media queries to check.\n     * @returns Whether any of the media queries match.\n     */\n    isMatched(value) {\n        const queries = splitQueries(coerceArray(value));\n        return queries.some(mediaQuery => this._registerQuery(mediaQuery).mql.matches);\n    }\n    /**\n     * Gets an observable of results for the given queries that will emit new results for any changes\n     * in matching of the given queries.\n     * @param value One or more media queries to check.\n     * @returns A stream of matches for the given queries.\n     */\n    observe(value) {\n        const queries = splitQueries(coerceArray(value));\n        const observables = queries.map(query => this._registerQuery(query).observable);\n        let stateObservable = combineLatest(observables);\n        // Emit the first state immediately, and then debounce the subsequent emissions.\n        stateObservable = concat(stateObservable.pipe(take(1)), stateObservable.pipe(skip(1), debounceTime(0)));\n        return stateObservable.pipe(map(breakpointStates => {\n            const response = {\n                matches: false,\n                breakpoints: {},\n            };\n            breakpointStates.forEach(({ matches, query }) => {\n                response.matches = response.matches || matches;\n                response.breakpoints[query] = matches;\n            });\n            return response;\n        }));\n    }\n    /** Registers a specific query to be listened for. */\n    _registerQuery(query) {\n        // Only set up a new MediaQueryList if it is not already being listened for.\n        if (this._queries.has(query)) {\n            return this._queries.get(query);\n        }\n        const mql = this._mediaMatcher.matchMedia(query);\n        // Create callback for match changes and add it is as a listener.\n        const queryObservable = new Observable((observer) => {\n            // Listener callback methods are wrapped to be placed back in ngZone. Callbacks must be placed\n            // back into the zone because matchMedia is only included in Zone.js by loading the\n            // webapis-media-query.js file alongside the zone.js file.  Additionally, some browsers do not\n            // have MediaQueryList inherit from EventTarget, which causes inconsistencies in how Zone.js\n            // patches it.\n            const handler = (e) => this._zone.run(() => observer.next(e));\n            mql.addListener(handler);\n            return () => {\n                mql.removeListener(handler);\n            };\n        }).pipe(startWith(mql), map(({ matches }) => ({ query, matches })), takeUntil(this._destroySubject));\n        // Add the MediaQueryList to the set of queries.\n        const output = { observable: queryObservable, mql };\n        this._queries.set(query, output);\n        return output;\n    }\n}\nBreakpointObserver.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: BreakpointObserver, deps: [{ token: MediaMatcher }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Injectable });\nBreakpointObserver.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: BreakpointObserver, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: BreakpointObserver, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: MediaMatcher }, { type: i0.NgZone }]; } });\n/**\n * Split each query string into separate query strings if two queries are provided as comma\n * separated.\n */\nfunction splitQueries(queries) {\n    return queries\n        .map(query => query.split(','))\n        .reduce((a1, a2) => a1.concat(a2))\n        .map(query => query.trim());\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// PascalCase is being used as Breakpoints is used like an enum.\n// tslint:disable-next-line:variable-name\nconst Breakpoints = {\n    XSmall: '(max-width: 599.98px)',\n    Small: '(min-width: 600px) and (max-width: 959.98px)',\n    Medium: '(min-width: 960px) and (max-width: 1279.98px)',\n    Large: '(min-width: 1280px) and (max-width: 1919.98px)',\n    XLarge: '(min-width: 1920px)',\n    Handset: '(max-width: 599.98px) and (orientation: portrait), ' +\n        '(max-width: 959.98px) and (orientation: landscape)',\n    Tablet: '(min-width: 600px) and (max-width: 839.98px) and (orientation: portrait), ' +\n        '(min-width: 960px) and (max-width: 1279.98px) and (orientation: landscape)',\n    Web: '(min-width: 840px) and (orientation: portrait), ' +\n        '(min-width: 1280px) and (orientation: landscape)',\n    HandsetPortrait: '(max-width: 599.98px) and (orientation: portrait)',\n    TabletPortrait: '(min-width: 600px) and (max-width: 839.98px) and (orientation: portrait)',\n    WebPortrait: '(min-width: 840px) and (orientation: portrait)',\n    HandsetLandscape: '(max-width: 959.98px) and (orientation: landscape)',\n    TabletLandscape: '(min-width: 960px) and (max-width: 1279.98px) and (orientation: landscape)',\n    WebLandscape: '(min-width: 1280px) and (orientation: landscape)',\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BreakpointObserver, Breakpoints, LayoutModule, MediaMatcher };\n","import { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { inject, APP_ID, Injectable, Inject, QueryList, Directive, Input, InjectionToken, Optional, EventEmitter, Output, NgModule } from '@angular/core';\nimport * as i1 from '@angular/cdk/platform';\nimport { _getFocusedElementPierceShadowDom, normalizePassiveListenerOptions, _getEventTarget, _getShadowRoot } from '@angular/cdk/platform';\nimport { Subject, Subscription, BehaviorSubject, of } from 'rxjs';\nimport { hasModifierKey, A, Z, ZERO, NINE, PAGE_DOWN, PAGE_UP, END, HOME, LEFT_ARROW, RIGHT_ARROW, UP_ARROW, DOWN_ARROW, TAB, ALT, CONTROL, MAC_META, META, SHIFT } from '@angular/cdk/keycodes';\nimport { tap, debounceTime, filter, map, take, skip, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { coerceBooleanProperty, coerceElement } from '@angular/cdk/coercion';\nimport * as i1$1 from '@angular/cdk/observers';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { BreakpointObserver } from '@angular/cdk/layout';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** IDs are delimited by an empty space, as per the spec. */\nconst ID_DELIMITER = ' ';\n/**\n * Adds the given ID to the specified ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n */\nfunction addAriaReferencedId(el, attr, id) {\n    const ids = getAriaReferenceIds(el, attr);\n    if (ids.some(existingId => existingId.trim() == id.trim())) {\n        return;\n    }\n    ids.push(id.trim());\n    el.setAttribute(attr, ids.join(ID_DELIMITER));\n}\n/**\n * Removes the given ID from the specified ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n */\nfunction removeAriaReferencedId(el, attr, id) {\n    const ids = getAriaReferenceIds(el, attr);\n    const filteredIds = ids.filter(val => val != id.trim());\n    if (filteredIds.length) {\n        el.setAttribute(attr, filteredIds.join(ID_DELIMITER));\n    }\n    else {\n        el.removeAttribute(attr);\n    }\n}\n/**\n * Gets the list of IDs referenced by the given ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n */\nfunction getAriaReferenceIds(el, attr) {\n    // Get string array of all individual ids (whitespace delimited) in the attribute value\n    return (el.getAttribute(attr) || '').match(/\\S+/g) || [];\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * ID used for the body container where all messages are appended.\n * @deprecated No longer being used. To be removed.\n * @breaking-change 14.0.0\n */\nconst MESSAGES_CONTAINER_ID = 'cdk-describedby-message-container';\n/**\n * ID prefix used for each created message element.\n * @deprecated To be turned into a private variable.\n * @breaking-change 14.0.0\n */\nconst CDK_DESCRIBEDBY_ID_PREFIX = 'cdk-describedby-message';\n/**\n * Attribute given to each host element that is described by a message element.\n * @deprecated To be turned into a private variable.\n * @breaking-change 14.0.0\n */\nconst CDK_DESCRIBEDBY_HOST_ATTRIBUTE = 'cdk-describedby-host';\n/** Global incremental identifier for each registered message element. */\nlet nextId = 0;\n/**\n * Utility that creates visually hidden elements with a message content. Useful for elements that\n * want to use aria-describedby to further describe themselves without adding additional visual\n * content.\n */\nclass AriaDescriber {\n    constructor(_document, \n    /**\n     * @deprecated To be turned into a required parameter.\n     * @breaking-change 14.0.0\n     */\n    _platform) {\n        this._platform = _platform;\n        /** Map of all registered message elements that have been placed into the document. */\n        this._messageRegistry = new Map();\n        /** Container for all registered messages. */\n        this._messagesContainer = null;\n        /** Unique ID for the service. */\n        this._id = `${nextId++}`;\n        this._document = _document;\n        this._id = inject(APP_ID) + '-' + nextId++;\n    }\n    describe(hostElement, message, role) {\n        if (!this._canBeDescribed(hostElement, message)) {\n            return;\n        }\n        const key = getKey(message, role);\n        if (typeof message !== 'string') {\n            // We need to ensure that the element has an ID.\n            setMessageId(message, this._id);\n            this._messageRegistry.set(key, { messageElement: message, referenceCount: 0 });\n        }\n        else if (!this._messageRegistry.has(key)) {\n            this._createMessageElement(message, role);\n        }\n        if (!this._isElementDescribedByMessage(hostElement, key)) {\n            this._addMessageReference(hostElement, key);\n        }\n    }\n    removeDescription(hostElement, message, role) {\n        if (!message || !this._isElementNode(hostElement)) {\n            return;\n        }\n        const key = getKey(message, role);\n        if (this._isElementDescribedByMessage(hostElement, key)) {\n            this._removeMessageReference(hostElement, key);\n        }\n        // If the message is a string, it means that it's one that we created for the\n        // consumer so we can remove it safely, otherwise we should leave it in place.\n        if (typeof message === 'string') {\n            const registeredMessage = this._messageRegistry.get(key);\n            if (registeredMessage && registeredMessage.referenceCount === 0) {\n                this._deleteMessageElement(key);\n            }\n        }\n        if (this._messagesContainer?.childNodes.length === 0) {\n            this._messagesContainer.remove();\n            this._messagesContainer = null;\n        }\n    }\n    /** Unregisters all created message elements and removes the message container. */\n    ngOnDestroy() {\n        const describedElements = this._document.querySelectorAll(`[${CDK_DESCRIBEDBY_HOST_ATTRIBUTE}=\"${this._id}\"]`);\n        for (let i = 0; i < describedElements.length; i++) {\n            this._removeCdkDescribedByReferenceIds(describedElements[i]);\n            describedElements[i].removeAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE);\n        }\n        this._messagesContainer?.remove();\n        this._messagesContainer = null;\n        this._messageRegistry.clear();\n    }\n    /**\n     * Creates a new element in the visually hidden message container element with the message\n     * as its content and adds it to the message registry.\n     */\n    _createMessageElement(message, role) {\n        const messageElement = this._document.createElement('div');\n        setMessageId(messageElement, this._id);\n        messageElement.textContent = message;\n        if (role) {\n            messageElement.setAttribute('role', role);\n        }\n        this._createMessagesContainer();\n        this._messagesContainer.appendChild(messageElement);\n        this._messageRegistry.set(getKey(message, role), { messageElement, referenceCount: 0 });\n    }\n    /** Deletes the message element from the global messages container. */\n    _deleteMessageElement(key) {\n        this._messageRegistry.get(key)?.messageElement?.remove();\n        this._messageRegistry.delete(key);\n    }\n    /** Creates the global container for all aria-describedby messages. */\n    _createMessagesContainer() {\n        if (this._messagesContainer) {\n            return;\n        }\n        const containerClassName = 'cdk-describedby-message-container';\n        const serverContainers = this._document.querySelectorAll(`.${containerClassName}[platform=\"server\"]`);\n        for (let i = 0; i < serverContainers.length; i++) {\n            // When going from the server to the client, we may end up in a situation where there's\n            // already a container on the page, but we don't have a reference to it. Clear the\n            // old container so we don't get duplicates. Doing this, instead of emptying the previous\n            // container, should be slightly faster.\n            serverContainers[i].remove();\n        }\n        const messagesContainer = this._document.createElement('div');\n        // We add `visibility: hidden` in order to prevent text in this container from\n        // being searchable by the browser's Ctrl + F functionality.\n        // Screen-readers will still read the description for elements with aria-describedby even\n        // when the description element is not visible.\n        messagesContainer.style.visibility = 'hidden';\n        // Even though we use `visibility: hidden`, we still apply `cdk-visually-hidden` so that\n        // the description element doesn't impact page layout.\n        messagesContainer.classList.add(containerClassName);\n        messagesContainer.classList.add('cdk-visually-hidden');\n        // @breaking-change 14.0.0 Remove null check for `_platform`.\n        if (this._platform && !this._platform.isBrowser) {\n            messagesContainer.setAttribute('platform', 'server');\n        }\n        this._document.body.appendChild(messagesContainer);\n        this._messagesContainer = messagesContainer;\n    }\n    /** Removes all cdk-describedby messages that are hosted through the element. */\n    _removeCdkDescribedByReferenceIds(element) {\n        // Remove all aria-describedby reference IDs that are prefixed by CDK_DESCRIBEDBY_ID_PREFIX\n        const originalReferenceIds = getAriaReferenceIds(element, 'aria-describedby').filter(id => id.indexOf(CDK_DESCRIBEDBY_ID_PREFIX) != 0);\n        element.setAttribute('aria-describedby', originalReferenceIds.join(' '));\n    }\n    /**\n     * Adds a message reference to the element using aria-describedby and increments the registered\n     * message's reference count.\n     */\n    _addMessageReference(element, key) {\n        const registeredMessage = this._messageRegistry.get(key);\n        // Add the aria-describedby reference and set the\n        // describedby_host attribute to mark the element.\n        addAriaReferencedId(element, 'aria-describedby', registeredMessage.messageElement.id);\n        element.setAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE, this._id);\n        registeredMessage.referenceCount++;\n    }\n    /**\n     * Removes a message reference from the element using aria-describedby\n     * and decrements the registered message's reference count.\n     */\n    _removeMessageReference(element, key) {\n        const registeredMessage = this._messageRegistry.get(key);\n        registeredMessage.referenceCount--;\n        removeAriaReferencedId(element, 'aria-describedby', registeredMessage.messageElement.id);\n        element.removeAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE);\n    }\n    /** Returns true if the element has been described by the provided message ID. */\n    _isElementDescribedByMessage(element, key) {\n        const referenceIds = getAriaReferenceIds(element, 'aria-describedby');\n        const registeredMessage = this._messageRegistry.get(key);\n        const messageId = registeredMessage && registeredMessage.messageElement.id;\n        return !!messageId && referenceIds.indexOf(messageId) != -1;\n    }\n    /** Determines whether a message can be described on a particular element. */\n    _canBeDescribed(element, message) {\n        if (!this._isElementNode(element)) {\n            return false;\n        }\n        if (message && typeof message === 'object') {\n            // We'd have to make some assumptions about the description element's text, if the consumer\n            // passed in an element. Assume that if an element is passed in, the consumer has verified\n            // that it can be used as a description.\n            return true;\n        }\n        const trimmedMessage = message == null ? '' : `${message}`.trim();\n        const ariaLabel = element.getAttribute('aria-label');\n        // We shouldn't set descriptions if they're exactly the same as the `aria-label` of the\n        // element, because screen readers will end up reading out the same text twice in a row.\n        return trimmedMessage ? !ariaLabel || ariaLabel.trim() !== trimmedMessage : false;\n    }\n    /** Checks whether a node is an Element node. */\n    _isElementNode(element) {\n        return element.nodeType === this._document.ELEMENT_NODE;\n    }\n}\nAriaDescriber.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: AriaDescriber, deps: [{ token: DOCUMENT }, { token: i1.Platform }], target: i0.ɵɵFactoryTarget.Injectable });\nAriaDescriber.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: AriaDescriber, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: AriaDescriber, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i1.Platform }]; } });\n/** Gets a key that can be used to look messages up in the registry. */\nfunction getKey(message, role) {\n    return typeof message === 'string' ? `${role || ''}/${message}` : message;\n}\n/** Assigns a unique ID to an element, if it doesn't have one already. */\nfunction setMessageId(element, serviceId) {\n    if (!element.id) {\n        element.id = `${CDK_DESCRIBEDBY_ID_PREFIX}-${serviceId}-${nextId++}`;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This class manages keyboard events for selectable lists. If you pass it a query list\n * of items, it will set the active item correctly when arrow events occur.\n */\nclass ListKeyManager {\n    constructor(_items) {\n        this._items = _items;\n        this._activeItemIndex = -1;\n        this._activeItem = null;\n        this._wrap = false;\n        this._letterKeyStream = new Subject();\n        this._typeaheadSubscription = Subscription.EMPTY;\n        this._vertical = true;\n        this._allowedModifierKeys = [];\n        this._homeAndEnd = false;\n        this._pageUpAndDown = { enabled: false, delta: 10 };\n        /**\n         * Predicate function that can be used to check whether an item should be skipped\n         * by the key manager. By default, disabled items are skipped.\n         */\n        this._skipPredicateFn = (item) => item.disabled;\n        // Buffer for the letters that the user has pressed when the typeahead option is turned on.\n        this._pressedLetters = [];\n        /**\n         * Stream that emits any time the TAB key is pressed, so components can react\n         * when focus is shifted off of the list.\n         */\n        this.tabOut = new Subject();\n        /** Stream that emits whenever the active item of the list manager changes. */\n        this.change = new Subject();\n        // We allow for the items to be an array because, in some cases, the consumer may\n        // not have access to a QueryList of the items they want to manage (e.g. when the\n        // items aren't being collected via `ViewChildren` or `ContentChildren`).\n        if (_items instanceof QueryList) {\n            this._itemChangesSubscription = _items.changes.subscribe((newItems) => {\n                if (this._activeItem) {\n                    const itemArray = newItems.toArray();\n                    const newIndex = itemArray.indexOf(this._activeItem);\n                    if (newIndex > -1 && newIndex !== this._activeItemIndex) {\n                        this._activeItemIndex = newIndex;\n                    }\n                }\n            });\n        }\n    }\n    /**\n     * Sets the predicate function that determines which items should be skipped by the\n     * list key manager.\n     * @param predicate Function that determines whether the given item should be skipped.\n     */\n    skipPredicate(predicate) {\n        this._skipPredicateFn = predicate;\n        return this;\n    }\n    /**\n     * Configures wrapping mode, which determines whether the active item will wrap to\n     * the other end of list when there are no more items in the given direction.\n     * @param shouldWrap Whether the list should wrap when reaching the end.\n     */\n    withWrap(shouldWrap = true) {\n        this._wrap = shouldWrap;\n        return this;\n    }\n    /**\n     * Configures whether the key manager should be able to move the selection vertically.\n     * @param enabled Whether vertical selection should be enabled.\n     */\n    withVerticalOrientation(enabled = true) {\n        this._vertical = enabled;\n        return this;\n    }\n    /**\n     * Configures the key manager to move the selection horizontally.\n     * Passing in `null` will disable horizontal movement.\n     * @param direction Direction in which the selection can be moved.\n     */\n    withHorizontalOrientation(direction) {\n        this._horizontal = direction;\n        return this;\n    }\n    /**\n     * Modifier keys which are allowed to be held down and whose default actions will be prevented\n     * as the user is pressing the arrow keys. Defaults to not allowing any modifier keys.\n     */\n    withAllowedModifierKeys(keys) {\n        this._allowedModifierKeys = keys;\n        return this;\n    }\n    /**\n     * Turns on typeahead mode which allows users to set the active item by typing.\n     * @param debounceInterval Time to wait after the last keystroke before setting the active item.\n     */\n    withTypeAhead(debounceInterval = 200) {\n        if ((typeof ngDevMode === 'undefined' || ngDevMode) &&\n            this._items.length &&\n            this._items.some(item => typeof item.getLabel !== 'function')) {\n            throw Error('ListKeyManager items in typeahead mode must implement the `getLabel` method.');\n        }\n        this._typeaheadSubscription.unsubscribe();\n        // Debounce the presses of non-navigational keys, collect the ones that correspond to letters\n        // and convert those letters back into a string. Afterwards find the first item that starts\n        // with that string and select it.\n        this._typeaheadSubscription = this._letterKeyStream\n            .pipe(tap(letter => this._pressedLetters.push(letter)), debounceTime(debounceInterval), filter(() => this._pressedLetters.length > 0), map(() => this._pressedLetters.join('')))\n            .subscribe(inputString => {\n            const items = this._getItemsArray();\n            // Start at 1 because we want to start searching at the item immediately\n            // following the current active item.\n            for (let i = 1; i < items.length + 1; i++) {\n                const index = (this._activeItemIndex + i) % items.length;\n                const item = items[index];\n                if (!this._skipPredicateFn(item) &&\n                    item.getLabel().toUpperCase().trim().indexOf(inputString) === 0) {\n                    this.setActiveItem(index);\n                    break;\n                }\n            }\n            this._pressedLetters = [];\n        });\n        return this;\n    }\n    /** Cancels the current typeahead sequence. */\n    cancelTypeahead() {\n        this._pressedLetters = [];\n        return this;\n    }\n    /**\n     * Configures the key manager to activate the first and last items\n     * respectively when the Home or End key is pressed.\n     * @param enabled Whether pressing the Home or End key activates the first/last item.\n     */\n    withHomeAndEnd(enabled = true) {\n        this._homeAndEnd = enabled;\n        return this;\n    }\n    /**\n     * Configures the key manager to activate every 10th, configured or first/last element in up/down direction\n     * respectively when the Page-Up or Page-Down key is pressed.\n     * @param enabled Whether pressing the Page-Up or Page-Down key activates the first/last item.\n     * @param delta Whether pressing the Home or End key activates the first/last item.\n     */\n    withPageUpDown(enabled = true, delta = 10) {\n        this._pageUpAndDown = { enabled, delta };\n        return this;\n    }\n    setActiveItem(item) {\n        const previousActiveItem = this._activeItem;\n        this.updateActiveItem(item);\n        if (this._activeItem !== previousActiveItem) {\n            this.change.next(this._activeItemIndex);\n        }\n    }\n    /**\n     * Sets the active item depending on the key event passed in.\n     * @param event Keyboard event to be used for determining which element should be active.\n     */\n    onKeydown(event) {\n        const keyCode = event.keyCode;\n        const modifiers = ['altKey', 'ctrlKey', 'metaKey', 'shiftKey'];\n        const isModifierAllowed = modifiers.every(modifier => {\n            return !event[modifier] || this._allowedModifierKeys.indexOf(modifier) > -1;\n        });\n        switch (keyCode) {\n            case TAB:\n                this.tabOut.next();\n                return;\n            case DOWN_ARROW:\n                if (this._vertical && isModifierAllowed) {\n                    this.setNextItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case UP_ARROW:\n                if (this._vertical && isModifierAllowed) {\n                    this.setPreviousItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case RIGHT_ARROW:\n                if (this._horizontal && isModifierAllowed) {\n                    this._horizontal === 'rtl' ? this.setPreviousItemActive() : this.setNextItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case LEFT_ARROW:\n                if (this._horizontal && isModifierAllowed) {\n                    this._horizontal === 'rtl' ? this.setNextItemActive() : this.setPreviousItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case HOME:\n                if (this._homeAndEnd && isModifierAllowed) {\n                    this.setFirstItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case END:\n                if (this._homeAndEnd && isModifierAllowed) {\n                    this.setLastItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case PAGE_UP:\n                if (this._pageUpAndDown.enabled && isModifierAllowed) {\n                    const targetIndex = this._activeItemIndex - this._pageUpAndDown.delta;\n                    this._setActiveItemByIndex(targetIndex > 0 ? targetIndex : 0, 1);\n                    break;\n                }\n                else {\n                    return;\n                }\n            case PAGE_DOWN:\n                if (this._pageUpAndDown.enabled && isModifierAllowed) {\n                    const targetIndex = this._activeItemIndex + this._pageUpAndDown.delta;\n                    const itemsLength = this._getItemsArray().length;\n                    this._setActiveItemByIndex(targetIndex < itemsLength ? targetIndex : itemsLength - 1, -1);\n                    break;\n                }\n                else {\n                    return;\n                }\n            default:\n                if (isModifierAllowed || hasModifierKey(event, 'shiftKey')) {\n                    // Attempt to use the `event.key` which also maps it to the user's keyboard language,\n                    // otherwise fall back to resolving alphanumeric characters via the keyCode.\n                    if (event.key && event.key.length === 1) {\n                        this._letterKeyStream.next(event.key.toLocaleUpperCase());\n                    }\n                    else if ((keyCode >= A && keyCode <= Z) || (keyCode >= ZERO && keyCode <= NINE)) {\n                        this._letterKeyStream.next(String.fromCharCode(keyCode));\n                    }\n                }\n                // Note that we return here, in order to avoid preventing\n                // the default action of non-navigational keys.\n                return;\n        }\n        this._pressedLetters = [];\n        event.preventDefault();\n    }\n    /** Index of the currently active item. */\n    get activeItemIndex() {\n        return this._activeItemIndex;\n    }\n    /** The active item. */\n    get activeItem() {\n        return this._activeItem;\n    }\n    /** Gets whether the user is currently typing into the manager using the typeahead feature. */\n    isTyping() {\n        return this._pressedLetters.length > 0;\n    }\n    /** Sets the active item to the first enabled item in the list. */\n    setFirstItemActive() {\n        this._setActiveItemByIndex(0, 1);\n    }\n    /** Sets the active item to the last enabled item in the list. */\n    setLastItemActive() {\n        this._setActiveItemByIndex(this._items.length - 1, -1);\n    }\n    /** Sets the active item to the next enabled item in the list. */\n    setNextItemActive() {\n        this._activeItemIndex < 0 ? this.setFirstItemActive() : this._setActiveItemByDelta(1);\n    }\n    /** Sets the active item to a previous enabled item in the list. */\n    setPreviousItemActive() {\n        this._activeItemIndex < 0 && this._wrap\n            ? this.setLastItemActive()\n            : this._setActiveItemByDelta(-1);\n    }\n    updateActiveItem(item) {\n        const itemArray = this._getItemsArray();\n        const index = typeof item === 'number' ? item : itemArray.indexOf(item);\n        const activeItem = itemArray[index];\n        // Explicitly check for `null` and `undefined` because other falsy values are valid.\n        this._activeItem = activeItem == null ? null : activeItem;\n        this._activeItemIndex = index;\n    }\n    /** Cleans up the key manager. */\n    destroy() {\n        this._typeaheadSubscription.unsubscribe();\n        this._itemChangesSubscription?.unsubscribe();\n        this._letterKeyStream.complete();\n        this.tabOut.complete();\n        this.change.complete();\n        this._pressedLetters = [];\n    }\n    /**\n     * This method sets the active item, given a list of items and the delta between the\n     * currently active item and the new active item. It will calculate differently\n     * depending on whether wrap mode is turned on.\n     */\n    _setActiveItemByDelta(delta) {\n        this._wrap ? this._setActiveInWrapMode(delta) : this._setActiveInDefaultMode(delta);\n    }\n    /**\n     * Sets the active item properly given \"wrap\" mode. In other words, it will continue to move\n     * down the list until it finds an item that is not disabled, and it will wrap if it\n     * encounters either end of the list.\n     */\n    _setActiveInWrapMode(delta) {\n        const items = this._getItemsArray();\n        for (let i = 1; i <= items.length; i++) {\n            const index = (this._activeItemIndex + delta * i + items.length) % items.length;\n            const item = items[index];\n            if (!this._skipPredicateFn(item)) {\n                this.setActiveItem(index);\n                return;\n            }\n        }\n    }\n    /**\n     * Sets the active item properly given the default mode. In other words, it will\n     * continue to move down the list until it finds an item that is not disabled. If\n     * it encounters either end of the list, it will stop and not wrap.\n     */\n    _setActiveInDefaultMode(delta) {\n        this._setActiveItemByIndex(this._activeItemIndex + delta, delta);\n    }\n    /**\n     * Sets the active item to the first enabled item starting at the index specified. If the\n     * item is disabled, it will move in the fallbackDelta direction until it either\n     * finds an enabled item or encounters the end of the list.\n     */\n    _setActiveItemByIndex(index, fallbackDelta) {\n        const items = this._getItemsArray();\n        if (!items[index]) {\n            return;\n        }\n        while (this._skipPredicateFn(items[index])) {\n            index += fallbackDelta;\n            if (!items[index]) {\n                return;\n            }\n        }\n        this.setActiveItem(index);\n    }\n    /** Returns the items as an array. */\n    _getItemsArray() {\n        return this._items instanceof QueryList ? this._items.toArray() : this._items;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass ActiveDescendantKeyManager extends ListKeyManager {\n    setActiveItem(index) {\n        if (this.activeItem) {\n            this.activeItem.setInactiveStyles();\n        }\n        super.setActiveItem(index);\n        if (this.activeItem) {\n            this.activeItem.setActiveStyles();\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass FocusKeyManager extends ListKeyManager {\n    constructor() {\n        super(...arguments);\n        this._origin = 'program';\n    }\n    /**\n     * Sets the focus origin that will be passed in to the items for any subsequent `focus` calls.\n     * @param origin Focus origin to be used when focusing items.\n     */\n    setFocusOrigin(origin) {\n        this._origin = origin;\n        return this;\n    }\n    setActiveItem(item) {\n        super.setActiveItem(item);\n        if (this.activeItem) {\n            this.activeItem.focus(this._origin);\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Configuration for the isFocusable method.\n */\nclass IsFocusableConfig {\n    constructor() {\n        /**\n         * Whether to count an element as focusable even if it is not currently visible.\n         */\n        this.ignoreVisibility = false;\n    }\n}\n// The InteractivityChecker leans heavily on the ally.js accessibility utilities.\n// Methods like `isTabbable` are only covering specific edge-cases for the browsers which are\n// supported.\n/**\n * Utility for checking the interactivity of an element, such as whether is is focusable or\n * tabbable.\n */\nclass InteractivityChecker {\n    constructor(_platform) {\n        this._platform = _platform;\n    }\n    /**\n     * Gets whether an element is disabled.\n     *\n     * @param element Element to be checked.\n     * @returns Whether the element is disabled.\n     */\n    isDisabled(element) {\n        // This does not capture some cases, such as a non-form control with a disabled attribute or\n        // a form control inside of a disabled form, but should capture the most common cases.\n        return element.hasAttribute('disabled');\n    }\n    /**\n     * Gets whether an element is visible for the purposes of interactivity.\n     *\n     * This will capture states like `display: none` and `visibility: hidden`, but not things like\n     * being clipped by an `overflow: hidden` parent or being outside the viewport.\n     *\n     * @returns Whether the element is visible.\n     */\n    isVisible(element) {\n        return hasGeometry(element) && getComputedStyle(element).visibility === 'visible';\n    }\n    /**\n     * Gets whether an element can be reached via Tab key.\n     * Assumes that the element has already been checked with isFocusable.\n     *\n     * @param element Element to be checked.\n     * @returns Whether the element is tabbable.\n     */\n    isTabbable(element) {\n        // Nothing is tabbable on the server 😎\n        if (!this._platform.isBrowser) {\n            return false;\n        }\n        const frameElement = getFrameElement(getWindow(element));\n        if (frameElement) {\n            // Frame elements inherit their tabindex onto all child elements.\n            if (getTabIndexValue(frameElement) === -1) {\n                return false;\n            }\n            // Browsers disable tabbing to an element inside of an invisible frame.\n            if (!this.isVisible(frameElement)) {\n                return false;\n            }\n        }\n        let nodeName = element.nodeName.toLowerCase();\n        let tabIndexValue = getTabIndexValue(element);\n        if (element.hasAttribute('contenteditable')) {\n            return tabIndexValue !== -1;\n        }\n        if (nodeName === 'iframe' || nodeName === 'object') {\n            // The frame or object's content may be tabbable depending on the content, but it's\n            // not possibly to reliably detect the content of the frames. We always consider such\n            // elements as non-tabbable.\n            return false;\n        }\n        // In iOS, the browser only considers some specific elements as tabbable.\n        if (this._platform.WEBKIT && this._platform.IOS && !isPotentiallyTabbableIOS(element)) {\n            return false;\n        }\n        if (nodeName === 'audio') {\n            // Audio elements without controls enabled are never tabbable, regardless\n            // of the tabindex attribute explicitly being set.\n            if (!element.hasAttribute('controls')) {\n                return false;\n            }\n            // Audio elements with controls are by default tabbable unless the\n            // tabindex attribute is set to `-1` explicitly.\n            return tabIndexValue !== -1;\n        }\n        if (nodeName === 'video') {\n            // For all video elements, if the tabindex attribute is set to `-1`, the video\n            // is not tabbable. Note: We cannot rely on the default `HTMLElement.tabIndex`\n            // property as that one is set to `-1` in Chrome, Edge and Safari v13.1. The\n            // tabindex attribute is the source of truth here.\n            if (tabIndexValue === -1) {\n                return false;\n            }\n            // If the tabindex is explicitly set, and not `-1` (as per check before), the\n            // video element is always tabbable (regardless of whether it has controls or not).\n            if (tabIndexValue !== null) {\n                return true;\n            }\n            // Otherwise (when no explicit tabindex is set), a video is only tabbable if it\n            // has controls enabled. Firefox is special as videos are always tabbable regardless\n            // of whether there are controls or not.\n            return this._platform.FIREFOX || element.hasAttribute('controls');\n        }\n        return element.tabIndex >= 0;\n    }\n    /**\n     * Gets whether an element can be focused by the user.\n     *\n     * @param element Element to be checked.\n     * @param config The config object with options to customize this method's behavior\n     * @returns Whether the element is focusable.\n     */\n    isFocusable(element, config) {\n        // Perform checks in order of left to most expensive.\n        // Again, naive approach that does not capture many edge cases and browser quirks.\n        return (isPotentiallyFocusable(element) &&\n            !this.isDisabled(element) &&\n            (config?.ignoreVisibility || this.isVisible(element)));\n    }\n}\nInteractivityChecker.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: InteractivityChecker, deps: [{ token: i1.Platform }], target: i0.ɵɵFactoryTarget.Injectable });\nInteractivityChecker.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: InteractivityChecker, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: InteractivityChecker, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i1.Platform }]; } });\n/**\n * Returns the frame element from a window object. Since browsers like MS Edge throw errors if\n * the frameElement property is being accessed from a different host address, this property\n * should be accessed carefully.\n */\nfunction getFrameElement(window) {\n    try {\n        return window.frameElement;\n    }\n    catch {\n        return null;\n    }\n}\n/** Checks whether the specified element has any geometry / rectangles. */\nfunction hasGeometry(element) {\n    // Use logic from jQuery to check for an invisible element.\n    // See https://github.com/jquery/jquery/blob/master/src/css/hiddenVisibleSelectors.js#L12\n    return !!(element.offsetWidth ||\n        element.offsetHeight ||\n        (typeof element.getClientRects === 'function' && element.getClientRects().length));\n}\n/** Gets whether an element's  */\nfunction isNativeFormElement(element) {\n    let nodeName = element.nodeName.toLowerCase();\n    return (nodeName === 'input' ||\n        nodeName === 'select' ||\n        nodeName === 'button' ||\n        nodeName === 'textarea');\n}\n/** Gets whether an element is an `<input type=\"hidden\">`. */\nfunction isHiddenInput(element) {\n    return isInputElement(element) && element.type == 'hidden';\n}\n/** Gets whether an element is an anchor that has an href attribute. */\nfunction isAnchorWithHref(element) {\n    return isAnchorElement(element) && element.hasAttribute('href');\n}\n/** Gets whether an element is an input element. */\nfunction isInputElement(element) {\n    return element.nodeName.toLowerCase() == 'input';\n}\n/** Gets whether an element is an anchor element. */\nfunction isAnchorElement(element) {\n    return element.nodeName.toLowerCase() == 'a';\n}\n/** Gets whether an element has a valid tabindex. */\nfunction hasValidTabIndex(element) {\n    if (!element.hasAttribute('tabindex') || element.tabIndex === undefined) {\n        return false;\n    }\n    let tabIndex = element.getAttribute('tabindex');\n    return !!(tabIndex && !isNaN(parseInt(tabIndex, 10)));\n}\n/**\n * Returns the parsed tabindex from the element attributes instead of returning the\n * evaluated tabindex from the browsers defaults.\n */\nfunction getTabIndexValue(element) {\n    if (!hasValidTabIndex(element)) {\n        return null;\n    }\n    // See browser issue in Gecko https://bugzilla.mozilla.org/show_bug.cgi?id=1128054\n    const tabIndex = parseInt(element.getAttribute('tabindex') || '', 10);\n    return isNaN(tabIndex) ? -1 : tabIndex;\n}\n/** Checks whether the specified element is potentially tabbable on iOS */\nfunction isPotentiallyTabbableIOS(element) {\n    let nodeName = element.nodeName.toLowerCase();\n    let inputType = nodeName === 'input' && element.type;\n    return (inputType === 'text' ||\n        inputType === 'password' ||\n        nodeName === 'select' ||\n        nodeName === 'textarea');\n}\n/**\n * Gets whether an element is potentially focusable without taking current visible/disabled state\n * into account.\n */\nfunction isPotentiallyFocusable(element) {\n    // Inputs are potentially focusable *unless* they're type=\"hidden\".\n    if (isHiddenInput(element)) {\n        return false;\n    }\n    return (isNativeFormElement(element) ||\n        isAnchorWithHref(element) ||\n        element.hasAttribute('contenteditable') ||\n        hasValidTabIndex(element));\n}\n/** Gets the parent window of a DOM node with regards of being inside of an iframe. */\nfunction getWindow(node) {\n    // ownerDocument is null if `node` itself *is* a document.\n    return (node.ownerDocument && node.ownerDocument.defaultView) || window;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Class that allows for trapping focus within a DOM element.\n *\n * This class currently uses a relatively simple approach to focus trapping.\n * It assumes that the tab order is the same as DOM order, which is not necessarily true.\n * Things like `tabIndex > 0`, flex `order`, and shadow roots can cause the two to be misaligned.\n *\n * @deprecated Use `ConfigurableFocusTrap` instead.\n * @breaking-change 11.0.0\n */\nclass FocusTrap {\n    /** Whether the focus trap is active. */\n    get enabled() {\n        return this._enabled;\n    }\n    set enabled(value) {\n        this._enabled = value;\n        if (this._startAnchor && this._endAnchor) {\n            this._toggleAnchorTabIndex(value, this._startAnchor);\n            this._toggleAnchorTabIndex(value, this._endAnchor);\n        }\n    }\n    constructor(_element, _checker, _ngZone, _document, deferAnchors = false) {\n        this._element = _element;\n        this._checker = _checker;\n        this._ngZone = _ngZone;\n        this._document = _document;\n        this._hasAttached = false;\n        // Event listeners for the anchors. Need to be regular functions so that we can unbind them later.\n        this.startAnchorListener = () => this.focusLastTabbableElement();\n        this.endAnchorListener = () => this.focusFirstTabbableElement();\n        this._enabled = true;\n        if (!deferAnchors) {\n            this.attachAnchors();\n        }\n    }\n    /** Destroys the focus trap by cleaning up the anchors. */\n    destroy() {\n        const startAnchor = this._startAnchor;\n        const endAnchor = this._endAnchor;\n        if (startAnchor) {\n            startAnchor.removeEventListener('focus', this.startAnchorListener);\n            startAnchor.remove();\n        }\n        if (endAnchor) {\n            endAnchor.removeEventListener('focus', this.endAnchorListener);\n            endAnchor.remove();\n        }\n        this._startAnchor = this._endAnchor = null;\n        this._hasAttached = false;\n    }\n    /**\n     * Inserts the anchors into the DOM. This is usually done automatically\n     * in the constructor, but can be deferred for cases like directives with `*ngIf`.\n     * @returns Whether the focus trap managed to attach successfully. This may not be the case\n     * if the target element isn't currently in the DOM.\n     */\n    attachAnchors() {\n        // If we're not on the browser, there can be no focus to trap.\n        if (this._hasAttached) {\n            return true;\n        }\n        this._ngZone.runOutsideAngular(() => {\n            if (!this._startAnchor) {\n                this._startAnchor = this._createAnchor();\n                this._startAnchor.addEventListener('focus', this.startAnchorListener);\n            }\n            if (!this._endAnchor) {\n                this._endAnchor = this._createAnchor();\n                this._endAnchor.addEventListener('focus', this.endAnchorListener);\n            }\n        });\n        if (this._element.parentNode) {\n            this._element.parentNode.insertBefore(this._startAnchor, this._element);\n            this._element.parentNode.insertBefore(this._endAnchor, this._element.nextSibling);\n            this._hasAttached = true;\n        }\n        return this._hasAttached;\n    }\n    /**\n     * Waits for the zone to stabilize, then focuses the first tabbable element.\n     * @returns Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfully.\n     */\n    focusInitialElementWhenReady(options) {\n        return new Promise(resolve => {\n            this._executeOnStable(() => resolve(this.focusInitialElement(options)));\n        });\n    }\n    /**\n     * Waits for the zone to stabilize, then focuses\n     * the first tabbable element within the focus trap region.\n     * @returns Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfully.\n     */\n    focusFirstTabbableElementWhenReady(options) {\n        return new Promise(resolve => {\n            this._executeOnStable(() => resolve(this.focusFirstTabbableElement(options)));\n        });\n    }\n    /**\n     * Waits for the zone to stabilize, then focuses\n     * the last tabbable element within the focus trap region.\n     * @returns Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfully.\n     */\n    focusLastTabbableElementWhenReady(options) {\n        return new Promise(resolve => {\n            this._executeOnStable(() => resolve(this.focusLastTabbableElement(options)));\n        });\n    }\n    /**\n     * Get the specified boundary element of the trapped region.\n     * @param bound The boundary to get (start or end of trapped region).\n     * @returns The boundary element.\n     */\n    _getRegionBoundary(bound) {\n        // Contains the deprecated version of selector, for temporary backwards comparability.\n        const markers = this._element.querySelectorAll(`[cdk-focus-region-${bound}], ` + `[cdkFocusRegion${bound}], ` + `[cdk-focus-${bound}]`);\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            for (let i = 0; i < markers.length; i++) {\n                // @breaking-change 8.0.0\n                if (markers[i].hasAttribute(`cdk-focus-${bound}`)) {\n                    console.warn(`Found use of deprecated attribute 'cdk-focus-${bound}', ` +\n                        `use 'cdkFocusRegion${bound}' instead. The deprecated ` +\n                        `attribute will be removed in 8.0.0.`, markers[i]);\n                }\n                else if (markers[i].hasAttribute(`cdk-focus-region-${bound}`)) {\n                    console.warn(`Found use of deprecated attribute 'cdk-focus-region-${bound}', ` +\n                        `use 'cdkFocusRegion${bound}' instead. The deprecated attribute ` +\n                        `will be removed in 8.0.0.`, markers[i]);\n                }\n            }\n        }\n        if (bound == 'start') {\n            return markers.length ? markers[0] : this._getFirstTabbableElement(this._element);\n        }\n        return markers.length\n            ? markers[markers.length - 1]\n            : this._getLastTabbableElement(this._element);\n    }\n    /**\n     * Focuses the element that should be focused when the focus trap is initialized.\n     * @returns Whether focus was moved successfully.\n     */\n    focusInitialElement(options) {\n        // Contains the deprecated version of selector, for temporary backwards comparability.\n        const redirectToElement = this._element.querySelector(`[cdk-focus-initial], ` + `[cdkFocusInitial]`);\n        if (redirectToElement) {\n            // @breaking-change 8.0.0\n            if ((typeof ngDevMode === 'undefined' || ngDevMode) &&\n                redirectToElement.hasAttribute(`cdk-focus-initial`)) {\n                console.warn(`Found use of deprecated attribute 'cdk-focus-initial', ` +\n                    `use 'cdkFocusInitial' instead. The deprecated attribute ` +\n                    `will be removed in 8.0.0`, redirectToElement);\n            }\n            // Warn the consumer if the element they've pointed to\n            // isn't focusable, when not in production mode.\n            if ((typeof ngDevMode === 'undefined' || ngDevMode) &&\n                !this._checker.isFocusable(redirectToElement)) {\n                console.warn(`Element matching '[cdkFocusInitial]' is not focusable.`, redirectToElement);\n            }\n            if (!this._checker.isFocusable(redirectToElement)) {\n                const focusableChild = this._getFirstTabbableElement(redirectToElement);\n                focusableChild?.focus(options);\n                return !!focusableChild;\n            }\n            redirectToElement.focus(options);\n            return true;\n        }\n        return this.focusFirstTabbableElement(options);\n    }\n    /**\n     * Focuses the first tabbable element within the focus trap region.\n     * @returns Whether focus was moved successfully.\n     */\n    focusFirstTabbableElement(options) {\n        const redirectToElement = this._getRegionBoundary('start');\n        if (redirectToElement) {\n            redirectToElement.focus(options);\n        }\n        return !!redirectToElement;\n    }\n    /**\n     * Focuses the last tabbable element within the focus trap region.\n     * @returns Whether focus was moved successfully.\n     */\n    focusLastTabbableElement(options) {\n        const redirectToElement = this._getRegionBoundary('end');\n        if (redirectToElement) {\n            redirectToElement.focus(options);\n        }\n        return !!redirectToElement;\n    }\n    /**\n     * Checks whether the focus trap has successfully been attached.\n     */\n    hasAttached() {\n        return this._hasAttached;\n    }\n    /** Get the first tabbable element from a DOM subtree (inclusive). */\n    _getFirstTabbableElement(root) {\n        if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n            return root;\n        }\n        const children = root.children;\n        for (let i = 0; i < children.length; i++) {\n            const tabbableChild = children[i].nodeType === this._document.ELEMENT_NODE\n                ? this._getFirstTabbableElement(children[i])\n                : null;\n            if (tabbableChild) {\n                return tabbableChild;\n            }\n        }\n        return null;\n    }\n    /** Get the last tabbable element from a DOM subtree (inclusive). */\n    _getLastTabbableElement(root) {\n        if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n            return root;\n        }\n        // Iterate in reverse DOM order.\n        const children = root.children;\n        for (let i = children.length - 1; i >= 0; i--) {\n            const tabbableChild = children[i].nodeType === this._document.ELEMENT_NODE\n                ? this._getLastTabbableElement(children[i])\n                : null;\n            if (tabbableChild) {\n                return tabbableChild;\n            }\n        }\n        return null;\n    }\n    /** Creates an anchor element. */\n    _createAnchor() {\n        const anchor = this._document.createElement('div');\n        this._toggleAnchorTabIndex(this._enabled, anchor);\n        anchor.classList.add('cdk-visually-hidden');\n        anchor.classList.add('cdk-focus-trap-anchor');\n        anchor.setAttribute('aria-hidden', 'true');\n        return anchor;\n    }\n    /**\n     * Toggles the `tabindex` of an anchor, based on the enabled state of the focus trap.\n     * @param isEnabled Whether the focus trap is enabled.\n     * @param anchor Anchor on which to toggle the tabindex.\n     */\n    _toggleAnchorTabIndex(isEnabled, anchor) {\n        // Remove the tabindex completely, rather than setting it to -1, because if the\n        // element has a tabindex, the user might still hit it when navigating with the arrow keys.\n        isEnabled ? anchor.setAttribute('tabindex', '0') : anchor.removeAttribute('tabindex');\n    }\n    /**\n     * Toggles the`tabindex` of both anchors to either trap Tab focus or allow it to escape.\n     * @param enabled: Whether the anchors should trap Tab.\n     */\n    toggleAnchors(enabled) {\n        if (this._startAnchor && this._endAnchor) {\n            this._toggleAnchorTabIndex(enabled, this._startAnchor);\n            this._toggleAnchorTabIndex(enabled, this._endAnchor);\n        }\n    }\n    /** Executes a function when the zone is stable. */\n    _executeOnStable(fn) {\n        if (this._ngZone.isStable) {\n            fn();\n        }\n        else {\n            this._ngZone.onStable.pipe(take(1)).subscribe(fn);\n        }\n    }\n}\n/**\n * Factory that allows easy instantiation of focus traps.\n * @deprecated Use `ConfigurableFocusTrapFactory` instead.\n * @breaking-change 11.0.0\n */\nclass FocusTrapFactory {\n    constructor(_checker, _ngZone, _document) {\n        this._checker = _checker;\n        this._ngZone = _ngZone;\n        this._document = _document;\n    }\n    /**\n     * Creates a focus-trapped region around the given element.\n     * @param element The element around which focus will be trapped.\n     * @param deferCaptureElements Defers the creation of focus-capturing elements to be done\n     *     manually by the user.\n     * @returns The created focus trap instance.\n     */\n    create(element, deferCaptureElements = false) {\n        return new FocusTrap(element, this._checker, this._ngZone, this._document, deferCaptureElements);\n    }\n}\nFocusTrapFactory.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: FocusTrapFactory, deps: [{ token: InteractivityChecker }, { token: i0.NgZone }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\nFocusTrapFactory.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: FocusTrapFactory, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: FocusTrapFactory, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: InteractivityChecker }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\n/** Directive for trapping focus within a region. */\nclass CdkTrapFocus {\n    /** Whether the focus trap is active. */\n    get enabled() {\n        return this.focusTrap.enabled;\n    }\n    set enabled(value) {\n        this.focusTrap.enabled = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the directive should automatically move focus into the trapped region upon\n     * initialization and return focus to the previous activeElement upon destruction.\n     */\n    get autoCapture() {\n        return this._autoCapture;\n    }\n    set autoCapture(value) {\n        this._autoCapture = coerceBooleanProperty(value);\n    }\n    constructor(_elementRef, _focusTrapFactory, \n    /**\n     * @deprecated No longer being used. To be removed.\n     * @breaking-change 13.0.0\n     */\n    _document) {\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        /** Previously focused element to restore focus to upon destroy when using autoCapture. */\n        this._previouslyFocusedElement = null;\n        this.focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement, true);\n    }\n    ngOnDestroy() {\n        this.focusTrap.destroy();\n        // If we stored a previously focused element when using autoCapture, return focus to that\n        // element now that the trapped region is being destroyed.\n        if (this._previouslyFocusedElement) {\n            this._previouslyFocusedElement.focus();\n            this._previouslyFocusedElement = null;\n        }\n    }\n    ngAfterContentInit() {\n        this.focusTrap.attachAnchors();\n        if (this.autoCapture) {\n            this._captureFocus();\n        }\n    }\n    ngDoCheck() {\n        if (!this.focusTrap.hasAttached()) {\n            this.focusTrap.attachAnchors();\n        }\n    }\n    ngOnChanges(changes) {\n        const autoCaptureChange = changes['autoCapture'];\n        if (autoCaptureChange &&\n            !autoCaptureChange.firstChange &&\n            this.autoCapture &&\n            this.focusTrap.hasAttached()) {\n            this._captureFocus();\n        }\n    }\n    _captureFocus() {\n        this._previouslyFocusedElement = _getFocusedElementPierceShadowDom();\n        this.focusTrap.focusInitialElementWhenReady();\n    }\n}\nCdkTrapFocus.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: CdkTrapFocus, deps: [{ token: i0.ElementRef }, { token: FocusTrapFactory }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Directive });\nCdkTrapFocus.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", type: CdkTrapFocus, selector: \"[cdkTrapFocus]\", inputs: { enabled: [\"cdkTrapFocus\", \"enabled\"], autoCapture: [\"cdkTrapFocusAutoCapture\", \"autoCapture\"] }, exportAs: [\"cdkTrapFocus\"], usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: CdkTrapFocus, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkTrapFocus]',\n                    exportAs: 'cdkTrapFocus',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: FocusTrapFactory }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; }, propDecorators: { enabled: [{\n                type: Input,\n                args: ['cdkTrapFocus']\n            }], autoCapture: [{\n                type: Input,\n                args: ['cdkTrapFocusAutoCapture']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Class that allows for trapping focus within a DOM element.\n *\n * This class uses a strategy pattern that determines how it traps focus.\n * See FocusTrapInertStrategy.\n */\nclass ConfigurableFocusTrap extends FocusTrap {\n    /** Whether the FocusTrap is enabled. */\n    get enabled() {\n        return this._enabled;\n    }\n    set enabled(value) {\n        this._enabled = value;\n        if (this._enabled) {\n            this._focusTrapManager.register(this);\n        }\n        else {\n            this._focusTrapManager.deregister(this);\n        }\n    }\n    constructor(_element, _checker, _ngZone, _document, _focusTrapManager, _inertStrategy, config) {\n        super(_element, _checker, _ngZone, _document, config.defer);\n        this._focusTrapManager = _focusTrapManager;\n        this._inertStrategy = _inertStrategy;\n        this._focusTrapManager.register(this);\n    }\n    /** Notifies the FocusTrapManager that this FocusTrap will be destroyed. */\n    destroy() {\n        this._focusTrapManager.deregister(this);\n        super.destroy();\n    }\n    /** @docs-private Implemented as part of ManagedFocusTrap. */\n    _enable() {\n        this._inertStrategy.preventFocus(this);\n        this.toggleAnchors(true);\n    }\n    /** @docs-private Implemented as part of ManagedFocusTrap. */\n    _disable() {\n        this._inertStrategy.allowFocus(this);\n        this.toggleAnchors(false);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** The injection token used to specify the inert strategy. */\nconst FOCUS_TRAP_INERT_STRATEGY = new InjectionToken('FOCUS_TRAP_INERT_STRATEGY');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Lightweight FocusTrapInertStrategy that adds a document focus event\n * listener to redirect focus back inside the FocusTrap.\n */\nclass EventListenerFocusTrapInertStrategy {\n    constructor() {\n        /** Focus event handler. */\n        this._listener = null;\n    }\n    /** Adds a document event listener that keeps focus inside the FocusTrap. */\n    preventFocus(focusTrap) {\n        // Ensure there's only one listener per document\n        if (this._listener) {\n            focusTrap._document.removeEventListener('focus', this._listener, true);\n        }\n        this._listener = (e) => this._trapFocus(focusTrap, e);\n        focusTrap._ngZone.runOutsideAngular(() => {\n            focusTrap._document.addEventListener('focus', this._listener, true);\n        });\n    }\n    /** Removes the event listener added in preventFocus. */\n    allowFocus(focusTrap) {\n        if (!this._listener) {\n            return;\n        }\n        focusTrap._document.removeEventListener('focus', this._listener, true);\n        this._listener = null;\n    }\n    /**\n     * Refocuses the first element in the FocusTrap if the focus event target was outside\n     * the FocusTrap.\n     *\n     * This is an event listener callback. The event listener is added in runOutsideAngular,\n     * so all this code runs outside Angular as well.\n     */\n    _trapFocus(focusTrap, event) {\n        const target = event.target;\n        const focusTrapRoot = focusTrap._element;\n        // Don't refocus if target was in an overlay, because the overlay might be associated\n        // with an element inside the FocusTrap, ex. mat-select.\n        if (target && !focusTrapRoot.contains(target) && !target.closest?.('div.cdk-overlay-pane')) {\n            // Some legacy FocusTrap usages have logic that focuses some element on the page\n            // just before FocusTrap is destroyed. For backwards compatibility, wait\n            // to be sure FocusTrap is still enabled before refocusing.\n            setTimeout(() => {\n                // Check whether focus wasn't put back into the focus trap while the timeout was pending.\n                if (focusTrap.enabled && !focusTrapRoot.contains(focusTrap._document.activeElement)) {\n                    focusTrap.focusFirstTabbableElement();\n                }\n            });\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injectable that ensures only the most recently enabled FocusTrap is active. */\nclass FocusTrapManager {\n    constructor() {\n        // A stack of the FocusTraps on the page. Only the FocusTrap at the\n        // top of the stack is active.\n        this._focusTrapStack = [];\n    }\n    /**\n     * Disables the FocusTrap at the top of the stack, and then pushes\n     * the new FocusTrap onto the stack.\n     */\n    register(focusTrap) {\n        // Dedupe focusTraps that register multiple times.\n        this._focusTrapStack = this._focusTrapStack.filter(ft => ft !== focusTrap);\n        let stack = this._focusTrapStack;\n        if (stack.length) {\n            stack[stack.length - 1]._disable();\n        }\n        stack.push(focusTrap);\n        focusTrap._enable();\n    }\n    /**\n     * Removes the FocusTrap from the stack, and activates the\n     * FocusTrap that is the new top of the stack.\n     */\n    deregister(focusTrap) {\n        focusTrap._disable();\n        const stack = this._focusTrapStack;\n        const i = stack.indexOf(focusTrap);\n        if (i !== -1) {\n            stack.splice(i, 1);\n            if (stack.length) {\n                stack[stack.length - 1]._enable();\n            }\n        }\n    }\n}\nFocusTrapManager.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: FocusTrapManager, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nFocusTrapManager.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: FocusTrapManager, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: FocusTrapManager, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Factory that allows easy instantiation of configurable focus traps. */\nclass ConfigurableFocusTrapFactory {\n    constructor(_checker, _ngZone, _focusTrapManager, _document, _inertStrategy) {\n        this._checker = _checker;\n        this._ngZone = _ngZone;\n        this._focusTrapManager = _focusTrapManager;\n        this._document = _document;\n        // TODO split up the strategies into different modules, similar to DateAdapter.\n        this._inertStrategy = _inertStrategy || new EventListenerFocusTrapInertStrategy();\n    }\n    create(element, config = { defer: false }) {\n        let configObject;\n        if (typeof config === 'boolean') {\n            configObject = { defer: config };\n        }\n        else {\n            configObject = config;\n        }\n        return new ConfigurableFocusTrap(element, this._checker, this._ngZone, this._document, this._focusTrapManager, this._inertStrategy, configObject);\n    }\n}\nConfigurableFocusTrapFactory.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: ConfigurableFocusTrapFactory, deps: [{ token: InteractivityChecker }, { token: i0.NgZone }, { token: FocusTrapManager }, { token: DOCUMENT }, { token: FOCUS_TRAP_INERT_STRATEGY, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nConfigurableFocusTrapFactory.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: ConfigurableFocusTrapFactory, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: ConfigurableFocusTrapFactory, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: InteractivityChecker }, { type: i0.NgZone }, { type: FocusTrapManager }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [FOCUS_TRAP_INERT_STRATEGY]\n                }] }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Gets whether an event could be a faked `mousedown` event dispatched by a screen reader. */\nfunction isFakeMousedownFromScreenReader(event) {\n    // Some screen readers will dispatch a fake `mousedown` event when pressing enter or space on\n    // a clickable element. We can distinguish these events when both `offsetX` and `offsetY` are\n    // zero or `event.buttons` is zero, depending on the browser:\n    // - `event.buttons` works on Firefox, but fails on Chrome.\n    // - `offsetX` and `offsetY` work on Chrome, but fail on Firefox.\n    // Note that there's an edge case where the user could click the 0x0 spot of the\n    // screen themselves, but that is unlikely to contain interactive elements.\n    return event.buttons === 0 || (event.offsetX === 0 && event.offsetY === 0);\n}\n/** Gets whether an event could be a faked `touchstart` event dispatched by a screen reader. */\nfunction isFakeTouchstartFromScreenReader(event) {\n    const touch = (event.touches && event.touches[0]) || (event.changedTouches && event.changedTouches[0]);\n    // A fake `touchstart` can be distinguished from a real one by looking at the `identifier`\n    // which is typically >= 0 on a real device versus -1 from a screen reader. Just to be safe,\n    // we can also look at `radiusX` and `radiusY`. This behavior was observed against a Windows 10\n    // device with a touch screen running NVDA v2020.4 and Firefox 85 or Chrome 88.\n    return (!!touch &&\n        touch.identifier === -1 &&\n        (touch.radiusX == null || touch.radiusX === 1) &&\n        (touch.radiusY == null || touch.radiusY === 1));\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injectable options for the InputModalityDetector. These are shallowly merged with the default\n * options.\n */\nconst INPUT_MODALITY_DETECTOR_OPTIONS = new InjectionToken('cdk-input-modality-detector-options');\n/**\n * Default options for the InputModalityDetector.\n *\n * Modifier keys are ignored by default (i.e. when pressed won't cause the service to detect\n * keyboard input modality) for two reasons:\n *\n * 1. Modifier keys are commonly used with mouse to perform actions such as 'right click' or 'open\n *    in new tab', and are thus less representative of actual keyboard interaction.\n * 2. VoiceOver triggers some keyboard events when linearly navigating with Control + Option (but\n *    confusingly not with Caps Lock). Thus, to have parity with other screen readers, we ignore\n *    these keys so as to not update the input modality.\n *\n * Note that we do not by default ignore the right Meta key on Safari because it has the same key\n * code as the ContextMenu key on other browsers. When we switch to using event.key, we can\n * distinguish between the two.\n */\nconst INPUT_MODALITY_DETECTOR_DEFAULT_OPTIONS = {\n    ignoreKeys: [ALT, CONTROL, MAC_META, META, SHIFT],\n};\n/**\n * The amount of time needed to pass after a touchstart event in order for a subsequent mousedown\n * event to be attributed as mouse and not touch.\n *\n * This is the value used by AngularJS Material. Through trial and error (on iPhone 6S) they found\n * that a value of around 650ms seems appropriate.\n */\nconst TOUCH_BUFFER_MS = 650;\n/**\n * Event listener options that enable capturing and also mark the listener as passive if the browser\n * supports it.\n */\nconst modalityEventListenerOptions = normalizePassiveListenerOptions({\n    passive: true,\n    capture: true,\n});\n/**\n * Service that detects the user's input modality.\n *\n * This service does not update the input modality when a user navigates with a screen reader\n * (e.g. linear navigation with VoiceOver, object navigation / browse mode with NVDA, virtual PC\n * cursor mode with JAWS). This is in part due to technical limitations (i.e. keyboard events do not\n * fire as expected in these modes) but is also arguably the correct behavior. Navigating with a\n * screen reader is akin to visually scanning a page, and should not be interpreted as actual user\n * input interaction.\n *\n * When a user is not navigating but *interacting* with a screen reader, this service attempts to\n * update the input modality to keyboard, but in general this service's behavior is largely\n * undefined.\n */\nclass InputModalityDetector {\n    /** The most recently detected input modality. */\n    get mostRecentModality() {\n        return this._modality.value;\n    }\n    constructor(_platform, ngZone, document, options) {\n        this._platform = _platform;\n        /**\n         * The most recently detected input modality event target. Is null if no input modality has been\n         * detected or if the associated event target is null for some unknown reason.\n         */\n        this._mostRecentTarget = null;\n        /** The underlying BehaviorSubject that emits whenever an input modality is detected. */\n        this._modality = new BehaviorSubject(null);\n        /**\n         * The timestamp of the last touch input modality. Used to determine whether mousedown events\n         * should be attributed to mouse or touch.\n         */\n        this._lastTouchMs = 0;\n        /**\n         * Handles keydown events. Must be an arrow function in order to preserve the context when it gets\n         * bound.\n         */\n        this._onKeydown = (event) => {\n            // If this is one of the keys we should ignore, then ignore it and don't update the input\n            // modality to keyboard.\n            if (this._options?.ignoreKeys?.some(keyCode => keyCode === event.keyCode)) {\n                return;\n            }\n            this._modality.next('keyboard');\n            this._mostRecentTarget = _getEventTarget(event);\n        };\n        /**\n         * Handles mousedown events. Must be an arrow function in order to preserve the context when it\n         * gets bound.\n         */\n        this._onMousedown = (event) => {\n            // Touches trigger both touch and mouse events, so we need to distinguish between mouse events\n            // that were triggered via mouse vs touch. To do so, check if the mouse event occurs closely\n            // after the previous touch event.\n            if (Date.now() - this._lastTouchMs < TOUCH_BUFFER_MS) {\n                return;\n            }\n            // Fake mousedown events are fired by some screen readers when controls are activated by the\n            // screen reader. Attribute them to keyboard input modality.\n            this._modality.next(isFakeMousedownFromScreenReader(event) ? 'keyboard' : 'mouse');\n            this._mostRecentTarget = _getEventTarget(event);\n        };\n        /**\n         * Handles touchstart events. Must be an arrow function in order to preserve the context when it\n         * gets bound.\n         */\n        this._onTouchstart = (event) => {\n            // Same scenario as mentioned in _onMousedown, but on touch screen devices, fake touchstart\n            // events are fired. Again, attribute to keyboard input modality.\n            if (isFakeTouchstartFromScreenReader(event)) {\n                this._modality.next('keyboard');\n                return;\n            }\n            // Store the timestamp of this touch event, as it's used to distinguish between mouse events\n            // triggered via mouse vs touch.\n            this._lastTouchMs = Date.now();\n            this._modality.next('touch');\n            this._mostRecentTarget = _getEventTarget(event);\n        };\n        this._options = {\n            ...INPUT_MODALITY_DETECTOR_DEFAULT_OPTIONS,\n            ...options,\n        };\n        // Skip the first emission as it's null.\n        this.modalityDetected = this._modality.pipe(skip(1));\n        this.modalityChanged = this.modalityDetected.pipe(distinctUntilChanged());\n        // If we're not in a browser, this service should do nothing, as there's no relevant input\n        // modality to detect.\n        if (_platform.isBrowser) {\n            ngZone.runOutsideAngular(() => {\n                document.addEventListener('keydown', this._onKeydown, modalityEventListenerOptions);\n                document.addEventListener('mousedown', this._onMousedown, modalityEventListenerOptions);\n                document.addEventListener('touchstart', this._onTouchstart, modalityEventListenerOptions);\n            });\n        }\n    }\n    ngOnDestroy() {\n        this._modality.complete();\n        if (this._platform.isBrowser) {\n            document.removeEventListener('keydown', this._onKeydown, modalityEventListenerOptions);\n            document.removeEventListener('mousedown', this._onMousedown, modalityEventListenerOptions);\n            document.removeEventListener('touchstart', this._onTouchstart, modalityEventListenerOptions);\n        }\n    }\n}\nInputModalityDetector.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: InputModalityDetector, deps: [{ token: i1.Platform }, { token: i0.NgZone }, { token: DOCUMENT }, { token: INPUT_MODALITY_DETECTOR_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nInputModalityDetector.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: InputModalityDetector, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: InputModalityDetector, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i1.Platform }, { type: i0.NgZone }, { type: Document, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [INPUT_MODALITY_DETECTOR_OPTIONS]\n                }] }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst LIVE_ANNOUNCER_ELEMENT_TOKEN = new InjectionToken('liveAnnouncerElement', {\n    providedIn: 'root',\n    factory: LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY,\n});\n/** @docs-private */\nfunction LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY() {\n    return null;\n}\n/** Injection token that can be used to configure the default options for the LiveAnnouncer. */\nconst LIVE_ANNOUNCER_DEFAULT_OPTIONS = new InjectionToken('LIVE_ANNOUNCER_DEFAULT_OPTIONS');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet uniqueIds = 0;\nclass LiveAnnouncer {\n    constructor(elementToken, _ngZone, _document, _defaultOptions) {\n        this._ngZone = _ngZone;\n        this._defaultOptions = _defaultOptions;\n        // We inject the live element and document as `any` because the constructor signature cannot\n        // reference browser globals (HTMLElement, Document) on non-browser environments, since having\n        // a class decorator causes TypeScript to preserve the constructor signature types.\n        this._document = _document;\n        this._liveElement = elementToken || this._createLiveElement();\n    }\n    announce(message, ...args) {\n        const defaultOptions = this._defaultOptions;\n        let politeness;\n        let duration;\n        if (args.length === 1 && typeof args[0] === 'number') {\n            duration = args[0];\n        }\n        else {\n            [politeness, duration] = args;\n        }\n        this.clear();\n        clearTimeout(this._previousTimeout);\n        if (!politeness) {\n            politeness =\n                defaultOptions && defaultOptions.politeness ? defaultOptions.politeness : 'polite';\n        }\n        if (duration == null && defaultOptions) {\n            duration = defaultOptions.duration;\n        }\n        // TODO: ensure changing the politeness works on all environments we support.\n        this._liveElement.setAttribute('aria-live', politeness);\n        if (this._liveElement.id) {\n            this._exposeAnnouncerToModals(this._liveElement.id);\n        }\n        // This 100ms timeout is necessary for some browser + screen-reader combinations:\n        // - Both JAWS and NVDA over IE11 will not announce anything without a non-zero timeout.\n        // - With Chrome and IE11 with NVDA or JAWS, a repeated (identical) message won't be read a\n        //   second time without clearing and then using a non-zero delay.\n        // (using JAWS 17 at time of this writing).\n        return this._ngZone.runOutsideAngular(() => {\n            if (!this._currentPromise) {\n                this._currentPromise = new Promise(resolve => (this._currentResolve = resolve));\n            }\n            clearTimeout(this._previousTimeout);\n            this._previousTimeout = setTimeout(() => {\n                this._liveElement.textContent = message;\n                if (typeof duration === 'number') {\n                    this._previousTimeout = setTimeout(() => this.clear(), duration);\n                }\n                this._currentResolve();\n                this._currentPromise = this._currentResolve = undefined;\n            }, 100);\n            return this._currentPromise;\n        });\n    }\n    /**\n     * Clears the current text from the announcer element. Can be used to prevent\n     * screen readers from reading the text out again while the user is going\n     * through the page landmarks.\n     */\n    clear() {\n        if (this._liveElement) {\n            this._liveElement.textContent = '';\n        }\n    }\n    ngOnDestroy() {\n        clearTimeout(this._previousTimeout);\n        this._liveElement?.remove();\n        this._liveElement = null;\n        this._currentResolve?.();\n        this._currentPromise = this._currentResolve = undefined;\n    }\n    _createLiveElement() {\n        const elementClass = 'cdk-live-announcer-element';\n        const previousElements = this._document.getElementsByClassName(elementClass);\n        const liveEl = this._document.createElement('div');\n        // Remove any old containers. This can happen when coming in from a server-side-rendered page.\n        for (let i = 0; i < previousElements.length; i++) {\n            previousElements[i].remove();\n        }\n        liveEl.classList.add(elementClass);\n        liveEl.classList.add('cdk-visually-hidden');\n        liveEl.setAttribute('aria-atomic', 'true');\n        liveEl.setAttribute('aria-live', 'polite');\n        liveEl.id = `cdk-live-announcer-${uniqueIds++}`;\n        this._document.body.appendChild(liveEl);\n        return liveEl;\n    }\n    /**\n     * Some browsers won't expose the accessibility node of the live announcer element if there is an\n     * `aria-modal` and the live announcer is outside of it. This method works around the issue by\n     * pointing the `aria-owns` of all modals to the live announcer element.\n     */\n    _exposeAnnouncerToModals(id) {\n        // Note that the selector here is limited to CDK overlays at the moment in order to reduce the\n        // section of the DOM we need to look through. This should cover all the cases we support, but\n        // the selector can be expanded if it turns out to be too narrow.\n        const modals = this._document.querySelectorAll('body > .cdk-overlay-container [aria-modal=\"true\"]');\n        for (let i = 0; i < modals.length; i++) {\n            const modal = modals[i];\n            const ariaOwns = modal.getAttribute('aria-owns');\n            if (!ariaOwns) {\n                modal.setAttribute('aria-owns', id);\n            }\n            else if (ariaOwns.indexOf(id) === -1) {\n                modal.setAttribute('aria-owns', ariaOwns + ' ' + id);\n            }\n        }\n    }\n}\nLiveAnnouncer.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: LiveAnnouncer, deps: [{ token: LIVE_ANNOUNCER_ELEMENT_TOKEN, optional: true }, { token: i0.NgZone }, { token: DOCUMENT }, { token: LIVE_ANNOUNCER_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nLiveAnnouncer.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: LiveAnnouncer, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: LiveAnnouncer, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [LIVE_ANNOUNCER_ELEMENT_TOKEN]\n                }] }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [LIVE_ANNOUNCER_DEFAULT_OPTIONS]\n                }] }]; } });\n/**\n * A directive that works similarly to aria-live, but uses the LiveAnnouncer to ensure compatibility\n * with a wider range of browsers and screen readers.\n */\nclass CdkAriaLive {\n    /** The aria-live politeness level to use when announcing messages. */\n    get politeness() {\n        return this._politeness;\n    }\n    set politeness(value) {\n        this._politeness = value === 'off' || value === 'assertive' ? value : 'polite';\n        if (this._politeness === 'off') {\n            if (this._subscription) {\n                this._subscription.unsubscribe();\n                this._subscription = null;\n            }\n        }\n        else if (!this._subscription) {\n            this._subscription = this._ngZone.runOutsideAngular(() => {\n                return this._contentObserver.observe(this._elementRef).subscribe(() => {\n                    // Note that we use textContent here, rather than innerText, in order to avoid a reflow.\n                    const elementText = this._elementRef.nativeElement.textContent;\n                    // The `MutationObserver` fires also for attribute\n                    // changes which we don't want to announce.\n                    if (elementText !== this._previousAnnouncedText) {\n                        this._liveAnnouncer.announce(elementText, this._politeness, this.duration);\n                        this._previousAnnouncedText = elementText;\n                    }\n                });\n            });\n        }\n    }\n    constructor(_elementRef, _liveAnnouncer, _contentObserver, _ngZone) {\n        this._elementRef = _elementRef;\n        this._liveAnnouncer = _liveAnnouncer;\n        this._contentObserver = _contentObserver;\n        this._ngZone = _ngZone;\n        this._politeness = 'polite';\n    }\n    ngOnDestroy() {\n        if (this._subscription) {\n            this._subscription.unsubscribe();\n        }\n    }\n}\nCdkAriaLive.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: CdkAriaLive, deps: [{ token: i0.ElementRef }, { token: LiveAnnouncer }, { token: i1$1.ContentObserver }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\nCdkAriaLive.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", type: CdkAriaLive, selector: \"[cdkAriaLive]\", inputs: { politeness: [\"cdkAriaLive\", \"politeness\"], duration: [\"cdkAriaLiveDuration\", \"duration\"] }, exportAs: [\"cdkAriaLive\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: CdkAriaLive, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkAriaLive]',\n                    exportAs: 'cdkAriaLive',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: LiveAnnouncer }, { type: i1$1.ContentObserver }, { type: i0.NgZone }]; }, propDecorators: { politeness: [{\n                type: Input,\n                args: ['cdkAriaLive']\n            }], duration: [{\n                type: Input,\n                args: ['cdkAriaLiveDuration']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** InjectionToken for FocusMonitorOptions. */\nconst FOCUS_MONITOR_DEFAULT_OPTIONS = new InjectionToken('cdk-focus-monitor-default-options');\n/**\n * Event listener options that enable capturing and also\n * mark the listener as passive if the browser supports it.\n */\nconst captureEventListenerOptions = normalizePassiveListenerOptions({\n    passive: true,\n    capture: true,\n});\n/** Monitors mouse and keyboard events to determine the cause of focus events. */\nclass FocusMonitor {\n    constructor(_ngZone, _platform, _inputModalityDetector, \n    /** @breaking-change 11.0.0 make document required */\n    document, options) {\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        this._inputModalityDetector = _inputModalityDetector;\n        /** The focus origin that the next focus event is a result of. */\n        this._origin = null;\n        /** Whether the window has just been focused. */\n        this._windowFocused = false;\n        /**\n         * Whether the origin was determined via a touch interaction. Necessary as properly attributing\n         * focus events to touch interactions requires special logic.\n         */\n        this._originFromTouchInteraction = false;\n        /** Map of elements being monitored to their info. */\n        this._elementInfo = new Map();\n        /** The number of elements currently being monitored. */\n        this._monitoredElementCount = 0;\n        /**\n         * Keeps track of the root nodes to which we've currently bound a focus/blur handler,\n         * as well as the number of monitored elements that they contain. We have to treat focus/blur\n         * handlers differently from the rest of the events, because the browser won't emit events\n         * to the document when focus moves inside of a shadow root.\n         */\n        this._rootNodeFocusListenerCount = new Map();\n        /**\n         * Event listener for `focus` events on the window.\n         * Needs to be an arrow function in order to preserve the context when it gets bound.\n         */\n        this._windowFocusListener = () => {\n            // Make a note of when the window regains focus, so we can\n            // restore the origin info for the focused element.\n            this._windowFocused = true;\n            this._windowFocusTimeoutId = window.setTimeout(() => (this._windowFocused = false));\n        };\n        /** Subject for stopping our InputModalityDetector subscription. */\n        this._stopInputModalityDetector = new Subject();\n        /**\n         * Event listener for `focus` and 'blur' events on the document.\n         * Needs to be an arrow function in order to preserve the context when it gets bound.\n         */\n        this._rootNodeFocusAndBlurListener = (event) => {\n            const target = _getEventTarget(event);\n            // We need to walk up the ancestor chain in order to support `checkChildren`.\n            for (let element = target; element; element = element.parentElement) {\n                if (event.type === 'focus') {\n                    this._onFocus(event, element);\n                }\n                else {\n                    this._onBlur(event, element);\n                }\n            }\n        };\n        this._document = document;\n        this._detectionMode = options?.detectionMode || 0 /* FocusMonitorDetectionMode.IMMEDIATE */;\n    }\n    monitor(element, checkChildren = false) {\n        const nativeElement = coerceElement(element);\n        // Do nothing if we're not on the browser platform or the passed in node isn't an element.\n        if (!this._platform.isBrowser || nativeElement.nodeType !== 1) {\n            return of(null);\n        }\n        // If the element is inside the shadow DOM, we need to bind our focus/blur listeners to\n        // the shadow root, rather than the `document`, because the browser won't emit focus events\n        // to the `document`, if focus is moving within the same shadow root.\n        const rootNode = _getShadowRoot(nativeElement) || this._getDocument();\n        const cachedInfo = this._elementInfo.get(nativeElement);\n        // Check if we're already monitoring this element.\n        if (cachedInfo) {\n            if (checkChildren) {\n                // TODO(COMP-318): this can be problematic, because it'll turn all non-checkChildren\n                // observers into ones that behave as if `checkChildren` was turned on. We need a more\n                // robust solution.\n                cachedInfo.checkChildren = true;\n            }\n            return cachedInfo.subject;\n        }\n        // Create monitored element info.\n        const info = {\n            checkChildren: checkChildren,\n            subject: new Subject(),\n            rootNode,\n        };\n        this._elementInfo.set(nativeElement, info);\n        this._registerGlobalListeners(info);\n        return info.subject;\n    }\n    stopMonitoring(element) {\n        const nativeElement = coerceElement(element);\n        const elementInfo = this._elementInfo.get(nativeElement);\n        if (elementInfo) {\n            elementInfo.subject.complete();\n            this._setClasses(nativeElement);\n            this._elementInfo.delete(nativeElement);\n            this._removeGlobalListeners(elementInfo);\n        }\n    }\n    focusVia(element, origin, options) {\n        const nativeElement = coerceElement(element);\n        const focusedElement = this._getDocument().activeElement;\n        // If the element is focused already, calling `focus` again won't trigger the event listener\n        // which means that the focus classes won't be updated. If that's the case, update the classes\n        // directly without waiting for an event.\n        if (nativeElement === focusedElement) {\n            this._getClosestElementsInfo(nativeElement).forEach(([currentElement, info]) => this._originChanged(currentElement, origin, info));\n        }\n        else {\n            this._setOrigin(origin);\n            // `focus` isn't available on the server\n            if (typeof nativeElement.focus === 'function') {\n                nativeElement.focus(options);\n            }\n        }\n    }\n    ngOnDestroy() {\n        this._elementInfo.forEach((_info, element) => this.stopMonitoring(element));\n    }\n    /** Access injected document if available or fallback to global document reference */\n    _getDocument() {\n        return this._document || document;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        const doc = this._getDocument();\n        return doc.defaultView || window;\n    }\n    _getFocusOrigin(focusEventTarget) {\n        if (this._origin) {\n            // If the origin was realized via a touch interaction, we need to perform additional checks\n            // to determine whether the focus origin should be attributed to touch or program.\n            if (this._originFromTouchInteraction) {\n                return this._shouldBeAttributedToTouch(focusEventTarget) ? 'touch' : 'program';\n            }\n            else {\n                return this._origin;\n            }\n        }\n        // If the window has just regained focus, we can restore the most recent origin from before the\n        // window blurred. Otherwise, we've reached the point where we can't identify the source of the\n        // focus. This typically means one of two things happened:\n        //\n        // 1) The element was programmatically focused, or\n        // 2) The element was focused via screen reader navigation (which generally doesn't fire\n        //    events).\n        //\n        // Because we can't distinguish between these two cases, we default to setting `program`.\n        if (this._windowFocused && this._lastFocusOrigin) {\n            return this._lastFocusOrigin;\n        }\n        // If the interaction is coming from an input label, we consider it a mouse interactions.\n        // This is a special case where focus moves on `click`, rather than `mousedown` which breaks\n        // our detection, because all our assumptions are for `mousedown`. We need to handle this\n        // special case, because it's very common for checkboxes and radio buttons.\n        if (focusEventTarget && this._isLastInteractionFromInputLabel(focusEventTarget)) {\n            return 'mouse';\n        }\n        return 'program';\n    }\n    /**\n     * Returns whether the focus event should be attributed to touch. Recall that in IMMEDIATE mode, a\n     * touch origin isn't immediately reset at the next tick (see _setOrigin). This means that when we\n     * handle a focus event following a touch interaction, we need to determine whether (1) the focus\n     * event was directly caused by the touch interaction or (2) the focus event was caused by a\n     * subsequent programmatic focus call triggered by the touch interaction.\n     * @param focusEventTarget The target of the focus event under examination.\n     */\n    _shouldBeAttributedToTouch(focusEventTarget) {\n        // Please note that this check is not perfect. Consider the following edge case:\n        //\n        // <div #parent tabindex=\"0\">\n        //   <div #child tabindex=\"0\" (click)=\"#parent.focus()\"></div>\n        // </div>\n        //\n        // Suppose there is a FocusMonitor in IMMEDIATE mode attached to #parent. When the user touches\n        // #child, #parent is programmatically focused. This code will attribute the focus to touch\n        // instead of program. This is a relatively minor edge-case that can be worked around by using\n        // focusVia(parent, 'program') to focus #parent.\n        return (this._detectionMode === 1 /* FocusMonitorDetectionMode.EVENTUAL */ ||\n            !!focusEventTarget?.contains(this._inputModalityDetector._mostRecentTarget));\n    }\n    /**\n     * Sets the focus classes on the element based on the given focus origin.\n     * @param element The element to update the classes on.\n     * @param origin The focus origin.\n     */\n    _setClasses(element, origin) {\n        element.classList.toggle('cdk-focused', !!origin);\n        element.classList.toggle('cdk-touch-focused', origin === 'touch');\n        element.classList.toggle('cdk-keyboard-focused', origin === 'keyboard');\n        element.classList.toggle('cdk-mouse-focused', origin === 'mouse');\n        element.classList.toggle('cdk-program-focused', origin === 'program');\n    }\n    /**\n     * Updates the focus origin. If we're using immediate detection mode, we schedule an async\n     * function to clear the origin at the end of a timeout. The duration of the timeout depends on\n     * the origin being set.\n     * @param origin The origin to set.\n     * @param isFromInteraction Whether we are setting the origin from an interaction event.\n     */\n    _setOrigin(origin, isFromInteraction = false) {\n        this._ngZone.runOutsideAngular(() => {\n            this._origin = origin;\n            this._originFromTouchInteraction = origin === 'touch' && isFromInteraction;\n            // If we're in IMMEDIATE mode, reset the origin at the next tick (or in `TOUCH_BUFFER_MS` ms\n            // for a touch event). We reset the origin at the next tick because Firefox focuses one tick\n            // after the interaction event. We wait `TOUCH_BUFFER_MS` ms before resetting the origin for\n            // a touch event because when a touch event is fired, the associated focus event isn't yet in\n            // the event queue. Before doing so, clear any pending timeouts.\n            if (this._detectionMode === 0 /* FocusMonitorDetectionMode.IMMEDIATE */) {\n                clearTimeout(this._originTimeoutId);\n                const ms = this._originFromTouchInteraction ? TOUCH_BUFFER_MS : 1;\n                this._originTimeoutId = setTimeout(() => (this._origin = null), ms);\n            }\n        });\n    }\n    /**\n     * Handles focus events on a registered element.\n     * @param event The focus event.\n     * @param element The monitored element.\n     */\n    _onFocus(event, element) {\n        // NOTE(mmalerba): We currently set the classes based on the focus origin of the most recent\n        // focus event affecting the monitored element. If we want to use the origin of the first event\n        // instead we should check for the cdk-focused class here and return if the element already has\n        // it. (This only matters for elements that have includesChildren = true).\n        // If we are not counting child-element-focus as focused, make sure that the event target is the\n        // monitored element itself.\n        const elementInfo = this._elementInfo.get(element);\n        const focusEventTarget = _getEventTarget(event);\n        if (!elementInfo || (!elementInfo.checkChildren && element !== focusEventTarget)) {\n            return;\n        }\n        this._originChanged(element, this._getFocusOrigin(focusEventTarget), elementInfo);\n    }\n    /**\n     * Handles blur events on a registered element.\n     * @param event The blur event.\n     * @param element The monitored element.\n     */\n    _onBlur(event, element) {\n        // If we are counting child-element-focus as focused, make sure that we aren't just blurring in\n        // order to focus another child of the monitored element.\n        const elementInfo = this._elementInfo.get(element);\n        if (!elementInfo ||\n            (elementInfo.checkChildren &&\n                event.relatedTarget instanceof Node &&\n                element.contains(event.relatedTarget))) {\n            return;\n        }\n        this._setClasses(element);\n        this._emitOrigin(elementInfo, null);\n    }\n    _emitOrigin(info, origin) {\n        if (info.subject.observers.length) {\n            this._ngZone.run(() => info.subject.next(origin));\n        }\n    }\n    _registerGlobalListeners(elementInfo) {\n        if (!this._platform.isBrowser) {\n            return;\n        }\n        const rootNode = elementInfo.rootNode;\n        const rootNodeFocusListeners = this._rootNodeFocusListenerCount.get(rootNode) || 0;\n        if (!rootNodeFocusListeners) {\n            this._ngZone.runOutsideAngular(() => {\n                rootNode.addEventListener('focus', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n                rootNode.addEventListener('blur', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n            });\n        }\n        this._rootNodeFocusListenerCount.set(rootNode, rootNodeFocusListeners + 1);\n        // Register global listeners when first element is monitored.\n        if (++this._monitoredElementCount === 1) {\n            // Note: we listen to events in the capture phase so we\n            // can detect them even if the user stops propagation.\n            this._ngZone.runOutsideAngular(() => {\n                const window = this._getWindow();\n                window.addEventListener('focus', this._windowFocusListener);\n            });\n            // The InputModalityDetector is also just a collection of global listeners.\n            this._inputModalityDetector.modalityDetected\n                .pipe(takeUntil(this._stopInputModalityDetector))\n                .subscribe(modality => {\n                this._setOrigin(modality, true /* isFromInteraction */);\n            });\n        }\n    }\n    _removeGlobalListeners(elementInfo) {\n        const rootNode = elementInfo.rootNode;\n        if (this._rootNodeFocusListenerCount.has(rootNode)) {\n            const rootNodeFocusListeners = this._rootNodeFocusListenerCount.get(rootNode);\n            if (rootNodeFocusListeners > 1) {\n                this._rootNodeFocusListenerCount.set(rootNode, rootNodeFocusListeners - 1);\n            }\n            else {\n                rootNode.removeEventListener('focus', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n                rootNode.removeEventListener('blur', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n                this._rootNodeFocusListenerCount.delete(rootNode);\n            }\n        }\n        // Unregister global listeners when last element is unmonitored.\n        if (!--this._monitoredElementCount) {\n            const window = this._getWindow();\n            window.removeEventListener('focus', this._windowFocusListener);\n            // Equivalently, stop our InputModalityDetector subscription.\n            this._stopInputModalityDetector.next();\n            // Clear timeouts for all potentially pending timeouts to prevent the leaks.\n            clearTimeout(this._windowFocusTimeoutId);\n            clearTimeout(this._originTimeoutId);\n        }\n    }\n    /** Updates all the state on an element once its focus origin has changed. */\n    _originChanged(element, origin, elementInfo) {\n        this._setClasses(element, origin);\n        this._emitOrigin(elementInfo, origin);\n        this._lastFocusOrigin = origin;\n    }\n    /**\n     * Collects the `MonitoredElementInfo` of a particular element and\n     * all of its ancestors that have enabled `checkChildren`.\n     * @param element Element from which to start the search.\n     */\n    _getClosestElementsInfo(element) {\n        const results = [];\n        this._elementInfo.forEach((info, currentElement) => {\n            if (currentElement === element || (info.checkChildren && currentElement.contains(element))) {\n                results.push([currentElement, info]);\n            }\n        });\n        return results;\n    }\n    /**\n     * Returns whether an interaction is likely to have come from the user clicking the `label` of\n     * an `input` or `textarea` in order to focus it.\n     * @param focusEventTarget Target currently receiving focus.\n     */\n    _isLastInteractionFromInputLabel(focusEventTarget) {\n        const { _mostRecentTarget: mostRecentTarget, mostRecentModality } = this._inputModalityDetector;\n        // If the last interaction used the mouse on an element contained by one of the labels\n        // of an `input`/`textarea` that is currently focused, it is very likely that the\n        // user redirected focus using the label.\n        if (mostRecentModality !== 'mouse' ||\n            !mostRecentTarget ||\n            mostRecentTarget === focusEventTarget ||\n            (focusEventTarget.nodeName !== 'INPUT' && focusEventTarget.nodeName !== 'TEXTAREA') ||\n            focusEventTarget.disabled) {\n            return false;\n        }\n        const labels = focusEventTarget.labels;\n        if (labels) {\n            for (let i = 0; i < labels.length; i++) {\n                if (labels[i].contains(mostRecentTarget)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n}\nFocusMonitor.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: FocusMonitor, deps: [{ token: i0.NgZone }, { token: i1.Platform }, { token: InputModalityDetector }, { token: DOCUMENT, optional: true }, { token: FOCUS_MONITOR_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nFocusMonitor.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: FocusMonitor, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: FocusMonitor, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: i1.Platform }, { type: InputModalityDetector }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [FOCUS_MONITOR_DEFAULT_OPTIONS]\n                }] }]; } });\n/**\n * Directive that determines how a particular element was focused (via keyboard, mouse, touch, or\n * programmatically) and adds corresponding classes to the element.\n *\n * There are two variants of this directive:\n * 1) cdkMonitorElementFocus: does not consider an element to be focused if one of its children is\n *    focused.\n * 2) cdkMonitorSubtreeFocus: considers an element focused if it or any of its children are focused.\n */\nclass CdkMonitorFocus {\n    constructor(_elementRef, _focusMonitor) {\n        this._elementRef = _elementRef;\n        this._focusMonitor = _focusMonitor;\n        this._focusOrigin = null;\n        this.cdkFocusChange = new EventEmitter();\n    }\n    get focusOrigin() {\n        return this._focusOrigin;\n    }\n    ngAfterViewInit() {\n        const element = this._elementRef.nativeElement;\n        this._monitorSubscription = this._focusMonitor\n            .monitor(element, element.nodeType === 1 && element.hasAttribute('cdkMonitorSubtreeFocus'))\n            .subscribe(origin => {\n            this._focusOrigin = origin;\n            this.cdkFocusChange.emit(origin);\n        });\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        if (this._monitorSubscription) {\n            this._monitorSubscription.unsubscribe();\n        }\n    }\n}\nCdkMonitorFocus.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: CdkMonitorFocus, deps: [{ token: i0.ElementRef }, { token: FocusMonitor }], target: i0.ɵɵFactoryTarget.Directive });\nCdkMonitorFocus.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", type: CdkMonitorFocus, selector: \"[cdkMonitorElementFocus], [cdkMonitorSubtreeFocus]\", outputs: { cdkFocusChange: \"cdkFocusChange\" }, exportAs: [\"cdkMonitorFocus\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: CdkMonitorFocus, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkMonitorElementFocus], [cdkMonitorSubtreeFocus]',\n                    exportAs: 'cdkMonitorFocus',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: FocusMonitor }]; }, propDecorators: { cdkFocusChange: [{\n                type: Output\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** CSS class applied to the document body when in black-on-white high-contrast mode. */\nconst BLACK_ON_WHITE_CSS_CLASS = 'cdk-high-contrast-black-on-white';\n/** CSS class applied to the document body when in white-on-black high-contrast mode. */\nconst WHITE_ON_BLACK_CSS_CLASS = 'cdk-high-contrast-white-on-black';\n/** CSS class applied to the document body when in high-contrast mode. */\nconst HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS = 'cdk-high-contrast-active';\n/**\n * Service to determine whether the browser is currently in a high-contrast-mode environment.\n *\n * Microsoft Windows supports an accessibility feature called \"High Contrast Mode\". This mode\n * changes the appearance of all applications, including web applications, to dramatically increase\n * contrast.\n *\n * IE, Edge, and Firefox currently support this mode. Chrome does not support Windows High Contrast\n * Mode. This service does not detect high-contrast mode as added by the Chrome \"High Contrast\"\n * browser extension.\n */\nclass HighContrastModeDetector {\n    constructor(_platform, document) {\n        this._platform = _platform;\n        this._document = document;\n        this._breakpointSubscription = inject(BreakpointObserver)\n            .observe('(forced-colors: active)')\n            .subscribe(() => {\n            if (this._hasCheckedHighContrastMode) {\n                this._hasCheckedHighContrastMode = false;\n                this._applyBodyHighContrastModeCssClasses();\n            }\n        });\n    }\n    /** Gets the current high-contrast-mode for the page. */\n    getHighContrastMode() {\n        if (!this._platform.isBrowser) {\n            return 0 /* HighContrastMode.NONE */;\n        }\n        // Create a test element with an arbitrary background-color that is neither black nor\n        // white; high-contrast mode will coerce the color to either black or white. Also ensure that\n        // appending the test element to the DOM does not affect layout by absolutely positioning it\n        const testElement = this._document.createElement('div');\n        testElement.style.backgroundColor = 'rgb(1,2,3)';\n        testElement.style.position = 'absolute';\n        this._document.body.appendChild(testElement);\n        // Get the computed style for the background color, collapsing spaces to normalize between\n        // browsers. Once we get this color, we no longer need the test element. Access the `window`\n        // via the document so we can fake it in tests. Note that we have extra null checks, because\n        // this logic will likely run during app bootstrap and throwing can break the entire app.\n        const documentWindow = this._document.defaultView || window;\n        const computedStyle = documentWindow && documentWindow.getComputedStyle\n            ? documentWindow.getComputedStyle(testElement)\n            : null;\n        const computedColor = ((computedStyle && computedStyle.backgroundColor) || '').replace(/ /g, '');\n        testElement.remove();\n        switch (computedColor) {\n            // Pre Windows 11 dark theme.\n            case 'rgb(0,0,0)':\n            // Windows 11 dark themes.\n            case 'rgb(45,50,54)':\n            case 'rgb(32,32,32)':\n                return 2 /* HighContrastMode.WHITE_ON_BLACK */;\n            // Pre Windows 11 light theme.\n            case 'rgb(255,255,255)':\n            // Windows 11 light theme.\n            case 'rgb(255,250,239)':\n                return 1 /* HighContrastMode.BLACK_ON_WHITE */;\n        }\n        return 0 /* HighContrastMode.NONE */;\n    }\n    ngOnDestroy() {\n        this._breakpointSubscription.unsubscribe();\n    }\n    /** Applies CSS classes indicating high-contrast mode to document body (browser-only). */\n    _applyBodyHighContrastModeCssClasses() {\n        if (!this._hasCheckedHighContrastMode && this._platform.isBrowser && this._document.body) {\n            const bodyClasses = this._document.body.classList;\n            bodyClasses.remove(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS, BLACK_ON_WHITE_CSS_CLASS, WHITE_ON_BLACK_CSS_CLASS);\n            this._hasCheckedHighContrastMode = true;\n            const mode = this.getHighContrastMode();\n            if (mode === 1 /* HighContrastMode.BLACK_ON_WHITE */) {\n                bodyClasses.add(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS, BLACK_ON_WHITE_CSS_CLASS);\n            }\n            else if (mode === 2 /* HighContrastMode.WHITE_ON_BLACK */) {\n                bodyClasses.add(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS, WHITE_ON_BLACK_CSS_CLASS);\n            }\n        }\n    }\n}\nHighContrastModeDetector.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: HighContrastModeDetector, deps: [{ token: i1.Platform }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\nHighContrastModeDetector.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: HighContrastModeDetector, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: HighContrastModeDetector, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i1.Platform }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass A11yModule {\n    constructor(highContrastModeDetector) {\n        highContrastModeDetector._applyBodyHighContrastModeCssClasses();\n    }\n}\nA11yModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: A11yModule, deps: [{ token: HighContrastModeDetector }], target: i0.ɵɵFactoryTarget.NgModule });\nA11yModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: A11yModule, declarations: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus], imports: [ObserversModule], exports: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus] });\nA11yModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: A11yModule, imports: [ObserversModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: A11yModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ObserversModule],\n                    declarations: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus],\n                    exports: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus],\n                }]\n        }], ctorParameters: function () { return [{ type: HighContrastModeDetector }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { A11yModule, ActiveDescendantKeyManager, AriaDescriber, CDK_DESCRIBEDBY_HOST_ATTRIBUTE, CDK_DESCRIBEDBY_ID_PREFIX, CdkAriaLive, CdkMonitorFocus, CdkTrapFocus, ConfigurableFocusTrap, ConfigurableFocusTrapFactory, EventListenerFocusTrapInertStrategy, FOCUS_MONITOR_DEFAULT_OPTIONS, FOCUS_TRAP_INERT_STRATEGY, FocusKeyManager, FocusMonitor, FocusTrap, FocusTrapFactory, HighContrastModeDetector, INPUT_MODALITY_DETECTOR_DEFAULT_OPTIONS, INPUT_MODALITY_DETECTOR_OPTIONS, InputModalityDetector, InteractivityChecker, IsFocusableConfig, LIVE_ANNOUNCER_DEFAULT_OPTIONS, LIVE_ANNOUNCER_ELEMENT_TOKEN, LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY, ListKeyManager, LiveAnnouncer, MESSAGES_CONTAINER_ID, isFakeMousedownFromScreenReader, isFakeTouchstartFromScreenReader };\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst MAC_ENTER = 3;\nconst BACKSPACE = 8;\nconst TAB = 9;\nconst NUM_CENTER = 12;\nconst ENTER = 13;\nconst SHIFT = 16;\nconst CONTROL = 17;\nconst ALT = 18;\nconst PAUSE = 19;\nconst CAPS_LOCK = 20;\nconst ESCAPE = 27;\nconst SPACE = 32;\nconst PAGE_UP = 33;\nconst PAGE_DOWN = 34;\nconst END = 35;\nconst HOME = 36;\nconst LEFT_ARROW = 37;\nconst UP_ARROW = 38;\nconst RIGHT_ARROW = 39;\nconst DOWN_ARROW = 40;\nconst PLUS_SIGN = 43;\nconst PRINT_SCREEN = 44;\nconst INSERT = 45;\nconst DELETE = 46;\nconst ZERO = 48;\nconst ONE = 49;\nconst TWO = 50;\nconst THREE = 51;\nconst FOUR = 52;\nconst FIVE = 53;\nconst SIX = 54;\nconst SEVEN = 55;\nconst EIGHT = 56;\nconst NINE = 57;\nconst FF_SEMICOLON = 59; // Firefox (Gecko) fires this for semicolon instead of 186\nconst FF_EQUALS = 61; // Firefox (Gecko) fires this for equals instead of 187\nconst QUESTION_MARK = 63;\nconst AT_SIGN = 64;\nconst A = 65;\nconst B = 66;\nconst C = 67;\nconst D = 68;\nconst E = 69;\nconst F = 70;\nconst G = 71;\nconst H = 72;\nconst I = 73;\nconst J = 74;\nconst K = 75;\nconst L = 76;\nconst M = 77;\nconst N = 78;\nconst O = 79;\nconst P = 80;\nconst Q = 81;\nconst R = 82;\nconst S = 83;\nconst T = 84;\nconst U = 85;\nconst V = 86;\nconst W = 87;\nconst X = 88;\nconst Y = 89;\nconst Z = 90;\nconst META = 91; // WIN_KEY_LEFT\nconst MAC_WK_CMD_LEFT = 91;\nconst MAC_WK_CMD_RIGHT = 93;\nconst CONTEXT_MENU = 93;\nconst NUMPAD_ZERO = 96;\nconst NUMPAD_ONE = 97;\nconst NUMPAD_TWO = 98;\nconst NUMPAD_THREE = 99;\nconst NUMPAD_FOUR = 100;\nconst NUMPAD_FIVE = 101;\nconst NUMPAD_SIX = 102;\nconst NUMPAD_SEVEN = 103;\nconst NUMPAD_EIGHT = 104;\nconst NUMPAD_NINE = 105;\nconst NUMPAD_MULTIPLY = 106;\nconst NUMPAD_PLUS = 107;\nconst NUMPAD_MINUS = 109;\nconst NUMPAD_PERIOD = 110;\nconst NUMPAD_DIVIDE = 111;\nconst F1 = 112;\nconst F2 = 113;\nconst F3 = 114;\nconst F4 = 115;\nconst F5 = 116;\nconst F6 = 117;\nconst F7 = 118;\nconst F8 = 119;\nconst F9 = 120;\nconst F10 = 121;\nconst F11 = 122;\nconst F12 = 123;\nconst NUM_LOCK = 144;\nconst SCROLL_LOCK = 145;\nconst FIRST_MEDIA = 166;\nconst FF_MINUS = 173;\nconst MUTE = 173; // Firefox (Gecko) fires 181 for MUTE\nconst VOLUME_DOWN = 174; // Firefox (Gecko) fires 182 for VOLUME_DOWN\nconst VOLUME_UP = 175; // Firefox (Gecko) fires 183 for VOLUME_UP\nconst FF_MUTE = 181;\nconst FF_VOLUME_DOWN = 182;\nconst LAST_MEDIA = 183;\nconst FF_VOLUME_UP = 183;\nconst SEMICOLON = 186; // Firefox (Gecko) fires 59 for SEMICOLON\nconst EQUALS = 187; // Firefox (Gecko) fires 61 for EQUALS\nconst COMMA = 188;\nconst DASH = 189; // Firefox (Gecko) fires 173 for DASH/MINUS\nconst PERIOD = 190;\nconst SLASH = 191;\nconst APOSTROPHE = 192;\nconst TILDE = 192;\nconst OPEN_SQUARE_BRACKET = 219;\nconst BACKSLASH = 220;\nconst CLOSE_SQUARE_BRACKET = 221;\nconst SINGLE_QUOTE = 222;\nconst MAC_META = 224;\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Checks whether a modifier key is pressed.\n * @param event Event to be checked.\n */\nfunction hasModifierKey(event, ...modifiers) {\n    if (modifiers.length) {\n        return modifiers.some(modifier => event[modifier]);\n    }\n    return event.altKey || event.shiftKey || event.ctrlKey || event.metaKey;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { A, ALT, APOSTROPHE, AT_SIGN, B, BACKSLASH, BACKSPACE, C, CAPS_LOCK, CLOSE_SQUARE_BRACKET, COMMA, CONTEXT_MENU, CONTROL, D, DASH, DELETE, DOWN_ARROW, E, EIGHT, END, ENTER, EQUALS, ESCAPE, F, F1, F10, F11, F12, F2, F3, F4, F5, F6, F7, F8, F9, FF_EQUALS, FF_MINUS, FF_MUTE, FF_SEMICOLON, FF_VOLUME_DOWN, FF_VOLUME_UP, FIRST_MEDIA, FIVE, FOUR, G, H, HOME, I, INSERT, J, K, L, LAST_MEDIA, LEFT_ARROW, M, MAC_ENTER, MAC_META, MAC_WK_CMD_LEFT, MAC_WK_CMD_RIGHT, META, MUTE, N, NINE, NUMPAD_DIVIDE, NUMPAD_EIGHT, NUMPAD_FIVE, NUMPAD_FOUR, NUMPAD_MINUS, NUMPAD_MULTIPLY, NUMPAD_NINE, NUMPAD_ONE, NUMPAD_PERIOD, NUMPAD_PLUS, NUMPAD_SEVEN, NUMPAD_SIX, NUMPAD_THREE, NUMPAD_TWO, NUMPAD_ZERO, NUM_CENTER, NUM_LOCK, O, ONE, OPEN_SQUARE_BRACKET, P, PAGE_DOWN, PAGE_UP, PAUSE, PERIOD, PLUS_SIGN, PRINT_SCREEN, Q, QUESTION_MARK, R, RIGHT_ARROW, S, SCROLL_LOCK, SEMICOLON, SEVEN, SHIFT, SINGLE_QUOTE, SIX, SLASH, SPACE, T, TAB, THREE, TILDE, TWO, U, UP_ARROW, V, VOLUME_DOWN, VOLUME_UP, W, X, Y, Z, ZERO, hasModifierKey };\n","function t(t){return t.split(\"-\")[1]}function e(t){return\"y\"===t?\"height\":\"width\"}function n(t){return t.split(\"-\")[0]}function o(t){return[\"top\",\"bottom\"].includes(n(t))?\"x\":\"y\"}function i(i,r,a){let{reference:l,floating:s}=i;const c=l.x+l.width/2-s.width/2,f=l.y+l.height/2-s.height/2,m=o(r),u=e(m),g=l[u]/2-s[u]/2,d=\"x\"===m;let p;switch(n(r)){case\"top\":p={x:c,y:l.y-s.height};break;case\"bottom\":p={x:c,y:l.y+l.height};break;case\"right\":p={x:l.x+l.width,y:f};break;case\"left\":p={x:l.x-s.width,y:f};break;default:p={x:l.x,y:l.y}}switch(t(r)){case\"start\":p[m]-=g*(a&&d?-1:1);break;case\"end\":p[m]+=g*(a&&d?-1:1)}return p}const r=async(t,e,n)=>{const{placement:o=\"bottom\",strategy:r=\"absolute\",middleware:a=[],platform:l}=n,s=a.filter(Boolean),c=await(null==l.isRTL?void 0:l.isRTL(e));let f=await l.getElementRects({reference:t,floating:e,strategy:r}),{x:m,y:u}=i(f,o,c),g=o,d={},p=0;for(let n=0;n<s.length;n++){const{name:a,fn:h}=s[n],{x:y,y:x,data:w,reset:v}=await h({x:m,y:u,initialPlacement:o,placement:g,strategy:r,middlewareData:d,rects:f,platform:l,elements:{reference:t,floating:e}});m=null!=y?y:m,u=null!=x?x:u,d={...d,[a]:{...d[a],...w}},v&&p<=50&&(p++,\"object\"==typeof v&&(v.placement&&(g=v.placement),v.rects&&(f=!0===v.rects?await l.getElementRects({reference:t,floating:e,strategy:r}):v.rects),({x:m,y:u}=i(f,g,c))),n=-1)}return{x:m,y:u,placement:g,strategy:r,middlewareData:d}};function a(t){return\"number\"!=typeof t?function(t){return{top:0,right:0,bottom:0,left:0,...t}}(t):{top:t,right:t,bottom:t,left:t}}function l(t){return{...t,top:t.y,left:t.x,right:t.x+t.width,bottom:t.y+t.height}}async function s(t,e){var n;void 0===e&&(e={});const{x:o,y:i,platform:r,rects:s,elements:c,strategy:f}=t,{boundary:m=\"clippingAncestors\",rootBoundary:u=\"viewport\",elementContext:g=\"floating\",altBoundary:d=!1,padding:p=0}=e,h=a(p),y=c[d?\"floating\"===g?\"reference\":\"floating\":g],x=l(await r.getClippingRect({element:null==(n=await(null==r.isElement?void 0:r.isElement(y)))||n?y:y.contextElement||await(null==r.getDocumentElement?void 0:r.getDocumentElement(c.floating)),boundary:m,rootBoundary:u,strategy:f})),w=\"floating\"===g?{...s.floating,x:o,y:i}:s.reference,v=await(null==r.getOffsetParent?void 0:r.getOffsetParent(c.floating)),b=await(null==r.isElement?void 0:r.isElement(v))&&await(null==r.getScale?void 0:r.getScale(v))||{x:1,y:1},A=l(r.convertOffsetParentRelativeRectToViewportRelativeRect?await r.convertOffsetParentRelativeRectToViewportRelativeRect({rect:w,offsetParent:v,strategy:f}):w);return{top:(x.top-A.top+h.top)/b.y,bottom:(A.bottom-x.bottom+h.bottom)/b.y,left:(x.left-A.left+h.left)/b.x,right:(A.right-x.right+h.right)/b.x}}const c=Math.min,f=Math.max;function m(t,e,n){return f(t,c(e,n))}const u=n=>({name:\"arrow\",options:n,async fn(i){const{element:r,padding:l=0}=n||{},{x:s,y:c,placement:f,rects:u,platform:g,elements:d}=i;if(null==r)return{};const p=a(l),h={x:s,y:c},y=o(f),x=e(y),w=await g.getDimensions(r),v=\"y\"===y,b=v?\"top\":\"left\",A=v?\"bottom\":\"right\",R=v?\"clientHeight\":\"clientWidth\",P=u.reference[x]+u.reference[y]-h[y]-u.floating[x],E=h[y]-u.reference[y],T=await(null==g.getOffsetParent?void 0:g.getOffsetParent(r));let D=T?T[R]:0;D&&await(null==g.isElement?void 0:g.isElement(T))||(D=d.floating[R]||u.floating[x]);const L=P/2-E/2,k=p[b],O=D-w[x]-p[A],B=D/2-w[x]/2+L,C=m(k,B,O),H=null!=t(f)&&B!=C&&u.reference[x]/2-(B<k?p[b]:p[A])-w[x]/2<0;return{[y]:h[y]-(H?B<k?k-B:O-B:0),data:{[y]:C,centerOffset:B-C}}}}),g=[\"top\",\"right\",\"bottom\",\"left\"],d=g.reduce(((t,e)=>t.concat(e,e+\"-start\",e+\"-end\")),[]),p={left:\"right\",right:\"left\",bottom:\"top\",top:\"bottom\"};function h(t){return t.replace(/left|right|bottom|top/g,(t=>p[t]))}function y(n,i,r){void 0===r&&(r=!1);const a=t(n),l=o(n),s=e(l);let c=\"x\"===l?a===(r?\"end\":\"start\")?\"right\":\"left\":\"start\"===a?\"bottom\":\"top\";return i.reference[s]>i.floating[s]&&(c=h(c)),{main:c,cross:h(c)}}const x={start:\"end\",end:\"start\"};function w(t){return t.replace(/start|end/g,(t=>x[t]))}const v=function(e){return void 0===e&&(e={}),{name:\"autoPlacement\",options:e,async fn(o){var i,r,a;const{rects:l,middlewareData:c,placement:f,platform:m,elements:u}=o,{crossAxis:g=!1,alignment:p,allowedPlacements:h=d,autoAlignment:x=!0,...v}=e,b=void 0!==p||h===d?function(e,o,i){return(e?[...i.filter((n=>t(n)===e)),...i.filter((n=>t(n)!==e))]:i.filter((t=>n(t)===t))).filter((n=>!e||t(n)===e||!!o&&w(n)!==n))}(p||null,x,h):h,A=await s(o,v),R=(null==(i=c.autoPlacement)?void 0:i.index)||0,P=b[R];if(null==P)return{};const{main:E,cross:T}=y(P,l,await(null==m.isRTL?void 0:m.isRTL(u.floating)));if(f!==P)return{reset:{placement:b[0]}};const D=[A[n(P)],A[E],A[T]],L=[...(null==(r=c.autoPlacement)?void 0:r.overflows)||[],{placement:P,overflows:D}],k=b[R+1];if(k)return{data:{index:R+1,overflows:L},reset:{placement:k}};const O=L.map((e=>{const n=t(e.placement);return[e.placement,n&&g?e.overflows.slice(0,2).reduce(((t,e)=>t+e),0):e.overflows[0],e.overflows]})).sort(((t,e)=>t[1]-e[1])),B=(null==(a=O.filter((e=>e[2].slice(0,t(e[0])?2:3).every((t=>t<=0))))[0])?void 0:a[0])||O[0][0];return B!==f?{data:{index:R+1,overflows:L},reset:{placement:B}}:{}}}};const b=function(e){return void 0===e&&(e={}),{name:\"flip\",options:e,async fn(o){var i;const{placement:r,middlewareData:a,rects:l,initialPlacement:c,platform:f,elements:m}=o,{mainAxis:u=!0,crossAxis:g=!0,fallbackPlacements:d,fallbackStrategy:p=\"bestFit\",fallbackAxisSideDirection:x=\"none\",flipAlignment:v=!0,...b}=e,A=n(r),R=n(c)===c,P=await(null==f.isRTL?void 0:f.isRTL(m.floating)),E=d||(R||!v?[h(c)]:function(t){const e=h(t);return[w(t),e,w(e)]}(c));d||\"none\"===x||E.push(...function(e,o,i,r){const a=t(e);let l=function(t,e,n){const o=[\"left\",\"right\"],i=[\"right\",\"left\"],r=[\"top\",\"bottom\"],a=[\"bottom\",\"top\"];switch(t){case\"top\":case\"bottom\":return n?e?i:o:e?o:i;case\"left\":case\"right\":return e?r:a;default:return[]}}(n(e),\"start\"===i,r);return a&&(l=l.map((t=>t+\"-\"+a)),o&&(l=l.concat(l.map(w)))),l}(c,v,x,P));const T=[c,...E],D=await s(o,b),L=[];let k=(null==(i=a.flip)?void 0:i.overflows)||[];if(u&&L.push(D[A]),g){const{main:t,cross:e}=y(r,l,P);L.push(D[t],D[e])}if(k=[...k,{placement:r,overflows:L}],!L.every((t=>t<=0))){var O,B;const t=((null==(O=a.flip)?void 0:O.index)||0)+1,e=T[t];if(e)return{data:{index:t,overflows:k},reset:{placement:e}};let n=null==(B=k.filter((t=>t.overflows[0]<=0)).sort(((t,e)=>t.overflows[1]-e.overflows[1]))[0])?void 0:B.placement;if(!n)switch(p){case\"bestFit\":{var C;const t=null==(C=k.map((t=>[t.placement,t.overflows.filter((t=>t>0)).reduce(((t,e)=>t+e),0)])).sort(((t,e)=>t[1]-e[1]))[0])?void 0:C[0];t&&(n=t);break}case\"initialPlacement\":n=c}if(r!==n)return{reset:{placement:n}}}return{}}}};function A(t,e){return{top:t.top-e.height,right:t.right-e.width,bottom:t.bottom-e.height,left:t.left-e.width}}function R(t){return g.some((e=>t[e]>=0))}const P=function(t){return void 0===t&&(t={}),{name:\"hide\",options:t,async fn(e){const{strategy:n=\"referenceHidden\",...o}=t,{rects:i}=e;switch(n){case\"referenceHidden\":{const t=A(await s(e,{...o,elementContext:\"reference\"}),i.reference);return{data:{referenceHiddenOffsets:t,referenceHidden:R(t)}}}case\"escaped\":{const t=A(await s(e,{...o,altBoundary:!0}),i.floating);return{data:{escapedOffsets:t,escaped:R(t)}}}default:return{}}}}};function E(t){const e=c(...t.map((t=>t.left))),n=c(...t.map((t=>t.top)));return{x:e,y:n,width:f(...t.map((t=>t.right)))-e,height:f(...t.map((t=>t.bottom)))-n}}const T=function(t){return void 0===t&&(t={}),{name:\"inline\",options:t,async fn(e){const{placement:i,elements:r,rects:s,platform:m,strategy:u}=e,{padding:g=2,x:d,y:p}=t,h=Array.from(await(null==m.getClientRects?void 0:m.getClientRects(r.reference))||[]),y=function(t){const e=t.slice().sort(((t,e)=>t.y-e.y)),n=[];let o=null;for(let t=0;t<e.length;t++){const i=e[t];!o||i.y-o.y>o.height/2?n.push([i]):n[n.length-1].push(i),o=i}return n.map((t=>l(E(t))))}(h),x=l(E(h)),w=a(g);const v=await m.getElementRects({reference:{getBoundingClientRect:function(){if(2===y.length&&y[0].left>y[1].right&&null!=d&&null!=p)return y.find((t=>d>t.left-w.left&&d<t.right+w.right&&p>t.top-w.top&&p<t.bottom+w.bottom))||x;if(y.length>=2){if(\"x\"===o(i)){const t=y[0],e=y[y.length-1],o=\"top\"===n(i),r=t.top,a=e.bottom,l=o?t.left:e.left,s=o?t.right:e.right;return{top:r,bottom:a,left:l,right:s,width:s-l,height:a-r,x:l,y:r}}const t=\"left\"===n(i),e=f(...y.map((t=>t.right))),r=c(...y.map((t=>t.left))),a=y.filter((n=>t?n.left===r:n.right===e)),l=a[0].top,s=a[a.length-1].bottom;return{top:l,bottom:s,left:r,right:e,width:e-r,height:s-l,x:r,y:l}}return x}},floating:r.floating,strategy:u});return s.reference.x!==v.reference.x||s.reference.y!==v.reference.y||s.reference.width!==v.reference.width||s.reference.height!==v.reference.height?{reset:{rects:v}}:{}}}};const D=function(e){return void 0===e&&(e=0),{name:\"offset\",options:e,async fn(i){const{x:r,y:a}=i,l=await async function(e,i){const{placement:r,platform:a,elements:l}=e,s=await(null==a.isRTL?void 0:a.isRTL(l.floating)),c=n(r),f=t(r),m=\"x\"===o(r),u=[\"left\",\"top\"].includes(c)?-1:1,g=s&&m?-1:1,d=\"function\"==typeof i?i(e):i;let{mainAxis:p,crossAxis:h,alignmentAxis:y}=\"number\"==typeof d?{mainAxis:d,crossAxis:0,alignmentAxis:null}:{mainAxis:0,crossAxis:0,alignmentAxis:null,...d};return f&&\"number\"==typeof y&&(h=\"end\"===f?-1*y:y),m?{x:h*g,y:p*u}:{x:p*u,y:h*g}}(i,e);return{x:r+l.x,y:a+l.y,data:l}}}};function L(t){return\"x\"===t?\"y\":\"x\"}const k=function(t){return void 0===t&&(t={}),{name:\"shift\",options:t,async fn(e){const{x:i,y:r,placement:a}=e,{mainAxis:l=!0,crossAxis:c=!1,limiter:f={fn:t=>{let{x:e,y:n}=t;return{x:e,y:n}}},...u}=t,g={x:i,y:r},d=await s(e,u),p=o(n(a)),h=L(p);let y=g[p],x=g[h];if(l){const t=\"y\"===p?\"bottom\":\"right\";y=m(y+d[\"y\"===p?\"top\":\"left\"],y,y-d[t])}if(c){const t=\"y\"===h?\"bottom\":\"right\";x=m(x+d[\"y\"===h?\"top\":\"left\"],x,x-d[t])}const w=f.fn({...e,[p]:y,[h]:x});return{...w,data:{x:w.x-i,y:w.y-r}}}}},O=function(t){return void 0===t&&(t={}),{options:t,fn(e){const{x:i,y:r,placement:a,rects:l,middlewareData:s}=e,{offset:c=0,mainAxis:f=!0,crossAxis:m=!0}=t,u={x:i,y:r},g=o(a),d=L(g);let p=u[g],h=u[d];const y=\"function\"==typeof c?c(e):c,x=\"number\"==typeof y?{mainAxis:y,crossAxis:0}:{mainAxis:0,crossAxis:0,...y};if(f){const t=\"y\"===g?\"height\":\"width\",e=l.reference[g]-l.floating[t]+x.mainAxis,n=l.reference[g]+l.reference[t]-x.mainAxis;p<e?p=e:p>n&&(p=n)}if(m){var w,v;const t=\"y\"===g?\"width\":\"height\",e=[\"top\",\"left\"].includes(n(a)),o=l.reference[d]-l.floating[t]+(e&&(null==(w=s.offset)?void 0:w[d])||0)+(e?0:x.crossAxis),i=l.reference[d]+l.reference[t]+(e?0:(null==(v=s.offset)?void 0:v[d])||0)-(e?x.crossAxis:0);h<o?h=o:h>i&&(h=i)}return{[g]:p,[d]:h}}}},B=function(e){return void 0===e&&(e={}),{name:\"size\",options:e,async fn(i){const{placement:r,rects:a,platform:l,elements:m}=i,{apply:u=(()=>{}),...g}=e,d=await s(i,g),p=n(r),h=t(r),y=\"x\"===o(r),{width:x,height:w}=a.floating;let v,b;\"top\"===p||\"bottom\"===p?(v=p,b=h===(await(null==l.isRTL?void 0:l.isRTL(m.floating))?\"start\":\"end\")?\"left\":\"right\"):(b=p,v=\"end\"===h?\"top\":\"bottom\");const A=w-d[v],R=x-d[b];let P=A,E=R;if(y?E=c(x-d.right-d.left,R):P=c(w-d.bottom-d.top,A),!i.middlewareData.shift&&!h){const t=f(d.left,0),e=f(d.right,0),n=f(d.top,0),o=f(d.bottom,0);y?E=x-2*(0!==t||0!==e?t+e:f(d.left,d.right)):P=w-2*(0!==n||0!==o?n+o:f(d.top,d.bottom))}await u({...i,availableWidth:E,availableHeight:P});const T=await l.getDimensions(m.floating);return x!==T.width||w!==T.height?{reset:{rects:!0}}:{}}}};export{u as arrow,v as autoPlacement,r as computePosition,s as detectOverflow,b as flip,P as hide,T as inline,O as limitShift,D as offset,l as rectToClientRect,k as shift,B as size};\n","import{rectToClientRect as t,computePosition as e}from\"@floating-ui/core\";export{arrow,autoPlacement,detectOverflow,flip,hide,inline,limitShift,offset,shift,size}from\"@floating-ui/core\";function n(t){var e;return(null==(e=t.ownerDocument)?void 0:e.defaultView)||window}function o(t){return n(t).getComputedStyle(t)}function i(t){return t instanceof n(t).Node}function r(t){return i(t)?(t.nodeName||\"\").toLowerCase():\"\"}let l;function c(){if(l)return l;const t=navigator.userAgentData;return t&&Array.isArray(t.brands)?(l=t.brands.map((t=>t.brand+\"/\"+t.version)).join(\" \"),l):navigator.userAgent}function s(t){return t instanceof n(t).HTMLElement}function f(t){return t instanceof n(t).Element}function u(t){if(\"undefined\"==typeof ShadowRoot)return!1;return t instanceof n(t).ShadowRoot||t instanceof ShadowRoot}function a(t){const{overflow:e,overflowX:n,overflowY:i,display:r}=o(t);return/auto|scroll|overlay|hidden|clip/.test(e+i+n)&&![\"inline\",\"contents\"].includes(r)}function d(t){return[\"table\",\"td\",\"th\"].includes(r(t))}function h(t){const e=/firefox/i.test(c()),n=o(t),i=n.backdropFilter||n.WebkitBackdropFilter;return\"none\"!==n.transform||\"none\"!==n.perspective||!!i&&\"none\"!==i||e&&\"filter\"===n.willChange||e&&!!n.filter&&\"none\"!==n.filter||[\"transform\",\"perspective\"].some((t=>n.willChange.includes(t)))||[\"paint\",\"layout\",\"strict\",\"content\"].some((t=>{const e=n.contain;return null!=e&&e.includes(t)}))}function p(){return/^((?!chrome|android).)*safari/i.test(c())}function g(t){return[\"html\",\"body\",\"#document\"].includes(r(t))}const m=Math.min,y=Math.max,x=Math.round;function w(t){const e=o(t);let n=parseFloat(e.width),i=parseFloat(e.height);const r=s(t),l=r?t.offsetWidth:n,c=r?t.offsetHeight:i,f=x(n)!==l||x(i)!==c;return f&&(n=l,i=c),{width:n,height:i,fallback:f}}function v(t){return f(t)?t:t.contextElement}const b={x:1,y:1};function L(t){const e=v(t);if(!s(e))return b;const n=e.getBoundingClientRect(),{width:o,height:i,fallback:r}=w(e);let l=(r?x(n.width):n.width)/o,c=(r?x(n.height):n.height)/i;return l&&Number.isFinite(l)||(l=1),c&&Number.isFinite(c)||(c=1),{x:l,y:c}}function E(e,o,i,r){var l,c;void 0===o&&(o=!1),void 0===i&&(i=!1);const s=e.getBoundingClientRect(),u=v(e);let a=b;o&&(r?f(r)&&(a=L(r)):a=L(e));const d=u?n(u):window,h=p()&&i;let g=(s.left+(h&&(null==(l=d.visualViewport)?void 0:l.offsetLeft)||0))/a.x,m=(s.top+(h&&(null==(c=d.visualViewport)?void 0:c.offsetTop)||0))/a.y,y=s.width/a.x,x=s.height/a.y;if(u){const t=n(u),e=r&&f(r)?n(r):r;let o=t.frameElement;for(;o&&r&&e!==t;){const t=L(o),e=o.getBoundingClientRect(),i=getComputedStyle(o);e.x+=(o.clientLeft+parseFloat(i.paddingLeft))*t.x,e.y+=(o.clientTop+parseFloat(i.paddingTop))*t.y,g*=t.x,m*=t.y,y*=t.x,x*=t.y,g+=e.x,m+=e.y,o=n(o).frameElement}}return t({width:y,height:x,x:g,y:m})}function T(t){return((i(t)?t.ownerDocument:t.document)||window.document).documentElement}function R(t){return f(t)?{scrollLeft:t.scrollLeft,scrollTop:t.scrollTop}:{scrollLeft:t.pageXOffset,scrollTop:t.pageYOffset}}function C(t){return E(T(t)).left+R(t).scrollLeft}function F(t){if(\"html\"===r(t))return t;const e=t.assignedSlot||t.parentNode||u(t)&&t.host||T(t);return u(e)?e.host:e}function W(t){const e=F(t);return g(e)?e.ownerDocument.body:s(e)&&a(e)?e:W(e)}function D(t,e){var o;void 0===e&&(e=[]);const i=W(t),r=i===(null==(o=t.ownerDocument)?void 0:o.body),l=n(i);return r?e.concat(l,l.visualViewport||[],a(i)?i:[]):e.concat(i,D(i))}function S(e,i,r){let l;if(\"viewport\"===i)l=function(t,e){const o=n(t),i=T(t),r=o.visualViewport;let l=i.clientWidth,c=i.clientHeight,s=0,f=0;if(r){l=r.width,c=r.height;const t=p();(!t||t&&\"fixed\"===e)&&(s=r.offsetLeft,f=r.offsetTop)}return{width:l,height:c,x:s,y:f}}(e,r);else if(\"document\"===i)l=function(t){const e=T(t),n=R(t),i=t.ownerDocument.body,r=y(e.scrollWidth,e.clientWidth,i.scrollWidth,i.clientWidth),l=y(e.scrollHeight,e.clientHeight,i.scrollHeight,i.clientHeight);let c=-n.scrollLeft+C(t);const s=-n.scrollTop;return\"rtl\"===o(i).direction&&(c+=y(e.clientWidth,i.clientWidth)-r),{width:r,height:l,x:c,y:s}}(T(e));else if(f(i))l=function(t,e){const n=E(t,!0,\"fixed\"===e),o=n.top+t.clientTop,i=n.left+t.clientLeft,r=s(t)?L(t):{x:1,y:1};return{width:t.clientWidth*r.x,height:t.clientHeight*r.y,x:i*r.x,y:o*r.y}}(i,r);else{const t={...i};if(p()){var c,u;const o=n(e);t.x-=(null==(c=o.visualViewport)?void 0:c.offsetLeft)||0,t.y-=(null==(u=o.visualViewport)?void 0:u.offsetTop)||0}l=t}return t(l)}function A(t,e){return s(t)&&\"fixed\"!==o(t).position?e?e(t):t.offsetParent:null}function H(t,e){const i=n(t);if(!s(t))return i;let l=A(t,e);for(;l&&d(l)&&\"static\"===o(l).position;)l=A(l,e);return l&&(\"html\"===r(l)||\"body\"===r(l)&&\"static\"===o(l).position&&!h(l))?i:l||function(t){let e=F(t);for(;s(e)&&!g(e);){if(h(e))return e;e=F(e)}return null}(t)||i}function V(t,e,n){const o=s(e),i=T(e),l=E(t,!0,\"fixed\"===n,e);let c={scrollLeft:0,scrollTop:0};const f={x:0,y:0};if(o||!o&&\"fixed\"!==n)if((\"body\"!==r(e)||a(i))&&(c=R(e)),s(e)){const t=E(e,!0);f.x=t.x+e.clientLeft,f.y=t.y+e.clientTop}else i&&(f.x=C(i));return{x:l.left+c.scrollLeft-f.x,y:l.top+c.scrollTop-f.y,width:l.width,height:l.height}}const O={getClippingRect:function(t){let{element:e,boundary:n,rootBoundary:i,strategy:l}=t;const c=\"clippingAncestors\"===n?function(t,e){const n=e.get(t);if(n)return n;let i=D(t).filter((t=>f(t)&&\"body\"!==r(t))),l=null;const c=\"fixed\"===o(t).position;let s=c?F(t):t;for(;f(s)&&!g(s);){const t=o(s),e=h(s);\"fixed\"===t.position?l=null:(c?e||l:e||\"static\"!==t.position||!l||![\"absolute\",\"fixed\"].includes(l.position))?l=t:i=i.filter((t=>t!==s)),s=F(s)}return e.set(t,i),i}(e,this._c):[].concat(n),s=[...c,i],u=s[0],a=s.reduce(((t,n)=>{const o=S(e,n,l);return t.top=y(o.top,t.top),t.right=m(o.right,t.right),t.bottom=m(o.bottom,t.bottom),t.left=y(o.left,t.left),t}),S(e,u,l));return{width:a.right-a.left,height:a.bottom-a.top,x:a.left,y:a.top}},convertOffsetParentRelativeRectToViewportRelativeRect:function(t){let{rect:e,offsetParent:n,strategy:o}=t;const i=s(n),l=T(n);if(n===l)return e;let c={scrollLeft:0,scrollTop:0},f={x:1,y:1};const u={x:0,y:0};if((i||!i&&\"fixed\"!==o)&&((\"body\"!==r(n)||a(l))&&(c=R(n)),s(n))){const t=E(n);f=L(n),u.x=t.x+n.clientLeft,u.y=t.y+n.clientTop}return{width:e.width*f.x,height:e.height*f.y,x:e.x*f.x-c.scrollLeft*f.x+u.x,y:e.y*f.y-c.scrollTop*f.y+u.y}},isElement:f,getDimensions:function(t){return w(t)},getOffsetParent:H,getDocumentElement:T,getScale:L,async getElementRects(t){let{reference:e,floating:n,strategy:o}=t;const i=this.getOffsetParent||H,r=this.getDimensions;return{reference:V(e,await i(n),o),floating:{x:0,y:0,...await r(n)}}},getClientRects:t=>Array.from(t.getClientRects()),isRTL:t=>\"rtl\"===o(t).direction};function P(t,e,n,o){void 0===o&&(o={});const{ancestorScroll:i=!0,ancestorResize:r=!0,elementResize:l=!0,animationFrame:c=!1}=o,s=i&&!c,u=s||r?[...f(t)?D(t):t.contextElement?D(t.contextElement):[],...D(e)]:[];u.forEach((t=>{s&&t.addEventListener(\"scroll\",n,{passive:!0}),r&&t.addEventListener(\"resize\",n)}));let a,d=null;l&&(d=new ResizeObserver((()=>{n()})),f(t)&&!c&&d.observe(t),f(t)||!t.contextElement||c||d.observe(t.contextElement),d.observe(e));let h=c?E(t):null;return c&&function e(){const o=E(t);!h||o.x===h.x&&o.y===h.y&&o.width===h.width&&o.height===h.height||n();h=o,a=requestAnimationFrame(e)}(),n(),()=>{var t;u.forEach((t=>{s&&t.removeEventListener(\"scroll\",n),r&&t.removeEventListener(\"resize\",n)})),null==(t=d)||t.disconnect(),d=null,c&&cancelAnimationFrame(a)}}const z=(t,n,o)=>{const i=new Map,r={platform:O,...o},l={...r.platform,_c:i};return e(t,n,{...r,platform:l})};export{P as autoUpdate,z as computePosition,D as getOverflowAncestors,O as platform};\n","import { ReplaySubject } from \"rxjs\";\nimport { takeUntil } from \"rxjs/operators\";\n/*\nfunction getInternalAngularComponent<T>(type: any): any {\n    noinspection JSNonASCIINames\n    // return type.ɵdir || type.ɵcmp;\n}\n\nexport function ObserveOnDestroy() {\n    return (target: any) => {\n        const componentDefinition = getInternalAngularComponent(target);\n        if (componentDefinition) {\n            const old = componentDefinition.onDestroy;\n            componentDefinition.onDestroy = function (this: any) {\n                const onDestroySubject = componentDestroyed(this) as Subject<void>;\n                onDestroySubject.next();\n\n                if (old !== undefined && old !== null) {\n                    old();\n                }\n            };\n        } else {\n            throw new Error(\"Ivy and AoT must be enabled for @ObserveOnDestroy().\");\n        }\n\n        function decorated(this: any) {\n            const instance = Reflect.construct(target, arguments);\n            instance[ON_DESTROY_SUBJECT_KEY] = new ReplaySubject(1);\n            return instance;\n        }\n\n        Object.setPrototypeOf(decorated, target);\n        return decorated as any;\n    };\n}\n*/\nvar ON_DESTROY_SUBJECT_KEY = Symbol(\"ON_DESTROY_SUBJECT_KEY\");\nvar OnDestroyMixin = /** @class */ (function () {\n    function OnDestroyMixin() {\n        this[ON_DESTROY_SUBJECT_KEY] = new ReplaySubject();\n    }\n    OnDestroyMixin.prototype.observeOnDestroy = function () {\n        return this[ON_DESTROY_SUBJECT_KEY];\n    };\n    OnDestroyMixin.prototype.ngOnDestroy = function () {\n        this.observeOnDestroy().next();\n    };\n    return OnDestroyMixin;\n}());\nexport { OnDestroyMixin };\nexport function componentDestroyed(target) {\n    var onDestroySubject = target[ON_DESTROY_SUBJECT_KEY];\n    if (onDestroySubject === undefined) {\n        var proto = Object.getPrototypeOf(target);\n        var compInfo = proto !== undefined && proto.constructor !== undefined !== proto.constructor.name !== undefined\n            ? \" (component: \" + proto.constructor.name + \")\"\n            : \"\";\n        throw new Error(\"You are almost there! Please extends the base class 'OnDestroyMixin'\" + compInfo + \".\");\n    }\n    return onDestroySubject;\n}\nexport function untilComponentDestroyed(component) {\n    return function (source) { return source.pipe(takeUntil(componentDestroyed(component))); };\n}\n"],"names":["hasV8BreakIterator","Intl","v8BreakIterator","Platform","constructor","_platformId","this","isBrowser","isPlatformBrowser","document","EDGE","test","navigator","userAgent","TRIDENT","BLINK","window","chrome","CSS","WEBKIT","IOS","FIREFOX","ANDROID","SAFARI","ɵfac","i0","PLATFORM_ID","ɵprov","type","Injectable","args","providedIn","Object","decorators","Inject","PlatformModule","ɵmod","ɵinj","NgModule","supportsPassiveEvents","shadowDomIsSupported","normalizePassiveListenerOptions","options","supportsPassiveEventListeners","addEventListener","defineProperty","get","capture","_getShadowRoot","element","_supportsShadowDom","head","createShadowRoot","attachShadow","rootNode","getRootNode","ShadowRoot","_getEventTarget","event","composedPath","target","skip","count","filter","_","index","coerceBooleanProperty","value","coerceNumberProperty","fallbackValue","_isNumberValue","isNaN","parseFloat","Number","coerceArray","Array","isArray","coerceElement","elementOrRef","ElementRef","nativeElement","debounceTime","dueTime","scheduler","asyncScheduler","operate","source","subscriber","activeTask","lastValue","lastTime","emit","unsubscribe","next","emitWhenIdle","targetTime","now","schedule","undefined","add","subscribe","createOperatorSubscriber","complete","MutationObserverFactory","create","callback","MutationObserver","ContentObserver","_mutationObserverFactory","_observedElements","Map","ngOnDestroy","forEach","_cleanupObserver","observe","Observable","observer","subscription","_observeElement","_unobserveElement","has","stream","Subject","mutations","characterData","childList","subtree","set","disconnect","delete","CdkObserveContent","disabled","_disabled","_unsubscribe","_subscribe","debounce","_debounce","_contentObserver","_elementRef","_ngZone","EventEmitter","_currentSubscription","ngAfterContentInit","runOutsideAngular","pipe","ɵdir","Directive","selector","exportAs","Output","Input","ObserversModule","exports","declarations","providers","LayoutModule","mediaQueriesForWebkitCompatibility","Set","mediaQueryStyleNode","MediaMatcher","_platform","_matchMedia","matchMedia","bind","noopMatchMedia","query","createEmptyStyleRule","createElement","setAttribute","appendChild","sheet","insertRule","e","console","error","matches","media","addListener","removeListener","i1","BreakpointObserver","_mediaMatcher","_zone","_queries","_destroySubject","isMatched","splitQueries","some","mediaQuery","_registerQuery","mql","observables","map","observable","stateObservable","combineLatest","concat","take","breakpointStates","response","breakpoints","output","handler","run","startWith","takeUntil","queries","split","reduce","a1","a2","trim","getAriaReferenceIds","el","attr","getAttribute","match","CDK_DESCRIBEDBY_ID_PREFIX","nextId","AriaDescriber","_document","_messageRegistry","_messagesContainer","_id","inject","APP_ID","describe","hostElement","message","role","_canBeDescribed","key","getKey","setMessageId","messageElement","referenceCount","_createMessageElement","_isElementDescribedByMessage","_addMessageReference","removeDescription","_isElementNode","_removeMessageReference","registeredMessage","_deleteMessageElement","childNodes","length","remove","describedElements","querySelectorAll","i","_removeCdkDescribedByReferenceIds","removeAttribute","clear","textContent","_createMessagesContainer","serverContainers","messagesContainer","style","visibility","classList","body","originalReferenceIds","id","indexOf","join","addAriaReferencedId","ids","existingId","push","removeAriaReferencedId","filteredIds","val","referenceIds","messageId","trimmedMessage","ariaLabel","nodeType","ELEMENT_NODE","serviceId","DOCUMENT","InteractivityChecker","isDisabled","hasAttribute","isVisible","hasGeometry","offsetWidth","offsetHeight","getClientRects","getComputedStyle","isTabbable","frameElement","getFrameElement","getWindow","node","ownerDocument","defaultView","getTabIndexValue","nodeName","toLowerCase","tabIndexValue","isPotentiallyTabbableIOS","inputType","tabIndex","isFocusable","config","isPotentiallyFocusable","isHiddenInput","isInputElement","isNativeFormElement","isAnchorWithHref","isAnchorElement","hasValidTabIndex","ignoreVisibility","parseInt","FocusTrap","enabled","_enabled","_startAnchor","_endAnchor","_toggleAnchorTabIndex","_element","_checker","deferAnchors","_hasAttached","startAnchorListener","focusLastTabbableElement","endAnchorListener","focusFirstTabbableElement","attachAnchors","destroy","startAnchor","endAnchor","removeEventListener","_createAnchor","parentNode","insertBefore","nextSibling","focusInitialElementWhenReady","Promise","resolve","_executeOnStable","focusInitialElement","focusFirstTabbableElementWhenReady","focusLastTabbableElementWhenReady","_getRegionBoundary","bound","markers","ngDevMode","warn","_getFirstTabbableElement","_getLastTabbableElement","redirectToElement","querySelector","focusableChild","focus","hasAttached","root","children","tabbableChild","anchor","isEnabled","toggleAnchors","fn","isStable","onStable","FocusTrapFactory","deferCaptureElements","CdkTrapFocus","focusTrap","autoCapture","_autoCapture","_focusTrapFactory","_previouslyFocusedElement","_captureFocus","ngDoCheck","ngOnChanges","changes","autoCaptureChange","firstChange","_getFocusedElementPierceShadowDom","activeElement","shadowRoot","newActiveElement","ConfigurableFocusTrap","_focusTrapManager","register","deregister","_inertStrategy","super","defer","_enable","preventFocus","_disable","allowFocus","FOCUS_TRAP_INERT_STRATEGY","InjectionToken","EventListenerFocusTrapInertStrategy","_listener","_trapFocus","focusTrapRoot","contains","closest","setTimeout","FocusTrapManager","_focusTrapStack","ft","stack","splice","ConfigurableFocusTrapFactory","configObject","Optional","INPUT_MODALITY_DETECTOR_OPTIONS","INPUT_MODALITY_DETECTOR_DEFAULT_OPTIONS","ignoreKeys","modalityEventListenerOptions","passive","InputModalityDetector","mostRecentModality","_modality","ngZone","_mostRecentTarget","BehaviorSubject","_lastTouchMs","_onKeydown","_options","keyCode","_onMousedown","Date","isFakeMousedownFromScreenReader","buttons","offsetX","offsetY","_onTouchstart","isFakeTouchstartFromScreenReader","touch","touches","changedTouches","identifier","radiusX","radiusY","modalityDetected","modalityChanged","distinctUntilChanged","Document","LIVE_ANNOUNCER_ELEMENT_TOKEN","factory","LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY","LIVE_ANNOUNCER_DEFAULT_OPTIONS","uniqueIds","LiveAnnouncer","elementToken","_defaultOptions","_liveElement","_createLiveElement","announce","defaultOptions","politeness","duration","clearTimeout","_previousTimeout","_exposeAnnouncerToModals","_currentPromise","_currentResolve","previousElements","getElementsByClassName","liveEl","modals","modal","ariaOwns","CdkAriaLive","_politeness","_subscription","elementText","_previousAnnouncedText","_liveAnnouncer","i1$1","FOCUS_MONITOR_DEFAULT_OPTIONS","captureEventListenerOptions","FocusMonitor","_inputModalityDetector","_origin","_windowFocused","_originFromTouchInteraction","_elementInfo","_monitoredElementCount","_rootNodeFocusListenerCount","_windowFocusListener","_windowFocusTimeoutId","_stopInputModalityDetector","_rootNodeFocusAndBlurListener","parentElement","_onFocus","_onBlur","_detectionMode","detectionMode","monitor","checkChildren","of","_getDocument","cachedInfo","subject","info","_registerGlobalListeners","stopMonitoring","elementInfo","_setClasses","_removeGlobalListeners","focusVia","origin","_getClosestElementsInfo","currentElement","_originChanged","_setOrigin","_info","_getWindow","_getFocusOrigin","focusEventTarget","_shouldBeAttributedToTouch","_lastFocusOrigin","_isLastInteractionFromInputLabel","toggle","isFromInteraction","_originTimeoutId","ms","relatedTarget","Node","_emitOrigin","observers","rootNodeFocusListeners","modality","results","mostRecentTarget","labels","CdkMonitorFocus","_focusMonitor","_focusOrigin","cdkFocusChange","focusOrigin","ngAfterViewInit","_monitorSubscription","HighContrastModeDetector","_breakpointSubscription","_hasCheckedHighContrastMode","_applyBodyHighContrastModeCssClasses","getHighContrastMode","testElement","backgroundColor","position","documentWindow","computedStyle","computedColor","replace","bodyClasses","mode","A11yModule","highContrastModeDetector","imports","t","n","o","includes","r","a","reference","l","floating","s","c","x","width","f","y","height","m","u","g","d","p","placement","strategy","middleware","platform","Boolean","isRTL","getElementRects","name","h","data","w","reset","v","initialPlacement","middlewareData","rects","elements","top","right","bottom","left","boundary","rootBoundary","elementContext","altBoundary","padding","getClippingRect","isElement","contextElement","getDocumentElement","getOffsetParent","b","getScale","A","convertOffsetParentRelativeRectToViewportRelativeRect","rect","offsetParent","Math","min","max","main","cross","start","end","mainAxis","crossAxis","fallbackPlacements","fallbackStrategy","fallbackAxisSideDirection","flipAlignment","R","P","E","T","D","L","k","flip","overflows","every","O","B","sort","C","limiter","offset","userAgentData","brands","brand","version","HTMLElement","Element","overflow","overflowX","overflowY","display","backdropFilter","WebkitBackdropFilter","transform","perspective","willChange","contain","round","fallback","getBoundingClientRect","isFinite","visualViewport","offsetLeft","offsetTop","clientLeft","paddingLeft","clientTop","paddingTop","documentElement","scrollLeft","scrollTop","pageXOffset","pageYOffset","F","assignedSlot","host","W","S","clientWidth","clientHeight","scrollWidth","scrollHeight","direction","H","V","_c","getDimensions","from","ancestorScroll","ancestorResize","elementResize","animationFrame","ResizeObserver","requestAnimationFrame","cancelAnimationFrame","z","ON_DESTROY_SUBJECT_KEY","Symbol","OnDestroyMixin","ReplaySubject","prototype","observeOnDestroy","untilComponentDestroyed","component","componentDestroyed","onDestroySubject","proto","getPrototypeOf","compInfo","Error"],"sourceRoot":"webpack:///","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10]}