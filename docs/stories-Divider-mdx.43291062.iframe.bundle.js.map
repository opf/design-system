{"version":3,"file":"stories-Divider-mdx.43291062.iframe.bundle.js","mappings":"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","sources":["./src/stories/Divider.stories.ts","./node_modules/@mdx-js/react/lib/index.js","./node_modules/react/cjs/react-jsx-runtime.production.min.js","./node_modules/react/jsx-runtime.js","./src/stories/Divider.mdx"],"sourcesContent":["import type { Meta, StoryObj } from '@storybook/angular';\nimport { moduleMetadata } from '@storybook/angular';\nimport { OpSpotModule } from '../app/spot/spot.module';\n\nconst meta:Meta = {\n  title: 'Components/Divider',\n  decorators: [\n    moduleMetadata({\n      imports: [OpSpotModule],\n    }),\n  ],\n};\n\nexport default meta;\ntype Story = StoryObj;\n\nexport const Soft:Story = {\n  render: (args) => ({\n    props: args,\n    template: `\n      <div class=\"spot-container\">\n        <h1 class=\"spot-subheader-small\">Some header with a soft divider below</h1>\n        <div class=\"spot-divider\"></div>\n        <p class=\"spot-body-big\">\n          Lorem ipsum goes here but I'm too lazy to copy paste it from somewhere so I'll just ramble on\n          until I think it has been enough. That was a very long sentence so I'll do one shorter one. Blablabla is what I say.\n        </p>\n      </div>\n   `,\n  }),\n};\n\nexport const Strong:Story = {\n  render: (args) => ({\n    props: args,\n    template: `\n      <div class=\"spot-container\">\n        <h1 class=\"spot-subheader-small\">Strong divider below</h1>\n        <div class=\"spot-divider spot-divider_strong\"></div>\n        <p class=\"spot-body-big\">\n          Lorem ipsum goes here but I'm too lazy to copy paste it from somewhere so I'll just ramble on\n          until I think it has been enough. That was a very long sentence so I'll do one shorter one. Blablabla is what I say.\n        </p>\n      </div>\n   `,\n  }),\n};\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@storybook/addon-docs/mdx-react-shim\";\nimport {Canvas, Meta} from '@storybook/blocks';\nimport * as DividerStories from './Divider.stories';\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, {})\n  })) : _createMdxContent();\n  function _createMdxContent() {\n    const _components = Object.assign({\n      h1: \"h1\",\n      p: \"p\",\n      h2: \"h2\",\n      a: \"a\",\n      strong: \"strong\",\n      em: \"em\"\n    }, _provideComponents(), props.components);\n    return _jsxs(_Fragment, {\n      children: [_jsx(Meta, {\n        of: DividerStories\n      }), \"\\n\", _jsx(_components.h1, {\n        id: \"divider\",\n        children: \"Divider\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"A divider is a non-interactive visual element that allows for better grouping, organisation and hierarchy of elements on a page or a modal.\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"The divider should only be used when the absence of such a separation can lead to a view looking too busy or unstructured.\"\n      }), \"\\n\", _jsx(_components.h2, {\n        id: \"behaviour\",\n        children: \"Behaviour\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"The divider is not interactive.\"\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"The divider can either be full-width (in the \", _jsx(_components.a, {\n          href: \"#\",\n          children: \"Modal Dialogue\"\n        }), \" header, for example) or span only a part of the width of the parent (in the activity split screen).\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"This is determined by the parent element within which the divider is contained.\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Divider are usually placed horizontally, although they can also be placed  vertically.\"\n      }), \"\\n\", _jsx(_components.h2, {\n        id: \"options\",\n        children: \"Options\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"A divider can be soft or strong. The correct one to use depends on the structure and contrast of surrounding elements:\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: _jsx(_components.strong, {\n          children: \"Soft\"\n        })\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"1 px, Grey-5 (#E0E0E0)\"\n      }), \"\\n\", _jsx(Canvas, {\n        of: DividerStories.Soft\n      }), \"\\n\", _jsx(_components.p, {\n        children: _jsx(_components.strong, {\n          children: \"Strong\"\n        })\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"1px, Grey-4 (#CCCCCC)\"\n      }), \"\\n\", _jsx(Canvas, {\n        of: DividerStories.Strong\n      }), \"\\n\", _jsx(_components.p, {\n        children: _jsx(_components.em, {\n          children: \"Example: In the work package details view, the main three-way split (top header, left-side description, right-side split screen) is done using strong dividers, but on the Activity tab, dates are separated with soft ones.\"\n        })\n      })]\n    });\n  }\n}\nexport default MDXContent;\n"],"names":["title","decorators","moduleMetadata","imports","OpSpotModule","Soft","render","args","props","template","Strong","MDXContext","React","withMDXComponents","Component","boundMDXComponent","allComponents","useMDXComponents","components","contextComponents","emptyObject","MDXProvider","disableParentContext","Provider","value","children","f","require","k","Symbol","for","l","m","Object","prototype","hasOwnProperty","n","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","p","key","ref","__self","__source","q","c","a","g","b","d","e","h","call","defaultProps","$$typeof","type","_owner","current","exports","Fragment","jsx","jsxs","module","MDXContent","wrapper","MDXLayout","assign","_createMdxContent","_components","h1","h2","strong","em","of","id","href"],"sourceRoot":"webpack:///","x_google_ignoreList":[1,2,3]}