{"version":3,"file":"5461.9df1ab4e.iframe.bundle.js","mappings":"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","sources":["./node_modules/@angular/cdk/fesm2022/platform.mjs","./node_modules/rxjs/dist/esm5/internal/operators/skip.js","./node_modules/@angular/cdk/fesm2022/coercion.mjs","./node_modules/rxjs/dist/esm5/internal/scheduler/Action.js","./node_modules/rxjs/dist/esm5/internal/scheduler/intervalProvider.js","./node_modules/rxjs/dist/esm5/internal/scheduler/AsyncAction.js","./node_modules/rxjs/dist/esm5/internal/Scheduler.js","./node_modules/rxjs/dist/esm5/internal/scheduler/async.js","./node_modules/rxjs/dist/esm5/internal/scheduler/AsyncScheduler.js","./node_modules/rxjs/dist/esm5/internal/operators/debounceTime.js","./node_modules/@angular/cdk/fesm2022/observers.mjs","./node_modules/rxjs/dist/esm5/internal/observable/combineLatest.js","./node_modules/rxjs/dist/esm5/internal/observable/concat.js","./node_modules/rxjs/dist/esm5/internal/operators/concatAll.js","./node_modules/@angular/cdk/fesm2022/layout.mjs","./node_modules/rxjs/dist/esm5/internal/operators/startWith.js","./node_modules/@angular/cdk/fesm2022/a11y.mjs","./node_modules/@angular/cdk/fesm2022/keycodes.mjs","./node_modules/@angular/forms/fesm2022/forms.mjs","./node_modules/rxjs/dist/esm5/internal/observable/forkJoin.js","./node_modules/@storybook/angular/dist/client/decorators.js","./node_modules/@storybook/angular/dist/client/index.js","./node_modules/@storybook/angular/dist/client/public-api.js","./node_modules/@storybook/angular/dist/client/public-types.js","./node_modules/rxjs/dist/esm5/internal/ReplaySubject.js","./node_modules/@w11k/ngx-componentdestroyed/dist/es2015/index.js","./node_modules/lodash/lodash.js","./node_modules/reflect-metadata/Reflect.js","./node_modules/rxjs/dist/esm5/internal/operators/takeUntil.js","./node_modules/rxjs/dist/esm5/internal/scheduler/dateTimestampProvider.js","./node_modules/rxjs/dist/esm5/internal/util/argsArgArrayOrObject.js","./node_modules/rxjs/dist/esm5/internal/util/createObject.js","./node_modules/rxjs/dist/esm5/internal/util/mapOneOrManyArgs.js"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { PLATFORM_ID, Injectable, Inject, NgModule } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n// Whether the current platform supports the V8 Break Iterator. The V8 check\n// is necessary to detect all Blink based browsers.\nlet hasV8BreakIterator;\n// We need a try/catch around the reference to `Intl`, because accessing it in some cases can\n// cause IE to throw. These cases are tied to particular versions of Windows and can happen if\n// the consumer is providing a polyfilled `Map`. See:\n// https://github.com/Microsoft/ChakraCore/issues/3189\n// https://github.com/angular/components/issues/15687\ntry {\n    hasV8BreakIterator = typeof Intl !== 'undefined' && Intl.v8BreakIterator;\n}\ncatch {\n    hasV8BreakIterator = false;\n}\n/**\n * Service to detect the current platform by comparing the userAgent strings and\n * checking browser-specific global properties.\n */\nclass Platform {\n    constructor(_platformId) {\n        this._platformId = _platformId;\n        // We want to use the Angular platform check because if the Document is shimmed\n        // without the navigator, the following checks will fail. This is preferred because\n        // sometimes the Document may be shimmed without the user's knowledge or intention\n        /** Whether the Angular application is being rendered in the browser. */\n        this.isBrowser = this._platformId\n            ? isPlatformBrowser(this._platformId)\n            : typeof document === 'object' && !!document;\n        /** Whether the current browser is Microsoft Edge. */\n        this.EDGE = this.isBrowser && /(edge)/i.test(navigator.userAgent);\n        /** Whether the current rendering engine is Microsoft Trident. */\n        this.TRIDENT = this.isBrowser && /(msie|trident)/i.test(navigator.userAgent);\n        // EdgeHTML and Trident mock Blink specific things and need to be excluded from this check.\n        /** Whether the current rendering engine is Blink. */\n        this.BLINK = this.isBrowser &&\n            !!(window.chrome || hasV8BreakIterator) &&\n            typeof CSS !== 'undefined' &&\n            !this.EDGE &&\n            !this.TRIDENT;\n        // Webkit is part of the userAgent in EdgeHTML, Blink and Trident. Therefore we need to\n        // ensure that Webkit runs standalone and is not used as another engine's base.\n        /** Whether the current rendering engine is WebKit. */\n        this.WEBKIT = this.isBrowser &&\n            /AppleWebKit/i.test(navigator.userAgent) &&\n            !this.BLINK &&\n            !this.EDGE &&\n            !this.TRIDENT;\n        /** Whether the current platform is Apple iOS. */\n        this.IOS = this.isBrowser && /iPad|iPhone|iPod/.test(navigator.userAgent) && !('MSStream' in window);\n        // It's difficult to detect the plain Gecko engine, because most of the browsers identify\n        // them self as Gecko-like browsers and modify the userAgent's according to that.\n        // Since we only cover one explicit Firefox case, we can simply check for Firefox\n        // instead of having an unstable check for Gecko.\n        /** Whether the current browser is Firefox. */\n        this.FIREFOX = this.isBrowser && /(firefox|minefield)/i.test(navigator.userAgent);\n        /** Whether the current platform is Android. */\n        // Trident on mobile adds the android platform to the userAgent to trick detections.\n        this.ANDROID = this.isBrowser && /android/i.test(navigator.userAgent) && !this.TRIDENT;\n        // Safari browsers will include the Safari keyword in their userAgent. Some browsers may fake\n        // this and just place the Safari keyword in the userAgent. To be more safe about Safari every\n        // Safari browser should also use Webkit as its layout engine.\n        /** Whether the current browser is Safari. */\n        this.SAFARI = this.isBrowser && /safari/i.test(navigator.userAgent) && this.WEBKIT;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: Platform, deps: [{ token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: Platform, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: Platform, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: Object, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; } });\n\nclass PlatformModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: PlatformModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.1.1\", ngImport: i0, type: PlatformModule }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: PlatformModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: PlatformModule, decorators: [{\n            type: NgModule,\n            args: [{}]\n        }] });\n\n/** Cached result Set of input types support by the current browser. */\nlet supportedInputTypes;\n/** Types of `<input>` that *might* be supported. */\nconst candidateInputTypes = [\n    // `color` must come first. Chrome 56 shows a warning if we change the type to `color` after\n    // first changing it to something else:\n    // The specified value \"\" does not conform to the required format.\n    // The format is \"#rrggbb\" where rr, gg, bb are two-digit hexadecimal numbers.\n    'color',\n    'button',\n    'checkbox',\n    'date',\n    'datetime-local',\n    'email',\n    'file',\n    'hidden',\n    'image',\n    'month',\n    'number',\n    'password',\n    'radio',\n    'range',\n    'reset',\n    'search',\n    'submit',\n    'tel',\n    'text',\n    'time',\n    'url',\n    'week',\n];\n/** @returns The input types supported by this browser. */\nfunction getSupportedInputTypes() {\n    // Result is cached.\n    if (supportedInputTypes) {\n        return supportedInputTypes;\n    }\n    // We can't check if an input type is not supported until we're on the browser, so say that\n    // everything is supported when not on the browser. We don't use `Platform` here since it's\n    // just a helper function and can't inject it.\n    if (typeof document !== 'object' || !document) {\n        supportedInputTypes = new Set(candidateInputTypes);\n        return supportedInputTypes;\n    }\n    let featureTestInput = document.createElement('input');\n    supportedInputTypes = new Set(candidateInputTypes.filter(value => {\n        featureTestInput.setAttribute('type', value);\n        return featureTestInput.type === value;\n    }));\n    return supportedInputTypes;\n}\n\n/** Cached result of whether the user's browser supports passive event listeners. */\nlet supportsPassiveEvents;\n/**\n * Checks whether the user's browser supports passive event listeners.\n * See: https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n */\nfunction supportsPassiveEventListeners() {\n    if (supportsPassiveEvents == null && typeof window !== 'undefined') {\n        try {\n            window.addEventListener('test', null, Object.defineProperty({}, 'passive', {\n                get: () => (supportsPassiveEvents = true),\n            }));\n        }\n        finally {\n            supportsPassiveEvents = supportsPassiveEvents || false;\n        }\n    }\n    return supportsPassiveEvents;\n}\n/**\n * Normalizes an `AddEventListener` object to something that can be passed\n * to `addEventListener` on any browser, no matter whether it supports the\n * `options` parameter.\n * @param options Object to be normalized.\n */\nfunction normalizePassiveListenerOptions(options) {\n    return supportsPassiveEventListeners() ? options : !!options.capture;\n}\n\n/** Cached result of the way the browser handles the horizontal scroll axis in RTL mode. */\nlet rtlScrollAxisType;\n/** Cached result of the check that indicates whether the browser supports scroll behaviors. */\nlet scrollBehaviorSupported;\n/** Check whether the browser supports scroll behaviors. */\nfunction supportsScrollBehavior() {\n    if (scrollBehaviorSupported == null) {\n        // If we're not in the browser, it can't be supported. Also check for `Element`, because\n        // some projects stub out the global `document` during SSR which can throw us off.\n        if (typeof document !== 'object' || !document || typeof Element !== 'function' || !Element) {\n            scrollBehaviorSupported = false;\n            return scrollBehaviorSupported;\n        }\n        // If the element can have a `scrollBehavior` style, we can be sure that it's supported.\n        if ('scrollBehavior' in document.documentElement.style) {\n            scrollBehaviorSupported = true;\n        }\n        else {\n            // At this point we have 3 possibilities: `scrollTo` isn't supported at all, it's\n            // supported but it doesn't handle scroll behavior, or it has been polyfilled.\n            const scrollToFunction = Element.prototype.scrollTo;\n            if (scrollToFunction) {\n                // We can detect if the function has been polyfilled by calling `toString` on it. Native\n                // functions are obfuscated using `[native code]`, whereas if it was overwritten we'd get\n                // the actual function source. Via https://davidwalsh.name/detect-native-function. Consider\n                // polyfilled functions as supporting scroll behavior.\n                scrollBehaviorSupported = !/\\{\\s*\\[native code\\]\\s*\\}/.test(scrollToFunction.toString());\n            }\n            else {\n                scrollBehaviorSupported = false;\n            }\n        }\n    }\n    return scrollBehaviorSupported;\n}\n/**\n * Checks the type of RTL scroll axis used by this browser. As of time of writing, Chrome is NORMAL,\n * Firefox & Safari are NEGATED, and IE & Edge are INVERTED.\n */\nfunction getRtlScrollAxisType() {\n    // We can't check unless we're on the browser. Just assume 'normal' if we're not.\n    if (typeof document !== 'object' || !document) {\n        return 0 /* RtlScrollAxisType.NORMAL */;\n    }\n    if (rtlScrollAxisType == null) {\n        // Create a 1px wide scrolling container and a 2px wide content element.\n        const scrollContainer = document.createElement('div');\n        const containerStyle = scrollContainer.style;\n        scrollContainer.dir = 'rtl';\n        containerStyle.width = '1px';\n        containerStyle.overflow = 'auto';\n        containerStyle.visibility = 'hidden';\n        containerStyle.pointerEvents = 'none';\n        containerStyle.position = 'absolute';\n        const content = document.createElement('div');\n        const contentStyle = content.style;\n        contentStyle.width = '2px';\n        contentStyle.height = '1px';\n        scrollContainer.appendChild(content);\n        document.body.appendChild(scrollContainer);\n        rtlScrollAxisType = 0 /* RtlScrollAxisType.NORMAL */;\n        // The viewport starts scrolled all the way to the right in RTL mode. If we are in a NORMAL\n        // browser this would mean that the scrollLeft should be 1. If it's zero instead we know we're\n        // dealing with one of the other two types of browsers.\n        if (scrollContainer.scrollLeft === 0) {\n            // In a NEGATED browser the scrollLeft is always somewhere in [-maxScrollAmount, 0]. For an\n            // INVERTED browser it is always somewhere in [0, maxScrollAmount]. We can determine which by\n            // setting to the scrollLeft to 1. This is past the max for a NEGATED browser, so it will\n            // return 0 when we read it again.\n            scrollContainer.scrollLeft = 1;\n            rtlScrollAxisType =\n                scrollContainer.scrollLeft === 0 ? 1 /* RtlScrollAxisType.NEGATED */ : 2 /* RtlScrollAxisType.INVERTED */;\n        }\n        scrollContainer.remove();\n    }\n    return rtlScrollAxisType;\n}\n\nlet shadowDomIsSupported;\n/** Checks whether the user's browser support Shadow DOM. */\nfunction _supportsShadowDom() {\n    if (shadowDomIsSupported == null) {\n        const head = typeof document !== 'undefined' ? document.head : null;\n        shadowDomIsSupported = !!(head && (head.createShadowRoot || head.attachShadow));\n    }\n    return shadowDomIsSupported;\n}\n/** Gets the shadow root of an element, if supported and the element is inside the Shadow DOM. */\nfunction _getShadowRoot(element) {\n    if (_supportsShadowDom()) {\n        const rootNode = element.getRootNode ? element.getRootNode() : null;\n        // Note that this should be caught by `_supportsShadowDom`, but some\n        // teams have been able to hit this code path on unsupported browsers.\n        if (typeof ShadowRoot !== 'undefined' && ShadowRoot && rootNode instanceof ShadowRoot) {\n            return rootNode;\n        }\n    }\n    return null;\n}\n/**\n * Gets the currently-focused element on the page while\n * also piercing through Shadow DOM boundaries.\n */\nfunction _getFocusedElementPierceShadowDom() {\n    let activeElement = typeof document !== 'undefined' && document\n        ? document.activeElement\n        : null;\n    while (activeElement && activeElement.shadowRoot) {\n        const newActiveElement = activeElement.shadowRoot.activeElement;\n        if (newActiveElement === activeElement) {\n            break;\n        }\n        else {\n            activeElement = newActiveElement;\n        }\n    }\n    return activeElement;\n}\n/** Gets the target of an event while accounting for Shadow DOM. */\nfunction _getEventTarget(event) {\n    // If an event is bound outside the Shadow DOM, the `event.target` will\n    // point to the shadow root so we have to use `composedPath` instead.\n    return (event.composedPath ? event.composedPath()[0] : event.target);\n}\n\n/** Gets whether the code is currently running in a test environment. */\nfunction _isTestEnvironment() {\n    // We can't use `declare const` because it causes conflicts inside Google with the real typings\n    // for these symbols and we can't read them off the global object, because they don't appear to\n    // be attached there for some runners like Jest.\n    // (see: https://github.com/angular/components/issues/23365#issuecomment-938146643)\n    return (\n    // @ts-ignore\n    (typeof __karma__ !== 'undefined' && !!__karma__) ||\n        // @ts-ignore\n        (typeof jasmine !== 'undefined' && !!jasmine) ||\n        // @ts-ignore\n        (typeof jest !== 'undefined' && !!jest) ||\n        // @ts-ignore\n        (typeof Mocha !== 'undefined' && !!Mocha));\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Platform, PlatformModule, _getEventTarget, _getFocusedElementPierceShadowDom, _getShadowRoot, _isTestEnvironment, _supportsShadowDom, getRtlScrollAxisType, getSupportedInputTypes, normalizePassiveListenerOptions, supportsPassiveEventListeners, supportsScrollBehavior };\n","import { filter } from './filter';\nexport function skip(count) {\n    return filter(function (_, index) { return count <= index; });\n}\n","import { ElementRef } from '@angular/core';\n\n/** Coerces a data-bound value (typically a string) to a boolean. */\nfunction coerceBooleanProperty(value) {\n    return value != null && `${value}` !== 'false';\n}\n\nfunction coerceNumberProperty(value, fallbackValue = 0) {\n    return _isNumberValue(value) ? Number(value) : fallbackValue;\n}\n/**\n * Whether the provided value is considered a number.\n * @docs-private\n */\nfunction _isNumberValue(value) {\n    // parseFloat(value) handles most of the cases we're interested in (it treats null, empty string,\n    // and other non-number values as NaN, where Number just uses 0) but it considers the string\n    // '123hello' to be a valid number. Therefore we also check if Number(value) is NaN.\n    return !isNaN(parseFloat(value)) && !isNaN(Number(value));\n}\n\nfunction coerceArray(value) {\n    return Array.isArray(value) ? value : [value];\n}\n\n/** Coerces a value to a CSS pixel value. */\nfunction coerceCssPixelValue(value) {\n    if (value == null) {\n        return '';\n    }\n    return typeof value === 'string' ? value : `${value}px`;\n}\n\n/**\n * Coerces an ElementRef or an Element into an element.\n * Useful for APIs that can accept either a ref or the native element itself.\n */\nfunction coerceElement(elementOrRef) {\n    return elementOrRef instanceof ElementRef ? elementOrRef.nativeElement : elementOrRef;\n}\n\n/**\n * Coerces a value to an array of trimmed non-empty strings.\n * Any input that is not an array, `null` or `undefined` will be turned into a string\n * via `toString()` and subsequently split with the given separator.\n * `null` and `undefined` will result in an empty array.\n * This results in the following outcomes:\n * - `null` -&gt; `[]`\n * - `[null]` -&gt; `[\"null\"]`\n * - `[\"a\", \"b \", \" \"]` -&gt; `[\"a\", \"b\"]`\n * - `[1, [2, 3]]` -&gt; `[\"1\", \"2,3\"]`\n * - `[{ a: 0 }]` -&gt; `[\"[object Object]\"]`\n * - `{ a: 0 }` -&gt; `[\"[object\", \"Object]\"]`\n *\n * Useful for defining CSS classes or table columns.\n * @param value the value to coerce into an array of strings\n * @param separator split-separator if value isn't an array\n */\nfunction coerceStringArray(value, separator = /\\s+/) {\n    const result = [];\n    if (value != null) {\n        const sourceValues = Array.isArray(value) ? value : `${value}`.split(separator);\n        for (const sourceValue of sourceValues) {\n            const trimmedString = `${sourceValue}`.trim();\n            if (trimmedString) {\n                result.push(trimmedString);\n            }\n        }\n    }\n    return result;\n}\n\nexport { _isNumberValue, coerceArray, coerceBooleanProperty, coerceCssPixelValue, coerceElement, coerceNumberProperty, coerceStringArray };\n","import { __extends } from \"tslib\";\nimport { Subscription } from '../Subscription';\nvar Action = (function (_super) {\n    __extends(Action, _super);\n    function Action(scheduler, work) {\n        return _super.call(this) || this;\n    }\n    Action.prototype.schedule = function (state, delay) {\n        if (delay === void 0) { delay = 0; }\n        return this;\n    };\n    return Action;\n}(Subscription));\nexport { Action };\n","import { __read, __spreadArray } from \"tslib\";\nexport var intervalProvider = {\n    setInterval: function (handler, timeout) {\n        var args = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            args[_i - 2] = arguments[_i];\n        }\n        var delegate = intervalProvider.delegate;\n        if (delegate === null || delegate === void 0 ? void 0 : delegate.setInterval) {\n            return delegate.setInterval.apply(delegate, __spreadArray([handler, timeout], __read(args)));\n        }\n        return setInterval.apply(void 0, __spreadArray([handler, timeout], __read(args)));\n    },\n    clearInterval: function (handle) {\n        var delegate = intervalProvider.delegate;\n        return ((delegate === null || delegate === void 0 ? void 0 : delegate.clearInterval) || clearInterval)(handle);\n    },\n    delegate: undefined,\n};\n","import { __extends } from \"tslib\";\nimport { Action } from './Action';\nimport { intervalProvider } from './intervalProvider';\nimport { arrRemove } from '../util/arrRemove';\nvar AsyncAction = (function (_super) {\n    __extends(AsyncAction, _super);\n    function AsyncAction(scheduler, work) {\n        var _this = _super.call(this, scheduler, work) || this;\n        _this.scheduler = scheduler;\n        _this.work = work;\n        _this.pending = false;\n        return _this;\n    }\n    AsyncAction.prototype.schedule = function (state, delay) {\n        var _a;\n        if (delay === void 0) { delay = 0; }\n        if (this.closed) {\n            return this;\n        }\n        this.state = state;\n        var id = this.id;\n        var scheduler = this.scheduler;\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, delay);\n        }\n        this.pending = true;\n        this.delay = delay;\n        this.id = (_a = this.id) !== null && _a !== void 0 ? _a : this.requestAsyncId(scheduler, this.id, delay);\n        return this;\n    };\n    AsyncAction.prototype.requestAsyncId = function (scheduler, _id, delay) {\n        if (delay === void 0) { delay = 0; }\n        return intervalProvider.setInterval(scheduler.flush.bind(scheduler, this), delay);\n    };\n    AsyncAction.prototype.recycleAsyncId = function (_scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        if (delay != null && this.delay === delay && this.pending === false) {\n            return id;\n        }\n        if (id != null) {\n            intervalProvider.clearInterval(id);\n        }\n        return undefined;\n    };\n    AsyncAction.prototype.execute = function (state, delay) {\n        if (this.closed) {\n            return new Error('executing a cancelled action');\n        }\n        this.pending = false;\n        var error = this._execute(state, delay);\n        if (error) {\n            return error;\n        }\n        else if (this.pending === false && this.id != null) {\n            this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n        }\n    };\n    AsyncAction.prototype._execute = function (state, _delay) {\n        var errored = false;\n        var errorValue;\n        try {\n            this.work(state);\n        }\n        catch (e) {\n            errored = true;\n            errorValue = e ? e : new Error('Scheduled action threw falsy error');\n        }\n        if (errored) {\n            this.unsubscribe();\n            return errorValue;\n        }\n    };\n    AsyncAction.prototype.unsubscribe = function () {\n        if (!this.closed) {\n            var _a = this, id = _a.id, scheduler = _a.scheduler;\n            var actions = scheduler.actions;\n            this.work = this.state = this.scheduler = null;\n            this.pending = false;\n            arrRemove(actions, this);\n            if (id != null) {\n                this.id = this.recycleAsyncId(scheduler, id, null);\n            }\n            this.delay = null;\n            _super.prototype.unsubscribe.call(this);\n        }\n    };\n    return AsyncAction;\n}(Action));\nexport { AsyncAction };\n","import { dateTimestampProvider } from './scheduler/dateTimestampProvider';\nvar Scheduler = (function () {\n    function Scheduler(schedulerActionCtor, now) {\n        if (now === void 0) { now = Scheduler.now; }\n        this.schedulerActionCtor = schedulerActionCtor;\n        this.now = now;\n    }\n    Scheduler.prototype.schedule = function (work, delay, state) {\n        if (delay === void 0) { delay = 0; }\n        return new this.schedulerActionCtor(this, work).schedule(state, delay);\n    };\n    Scheduler.now = dateTimestampProvider.now;\n    return Scheduler;\n}());\nexport { Scheduler };\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\nexport var asyncScheduler = new AsyncScheduler(AsyncAction);\nexport var async = asyncScheduler;\n","import { __extends } from \"tslib\";\nimport { Scheduler } from '../Scheduler';\nvar AsyncScheduler = (function (_super) {\n    __extends(AsyncScheduler, _super);\n    function AsyncScheduler(SchedulerAction, now) {\n        if (now === void 0) { now = Scheduler.now; }\n        var _this = _super.call(this, SchedulerAction, now) || this;\n        _this.actions = [];\n        _this._active = false;\n        return _this;\n    }\n    AsyncScheduler.prototype.flush = function (action) {\n        var actions = this.actions;\n        if (this._active) {\n            actions.push(action);\n            return;\n        }\n        var error;\n        this._active = true;\n        do {\n            if ((error = action.execute(action.state, action.delay))) {\n                break;\n            }\n        } while ((action = actions.shift()));\n        this._active = false;\n        if (error) {\n            while ((action = actions.shift())) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    return AsyncScheduler;\n}(Scheduler));\nexport { AsyncScheduler };\n","import { asyncScheduler } from '../scheduler/async';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function debounceTime(dueTime, scheduler) {\n    if (scheduler === void 0) { scheduler = asyncScheduler; }\n    return operate(function (source, subscriber) {\n        var activeTask = null;\n        var lastValue = null;\n        var lastTime = null;\n        var emit = function () {\n            if (activeTask) {\n                activeTask.unsubscribe();\n                activeTask = null;\n                var value = lastValue;\n                lastValue = null;\n                subscriber.next(value);\n            }\n        };\n        function emitWhenIdle() {\n            var targetTime = lastTime + dueTime;\n            var now = scheduler.now();\n            if (now < targetTime) {\n                activeTask = this.schedule(undefined, targetTime - now);\n                subscriber.add(activeTask);\n                return;\n            }\n            emit();\n        }\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n            lastValue = value;\n            lastTime = scheduler.now();\n            if (!activeTask) {\n                activeTask = scheduler.schedule(emitWhenIdle, dueTime);\n                subscriber.add(activeTask);\n            }\n        }, function () {\n            emit();\n            subscriber.complete();\n        }, undefined, function () {\n            lastValue = activeTask = null;\n        }));\n    });\n}\n","import { coerceElement, coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, Directive, Output, Input, NgModule } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\n/**\n * Factory that creates a new MutationObserver and allows us to stub it out in unit tests.\n * @docs-private\n */\nclass MutationObserverFactory {\n    create(callback) {\n        return typeof MutationObserver === 'undefined' ? null : new MutationObserver(callback);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MutationObserverFactory, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MutationObserverFactory, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MutationObserverFactory, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n/** An injectable service that allows watching elements for changes to their content. */\nclass ContentObserver {\n    constructor(_mutationObserverFactory) {\n        this._mutationObserverFactory = _mutationObserverFactory;\n        /** Keeps track of the existing MutationObservers so they can be reused. */\n        this._observedElements = new Map();\n    }\n    ngOnDestroy() {\n        this._observedElements.forEach((_, element) => this._cleanupObserver(element));\n    }\n    observe(elementOrRef) {\n        const element = coerceElement(elementOrRef);\n        return new Observable((observer) => {\n            const stream = this._observeElement(element);\n            const subscription = stream.subscribe(observer);\n            return () => {\n                subscription.unsubscribe();\n                this._unobserveElement(element);\n            };\n        });\n    }\n    /**\n     * Observes the given element by using the existing MutationObserver if available, or creating a\n     * new one if not.\n     */\n    _observeElement(element) {\n        if (!this._observedElements.has(element)) {\n            const stream = new Subject();\n            const observer = this._mutationObserverFactory.create(mutations => stream.next(mutations));\n            if (observer) {\n                observer.observe(element, {\n                    characterData: true,\n                    childList: true,\n                    subtree: true,\n                });\n            }\n            this._observedElements.set(element, { observer, stream, count: 1 });\n        }\n        else {\n            this._observedElements.get(element).count++;\n        }\n        return this._observedElements.get(element).stream;\n    }\n    /**\n     * Un-observes the given element and cleans up the underlying MutationObserver if nobody else is\n     * observing this element.\n     */\n    _unobserveElement(element) {\n        if (this._observedElements.has(element)) {\n            this._observedElements.get(element).count--;\n            if (!this._observedElements.get(element).count) {\n                this._cleanupObserver(element);\n            }\n        }\n    }\n    /** Clean up the underlying MutationObserver for the specified element. */\n    _cleanupObserver(element) {\n        if (this._observedElements.has(element)) {\n            const { observer, stream } = this._observedElements.get(element);\n            if (observer) {\n                observer.disconnect();\n            }\n            stream.complete();\n            this._observedElements.delete(element);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: ContentObserver, deps: [{ token: MutationObserverFactory }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: ContentObserver, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: ContentObserver, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: MutationObserverFactory }]; } });\n/**\n * Directive that triggers a callback whenever the content of\n * its associated element has changed.\n */\nclass CdkObserveContent {\n    /**\n     * Whether observing content is disabled. This option can be used\n     * to disconnect the underlying MutationObserver until it is needed.\n     */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._disabled ? this._unsubscribe() : this._subscribe();\n    }\n    /** Debounce interval for emitting the changes. */\n    get debounce() {\n        return this._debounce;\n    }\n    set debounce(value) {\n        this._debounce = coerceNumberProperty(value);\n        this._subscribe();\n    }\n    constructor(_contentObserver, _elementRef, _ngZone) {\n        this._contentObserver = _contentObserver;\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        /** Event emitted for each change in the element's content. */\n        this.event = new EventEmitter();\n        this._disabled = false;\n        this._currentSubscription = null;\n    }\n    ngAfterContentInit() {\n        if (!this._currentSubscription && !this.disabled) {\n            this._subscribe();\n        }\n    }\n    ngOnDestroy() {\n        this._unsubscribe();\n    }\n    _subscribe() {\n        this._unsubscribe();\n        const stream = this._contentObserver.observe(this._elementRef);\n        // TODO(mmalerba): We shouldn't be emitting on this @Output() outside the zone.\n        // Consider brining it back inside the zone next time we're making breaking changes.\n        // Bringing it back inside can cause things like infinite change detection loops and changed\n        // after checked errors if people's code isn't handling it properly.\n        this._ngZone.runOutsideAngular(() => {\n            this._currentSubscription = (this.debounce ? stream.pipe(debounceTime(this.debounce)) : stream).subscribe(this.event);\n        });\n    }\n    _unsubscribe() {\n        this._currentSubscription?.unsubscribe();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: CdkObserveContent, deps: [{ token: ContentObserver }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: CdkObserveContent, selector: \"[cdkObserveContent]\", inputs: { disabled: [\"cdkObserveContentDisabled\", \"disabled\"], debounce: \"debounce\" }, outputs: { event: \"cdkObserveContent\" }, exportAs: [\"cdkObserveContent\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: CdkObserveContent, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkObserveContent]',\n                    exportAs: 'cdkObserveContent',\n                }]\n        }], ctorParameters: function () { return [{ type: ContentObserver }, { type: i0.ElementRef }, { type: i0.NgZone }]; }, propDecorators: { event: [{\n                type: Output,\n                args: ['cdkObserveContent']\n            }], disabled: [{\n                type: Input,\n                args: ['cdkObserveContentDisabled']\n            }], debounce: [{\n                type: Input\n            }] } });\nclass ObserversModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: ObserversModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.1.1\", ngImport: i0, type: ObserversModule, declarations: [CdkObserveContent], exports: [CdkObserveContent] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: ObserversModule, providers: [MutationObserverFactory] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: ObserversModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [CdkObserveContent],\n                    declarations: [CdkObserveContent],\n                    providers: [MutationObserverFactory],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkObserveContent, ContentObserver, MutationObserverFactory, ObserversModule };\n","import { Observable } from '../Observable';\nimport { argsArgArrayOrObject } from '../util/argsArgArrayOrObject';\nimport { from } from './from';\nimport { identity } from '../util/identity';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nimport { popResultSelector, popScheduler } from '../util/args';\nimport { createObject } from '../util/createObject';\nimport { createOperatorSubscriber } from '../operators/OperatorSubscriber';\nimport { executeSchedule } from '../util/executeSchedule';\nexport function combineLatest() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    var scheduler = popScheduler(args);\n    var resultSelector = popResultSelector(args);\n    var _a = argsArgArrayOrObject(args), observables = _a.args, keys = _a.keys;\n    if (observables.length === 0) {\n        return from([], scheduler);\n    }\n    var result = new Observable(combineLatestInit(observables, scheduler, keys\n        ?\n            function (values) { return createObject(keys, values); }\n        :\n            identity));\n    return resultSelector ? result.pipe(mapOneOrManyArgs(resultSelector)) : result;\n}\nexport function combineLatestInit(observables, scheduler, valueTransform) {\n    if (valueTransform === void 0) { valueTransform = identity; }\n    return function (subscriber) {\n        maybeSchedule(scheduler, function () {\n            var length = observables.length;\n            var values = new Array(length);\n            var active = length;\n            var remainingFirstValues = length;\n            var _loop_1 = function (i) {\n                maybeSchedule(scheduler, function () {\n                    var source = from(observables[i], scheduler);\n                    var hasFirstValue = false;\n                    source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n                        values[i] = value;\n                        if (!hasFirstValue) {\n                            hasFirstValue = true;\n                            remainingFirstValues--;\n                        }\n                        if (!remainingFirstValues) {\n                            subscriber.next(valueTransform(values.slice()));\n                        }\n                    }, function () {\n                        if (!--active) {\n                            subscriber.complete();\n                        }\n                    }));\n                }, subscriber);\n            };\n            for (var i = 0; i < length; i++) {\n                _loop_1(i);\n            }\n        }, subscriber);\n    };\n}\nfunction maybeSchedule(scheduler, execute, subscription) {\n    if (scheduler) {\n        executeSchedule(subscription, scheduler, execute);\n    }\n    else {\n        execute();\n    }\n}\n","import { concatAll } from '../operators/concatAll';\nimport { popScheduler } from '../util/args';\nimport { from } from './from';\nexport function concat() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    return concatAll()(from(args, popScheduler(args)));\n}\n","import { mergeAll } from './mergeAll';\nexport function concatAll() {\n    return mergeAll(1);\n}\n","import * as i0 from '@angular/core';\nimport { NgModule, CSP_NONCE, Injectable, Optional, Inject } from '@angular/core';\nimport { coerceArray } from '@angular/cdk/coercion';\nimport { Subject, combineLatest, concat, Observable } from 'rxjs';\nimport { take, skip, debounceTime, map, startWith, takeUntil } from 'rxjs/operators';\nimport * as i1 from '@angular/cdk/platform';\n\nclass LayoutModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: LayoutModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.1.1\", ngImport: i0, type: LayoutModule }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: LayoutModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: LayoutModule, decorators: [{\n            type: NgModule,\n            args: [{}]\n        }] });\n\n/** Global registry for all dynamically-created, injected media queries. */\nconst mediaQueriesForWebkitCompatibility = new Set();\n/** Style tag that holds all of the dynamically-created media queries. */\nlet mediaQueryStyleNode;\n/** A utility for calling matchMedia queries. */\nclass MediaMatcher {\n    constructor(_platform, _nonce) {\n        this._platform = _platform;\n        this._nonce = _nonce;\n        this._matchMedia =\n            this._platform.isBrowser && window.matchMedia\n                ? // matchMedia is bound to the window scope intentionally as it is an illegal invocation to\n                    // call it from a different scope.\n                    window.matchMedia.bind(window)\n                : noopMatchMedia;\n    }\n    /**\n     * Evaluates the given media query and returns the native MediaQueryList from which results\n     * can be retrieved.\n     * Confirms the layout engine will trigger for the selector query provided and returns the\n     * MediaQueryList for the query provided.\n     */\n    matchMedia(query) {\n        if (this._platform.WEBKIT || this._platform.BLINK) {\n            createEmptyStyleRule(query, this._nonce);\n        }\n        return this._matchMedia(query);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MediaMatcher, deps: [{ token: i1.Platform }, { token: CSP_NONCE, optional: true }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MediaMatcher, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MediaMatcher, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i1.Platform }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [CSP_NONCE]\n                }] }]; } });\n/**\n * Creates an empty stylesheet that is used to work around browser inconsistencies related to\n * `matchMedia`. At the time of writing, it handles the following cases:\n * 1. On WebKit browsers, a media query has to have at least one rule in order for `matchMedia`\n * to fire. We work around it by declaring a dummy stylesheet with a `@media` declaration.\n * 2. In some cases Blink browsers will stop firing the `matchMedia` listener if none of the rules\n * inside the `@media` match existing elements on the page. We work around it by having one rule\n * targeting the `body`. See https://github.com/angular/components/issues/23546.\n */\nfunction createEmptyStyleRule(query, nonce) {\n    if (mediaQueriesForWebkitCompatibility.has(query)) {\n        return;\n    }\n    try {\n        if (!mediaQueryStyleNode) {\n            mediaQueryStyleNode = document.createElement('style');\n            if (nonce) {\n                mediaQueryStyleNode.nonce = nonce;\n            }\n            mediaQueryStyleNode.setAttribute('type', 'text/css');\n            document.head.appendChild(mediaQueryStyleNode);\n        }\n        if (mediaQueryStyleNode.sheet) {\n            mediaQueryStyleNode.sheet.insertRule(`@media ${query} {body{ }}`, 0);\n            mediaQueriesForWebkitCompatibility.add(query);\n        }\n    }\n    catch (e) {\n        console.error(e);\n    }\n}\n/** No-op matchMedia replacement for non-browser platforms. */\nfunction noopMatchMedia(query) {\n    // Use `as any` here to avoid adding additional necessary properties for\n    // the noop matcher.\n    return {\n        matches: query === 'all' || query === '',\n        media: query,\n        addListener: () => { },\n        removeListener: () => { },\n    };\n}\n\n/** Utility for checking the matching state of @media queries. */\nclass BreakpointObserver {\n    constructor(_mediaMatcher, _zone) {\n        this._mediaMatcher = _mediaMatcher;\n        this._zone = _zone;\n        /**  A map of all media queries currently being listened for. */\n        this._queries = new Map();\n        /** A subject for all other observables to takeUntil based on. */\n        this._destroySubject = new Subject();\n    }\n    /** Completes the active subject, signalling to all other observables to complete. */\n    ngOnDestroy() {\n        this._destroySubject.next();\n        this._destroySubject.complete();\n    }\n    /**\n     * Whether one or more media queries match the current viewport size.\n     * @param value One or more media queries to check.\n     * @returns Whether any of the media queries match.\n     */\n    isMatched(value) {\n        const queries = splitQueries(coerceArray(value));\n        return queries.some(mediaQuery => this._registerQuery(mediaQuery).mql.matches);\n    }\n    /**\n     * Gets an observable of results for the given queries that will emit new results for any changes\n     * in matching of the given queries.\n     * @param value One or more media queries to check.\n     * @returns A stream of matches for the given queries.\n     */\n    observe(value) {\n        const queries = splitQueries(coerceArray(value));\n        const observables = queries.map(query => this._registerQuery(query).observable);\n        let stateObservable = combineLatest(observables);\n        // Emit the first state immediately, and then debounce the subsequent emissions.\n        stateObservable = concat(stateObservable.pipe(take(1)), stateObservable.pipe(skip(1), debounceTime(0)));\n        return stateObservable.pipe(map(breakpointStates => {\n            const response = {\n                matches: false,\n                breakpoints: {},\n            };\n            breakpointStates.forEach(({ matches, query }) => {\n                response.matches = response.matches || matches;\n                response.breakpoints[query] = matches;\n            });\n            return response;\n        }));\n    }\n    /** Registers a specific query to be listened for. */\n    _registerQuery(query) {\n        // Only set up a new MediaQueryList if it is not already being listened for.\n        if (this._queries.has(query)) {\n            return this._queries.get(query);\n        }\n        const mql = this._mediaMatcher.matchMedia(query);\n        // Create callback for match changes and add it is as a listener.\n        const queryObservable = new Observable((observer) => {\n            // Listener callback methods are wrapped to be placed back in ngZone. Callbacks must be placed\n            // back into the zone because matchMedia is only included in Zone.js by loading the\n            // webapis-media-query.js file alongside the zone.js file.  Additionally, some browsers do not\n            // have MediaQueryList inherit from EventTarget, which causes inconsistencies in how Zone.js\n            // patches it.\n            const handler = (e) => this._zone.run(() => observer.next(e));\n            mql.addListener(handler);\n            return () => {\n                mql.removeListener(handler);\n            };\n        }).pipe(startWith(mql), map(({ matches }) => ({ query, matches })), takeUntil(this._destroySubject));\n        // Add the MediaQueryList to the set of queries.\n        const output = { observable: queryObservable, mql };\n        this._queries.set(query, output);\n        return output;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: BreakpointObserver, deps: [{ token: MediaMatcher }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: BreakpointObserver, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: BreakpointObserver, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: MediaMatcher }, { type: i0.NgZone }]; } });\n/**\n * Split each query string into separate query strings if two queries are provided as comma\n * separated.\n */\nfunction splitQueries(queries) {\n    return queries\n        .map(query => query.split(','))\n        .reduce((a1, a2) => a1.concat(a2))\n        .map(query => query.trim());\n}\n\n// PascalCase is being used as Breakpoints is used like an enum.\n// tslint:disable-next-line:variable-name\nconst Breakpoints = {\n    XSmall: '(max-width: 599.98px)',\n    Small: '(min-width: 600px) and (max-width: 959.98px)',\n    Medium: '(min-width: 960px) and (max-width: 1279.98px)',\n    Large: '(min-width: 1280px) and (max-width: 1919.98px)',\n    XLarge: '(min-width: 1920px)',\n    Handset: '(max-width: 599.98px) and (orientation: portrait), ' +\n        '(max-width: 959.98px) and (orientation: landscape)',\n    Tablet: '(min-width: 600px) and (max-width: 839.98px) and (orientation: portrait), ' +\n        '(min-width: 960px) and (max-width: 1279.98px) and (orientation: landscape)',\n    Web: '(min-width: 840px) and (orientation: portrait), ' +\n        '(min-width: 1280px) and (orientation: landscape)',\n    HandsetPortrait: '(max-width: 599.98px) and (orientation: portrait)',\n    TabletPortrait: '(min-width: 600px) and (max-width: 839.98px) and (orientation: portrait)',\n    WebPortrait: '(min-width: 840px) and (orientation: portrait)',\n    HandsetLandscape: '(max-width: 959.98px) and (orientation: landscape)',\n    TabletLandscape: '(min-width: 960px) and (max-width: 1279.98px) and (orientation: landscape)',\n    WebLandscape: '(min-width: 1280px) and (orientation: landscape)',\n};\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BreakpointObserver, Breakpoints, LayoutModule, MediaMatcher };\n","import { concat } from '../observable/concat';\nimport { popScheduler } from '../util/args';\nimport { operate } from '../util/lift';\nexport function startWith() {\n    var values = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        values[_i] = arguments[_i];\n    }\n    var scheduler = popScheduler(values);\n    return operate(function (source, subscriber) {\n        (scheduler ? concat(values, source, scheduler) : concat(values, source)).subscribe(subscriber);\n    });\n}\n","import { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { inject, APP_ID, Injectable, Inject, QueryList, Directive, Input, InjectionToken, Optional, EventEmitter, Output, NgModule } from '@angular/core';\nimport * as i1 from '@angular/cdk/platform';\nimport { _getFocusedElementPierceShadowDom, normalizePassiveListenerOptions, _getEventTarget, _getShadowRoot } from '@angular/cdk/platform';\nimport { Subject, Subscription, BehaviorSubject, of } from 'rxjs';\nimport { hasModifierKey, A, Z, ZERO, NINE, PAGE_DOWN, PAGE_UP, END, HOME, LEFT_ARROW, RIGHT_ARROW, UP_ARROW, DOWN_ARROW, TAB, ALT, CONTROL, MAC_META, META, SHIFT } from '@angular/cdk/keycodes';\nimport { tap, debounceTime, filter, map, take, skip, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { coerceBooleanProperty, coerceElement } from '@angular/cdk/coercion';\nimport * as i1$1 from '@angular/cdk/observers';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { BreakpointObserver } from '@angular/cdk/layout';\n\n/** IDs are delimited by an empty space, as per the spec. */\nconst ID_DELIMITER = ' ';\n/**\n * Adds the given ID to the specified ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n */\nfunction addAriaReferencedId(el, attr, id) {\n    const ids = getAriaReferenceIds(el, attr);\n    if (ids.some(existingId => existingId.trim() == id.trim())) {\n        return;\n    }\n    ids.push(id.trim());\n    el.setAttribute(attr, ids.join(ID_DELIMITER));\n}\n/**\n * Removes the given ID from the specified ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n */\nfunction removeAriaReferencedId(el, attr, id) {\n    const ids = getAriaReferenceIds(el, attr);\n    const filteredIds = ids.filter(val => val != id.trim());\n    if (filteredIds.length) {\n        el.setAttribute(attr, filteredIds.join(ID_DELIMITER));\n    }\n    else {\n        el.removeAttribute(attr);\n    }\n}\n/**\n * Gets the list of IDs referenced by the given ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n */\nfunction getAriaReferenceIds(el, attr) {\n    // Get string array of all individual ids (whitespace delimited) in the attribute value\n    return (el.getAttribute(attr) || '').match(/\\S+/g) || [];\n}\n\n/**\n * ID used for the body container where all messages are appended.\n * @deprecated No longer being used. To be removed.\n * @breaking-change 14.0.0\n */\nconst MESSAGES_CONTAINER_ID = 'cdk-describedby-message-container';\n/**\n * ID prefix used for each created message element.\n * @deprecated To be turned into a private variable.\n * @breaking-change 14.0.0\n */\nconst CDK_DESCRIBEDBY_ID_PREFIX = 'cdk-describedby-message';\n/**\n * Attribute given to each host element that is described by a message element.\n * @deprecated To be turned into a private variable.\n * @breaking-change 14.0.0\n */\nconst CDK_DESCRIBEDBY_HOST_ATTRIBUTE = 'cdk-describedby-host';\n/** Global incremental identifier for each registered message element. */\nlet nextId = 0;\n/**\n * Utility that creates visually hidden elements with a message content. Useful for elements that\n * want to use aria-describedby to further describe themselves without adding additional visual\n * content.\n */\nclass AriaDescriber {\n    constructor(_document, \n    /**\n     * @deprecated To be turned into a required parameter.\n     * @breaking-change 14.0.0\n     */\n    _platform) {\n        this._platform = _platform;\n        /** Map of all registered message elements that have been placed into the document. */\n        this._messageRegistry = new Map();\n        /** Container for all registered messages. */\n        this._messagesContainer = null;\n        /** Unique ID for the service. */\n        this._id = `${nextId++}`;\n        this._document = _document;\n        this._id = inject(APP_ID) + '-' + nextId++;\n    }\n    describe(hostElement, message, role) {\n        if (!this._canBeDescribed(hostElement, message)) {\n            return;\n        }\n        const key = getKey(message, role);\n        if (typeof message !== 'string') {\n            // We need to ensure that the element has an ID.\n            setMessageId(message, this._id);\n            this._messageRegistry.set(key, { messageElement: message, referenceCount: 0 });\n        }\n        else if (!this._messageRegistry.has(key)) {\n            this._createMessageElement(message, role);\n        }\n        if (!this._isElementDescribedByMessage(hostElement, key)) {\n            this._addMessageReference(hostElement, key);\n        }\n    }\n    removeDescription(hostElement, message, role) {\n        if (!message || !this._isElementNode(hostElement)) {\n            return;\n        }\n        const key = getKey(message, role);\n        if (this._isElementDescribedByMessage(hostElement, key)) {\n            this._removeMessageReference(hostElement, key);\n        }\n        // If the message is a string, it means that it's one that we created for the\n        // consumer so we can remove it safely, otherwise we should leave it in place.\n        if (typeof message === 'string') {\n            const registeredMessage = this._messageRegistry.get(key);\n            if (registeredMessage && registeredMessage.referenceCount === 0) {\n                this._deleteMessageElement(key);\n            }\n        }\n        if (this._messagesContainer?.childNodes.length === 0) {\n            this._messagesContainer.remove();\n            this._messagesContainer = null;\n        }\n    }\n    /** Unregisters all created message elements and removes the message container. */\n    ngOnDestroy() {\n        const describedElements = this._document.querySelectorAll(`[${CDK_DESCRIBEDBY_HOST_ATTRIBUTE}=\"${this._id}\"]`);\n        for (let i = 0; i < describedElements.length; i++) {\n            this._removeCdkDescribedByReferenceIds(describedElements[i]);\n            describedElements[i].removeAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE);\n        }\n        this._messagesContainer?.remove();\n        this._messagesContainer = null;\n        this._messageRegistry.clear();\n    }\n    /**\n     * Creates a new element in the visually hidden message container element with the message\n     * as its content and adds it to the message registry.\n     */\n    _createMessageElement(message, role) {\n        const messageElement = this._document.createElement('div');\n        setMessageId(messageElement, this._id);\n        messageElement.textContent = message;\n        if (role) {\n            messageElement.setAttribute('role', role);\n        }\n        this._createMessagesContainer();\n        this._messagesContainer.appendChild(messageElement);\n        this._messageRegistry.set(getKey(message, role), { messageElement, referenceCount: 0 });\n    }\n    /** Deletes the message element from the global messages container. */\n    _deleteMessageElement(key) {\n        this._messageRegistry.get(key)?.messageElement?.remove();\n        this._messageRegistry.delete(key);\n    }\n    /** Creates the global container for all aria-describedby messages. */\n    _createMessagesContainer() {\n        if (this._messagesContainer) {\n            return;\n        }\n        const containerClassName = 'cdk-describedby-message-container';\n        const serverContainers = this._document.querySelectorAll(`.${containerClassName}[platform=\"server\"]`);\n        for (let i = 0; i < serverContainers.length; i++) {\n            // When going from the server to the client, we may end up in a situation where there's\n            // already a container on the page, but we don't have a reference to it. Clear the\n            // old container so we don't get duplicates. Doing this, instead of emptying the previous\n            // container, should be slightly faster.\n            serverContainers[i].remove();\n        }\n        const messagesContainer = this._document.createElement('div');\n        // We add `visibility: hidden` in order to prevent text in this container from\n        // being searchable by the browser's Ctrl + F functionality.\n        // Screen-readers will still read the description for elements with aria-describedby even\n        // when the description element is not visible.\n        messagesContainer.style.visibility = 'hidden';\n        // Even though we use `visibility: hidden`, we still apply `cdk-visually-hidden` so that\n        // the description element doesn't impact page layout.\n        messagesContainer.classList.add(containerClassName);\n        messagesContainer.classList.add('cdk-visually-hidden');\n        // @breaking-change 14.0.0 Remove null check for `_platform`.\n        if (this._platform && !this._platform.isBrowser) {\n            messagesContainer.setAttribute('platform', 'server');\n        }\n        this._document.body.appendChild(messagesContainer);\n        this._messagesContainer = messagesContainer;\n    }\n    /** Removes all cdk-describedby messages that are hosted through the element. */\n    _removeCdkDescribedByReferenceIds(element) {\n        // Remove all aria-describedby reference IDs that are prefixed by CDK_DESCRIBEDBY_ID_PREFIX\n        const originalReferenceIds = getAriaReferenceIds(element, 'aria-describedby').filter(id => id.indexOf(CDK_DESCRIBEDBY_ID_PREFIX) != 0);\n        element.setAttribute('aria-describedby', originalReferenceIds.join(' '));\n    }\n    /**\n     * Adds a message reference to the element using aria-describedby and increments the registered\n     * message's reference count.\n     */\n    _addMessageReference(element, key) {\n        const registeredMessage = this._messageRegistry.get(key);\n        // Add the aria-describedby reference and set the\n        // describedby_host attribute to mark the element.\n        addAriaReferencedId(element, 'aria-describedby', registeredMessage.messageElement.id);\n        element.setAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE, this._id);\n        registeredMessage.referenceCount++;\n    }\n    /**\n     * Removes a message reference from the element using aria-describedby\n     * and decrements the registered message's reference count.\n     */\n    _removeMessageReference(element, key) {\n        const registeredMessage = this._messageRegistry.get(key);\n        registeredMessage.referenceCount--;\n        removeAriaReferencedId(element, 'aria-describedby', registeredMessage.messageElement.id);\n        element.removeAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE);\n    }\n    /** Returns true if the element has been described by the provided message ID. */\n    _isElementDescribedByMessage(element, key) {\n        const referenceIds = getAriaReferenceIds(element, 'aria-describedby');\n        const registeredMessage = this._messageRegistry.get(key);\n        const messageId = registeredMessage && registeredMessage.messageElement.id;\n        return !!messageId && referenceIds.indexOf(messageId) != -1;\n    }\n    /** Determines whether a message can be described on a particular element. */\n    _canBeDescribed(element, message) {\n        if (!this._isElementNode(element)) {\n            return false;\n        }\n        if (message && typeof message === 'object') {\n            // We'd have to make some assumptions about the description element's text, if the consumer\n            // passed in an element. Assume that if an element is passed in, the consumer has verified\n            // that it can be used as a description.\n            return true;\n        }\n        const trimmedMessage = message == null ? '' : `${message}`.trim();\n        const ariaLabel = element.getAttribute('aria-label');\n        // We shouldn't set descriptions if they're exactly the same as the `aria-label` of the\n        // element, because screen readers will end up reading out the same text twice in a row.\n        return trimmedMessage ? !ariaLabel || ariaLabel.trim() !== trimmedMessage : false;\n    }\n    /** Checks whether a node is an Element node. */\n    _isElementNode(element) {\n        return element.nodeType === this._document.ELEMENT_NODE;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: AriaDescriber, deps: [{ token: DOCUMENT }, { token: i1.Platform }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: AriaDescriber, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: AriaDescriber, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i1.Platform }]; } });\n/** Gets a key that can be used to look messages up in the registry. */\nfunction getKey(message, role) {\n    return typeof message === 'string' ? `${role || ''}/${message}` : message;\n}\n/** Assigns a unique ID to an element, if it doesn't have one already. */\nfunction setMessageId(element, serviceId) {\n    if (!element.id) {\n        element.id = `${CDK_DESCRIBEDBY_ID_PREFIX}-${serviceId}-${nextId++}`;\n    }\n}\n\n/**\n * This class manages keyboard events for selectable lists. If you pass it a query list\n * of items, it will set the active item correctly when arrow events occur.\n */\nclass ListKeyManager {\n    constructor(_items) {\n        this._items = _items;\n        this._activeItemIndex = -1;\n        this._activeItem = null;\n        this._wrap = false;\n        this._letterKeyStream = new Subject();\n        this._typeaheadSubscription = Subscription.EMPTY;\n        this._vertical = true;\n        this._allowedModifierKeys = [];\n        this._homeAndEnd = false;\n        this._pageUpAndDown = { enabled: false, delta: 10 };\n        /**\n         * Predicate function that can be used to check whether an item should be skipped\n         * by the key manager. By default, disabled items are skipped.\n         */\n        this._skipPredicateFn = (item) => item.disabled;\n        // Buffer for the letters that the user has pressed when the typeahead option is turned on.\n        this._pressedLetters = [];\n        /**\n         * Stream that emits any time the TAB key is pressed, so components can react\n         * when focus is shifted off of the list.\n         */\n        this.tabOut = new Subject();\n        /** Stream that emits whenever the active item of the list manager changes. */\n        this.change = new Subject();\n        // We allow for the items to be an array because, in some cases, the consumer may\n        // not have access to a QueryList of the items they want to manage (e.g. when the\n        // items aren't being collected via `ViewChildren` or `ContentChildren`).\n        if (_items instanceof QueryList) {\n            this._itemChangesSubscription = _items.changes.subscribe((newItems) => {\n                if (this._activeItem) {\n                    const itemArray = newItems.toArray();\n                    const newIndex = itemArray.indexOf(this._activeItem);\n                    if (newIndex > -1 && newIndex !== this._activeItemIndex) {\n                        this._activeItemIndex = newIndex;\n                    }\n                }\n            });\n        }\n    }\n    /**\n     * Sets the predicate function that determines which items should be skipped by the\n     * list key manager.\n     * @param predicate Function that determines whether the given item should be skipped.\n     */\n    skipPredicate(predicate) {\n        this._skipPredicateFn = predicate;\n        return this;\n    }\n    /**\n     * Configures wrapping mode, which determines whether the active item will wrap to\n     * the other end of list when there are no more items in the given direction.\n     * @param shouldWrap Whether the list should wrap when reaching the end.\n     */\n    withWrap(shouldWrap = true) {\n        this._wrap = shouldWrap;\n        return this;\n    }\n    /**\n     * Configures whether the key manager should be able to move the selection vertically.\n     * @param enabled Whether vertical selection should be enabled.\n     */\n    withVerticalOrientation(enabled = true) {\n        this._vertical = enabled;\n        return this;\n    }\n    /**\n     * Configures the key manager to move the selection horizontally.\n     * Passing in `null` will disable horizontal movement.\n     * @param direction Direction in which the selection can be moved.\n     */\n    withHorizontalOrientation(direction) {\n        this._horizontal = direction;\n        return this;\n    }\n    /**\n     * Modifier keys which are allowed to be held down and whose default actions will be prevented\n     * as the user is pressing the arrow keys. Defaults to not allowing any modifier keys.\n     */\n    withAllowedModifierKeys(keys) {\n        this._allowedModifierKeys = keys;\n        return this;\n    }\n    /**\n     * Turns on typeahead mode which allows users to set the active item by typing.\n     * @param debounceInterval Time to wait after the last keystroke before setting the active item.\n     */\n    withTypeAhead(debounceInterval = 200) {\n        if ((typeof ngDevMode === 'undefined' || ngDevMode) &&\n            this._items.length &&\n            this._items.some(item => typeof item.getLabel !== 'function')) {\n            throw Error('ListKeyManager items in typeahead mode must implement the `getLabel` method.');\n        }\n        this._typeaheadSubscription.unsubscribe();\n        // Debounce the presses of non-navigational keys, collect the ones that correspond to letters\n        // and convert those letters back into a string. Afterwards find the first item that starts\n        // with that string and select it.\n        this._typeaheadSubscription = this._letterKeyStream\n            .pipe(tap(letter => this._pressedLetters.push(letter)), debounceTime(debounceInterval), filter(() => this._pressedLetters.length > 0), map(() => this._pressedLetters.join('')))\n            .subscribe(inputString => {\n            const items = this._getItemsArray();\n            // Start at 1 because we want to start searching at the item immediately\n            // following the current active item.\n            for (let i = 1; i < items.length + 1; i++) {\n                const index = (this._activeItemIndex + i) % items.length;\n                const item = items[index];\n                if (!this._skipPredicateFn(item) &&\n                    item.getLabel().toUpperCase().trim().indexOf(inputString) === 0) {\n                    this.setActiveItem(index);\n                    break;\n                }\n            }\n            this._pressedLetters = [];\n        });\n        return this;\n    }\n    /** Cancels the current typeahead sequence. */\n    cancelTypeahead() {\n        this._pressedLetters = [];\n        return this;\n    }\n    /**\n     * Configures the key manager to activate the first and last items\n     * respectively when the Home or End key is pressed.\n     * @param enabled Whether pressing the Home or End key activates the first/last item.\n     */\n    withHomeAndEnd(enabled = true) {\n        this._homeAndEnd = enabled;\n        return this;\n    }\n    /**\n     * Configures the key manager to activate every 10th, configured or first/last element in up/down direction\n     * respectively when the Page-Up or Page-Down key is pressed.\n     * @param enabled Whether pressing the Page-Up or Page-Down key activates the first/last item.\n     * @param delta Whether pressing the Home or End key activates the first/last item.\n     */\n    withPageUpDown(enabled = true, delta = 10) {\n        this._pageUpAndDown = { enabled, delta };\n        return this;\n    }\n    setActiveItem(item) {\n        const previousActiveItem = this._activeItem;\n        this.updateActiveItem(item);\n        if (this._activeItem !== previousActiveItem) {\n            this.change.next(this._activeItemIndex);\n        }\n    }\n    /**\n     * Sets the active item depending on the key event passed in.\n     * @param event Keyboard event to be used for determining which element should be active.\n     */\n    onKeydown(event) {\n        const keyCode = event.keyCode;\n        const modifiers = ['altKey', 'ctrlKey', 'metaKey', 'shiftKey'];\n        const isModifierAllowed = modifiers.every(modifier => {\n            return !event[modifier] || this._allowedModifierKeys.indexOf(modifier) > -1;\n        });\n        switch (keyCode) {\n            case TAB:\n                this.tabOut.next();\n                return;\n            case DOWN_ARROW:\n                if (this._vertical && isModifierAllowed) {\n                    this.setNextItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case UP_ARROW:\n                if (this._vertical && isModifierAllowed) {\n                    this.setPreviousItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case RIGHT_ARROW:\n                if (this._horizontal && isModifierAllowed) {\n                    this._horizontal === 'rtl' ? this.setPreviousItemActive() : this.setNextItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case LEFT_ARROW:\n                if (this._horizontal && isModifierAllowed) {\n                    this._horizontal === 'rtl' ? this.setNextItemActive() : this.setPreviousItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case HOME:\n                if (this._homeAndEnd && isModifierAllowed) {\n                    this.setFirstItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case END:\n                if (this._homeAndEnd && isModifierAllowed) {\n                    this.setLastItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case PAGE_UP:\n                if (this._pageUpAndDown.enabled && isModifierAllowed) {\n                    const targetIndex = this._activeItemIndex - this._pageUpAndDown.delta;\n                    this._setActiveItemByIndex(targetIndex > 0 ? targetIndex : 0, 1);\n                    break;\n                }\n                else {\n                    return;\n                }\n            case PAGE_DOWN:\n                if (this._pageUpAndDown.enabled && isModifierAllowed) {\n                    const targetIndex = this._activeItemIndex + this._pageUpAndDown.delta;\n                    const itemsLength = this._getItemsArray().length;\n                    this._setActiveItemByIndex(targetIndex < itemsLength ? targetIndex : itemsLength - 1, -1);\n                    break;\n                }\n                else {\n                    return;\n                }\n            default:\n                if (isModifierAllowed || hasModifierKey(event, 'shiftKey')) {\n                    // Attempt to use the `event.key` which also maps it to the user's keyboard language,\n                    // otherwise fall back to resolving alphanumeric characters via the keyCode.\n                    if (event.key && event.key.length === 1) {\n                        this._letterKeyStream.next(event.key.toLocaleUpperCase());\n                    }\n                    else if ((keyCode >= A && keyCode <= Z) || (keyCode >= ZERO && keyCode <= NINE)) {\n                        this._letterKeyStream.next(String.fromCharCode(keyCode));\n                    }\n                }\n                // Note that we return here, in order to avoid preventing\n                // the default action of non-navigational keys.\n                return;\n        }\n        this._pressedLetters = [];\n        event.preventDefault();\n    }\n    /** Index of the currently active item. */\n    get activeItemIndex() {\n        return this._activeItemIndex;\n    }\n    /** The active item. */\n    get activeItem() {\n        return this._activeItem;\n    }\n    /** Gets whether the user is currently typing into the manager using the typeahead feature. */\n    isTyping() {\n        return this._pressedLetters.length > 0;\n    }\n    /** Sets the active item to the first enabled item in the list. */\n    setFirstItemActive() {\n        this._setActiveItemByIndex(0, 1);\n    }\n    /** Sets the active item to the last enabled item in the list. */\n    setLastItemActive() {\n        this._setActiveItemByIndex(this._items.length - 1, -1);\n    }\n    /** Sets the active item to the next enabled item in the list. */\n    setNextItemActive() {\n        this._activeItemIndex < 0 ? this.setFirstItemActive() : this._setActiveItemByDelta(1);\n    }\n    /** Sets the active item to a previous enabled item in the list. */\n    setPreviousItemActive() {\n        this._activeItemIndex < 0 && this._wrap\n            ? this.setLastItemActive()\n            : this._setActiveItemByDelta(-1);\n    }\n    updateActiveItem(item) {\n        const itemArray = this._getItemsArray();\n        const index = typeof item === 'number' ? item : itemArray.indexOf(item);\n        const activeItem = itemArray[index];\n        // Explicitly check for `null` and `undefined` because other falsy values are valid.\n        this._activeItem = activeItem == null ? null : activeItem;\n        this._activeItemIndex = index;\n    }\n    /** Cleans up the key manager. */\n    destroy() {\n        this._typeaheadSubscription.unsubscribe();\n        this._itemChangesSubscription?.unsubscribe();\n        this._letterKeyStream.complete();\n        this.tabOut.complete();\n        this.change.complete();\n        this._pressedLetters = [];\n    }\n    /**\n     * This method sets the active item, given a list of items and the delta between the\n     * currently active item and the new active item. It will calculate differently\n     * depending on whether wrap mode is turned on.\n     */\n    _setActiveItemByDelta(delta) {\n        this._wrap ? this._setActiveInWrapMode(delta) : this._setActiveInDefaultMode(delta);\n    }\n    /**\n     * Sets the active item properly given \"wrap\" mode. In other words, it will continue to move\n     * down the list until it finds an item that is not disabled, and it will wrap if it\n     * encounters either end of the list.\n     */\n    _setActiveInWrapMode(delta) {\n        const items = this._getItemsArray();\n        for (let i = 1; i <= items.length; i++) {\n            const index = (this._activeItemIndex + delta * i + items.length) % items.length;\n            const item = items[index];\n            if (!this._skipPredicateFn(item)) {\n                this.setActiveItem(index);\n                return;\n            }\n        }\n    }\n    /**\n     * Sets the active item properly given the default mode. In other words, it will\n     * continue to move down the list until it finds an item that is not disabled. If\n     * it encounters either end of the list, it will stop and not wrap.\n     */\n    _setActiveInDefaultMode(delta) {\n        this._setActiveItemByIndex(this._activeItemIndex + delta, delta);\n    }\n    /**\n     * Sets the active item to the first enabled item starting at the index specified. If the\n     * item is disabled, it will move in the fallbackDelta direction until it either\n     * finds an enabled item or encounters the end of the list.\n     */\n    _setActiveItemByIndex(index, fallbackDelta) {\n        const items = this._getItemsArray();\n        if (!items[index]) {\n            return;\n        }\n        while (this._skipPredicateFn(items[index])) {\n            index += fallbackDelta;\n            if (!items[index]) {\n                return;\n            }\n        }\n        this.setActiveItem(index);\n    }\n    /** Returns the items as an array. */\n    _getItemsArray() {\n        return this._items instanceof QueryList ? this._items.toArray() : this._items;\n    }\n}\n\nclass ActiveDescendantKeyManager extends ListKeyManager {\n    setActiveItem(index) {\n        if (this.activeItem) {\n            this.activeItem.setInactiveStyles();\n        }\n        super.setActiveItem(index);\n        if (this.activeItem) {\n            this.activeItem.setActiveStyles();\n        }\n    }\n}\n\nclass FocusKeyManager extends ListKeyManager {\n    constructor() {\n        super(...arguments);\n        this._origin = 'program';\n    }\n    /**\n     * Sets the focus origin that will be passed in to the items for any subsequent `focus` calls.\n     * @param origin Focus origin to be used when focusing items.\n     */\n    setFocusOrigin(origin) {\n        this._origin = origin;\n        return this;\n    }\n    setActiveItem(item) {\n        super.setActiveItem(item);\n        if (this.activeItem) {\n            this.activeItem.focus(this._origin);\n        }\n    }\n}\n\n/**\n * Configuration for the isFocusable method.\n */\nclass IsFocusableConfig {\n    constructor() {\n        /**\n         * Whether to count an element as focusable even if it is not currently visible.\n         */\n        this.ignoreVisibility = false;\n    }\n}\n// The InteractivityChecker leans heavily on the ally.js accessibility utilities.\n// Methods like `isTabbable` are only covering specific edge-cases for the browsers which are\n// supported.\n/**\n * Utility for checking the interactivity of an element, such as whether is is focusable or\n * tabbable.\n */\nclass InteractivityChecker {\n    constructor(_platform) {\n        this._platform = _platform;\n    }\n    /**\n     * Gets whether an element is disabled.\n     *\n     * @param element Element to be checked.\n     * @returns Whether the element is disabled.\n     */\n    isDisabled(element) {\n        // This does not capture some cases, such as a non-form control with a disabled attribute or\n        // a form control inside of a disabled form, but should capture the most common cases.\n        return element.hasAttribute('disabled');\n    }\n    /**\n     * Gets whether an element is visible for the purposes of interactivity.\n     *\n     * This will capture states like `display: none` and `visibility: hidden`, but not things like\n     * being clipped by an `overflow: hidden` parent or being outside the viewport.\n     *\n     * @returns Whether the element is visible.\n     */\n    isVisible(element) {\n        return hasGeometry(element) && getComputedStyle(element).visibility === 'visible';\n    }\n    /**\n     * Gets whether an element can be reached via Tab key.\n     * Assumes that the element has already been checked with isFocusable.\n     *\n     * @param element Element to be checked.\n     * @returns Whether the element is tabbable.\n     */\n    isTabbable(element) {\n        // Nothing is tabbable on the server 😎\n        if (!this._platform.isBrowser) {\n            return false;\n        }\n        const frameElement = getFrameElement(getWindow(element));\n        if (frameElement) {\n            // Frame elements inherit their tabindex onto all child elements.\n            if (getTabIndexValue(frameElement) === -1) {\n                return false;\n            }\n            // Browsers disable tabbing to an element inside of an invisible frame.\n            if (!this.isVisible(frameElement)) {\n                return false;\n            }\n        }\n        let nodeName = element.nodeName.toLowerCase();\n        let tabIndexValue = getTabIndexValue(element);\n        if (element.hasAttribute('contenteditable')) {\n            return tabIndexValue !== -1;\n        }\n        if (nodeName === 'iframe' || nodeName === 'object') {\n            // The frame or object's content may be tabbable depending on the content, but it's\n            // not possibly to reliably detect the content of the frames. We always consider such\n            // elements as non-tabbable.\n            return false;\n        }\n        // In iOS, the browser only considers some specific elements as tabbable.\n        if (this._platform.WEBKIT && this._platform.IOS && !isPotentiallyTabbableIOS(element)) {\n            return false;\n        }\n        if (nodeName === 'audio') {\n            // Audio elements without controls enabled are never tabbable, regardless\n            // of the tabindex attribute explicitly being set.\n            if (!element.hasAttribute('controls')) {\n                return false;\n            }\n            // Audio elements with controls are by default tabbable unless the\n            // tabindex attribute is set to `-1` explicitly.\n            return tabIndexValue !== -1;\n        }\n        if (nodeName === 'video') {\n            // For all video elements, if the tabindex attribute is set to `-1`, the video\n            // is not tabbable. Note: We cannot rely on the default `HTMLElement.tabIndex`\n            // property as that one is set to `-1` in Chrome, Edge and Safari v13.1. The\n            // tabindex attribute is the source of truth here.\n            if (tabIndexValue === -1) {\n                return false;\n            }\n            // If the tabindex is explicitly set, and not `-1` (as per check before), the\n            // video element is always tabbable (regardless of whether it has controls or not).\n            if (tabIndexValue !== null) {\n                return true;\n            }\n            // Otherwise (when no explicit tabindex is set), a video is only tabbable if it\n            // has controls enabled. Firefox is special as videos are always tabbable regardless\n            // of whether there are controls or not.\n            return this._platform.FIREFOX || element.hasAttribute('controls');\n        }\n        return element.tabIndex >= 0;\n    }\n    /**\n     * Gets whether an element can be focused by the user.\n     *\n     * @param element Element to be checked.\n     * @param config The config object with options to customize this method's behavior\n     * @returns Whether the element is focusable.\n     */\n    isFocusable(element, config) {\n        // Perform checks in order of left to most expensive.\n        // Again, naive approach that does not capture many edge cases and browser quirks.\n        return (isPotentiallyFocusable(element) &&\n            !this.isDisabled(element) &&\n            (config?.ignoreVisibility || this.isVisible(element)));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: InteractivityChecker, deps: [{ token: i1.Platform }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: InteractivityChecker, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: InteractivityChecker, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i1.Platform }]; } });\n/**\n * Returns the frame element from a window object. Since browsers like MS Edge throw errors if\n * the frameElement property is being accessed from a different host address, this property\n * should be accessed carefully.\n */\nfunction getFrameElement(window) {\n    try {\n        return window.frameElement;\n    }\n    catch {\n        return null;\n    }\n}\n/** Checks whether the specified element has any geometry / rectangles. */\nfunction hasGeometry(element) {\n    // Use logic from jQuery to check for an invisible element.\n    // See https://github.com/jquery/jquery/blob/master/src/css/hiddenVisibleSelectors.js#L12\n    return !!(element.offsetWidth ||\n        element.offsetHeight ||\n        (typeof element.getClientRects === 'function' && element.getClientRects().length));\n}\n/** Gets whether an element's  */\nfunction isNativeFormElement(element) {\n    let nodeName = element.nodeName.toLowerCase();\n    return (nodeName === 'input' ||\n        nodeName === 'select' ||\n        nodeName === 'button' ||\n        nodeName === 'textarea');\n}\n/** Gets whether an element is an `<input type=\"hidden\">`. */\nfunction isHiddenInput(element) {\n    return isInputElement(element) && element.type == 'hidden';\n}\n/** Gets whether an element is an anchor that has an href attribute. */\nfunction isAnchorWithHref(element) {\n    return isAnchorElement(element) && element.hasAttribute('href');\n}\n/** Gets whether an element is an input element. */\nfunction isInputElement(element) {\n    return element.nodeName.toLowerCase() == 'input';\n}\n/** Gets whether an element is an anchor element. */\nfunction isAnchorElement(element) {\n    return element.nodeName.toLowerCase() == 'a';\n}\n/** Gets whether an element has a valid tabindex. */\nfunction hasValidTabIndex(element) {\n    if (!element.hasAttribute('tabindex') || element.tabIndex === undefined) {\n        return false;\n    }\n    let tabIndex = element.getAttribute('tabindex');\n    return !!(tabIndex && !isNaN(parseInt(tabIndex, 10)));\n}\n/**\n * Returns the parsed tabindex from the element attributes instead of returning the\n * evaluated tabindex from the browsers defaults.\n */\nfunction getTabIndexValue(element) {\n    if (!hasValidTabIndex(element)) {\n        return null;\n    }\n    // See browser issue in Gecko https://bugzilla.mozilla.org/show_bug.cgi?id=1128054\n    const tabIndex = parseInt(element.getAttribute('tabindex') || '', 10);\n    return isNaN(tabIndex) ? -1 : tabIndex;\n}\n/** Checks whether the specified element is potentially tabbable on iOS */\nfunction isPotentiallyTabbableIOS(element) {\n    let nodeName = element.nodeName.toLowerCase();\n    let inputType = nodeName === 'input' && element.type;\n    return (inputType === 'text' ||\n        inputType === 'password' ||\n        nodeName === 'select' ||\n        nodeName === 'textarea');\n}\n/**\n * Gets whether an element is potentially focusable without taking current visible/disabled state\n * into account.\n */\nfunction isPotentiallyFocusable(element) {\n    // Inputs are potentially focusable *unless* they're type=\"hidden\".\n    if (isHiddenInput(element)) {\n        return false;\n    }\n    return (isNativeFormElement(element) ||\n        isAnchorWithHref(element) ||\n        element.hasAttribute('contenteditable') ||\n        hasValidTabIndex(element));\n}\n/** Gets the parent window of a DOM node with regards of being inside of an iframe. */\nfunction getWindow(node) {\n    // ownerDocument is null if `node` itself *is* a document.\n    return (node.ownerDocument && node.ownerDocument.defaultView) || window;\n}\n\n/**\n * Class that allows for trapping focus within a DOM element.\n *\n * This class currently uses a relatively simple approach to focus trapping.\n * It assumes that the tab order is the same as DOM order, which is not necessarily true.\n * Things like `tabIndex > 0`, flex `order`, and shadow roots can cause the two to be misaligned.\n *\n * @deprecated Use `ConfigurableFocusTrap` instead.\n * @breaking-change 11.0.0\n */\nclass FocusTrap {\n    /** Whether the focus trap is active. */\n    get enabled() {\n        return this._enabled;\n    }\n    set enabled(value) {\n        this._enabled = value;\n        if (this._startAnchor && this._endAnchor) {\n            this._toggleAnchorTabIndex(value, this._startAnchor);\n            this._toggleAnchorTabIndex(value, this._endAnchor);\n        }\n    }\n    constructor(_element, _checker, _ngZone, _document, deferAnchors = false) {\n        this._element = _element;\n        this._checker = _checker;\n        this._ngZone = _ngZone;\n        this._document = _document;\n        this._hasAttached = false;\n        // Event listeners for the anchors. Need to be regular functions so that we can unbind them later.\n        this.startAnchorListener = () => this.focusLastTabbableElement();\n        this.endAnchorListener = () => this.focusFirstTabbableElement();\n        this._enabled = true;\n        if (!deferAnchors) {\n            this.attachAnchors();\n        }\n    }\n    /** Destroys the focus trap by cleaning up the anchors. */\n    destroy() {\n        const startAnchor = this._startAnchor;\n        const endAnchor = this._endAnchor;\n        if (startAnchor) {\n            startAnchor.removeEventListener('focus', this.startAnchorListener);\n            startAnchor.remove();\n        }\n        if (endAnchor) {\n            endAnchor.removeEventListener('focus', this.endAnchorListener);\n            endAnchor.remove();\n        }\n        this._startAnchor = this._endAnchor = null;\n        this._hasAttached = false;\n    }\n    /**\n     * Inserts the anchors into the DOM. This is usually done automatically\n     * in the constructor, but can be deferred for cases like directives with `*ngIf`.\n     * @returns Whether the focus trap managed to attach successfully. This may not be the case\n     * if the target element isn't currently in the DOM.\n     */\n    attachAnchors() {\n        // If we're not on the browser, there can be no focus to trap.\n        if (this._hasAttached) {\n            return true;\n        }\n        this._ngZone.runOutsideAngular(() => {\n            if (!this._startAnchor) {\n                this._startAnchor = this._createAnchor();\n                this._startAnchor.addEventListener('focus', this.startAnchorListener);\n            }\n            if (!this._endAnchor) {\n                this._endAnchor = this._createAnchor();\n                this._endAnchor.addEventListener('focus', this.endAnchorListener);\n            }\n        });\n        if (this._element.parentNode) {\n            this._element.parentNode.insertBefore(this._startAnchor, this._element);\n            this._element.parentNode.insertBefore(this._endAnchor, this._element.nextSibling);\n            this._hasAttached = true;\n        }\n        return this._hasAttached;\n    }\n    /**\n     * Waits for the zone to stabilize, then focuses the first tabbable element.\n     * @returns Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfully.\n     */\n    focusInitialElementWhenReady(options) {\n        return new Promise(resolve => {\n            this._executeOnStable(() => resolve(this.focusInitialElement(options)));\n        });\n    }\n    /**\n     * Waits for the zone to stabilize, then focuses\n     * the first tabbable element within the focus trap region.\n     * @returns Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfully.\n     */\n    focusFirstTabbableElementWhenReady(options) {\n        return new Promise(resolve => {\n            this._executeOnStable(() => resolve(this.focusFirstTabbableElement(options)));\n        });\n    }\n    /**\n     * Waits for the zone to stabilize, then focuses\n     * the last tabbable element within the focus trap region.\n     * @returns Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfully.\n     */\n    focusLastTabbableElementWhenReady(options) {\n        return new Promise(resolve => {\n            this._executeOnStable(() => resolve(this.focusLastTabbableElement(options)));\n        });\n    }\n    /**\n     * Get the specified boundary element of the trapped region.\n     * @param bound The boundary to get (start or end of trapped region).\n     * @returns The boundary element.\n     */\n    _getRegionBoundary(bound) {\n        // Contains the deprecated version of selector, for temporary backwards comparability.\n        const markers = this._element.querySelectorAll(`[cdk-focus-region-${bound}], ` + `[cdkFocusRegion${bound}], ` + `[cdk-focus-${bound}]`);\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            for (let i = 0; i < markers.length; i++) {\n                // @breaking-change 8.0.0\n                if (markers[i].hasAttribute(`cdk-focus-${bound}`)) {\n                    console.warn(`Found use of deprecated attribute 'cdk-focus-${bound}', ` +\n                        `use 'cdkFocusRegion${bound}' instead. The deprecated ` +\n                        `attribute will be removed in 8.0.0.`, markers[i]);\n                }\n                else if (markers[i].hasAttribute(`cdk-focus-region-${bound}`)) {\n                    console.warn(`Found use of deprecated attribute 'cdk-focus-region-${bound}', ` +\n                        `use 'cdkFocusRegion${bound}' instead. The deprecated attribute ` +\n                        `will be removed in 8.0.0.`, markers[i]);\n                }\n            }\n        }\n        if (bound == 'start') {\n            return markers.length ? markers[0] : this._getFirstTabbableElement(this._element);\n        }\n        return markers.length\n            ? markers[markers.length - 1]\n            : this._getLastTabbableElement(this._element);\n    }\n    /**\n     * Focuses the element that should be focused when the focus trap is initialized.\n     * @returns Whether focus was moved successfully.\n     */\n    focusInitialElement(options) {\n        // Contains the deprecated version of selector, for temporary backwards comparability.\n        const redirectToElement = this._element.querySelector(`[cdk-focus-initial], ` + `[cdkFocusInitial]`);\n        if (redirectToElement) {\n            // @breaking-change 8.0.0\n            if ((typeof ngDevMode === 'undefined' || ngDevMode) &&\n                redirectToElement.hasAttribute(`cdk-focus-initial`)) {\n                console.warn(`Found use of deprecated attribute 'cdk-focus-initial', ` +\n                    `use 'cdkFocusInitial' instead. The deprecated attribute ` +\n                    `will be removed in 8.0.0`, redirectToElement);\n            }\n            // Warn the consumer if the element they've pointed to\n            // isn't focusable, when not in production mode.\n            if ((typeof ngDevMode === 'undefined' || ngDevMode) &&\n                !this._checker.isFocusable(redirectToElement)) {\n                console.warn(`Element matching '[cdkFocusInitial]' is not focusable.`, redirectToElement);\n            }\n            if (!this._checker.isFocusable(redirectToElement)) {\n                const focusableChild = this._getFirstTabbableElement(redirectToElement);\n                focusableChild?.focus(options);\n                return !!focusableChild;\n            }\n            redirectToElement.focus(options);\n            return true;\n        }\n        return this.focusFirstTabbableElement(options);\n    }\n    /**\n     * Focuses the first tabbable element within the focus trap region.\n     * @returns Whether focus was moved successfully.\n     */\n    focusFirstTabbableElement(options) {\n        const redirectToElement = this._getRegionBoundary('start');\n        if (redirectToElement) {\n            redirectToElement.focus(options);\n        }\n        return !!redirectToElement;\n    }\n    /**\n     * Focuses the last tabbable element within the focus trap region.\n     * @returns Whether focus was moved successfully.\n     */\n    focusLastTabbableElement(options) {\n        const redirectToElement = this._getRegionBoundary('end');\n        if (redirectToElement) {\n            redirectToElement.focus(options);\n        }\n        return !!redirectToElement;\n    }\n    /**\n     * Checks whether the focus trap has successfully been attached.\n     */\n    hasAttached() {\n        return this._hasAttached;\n    }\n    /** Get the first tabbable element from a DOM subtree (inclusive). */\n    _getFirstTabbableElement(root) {\n        if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n            return root;\n        }\n        const children = root.children;\n        for (let i = 0; i < children.length; i++) {\n            const tabbableChild = children[i].nodeType === this._document.ELEMENT_NODE\n                ? this._getFirstTabbableElement(children[i])\n                : null;\n            if (tabbableChild) {\n                return tabbableChild;\n            }\n        }\n        return null;\n    }\n    /** Get the last tabbable element from a DOM subtree (inclusive). */\n    _getLastTabbableElement(root) {\n        if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n            return root;\n        }\n        // Iterate in reverse DOM order.\n        const children = root.children;\n        for (let i = children.length - 1; i >= 0; i--) {\n            const tabbableChild = children[i].nodeType === this._document.ELEMENT_NODE\n                ? this._getLastTabbableElement(children[i])\n                : null;\n            if (tabbableChild) {\n                return tabbableChild;\n            }\n        }\n        return null;\n    }\n    /** Creates an anchor element. */\n    _createAnchor() {\n        const anchor = this._document.createElement('div');\n        this._toggleAnchorTabIndex(this._enabled, anchor);\n        anchor.classList.add('cdk-visually-hidden');\n        anchor.classList.add('cdk-focus-trap-anchor');\n        anchor.setAttribute('aria-hidden', 'true');\n        return anchor;\n    }\n    /**\n     * Toggles the `tabindex` of an anchor, based on the enabled state of the focus trap.\n     * @param isEnabled Whether the focus trap is enabled.\n     * @param anchor Anchor on which to toggle the tabindex.\n     */\n    _toggleAnchorTabIndex(isEnabled, anchor) {\n        // Remove the tabindex completely, rather than setting it to -1, because if the\n        // element has a tabindex, the user might still hit it when navigating with the arrow keys.\n        isEnabled ? anchor.setAttribute('tabindex', '0') : anchor.removeAttribute('tabindex');\n    }\n    /**\n     * Toggles the`tabindex` of both anchors to either trap Tab focus or allow it to escape.\n     * @param enabled: Whether the anchors should trap Tab.\n     */\n    toggleAnchors(enabled) {\n        if (this._startAnchor && this._endAnchor) {\n            this._toggleAnchorTabIndex(enabled, this._startAnchor);\n            this._toggleAnchorTabIndex(enabled, this._endAnchor);\n        }\n    }\n    /** Executes a function when the zone is stable. */\n    _executeOnStable(fn) {\n        if (this._ngZone.isStable) {\n            fn();\n        }\n        else {\n            this._ngZone.onStable.pipe(take(1)).subscribe(fn);\n        }\n    }\n}\n/**\n * Factory that allows easy instantiation of focus traps.\n * @deprecated Use `ConfigurableFocusTrapFactory` instead.\n * @breaking-change 11.0.0\n */\nclass FocusTrapFactory {\n    constructor(_checker, _ngZone, _document) {\n        this._checker = _checker;\n        this._ngZone = _ngZone;\n        this._document = _document;\n    }\n    /**\n     * Creates a focus-trapped region around the given element.\n     * @param element The element around which focus will be trapped.\n     * @param deferCaptureElements Defers the creation of focus-capturing elements to be done\n     *     manually by the user.\n     * @returns The created focus trap instance.\n     */\n    create(element, deferCaptureElements = false) {\n        return new FocusTrap(element, this._checker, this._ngZone, this._document, deferCaptureElements);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: FocusTrapFactory, deps: [{ token: InteractivityChecker }, { token: i0.NgZone }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: FocusTrapFactory, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: FocusTrapFactory, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: InteractivityChecker }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\n/** Directive for trapping focus within a region. */\nclass CdkTrapFocus {\n    /** Whether the focus trap is active. */\n    get enabled() {\n        return this.focusTrap.enabled;\n    }\n    set enabled(value) {\n        this.focusTrap.enabled = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the directive should automatically move focus into the trapped region upon\n     * initialization and return focus to the previous activeElement upon destruction.\n     */\n    get autoCapture() {\n        return this._autoCapture;\n    }\n    set autoCapture(value) {\n        this._autoCapture = coerceBooleanProperty(value);\n    }\n    constructor(_elementRef, _focusTrapFactory, \n    /**\n     * @deprecated No longer being used. To be removed.\n     * @breaking-change 13.0.0\n     */\n    _document) {\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        /** Previously focused element to restore focus to upon destroy when using autoCapture. */\n        this._previouslyFocusedElement = null;\n        this.focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement, true);\n    }\n    ngOnDestroy() {\n        this.focusTrap.destroy();\n        // If we stored a previously focused element when using autoCapture, return focus to that\n        // element now that the trapped region is being destroyed.\n        if (this._previouslyFocusedElement) {\n            this._previouslyFocusedElement.focus();\n            this._previouslyFocusedElement = null;\n        }\n    }\n    ngAfterContentInit() {\n        this.focusTrap.attachAnchors();\n        if (this.autoCapture) {\n            this._captureFocus();\n        }\n    }\n    ngDoCheck() {\n        if (!this.focusTrap.hasAttached()) {\n            this.focusTrap.attachAnchors();\n        }\n    }\n    ngOnChanges(changes) {\n        const autoCaptureChange = changes['autoCapture'];\n        if (autoCaptureChange &&\n            !autoCaptureChange.firstChange &&\n            this.autoCapture &&\n            this.focusTrap.hasAttached()) {\n            this._captureFocus();\n        }\n    }\n    _captureFocus() {\n        this._previouslyFocusedElement = _getFocusedElementPierceShadowDom();\n        this.focusTrap.focusInitialElementWhenReady();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: CdkTrapFocus, deps: [{ token: i0.ElementRef }, { token: FocusTrapFactory }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: CdkTrapFocus, selector: \"[cdkTrapFocus]\", inputs: { enabled: [\"cdkTrapFocus\", \"enabled\"], autoCapture: [\"cdkTrapFocusAutoCapture\", \"autoCapture\"] }, exportAs: [\"cdkTrapFocus\"], usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: CdkTrapFocus, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkTrapFocus]',\n                    exportAs: 'cdkTrapFocus',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: FocusTrapFactory }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; }, propDecorators: { enabled: [{\n                type: Input,\n                args: ['cdkTrapFocus']\n            }], autoCapture: [{\n                type: Input,\n                args: ['cdkTrapFocusAutoCapture']\n            }] } });\n\n/**\n * Class that allows for trapping focus within a DOM element.\n *\n * This class uses a strategy pattern that determines how it traps focus.\n * See FocusTrapInertStrategy.\n */\nclass ConfigurableFocusTrap extends FocusTrap {\n    /** Whether the FocusTrap is enabled. */\n    get enabled() {\n        return this._enabled;\n    }\n    set enabled(value) {\n        this._enabled = value;\n        if (this._enabled) {\n            this._focusTrapManager.register(this);\n        }\n        else {\n            this._focusTrapManager.deregister(this);\n        }\n    }\n    constructor(_element, _checker, _ngZone, _document, _focusTrapManager, _inertStrategy, config) {\n        super(_element, _checker, _ngZone, _document, config.defer);\n        this._focusTrapManager = _focusTrapManager;\n        this._inertStrategy = _inertStrategy;\n        this._focusTrapManager.register(this);\n    }\n    /** Notifies the FocusTrapManager that this FocusTrap will be destroyed. */\n    destroy() {\n        this._focusTrapManager.deregister(this);\n        super.destroy();\n    }\n    /** @docs-private Implemented as part of ManagedFocusTrap. */\n    _enable() {\n        this._inertStrategy.preventFocus(this);\n        this.toggleAnchors(true);\n    }\n    /** @docs-private Implemented as part of ManagedFocusTrap. */\n    _disable() {\n        this._inertStrategy.allowFocus(this);\n        this.toggleAnchors(false);\n    }\n}\n\n/** The injection token used to specify the inert strategy. */\nconst FOCUS_TRAP_INERT_STRATEGY = new InjectionToken('FOCUS_TRAP_INERT_STRATEGY');\n\n/**\n * Lightweight FocusTrapInertStrategy that adds a document focus event\n * listener to redirect focus back inside the FocusTrap.\n */\nclass EventListenerFocusTrapInertStrategy {\n    constructor() {\n        /** Focus event handler. */\n        this._listener = null;\n    }\n    /** Adds a document event listener that keeps focus inside the FocusTrap. */\n    preventFocus(focusTrap) {\n        // Ensure there's only one listener per document\n        if (this._listener) {\n            focusTrap._document.removeEventListener('focus', this._listener, true);\n        }\n        this._listener = (e) => this._trapFocus(focusTrap, e);\n        focusTrap._ngZone.runOutsideAngular(() => {\n            focusTrap._document.addEventListener('focus', this._listener, true);\n        });\n    }\n    /** Removes the event listener added in preventFocus. */\n    allowFocus(focusTrap) {\n        if (!this._listener) {\n            return;\n        }\n        focusTrap._document.removeEventListener('focus', this._listener, true);\n        this._listener = null;\n    }\n    /**\n     * Refocuses the first element in the FocusTrap if the focus event target was outside\n     * the FocusTrap.\n     *\n     * This is an event listener callback. The event listener is added in runOutsideAngular,\n     * so all this code runs outside Angular as well.\n     */\n    _trapFocus(focusTrap, event) {\n        const target = event.target;\n        const focusTrapRoot = focusTrap._element;\n        // Don't refocus if target was in an overlay, because the overlay might be associated\n        // with an element inside the FocusTrap, ex. mat-select.\n        if (target && !focusTrapRoot.contains(target) && !target.closest?.('div.cdk-overlay-pane')) {\n            // Some legacy FocusTrap usages have logic that focuses some element on the page\n            // just before FocusTrap is destroyed. For backwards compatibility, wait\n            // to be sure FocusTrap is still enabled before refocusing.\n            setTimeout(() => {\n                // Check whether focus wasn't put back into the focus trap while the timeout was pending.\n                if (focusTrap.enabled && !focusTrapRoot.contains(focusTrap._document.activeElement)) {\n                    focusTrap.focusFirstTabbableElement();\n                }\n            });\n        }\n    }\n}\n\n/** Injectable that ensures only the most recently enabled FocusTrap is active. */\nclass FocusTrapManager {\n    constructor() {\n        // A stack of the FocusTraps on the page. Only the FocusTrap at the\n        // top of the stack is active.\n        this._focusTrapStack = [];\n    }\n    /**\n     * Disables the FocusTrap at the top of the stack, and then pushes\n     * the new FocusTrap onto the stack.\n     */\n    register(focusTrap) {\n        // Dedupe focusTraps that register multiple times.\n        this._focusTrapStack = this._focusTrapStack.filter(ft => ft !== focusTrap);\n        let stack = this._focusTrapStack;\n        if (stack.length) {\n            stack[stack.length - 1]._disable();\n        }\n        stack.push(focusTrap);\n        focusTrap._enable();\n    }\n    /**\n     * Removes the FocusTrap from the stack, and activates the\n     * FocusTrap that is the new top of the stack.\n     */\n    deregister(focusTrap) {\n        focusTrap._disable();\n        const stack = this._focusTrapStack;\n        const i = stack.indexOf(focusTrap);\n        if (i !== -1) {\n            stack.splice(i, 1);\n            if (stack.length) {\n                stack[stack.length - 1]._enable();\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: FocusTrapManager, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: FocusTrapManager, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: FocusTrapManager, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\n/** Factory that allows easy instantiation of configurable focus traps. */\nclass ConfigurableFocusTrapFactory {\n    constructor(_checker, _ngZone, _focusTrapManager, _document, _inertStrategy) {\n        this._checker = _checker;\n        this._ngZone = _ngZone;\n        this._focusTrapManager = _focusTrapManager;\n        this._document = _document;\n        // TODO split up the strategies into different modules, similar to DateAdapter.\n        this._inertStrategy = _inertStrategy || new EventListenerFocusTrapInertStrategy();\n    }\n    create(element, config = { defer: false }) {\n        let configObject;\n        if (typeof config === 'boolean') {\n            configObject = { defer: config };\n        }\n        else {\n            configObject = config;\n        }\n        return new ConfigurableFocusTrap(element, this._checker, this._ngZone, this._document, this._focusTrapManager, this._inertStrategy, configObject);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: ConfigurableFocusTrapFactory, deps: [{ token: InteractivityChecker }, { token: i0.NgZone }, { token: FocusTrapManager }, { token: DOCUMENT }, { token: FOCUS_TRAP_INERT_STRATEGY, optional: true }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: ConfigurableFocusTrapFactory, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: ConfigurableFocusTrapFactory, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: InteractivityChecker }, { type: i0.NgZone }, { type: FocusTrapManager }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [FOCUS_TRAP_INERT_STRATEGY]\n                }] }]; } });\n\n/** Gets whether an event could be a faked `mousedown` event dispatched by a screen reader. */\nfunction isFakeMousedownFromScreenReader(event) {\n    // Some screen readers will dispatch a fake `mousedown` event when pressing enter or space on\n    // a clickable element. We can distinguish these events when both `offsetX` and `offsetY` are\n    // zero or `event.buttons` is zero, depending on the browser:\n    // - `event.buttons` works on Firefox, but fails on Chrome.\n    // - `offsetX` and `offsetY` work on Chrome, but fail on Firefox.\n    // Note that there's an edge case where the user could click the 0x0 spot of the\n    // screen themselves, but that is unlikely to contain interactive elements.\n    return event.buttons === 0 || (event.offsetX === 0 && event.offsetY === 0);\n}\n/** Gets whether an event could be a faked `touchstart` event dispatched by a screen reader. */\nfunction isFakeTouchstartFromScreenReader(event) {\n    const touch = (event.touches && event.touches[0]) || (event.changedTouches && event.changedTouches[0]);\n    // A fake `touchstart` can be distinguished from a real one by looking at the `identifier`\n    // which is typically >= 0 on a real device versus -1 from a screen reader. Just to be safe,\n    // we can also look at `radiusX` and `radiusY`. This behavior was observed against a Windows 10\n    // device with a touch screen running NVDA v2020.4 and Firefox 85 or Chrome 88.\n    return (!!touch &&\n        touch.identifier === -1 &&\n        (touch.radiusX == null || touch.radiusX === 1) &&\n        (touch.radiusY == null || touch.radiusY === 1));\n}\n\n/**\n * Injectable options for the InputModalityDetector. These are shallowly merged with the default\n * options.\n */\nconst INPUT_MODALITY_DETECTOR_OPTIONS = new InjectionToken('cdk-input-modality-detector-options');\n/**\n * Default options for the InputModalityDetector.\n *\n * Modifier keys are ignored by default (i.e. when pressed won't cause the service to detect\n * keyboard input modality) for two reasons:\n *\n * 1. Modifier keys are commonly used with mouse to perform actions such as 'right click' or 'open\n *    in new tab', and are thus less representative of actual keyboard interaction.\n * 2. VoiceOver triggers some keyboard events when linearly navigating with Control + Option (but\n *    confusingly not with Caps Lock). Thus, to have parity with other screen readers, we ignore\n *    these keys so as to not update the input modality.\n *\n * Note that we do not by default ignore the right Meta key on Safari because it has the same key\n * code as the ContextMenu key on other browsers. When we switch to using event.key, we can\n * distinguish between the two.\n */\nconst INPUT_MODALITY_DETECTOR_DEFAULT_OPTIONS = {\n    ignoreKeys: [ALT, CONTROL, MAC_META, META, SHIFT],\n};\n/**\n * The amount of time needed to pass after a touchstart event in order for a subsequent mousedown\n * event to be attributed as mouse and not touch.\n *\n * This is the value used by AngularJS Material. Through trial and error (on iPhone 6S) they found\n * that a value of around 650ms seems appropriate.\n */\nconst TOUCH_BUFFER_MS = 650;\n/**\n * Event listener options that enable capturing and also mark the listener as passive if the browser\n * supports it.\n */\nconst modalityEventListenerOptions = normalizePassiveListenerOptions({\n    passive: true,\n    capture: true,\n});\n/**\n * Service that detects the user's input modality.\n *\n * This service does not update the input modality when a user navigates with a screen reader\n * (e.g. linear navigation with VoiceOver, object navigation / browse mode with NVDA, virtual PC\n * cursor mode with JAWS). This is in part due to technical limitations (i.e. keyboard events do not\n * fire as expected in these modes) but is also arguably the correct behavior. Navigating with a\n * screen reader is akin to visually scanning a page, and should not be interpreted as actual user\n * input interaction.\n *\n * When a user is not navigating but *interacting* with a screen reader, this service attempts to\n * update the input modality to keyboard, but in general this service's behavior is largely\n * undefined.\n */\nclass InputModalityDetector {\n    /** The most recently detected input modality. */\n    get mostRecentModality() {\n        return this._modality.value;\n    }\n    constructor(_platform, ngZone, document, options) {\n        this._platform = _platform;\n        /**\n         * The most recently detected input modality event target. Is null if no input modality has been\n         * detected or if the associated event target is null for some unknown reason.\n         */\n        this._mostRecentTarget = null;\n        /** The underlying BehaviorSubject that emits whenever an input modality is detected. */\n        this._modality = new BehaviorSubject(null);\n        /**\n         * The timestamp of the last touch input modality. Used to determine whether mousedown events\n         * should be attributed to mouse or touch.\n         */\n        this._lastTouchMs = 0;\n        /**\n         * Handles keydown events. Must be an arrow function in order to preserve the context when it gets\n         * bound.\n         */\n        this._onKeydown = (event) => {\n            // If this is one of the keys we should ignore, then ignore it and don't update the input\n            // modality to keyboard.\n            if (this._options?.ignoreKeys?.some(keyCode => keyCode === event.keyCode)) {\n                return;\n            }\n            this._modality.next('keyboard');\n            this._mostRecentTarget = _getEventTarget(event);\n        };\n        /**\n         * Handles mousedown events. Must be an arrow function in order to preserve the context when it\n         * gets bound.\n         */\n        this._onMousedown = (event) => {\n            // Touches trigger both touch and mouse events, so we need to distinguish between mouse events\n            // that were triggered via mouse vs touch. To do so, check if the mouse event occurs closely\n            // after the previous touch event.\n            if (Date.now() - this._lastTouchMs < TOUCH_BUFFER_MS) {\n                return;\n            }\n            // Fake mousedown events are fired by some screen readers when controls are activated by the\n            // screen reader. Attribute them to keyboard input modality.\n            this._modality.next(isFakeMousedownFromScreenReader(event) ? 'keyboard' : 'mouse');\n            this._mostRecentTarget = _getEventTarget(event);\n        };\n        /**\n         * Handles touchstart events. Must be an arrow function in order to preserve the context when it\n         * gets bound.\n         */\n        this._onTouchstart = (event) => {\n            // Same scenario as mentioned in _onMousedown, but on touch screen devices, fake touchstart\n            // events are fired. Again, attribute to keyboard input modality.\n            if (isFakeTouchstartFromScreenReader(event)) {\n                this._modality.next('keyboard');\n                return;\n            }\n            // Store the timestamp of this touch event, as it's used to distinguish between mouse events\n            // triggered via mouse vs touch.\n            this._lastTouchMs = Date.now();\n            this._modality.next('touch');\n            this._mostRecentTarget = _getEventTarget(event);\n        };\n        this._options = {\n            ...INPUT_MODALITY_DETECTOR_DEFAULT_OPTIONS,\n            ...options,\n        };\n        // Skip the first emission as it's null.\n        this.modalityDetected = this._modality.pipe(skip(1));\n        this.modalityChanged = this.modalityDetected.pipe(distinctUntilChanged());\n        // If we're not in a browser, this service should do nothing, as there's no relevant input\n        // modality to detect.\n        if (_platform.isBrowser) {\n            ngZone.runOutsideAngular(() => {\n                document.addEventListener('keydown', this._onKeydown, modalityEventListenerOptions);\n                document.addEventListener('mousedown', this._onMousedown, modalityEventListenerOptions);\n                document.addEventListener('touchstart', this._onTouchstart, modalityEventListenerOptions);\n            });\n        }\n    }\n    ngOnDestroy() {\n        this._modality.complete();\n        if (this._platform.isBrowser) {\n            document.removeEventListener('keydown', this._onKeydown, modalityEventListenerOptions);\n            document.removeEventListener('mousedown', this._onMousedown, modalityEventListenerOptions);\n            document.removeEventListener('touchstart', this._onTouchstart, modalityEventListenerOptions);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: InputModalityDetector, deps: [{ token: i1.Platform }, { token: i0.NgZone }, { token: DOCUMENT }, { token: INPUT_MODALITY_DETECTOR_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: InputModalityDetector, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: InputModalityDetector, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i1.Platform }, { type: i0.NgZone }, { type: Document, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [INPUT_MODALITY_DETECTOR_OPTIONS]\n                }] }]; } });\n\nconst LIVE_ANNOUNCER_ELEMENT_TOKEN = new InjectionToken('liveAnnouncerElement', {\n    providedIn: 'root',\n    factory: LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY,\n});\n/** @docs-private */\nfunction LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY() {\n    return null;\n}\n/** Injection token that can be used to configure the default options for the LiveAnnouncer. */\nconst LIVE_ANNOUNCER_DEFAULT_OPTIONS = new InjectionToken('LIVE_ANNOUNCER_DEFAULT_OPTIONS');\n\nlet uniqueIds = 0;\nclass LiveAnnouncer {\n    constructor(elementToken, _ngZone, _document, _defaultOptions) {\n        this._ngZone = _ngZone;\n        this._defaultOptions = _defaultOptions;\n        // We inject the live element and document as `any` because the constructor signature cannot\n        // reference browser globals (HTMLElement, Document) on non-browser environments, since having\n        // a class decorator causes TypeScript to preserve the constructor signature types.\n        this._document = _document;\n        this._liveElement = elementToken || this._createLiveElement();\n    }\n    announce(message, ...args) {\n        const defaultOptions = this._defaultOptions;\n        let politeness;\n        let duration;\n        if (args.length === 1 && typeof args[0] === 'number') {\n            duration = args[0];\n        }\n        else {\n            [politeness, duration] = args;\n        }\n        this.clear();\n        clearTimeout(this._previousTimeout);\n        if (!politeness) {\n            politeness =\n                defaultOptions && defaultOptions.politeness ? defaultOptions.politeness : 'polite';\n        }\n        if (duration == null && defaultOptions) {\n            duration = defaultOptions.duration;\n        }\n        // TODO: ensure changing the politeness works on all environments we support.\n        this._liveElement.setAttribute('aria-live', politeness);\n        if (this._liveElement.id) {\n            this._exposeAnnouncerToModals(this._liveElement.id);\n        }\n        // This 100ms timeout is necessary for some browser + screen-reader combinations:\n        // - Both JAWS and NVDA over IE11 will not announce anything without a non-zero timeout.\n        // - With Chrome and IE11 with NVDA or JAWS, a repeated (identical) message won't be read a\n        //   second time without clearing and then using a non-zero delay.\n        // (using JAWS 17 at time of this writing).\n        return this._ngZone.runOutsideAngular(() => {\n            if (!this._currentPromise) {\n                this._currentPromise = new Promise(resolve => (this._currentResolve = resolve));\n            }\n            clearTimeout(this._previousTimeout);\n            this._previousTimeout = setTimeout(() => {\n                this._liveElement.textContent = message;\n                if (typeof duration === 'number') {\n                    this._previousTimeout = setTimeout(() => this.clear(), duration);\n                }\n                this._currentResolve();\n                this._currentPromise = this._currentResolve = undefined;\n            }, 100);\n            return this._currentPromise;\n        });\n    }\n    /**\n     * Clears the current text from the announcer element. Can be used to prevent\n     * screen readers from reading the text out again while the user is going\n     * through the page landmarks.\n     */\n    clear() {\n        if (this._liveElement) {\n            this._liveElement.textContent = '';\n        }\n    }\n    ngOnDestroy() {\n        clearTimeout(this._previousTimeout);\n        this._liveElement?.remove();\n        this._liveElement = null;\n        this._currentResolve?.();\n        this._currentPromise = this._currentResolve = undefined;\n    }\n    _createLiveElement() {\n        const elementClass = 'cdk-live-announcer-element';\n        const previousElements = this._document.getElementsByClassName(elementClass);\n        const liveEl = this._document.createElement('div');\n        // Remove any old containers. This can happen when coming in from a server-side-rendered page.\n        for (let i = 0; i < previousElements.length; i++) {\n            previousElements[i].remove();\n        }\n        liveEl.classList.add(elementClass);\n        liveEl.classList.add('cdk-visually-hidden');\n        liveEl.setAttribute('aria-atomic', 'true');\n        liveEl.setAttribute('aria-live', 'polite');\n        liveEl.id = `cdk-live-announcer-${uniqueIds++}`;\n        this._document.body.appendChild(liveEl);\n        return liveEl;\n    }\n    /**\n     * Some browsers won't expose the accessibility node of the live announcer element if there is an\n     * `aria-modal` and the live announcer is outside of it. This method works around the issue by\n     * pointing the `aria-owns` of all modals to the live announcer element.\n     */\n    _exposeAnnouncerToModals(id) {\n        // TODO(http://github.com/angular/components/issues/26853): consider de-duplicating this with\n        // the `SnakBarContainer` and other usages.\n        //\n        // Note that the selector here is limited to CDK overlays at the moment in order to reduce the\n        // section of the DOM we need to look through. This should cover all the cases we support, but\n        // the selector can be expanded if it turns out to be too narrow.\n        const modals = this._document.querySelectorAll('body > .cdk-overlay-container [aria-modal=\"true\"]');\n        for (let i = 0; i < modals.length; i++) {\n            const modal = modals[i];\n            const ariaOwns = modal.getAttribute('aria-owns');\n            if (!ariaOwns) {\n                modal.setAttribute('aria-owns', id);\n            }\n            else if (ariaOwns.indexOf(id) === -1) {\n                modal.setAttribute('aria-owns', ariaOwns + ' ' + id);\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: LiveAnnouncer, deps: [{ token: LIVE_ANNOUNCER_ELEMENT_TOKEN, optional: true }, { token: i0.NgZone }, { token: DOCUMENT }, { token: LIVE_ANNOUNCER_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: LiveAnnouncer, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: LiveAnnouncer, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [LIVE_ANNOUNCER_ELEMENT_TOKEN]\n                }] }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [LIVE_ANNOUNCER_DEFAULT_OPTIONS]\n                }] }]; } });\n/**\n * A directive that works similarly to aria-live, but uses the LiveAnnouncer to ensure compatibility\n * with a wider range of browsers and screen readers.\n */\nclass CdkAriaLive {\n    /** The aria-live politeness level to use when announcing messages. */\n    get politeness() {\n        return this._politeness;\n    }\n    set politeness(value) {\n        this._politeness = value === 'off' || value === 'assertive' ? value : 'polite';\n        if (this._politeness === 'off') {\n            if (this._subscription) {\n                this._subscription.unsubscribe();\n                this._subscription = null;\n            }\n        }\n        else if (!this._subscription) {\n            this._subscription = this._ngZone.runOutsideAngular(() => {\n                return this._contentObserver.observe(this._elementRef).subscribe(() => {\n                    // Note that we use textContent here, rather than innerText, in order to avoid a reflow.\n                    const elementText = this._elementRef.nativeElement.textContent;\n                    // The `MutationObserver` fires also for attribute\n                    // changes which we don't want to announce.\n                    if (elementText !== this._previousAnnouncedText) {\n                        this._liveAnnouncer.announce(elementText, this._politeness, this.duration);\n                        this._previousAnnouncedText = elementText;\n                    }\n                });\n            });\n        }\n    }\n    constructor(_elementRef, _liveAnnouncer, _contentObserver, _ngZone) {\n        this._elementRef = _elementRef;\n        this._liveAnnouncer = _liveAnnouncer;\n        this._contentObserver = _contentObserver;\n        this._ngZone = _ngZone;\n        this._politeness = 'polite';\n    }\n    ngOnDestroy() {\n        if (this._subscription) {\n            this._subscription.unsubscribe();\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: CdkAriaLive, deps: [{ token: i0.ElementRef }, { token: LiveAnnouncer }, { token: i1$1.ContentObserver }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: CdkAriaLive, selector: \"[cdkAriaLive]\", inputs: { politeness: [\"cdkAriaLive\", \"politeness\"], duration: [\"cdkAriaLiveDuration\", \"duration\"] }, exportAs: [\"cdkAriaLive\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: CdkAriaLive, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkAriaLive]',\n                    exportAs: 'cdkAriaLive',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: LiveAnnouncer }, { type: i1$1.ContentObserver }, { type: i0.NgZone }]; }, propDecorators: { politeness: [{\n                type: Input,\n                args: ['cdkAriaLive']\n            }], duration: [{\n                type: Input,\n                args: ['cdkAriaLiveDuration']\n            }] } });\n\n/** InjectionToken for FocusMonitorOptions. */\nconst FOCUS_MONITOR_DEFAULT_OPTIONS = new InjectionToken('cdk-focus-monitor-default-options');\n/**\n * Event listener options that enable capturing and also\n * mark the listener as passive if the browser supports it.\n */\nconst captureEventListenerOptions = normalizePassiveListenerOptions({\n    passive: true,\n    capture: true,\n});\n/** Monitors mouse and keyboard events to determine the cause of focus events. */\nclass FocusMonitor {\n    constructor(_ngZone, _platform, _inputModalityDetector, \n    /** @breaking-change 11.0.0 make document required */\n    document, options) {\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        this._inputModalityDetector = _inputModalityDetector;\n        /** The focus origin that the next focus event is a result of. */\n        this._origin = null;\n        /** Whether the window has just been focused. */\n        this._windowFocused = false;\n        /**\n         * Whether the origin was determined via a touch interaction. Necessary as properly attributing\n         * focus events to touch interactions requires special logic.\n         */\n        this._originFromTouchInteraction = false;\n        /** Map of elements being monitored to their info. */\n        this._elementInfo = new Map();\n        /** The number of elements currently being monitored. */\n        this._monitoredElementCount = 0;\n        /**\n         * Keeps track of the root nodes to which we've currently bound a focus/blur handler,\n         * as well as the number of monitored elements that they contain. We have to treat focus/blur\n         * handlers differently from the rest of the events, because the browser won't emit events\n         * to the document when focus moves inside of a shadow root.\n         */\n        this._rootNodeFocusListenerCount = new Map();\n        /**\n         * Event listener for `focus` events on the window.\n         * Needs to be an arrow function in order to preserve the context when it gets bound.\n         */\n        this._windowFocusListener = () => {\n            // Make a note of when the window regains focus, so we can\n            // restore the origin info for the focused element.\n            this._windowFocused = true;\n            this._windowFocusTimeoutId = window.setTimeout(() => (this._windowFocused = false));\n        };\n        /** Subject for stopping our InputModalityDetector subscription. */\n        this._stopInputModalityDetector = new Subject();\n        /**\n         * Event listener for `focus` and 'blur' events on the document.\n         * Needs to be an arrow function in order to preserve the context when it gets bound.\n         */\n        this._rootNodeFocusAndBlurListener = (event) => {\n            const target = _getEventTarget(event);\n            // We need to walk up the ancestor chain in order to support `checkChildren`.\n            for (let element = target; element; element = element.parentElement) {\n                if (event.type === 'focus') {\n                    this._onFocus(event, element);\n                }\n                else {\n                    this._onBlur(event, element);\n                }\n            }\n        };\n        this._document = document;\n        this._detectionMode = options?.detectionMode || 0 /* FocusMonitorDetectionMode.IMMEDIATE */;\n    }\n    monitor(element, checkChildren = false) {\n        const nativeElement = coerceElement(element);\n        // Do nothing if we're not on the browser platform or the passed in node isn't an element.\n        if (!this._platform.isBrowser || nativeElement.nodeType !== 1) {\n            // Note: we don't want the observable to emit at all so we don't pass any parameters.\n            return of();\n        }\n        // If the element is inside the shadow DOM, we need to bind our focus/blur listeners to\n        // the shadow root, rather than the `document`, because the browser won't emit focus events\n        // to the `document`, if focus is moving within the same shadow root.\n        const rootNode = _getShadowRoot(nativeElement) || this._getDocument();\n        const cachedInfo = this._elementInfo.get(nativeElement);\n        // Check if we're already monitoring this element.\n        if (cachedInfo) {\n            if (checkChildren) {\n                // TODO(COMP-318): this can be problematic, because it'll turn all non-checkChildren\n                // observers into ones that behave as if `checkChildren` was turned on. We need a more\n                // robust solution.\n                cachedInfo.checkChildren = true;\n            }\n            return cachedInfo.subject;\n        }\n        // Create monitored element info.\n        const info = {\n            checkChildren: checkChildren,\n            subject: new Subject(),\n            rootNode,\n        };\n        this._elementInfo.set(nativeElement, info);\n        this._registerGlobalListeners(info);\n        return info.subject;\n    }\n    stopMonitoring(element) {\n        const nativeElement = coerceElement(element);\n        const elementInfo = this._elementInfo.get(nativeElement);\n        if (elementInfo) {\n            elementInfo.subject.complete();\n            this._setClasses(nativeElement);\n            this._elementInfo.delete(nativeElement);\n            this._removeGlobalListeners(elementInfo);\n        }\n    }\n    focusVia(element, origin, options) {\n        const nativeElement = coerceElement(element);\n        const focusedElement = this._getDocument().activeElement;\n        // If the element is focused already, calling `focus` again won't trigger the event listener\n        // which means that the focus classes won't be updated. If that's the case, update the classes\n        // directly without waiting for an event.\n        if (nativeElement === focusedElement) {\n            this._getClosestElementsInfo(nativeElement).forEach(([currentElement, info]) => this._originChanged(currentElement, origin, info));\n        }\n        else {\n            this._setOrigin(origin);\n            // `focus` isn't available on the server\n            if (typeof nativeElement.focus === 'function') {\n                nativeElement.focus(options);\n            }\n        }\n    }\n    ngOnDestroy() {\n        this._elementInfo.forEach((_info, element) => this.stopMonitoring(element));\n    }\n    /** Access injected document if available or fallback to global document reference */\n    _getDocument() {\n        return this._document || document;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        const doc = this._getDocument();\n        return doc.defaultView || window;\n    }\n    _getFocusOrigin(focusEventTarget) {\n        if (this._origin) {\n            // If the origin was realized via a touch interaction, we need to perform additional checks\n            // to determine whether the focus origin should be attributed to touch or program.\n            if (this._originFromTouchInteraction) {\n                return this._shouldBeAttributedToTouch(focusEventTarget) ? 'touch' : 'program';\n            }\n            else {\n                return this._origin;\n            }\n        }\n        // If the window has just regained focus, we can restore the most recent origin from before the\n        // window blurred. Otherwise, we've reached the point where we can't identify the source of the\n        // focus. This typically means one of two things happened:\n        //\n        // 1) The element was programmatically focused, or\n        // 2) The element was focused via screen reader navigation (which generally doesn't fire\n        //    events).\n        //\n        // Because we can't distinguish between these two cases, we default to setting `program`.\n        if (this._windowFocused && this._lastFocusOrigin) {\n            return this._lastFocusOrigin;\n        }\n        // If the interaction is coming from an input label, we consider it a mouse interactions.\n        // This is a special case where focus moves on `click`, rather than `mousedown` which breaks\n        // our detection, because all our assumptions are for `mousedown`. We need to handle this\n        // special case, because it's very common for checkboxes and radio buttons.\n        if (focusEventTarget && this._isLastInteractionFromInputLabel(focusEventTarget)) {\n            return 'mouse';\n        }\n        return 'program';\n    }\n    /**\n     * Returns whether the focus event should be attributed to touch. Recall that in IMMEDIATE mode, a\n     * touch origin isn't immediately reset at the next tick (see _setOrigin). This means that when we\n     * handle a focus event following a touch interaction, we need to determine whether (1) the focus\n     * event was directly caused by the touch interaction or (2) the focus event was caused by a\n     * subsequent programmatic focus call triggered by the touch interaction.\n     * @param focusEventTarget The target of the focus event under examination.\n     */\n    _shouldBeAttributedToTouch(focusEventTarget) {\n        // Please note that this check is not perfect. Consider the following edge case:\n        //\n        // <div #parent tabindex=\"0\">\n        //   <div #child tabindex=\"0\" (click)=\"#parent.focus()\"></div>\n        // </div>\n        //\n        // Suppose there is a FocusMonitor in IMMEDIATE mode attached to #parent. When the user touches\n        // #child, #parent is programmatically focused. This code will attribute the focus to touch\n        // instead of program. This is a relatively minor edge-case that can be worked around by using\n        // focusVia(parent, 'program') to focus #parent.\n        return (this._detectionMode === 1 /* FocusMonitorDetectionMode.EVENTUAL */ ||\n            !!focusEventTarget?.contains(this._inputModalityDetector._mostRecentTarget));\n    }\n    /**\n     * Sets the focus classes on the element based on the given focus origin.\n     * @param element The element to update the classes on.\n     * @param origin The focus origin.\n     */\n    _setClasses(element, origin) {\n        element.classList.toggle('cdk-focused', !!origin);\n        element.classList.toggle('cdk-touch-focused', origin === 'touch');\n        element.classList.toggle('cdk-keyboard-focused', origin === 'keyboard');\n        element.classList.toggle('cdk-mouse-focused', origin === 'mouse');\n        element.classList.toggle('cdk-program-focused', origin === 'program');\n    }\n    /**\n     * Updates the focus origin. If we're using immediate detection mode, we schedule an async\n     * function to clear the origin at the end of a timeout. The duration of the timeout depends on\n     * the origin being set.\n     * @param origin The origin to set.\n     * @param isFromInteraction Whether we are setting the origin from an interaction event.\n     */\n    _setOrigin(origin, isFromInteraction = false) {\n        this._ngZone.runOutsideAngular(() => {\n            this._origin = origin;\n            this._originFromTouchInteraction = origin === 'touch' && isFromInteraction;\n            // If we're in IMMEDIATE mode, reset the origin at the next tick (or in `TOUCH_BUFFER_MS` ms\n            // for a touch event). We reset the origin at the next tick because Firefox focuses one tick\n            // after the interaction event. We wait `TOUCH_BUFFER_MS` ms before resetting the origin for\n            // a touch event because when a touch event is fired, the associated focus event isn't yet in\n            // the event queue. Before doing so, clear any pending timeouts.\n            if (this._detectionMode === 0 /* FocusMonitorDetectionMode.IMMEDIATE */) {\n                clearTimeout(this._originTimeoutId);\n                const ms = this._originFromTouchInteraction ? TOUCH_BUFFER_MS : 1;\n                this._originTimeoutId = setTimeout(() => (this._origin = null), ms);\n            }\n        });\n    }\n    /**\n     * Handles focus events on a registered element.\n     * @param event The focus event.\n     * @param element The monitored element.\n     */\n    _onFocus(event, element) {\n        // NOTE(mmalerba): We currently set the classes based on the focus origin of the most recent\n        // focus event affecting the monitored element. If we want to use the origin of the first event\n        // instead we should check for the cdk-focused class here and return if the element already has\n        // it. (This only matters for elements that have includesChildren = true).\n        // If we are not counting child-element-focus as focused, make sure that the event target is the\n        // monitored element itself.\n        const elementInfo = this._elementInfo.get(element);\n        const focusEventTarget = _getEventTarget(event);\n        if (!elementInfo || (!elementInfo.checkChildren && element !== focusEventTarget)) {\n            return;\n        }\n        this._originChanged(element, this._getFocusOrigin(focusEventTarget), elementInfo);\n    }\n    /**\n     * Handles blur events on a registered element.\n     * @param event The blur event.\n     * @param element The monitored element.\n     */\n    _onBlur(event, element) {\n        // If we are counting child-element-focus as focused, make sure that we aren't just blurring in\n        // order to focus another child of the monitored element.\n        const elementInfo = this._elementInfo.get(element);\n        if (!elementInfo ||\n            (elementInfo.checkChildren &&\n                event.relatedTarget instanceof Node &&\n                element.contains(event.relatedTarget))) {\n            return;\n        }\n        this._setClasses(element);\n        this._emitOrigin(elementInfo, null);\n    }\n    _emitOrigin(info, origin) {\n        if (info.subject.observers.length) {\n            this._ngZone.run(() => info.subject.next(origin));\n        }\n    }\n    _registerGlobalListeners(elementInfo) {\n        if (!this._platform.isBrowser) {\n            return;\n        }\n        const rootNode = elementInfo.rootNode;\n        const rootNodeFocusListeners = this._rootNodeFocusListenerCount.get(rootNode) || 0;\n        if (!rootNodeFocusListeners) {\n            this._ngZone.runOutsideAngular(() => {\n                rootNode.addEventListener('focus', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n                rootNode.addEventListener('blur', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n            });\n        }\n        this._rootNodeFocusListenerCount.set(rootNode, rootNodeFocusListeners + 1);\n        // Register global listeners when first element is monitored.\n        if (++this._monitoredElementCount === 1) {\n            // Note: we listen to events in the capture phase so we\n            // can detect them even if the user stops propagation.\n            this._ngZone.runOutsideAngular(() => {\n                const window = this._getWindow();\n                window.addEventListener('focus', this._windowFocusListener);\n            });\n            // The InputModalityDetector is also just a collection of global listeners.\n            this._inputModalityDetector.modalityDetected\n                .pipe(takeUntil(this._stopInputModalityDetector))\n                .subscribe(modality => {\n                this._setOrigin(modality, true /* isFromInteraction */);\n            });\n        }\n    }\n    _removeGlobalListeners(elementInfo) {\n        const rootNode = elementInfo.rootNode;\n        if (this._rootNodeFocusListenerCount.has(rootNode)) {\n            const rootNodeFocusListeners = this._rootNodeFocusListenerCount.get(rootNode);\n            if (rootNodeFocusListeners > 1) {\n                this._rootNodeFocusListenerCount.set(rootNode, rootNodeFocusListeners - 1);\n            }\n            else {\n                rootNode.removeEventListener('focus', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n                rootNode.removeEventListener('blur', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n                this._rootNodeFocusListenerCount.delete(rootNode);\n            }\n        }\n        // Unregister global listeners when last element is unmonitored.\n        if (!--this._monitoredElementCount) {\n            const window = this._getWindow();\n            window.removeEventListener('focus', this._windowFocusListener);\n            // Equivalently, stop our InputModalityDetector subscription.\n            this._stopInputModalityDetector.next();\n            // Clear timeouts for all potentially pending timeouts to prevent the leaks.\n            clearTimeout(this._windowFocusTimeoutId);\n            clearTimeout(this._originTimeoutId);\n        }\n    }\n    /** Updates all the state on an element once its focus origin has changed. */\n    _originChanged(element, origin, elementInfo) {\n        this._setClasses(element, origin);\n        this._emitOrigin(elementInfo, origin);\n        this._lastFocusOrigin = origin;\n    }\n    /**\n     * Collects the `MonitoredElementInfo` of a particular element and\n     * all of its ancestors that have enabled `checkChildren`.\n     * @param element Element from which to start the search.\n     */\n    _getClosestElementsInfo(element) {\n        const results = [];\n        this._elementInfo.forEach((info, currentElement) => {\n            if (currentElement === element || (info.checkChildren && currentElement.contains(element))) {\n                results.push([currentElement, info]);\n            }\n        });\n        return results;\n    }\n    /**\n     * Returns whether an interaction is likely to have come from the user clicking the `label` of\n     * an `input` or `textarea` in order to focus it.\n     * @param focusEventTarget Target currently receiving focus.\n     */\n    _isLastInteractionFromInputLabel(focusEventTarget) {\n        const { _mostRecentTarget: mostRecentTarget, mostRecentModality } = this._inputModalityDetector;\n        // If the last interaction used the mouse on an element contained by one of the labels\n        // of an `input`/`textarea` that is currently focused, it is very likely that the\n        // user redirected focus using the label.\n        if (mostRecentModality !== 'mouse' ||\n            !mostRecentTarget ||\n            mostRecentTarget === focusEventTarget ||\n            (focusEventTarget.nodeName !== 'INPUT' && focusEventTarget.nodeName !== 'TEXTAREA') ||\n            focusEventTarget.disabled) {\n            return false;\n        }\n        const labels = focusEventTarget.labels;\n        if (labels) {\n            for (let i = 0; i < labels.length; i++) {\n                if (labels[i].contains(mostRecentTarget)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: FocusMonitor, deps: [{ token: i0.NgZone }, { token: i1.Platform }, { token: InputModalityDetector }, { token: DOCUMENT, optional: true }, { token: FOCUS_MONITOR_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: FocusMonitor, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: FocusMonitor, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: i1.Platform }, { type: InputModalityDetector }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [FOCUS_MONITOR_DEFAULT_OPTIONS]\n                }] }]; } });\n/**\n * Directive that determines how a particular element was focused (via keyboard, mouse, touch, or\n * programmatically) and adds corresponding classes to the element.\n *\n * There are two variants of this directive:\n * 1) cdkMonitorElementFocus: does not consider an element to be focused if one of its children is\n *    focused.\n * 2) cdkMonitorSubtreeFocus: considers an element focused if it or any of its children are focused.\n */\nclass CdkMonitorFocus {\n    constructor(_elementRef, _focusMonitor) {\n        this._elementRef = _elementRef;\n        this._focusMonitor = _focusMonitor;\n        this._focusOrigin = null;\n        this.cdkFocusChange = new EventEmitter();\n    }\n    get focusOrigin() {\n        return this._focusOrigin;\n    }\n    ngAfterViewInit() {\n        const element = this._elementRef.nativeElement;\n        this._monitorSubscription = this._focusMonitor\n            .monitor(element, element.nodeType === 1 && element.hasAttribute('cdkMonitorSubtreeFocus'))\n            .subscribe(origin => {\n            this._focusOrigin = origin;\n            this.cdkFocusChange.emit(origin);\n        });\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        if (this._monitorSubscription) {\n            this._monitorSubscription.unsubscribe();\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: CdkMonitorFocus, deps: [{ token: i0.ElementRef }, { token: FocusMonitor }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: CdkMonitorFocus, selector: \"[cdkMonitorElementFocus], [cdkMonitorSubtreeFocus]\", outputs: { cdkFocusChange: \"cdkFocusChange\" }, exportAs: [\"cdkMonitorFocus\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: CdkMonitorFocus, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkMonitorElementFocus], [cdkMonitorSubtreeFocus]',\n                    exportAs: 'cdkMonitorFocus',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: FocusMonitor }]; }, propDecorators: { cdkFocusChange: [{\n                type: Output\n            }] } });\n\n/** CSS class applied to the document body when in black-on-white high-contrast mode. */\nconst BLACK_ON_WHITE_CSS_CLASS = 'cdk-high-contrast-black-on-white';\n/** CSS class applied to the document body when in white-on-black high-contrast mode. */\nconst WHITE_ON_BLACK_CSS_CLASS = 'cdk-high-contrast-white-on-black';\n/** CSS class applied to the document body when in high-contrast mode. */\nconst HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS = 'cdk-high-contrast-active';\n/**\n * Service to determine whether the browser is currently in a high-contrast-mode environment.\n *\n * Microsoft Windows supports an accessibility feature called \"High Contrast Mode\". This mode\n * changes the appearance of all applications, including web applications, to dramatically increase\n * contrast.\n *\n * IE, Edge, and Firefox currently support this mode. Chrome does not support Windows High Contrast\n * Mode. This service does not detect high-contrast mode as added by the Chrome \"High Contrast\"\n * browser extension.\n */\nclass HighContrastModeDetector {\n    constructor(_platform, document) {\n        this._platform = _platform;\n        this._document = document;\n        this._breakpointSubscription = inject(BreakpointObserver)\n            .observe('(forced-colors: active)')\n            .subscribe(() => {\n            if (this._hasCheckedHighContrastMode) {\n                this._hasCheckedHighContrastMode = false;\n                this._applyBodyHighContrastModeCssClasses();\n            }\n        });\n    }\n    /** Gets the current high-contrast-mode for the page. */\n    getHighContrastMode() {\n        if (!this._platform.isBrowser) {\n            return 0 /* HighContrastMode.NONE */;\n        }\n        // Create a test element with an arbitrary background-color that is neither black nor\n        // white; high-contrast mode will coerce the color to either black or white. Also ensure that\n        // appending the test element to the DOM does not affect layout by absolutely positioning it\n        const testElement = this._document.createElement('div');\n        testElement.style.backgroundColor = 'rgb(1,2,3)';\n        testElement.style.position = 'absolute';\n        this._document.body.appendChild(testElement);\n        // Get the computed style for the background color, collapsing spaces to normalize between\n        // browsers. Once we get this color, we no longer need the test element. Access the `window`\n        // via the document so we can fake it in tests. Note that we have extra null checks, because\n        // this logic will likely run during app bootstrap and throwing can break the entire app.\n        const documentWindow = this._document.defaultView || window;\n        const computedStyle = documentWindow && documentWindow.getComputedStyle\n            ? documentWindow.getComputedStyle(testElement)\n            : null;\n        const computedColor = ((computedStyle && computedStyle.backgroundColor) || '').replace(/ /g, '');\n        testElement.remove();\n        switch (computedColor) {\n            // Pre Windows 11 dark theme.\n            case 'rgb(0,0,0)':\n            // Windows 11 dark themes.\n            case 'rgb(45,50,54)':\n            case 'rgb(32,32,32)':\n                return 2 /* HighContrastMode.WHITE_ON_BLACK */;\n            // Pre Windows 11 light theme.\n            case 'rgb(255,255,255)':\n            // Windows 11 light theme.\n            case 'rgb(255,250,239)':\n                return 1 /* HighContrastMode.BLACK_ON_WHITE */;\n        }\n        return 0 /* HighContrastMode.NONE */;\n    }\n    ngOnDestroy() {\n        this._breakpointSubscription.unsubscribe();\n    }\n    /** Applies CSS classes indicating high-contrast mode to document body (browser-only). */\n    _applyBodyHighContrastModeCssClasses() {\n        if (!this._hasCheckedHighContrastMode && this._platform.isBrowser && this._document.body) {\n            const bodyClasses = this._document.body.classList;\n            bodyClasses.remove(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS, BLACK_ON_WHITE_CSS_CLASS, WHITE_ON_BLACK_CSS_CLASS);\n            this._hasCheckedHighContrastMode = true;\n            const mode = this.getHighContrastMode();\n            if (mode === 1 /* HighContrastMode.BLACK_ON_WHITE */) {\n                bodyClasses.add(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS, BLACK_ON_WHITE_CSS_CLASS);\n            }\n            else if (mode === 2 /* HighContrastMode.WHITE_ON_BLACK */) {\n                bodyClasses.add(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS, WHITE_ON_BLACK_CSS_CLASS);\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: HighContrastModeDetector, deps: [{ token: i1.Platform }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: HighContrastModeDetector, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: HighContrastModeDetector, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i1.Platform }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\n\nclass A11yModule {\n    constructor(highContrastModeDetector) {\n        highContrastModeDetector._applyBodyHighContrastModeCssClasses();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: A11yModule, deps: [{ token: HighContrastModeDetector }], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.1.1\", ngImport: i0, type: A11yModule, declarations: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus], imports: [ObserversModule], exports: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: A11yModule, imports: [ObserversModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: A11yModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ObserversModule],\n                    declarations: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus],\n                    exports: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus],\n                }]\n        }], ctorParameters: function () { return [{ type: HighContrastModeDetector }]; } });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { A11yModule, ActiveDescendantKeyManager, AriaDescriber, CDK_DESCRIBEDBY_HOST_ATTRIBUTE, CDK_DESCRIBEDBY_ID_PREFIX, CdkAriaLive, CdkMonitorFocus, CdkTrapFocus, ConfigurableFocusTrap, ConfigurableFocusTrapFactory, EventListenerFocusTrapInertStrategy, FOCUS_MONITOR_DEFAULT_OPTIONS, FOCUS_TRAP_INERT_STRATEGY, FocusKeyManager, FocusMonitor, FocusTrap, FocusTrapFactory, HighContrastModeDetector, INPUT_MODALITY_DETECTOR_DEFAULT_OPTIONS, INPUT_MODALITY_DETECTOR_OPTIONS, InputModalityDetector, InteractivityChecker, IsFocusableConfig, LIVE_ANNOUNCER_DEFAULT_OPTIONS, LIVE_ANNOUNCER_ELEMENT_TOKEN, LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY, ListKeyManager, LiveAnnouncer, MESSAGES_CONTAINER_ID, addAriaReferencedId, getAriaReferenceIds, isFakeMousedownFromScreenReader, isFakeTouchstartFromScreenReader, removeAriaReferencedId };\n","const MAC_ENTER = 3;\nconst BACKSPACE = 8;\nconst TAB = 9;\nconst NUM_CENTER = 12;\nconst ENTER = 13;\nconst SHIFT = 16;\nconst CONTROL = 17;\nconst ALT = 18;\nconst PAUSE = 19;\nconst CAPS_LOCK = 20;\nconst ESCAPE = 27;\nconst SPACE = 32;\nconst PAGE_UP = 33;\nconst PAGE_DOWN = 34;\nconst END = 35;\nconst HOME = 36;\nconst LEFT_ARROW = 37;\nconst UP_ARROW = 38;\nconst RIGHT_ARROW = 39;\nconst DOWN_ARROW = 40;\nconst PLUS_SIGN = 43;\nconst PRINT_SCREEN = 44;\nconst INSERT = 45;\nconst DELETE = 46;\nconst ZERO = 48;\nconst ONE = 49;\nconst TWO = 50;\nconst THREE = 51;\nconst FOUR = 52;\nconst FIVE = 53;\nconst SIX = 54;\nconst SEVEN = 55;\nconst EIGHT = 56;\nconst NINE = 57;\nconst FF_SEMICOLON = 59; // Firefox (Gecko) fires this for semicolon instead of 186\nconst FF_EQUALS = 61; // Firefox (Gecko) fires this for equals instead of 187\nconst QUESTION_MARK = 63;\nconst AT_SIGN = 64;\nconst A = 65;\nconst B = 66;\nconst C = 67;\nconst D = 68;\nconst E = 69;\nconst F = 70;\nconst G = 71;\nconst H = 72;\nconst I = 73;\nconst J = 74;\nconst K = 75;\nconst L = 76;\nconst M = 77;\nconst N = 78;\nconst O = 79;\nconst P = 80;\nconst Q = 81;\nconst R = 82;\nconst S = 83;\nconst T = 84;\nconst U = 85;\nconst V = 86;\nconst W = 87;\nconst X = 88;\nconst Y = 89;\nconst Z = 90;\nconst META = 91; // WIN_KEY_LEFT\nconst MAC_WK_CMD_LEFT = 91;\nconst MAC_WK_CMD_RIGHT = 93;\nconst CONTEXT_MENU = 93;\nconst NUMPAD_ZERO = 96;\nconst NUMPAD_ONE = 97;\nconst NUMPAD_TWO = 98;\nconst NUMPAD_THREE = 99;\nconst NUMPAD_FOUR = 100;\nconst NUMPAD_FIVE = 101;\nconst NUMPAD_SIX = 102;\nconst NUMPAD_SEVEN = 103;\nconst NUMPAD_EIGHT = 104;\nconst NUMPAD_NINE = 105;\nconst NUMPAD_MULTIPLY = 106;\nconst NUMPAD_PLUS = 107;\nconst NUMPAD_MINUS = 109;\nconst NUMPAD_PERIOD = 110;\nconst NUMPAD_DIVIDE = 111;\nconst F1 = 112;\nconst F2 = 113;\nconst F3 = 114;\nconst F4 = 115;\nconst F5 = 116;\nconst F6 = 117;\nconst F7 = 118;\nconst F8 = 119;\nconst F9 = 120;\nconst F10 = 121;\nconst F11 = 122;\nconst F12 = 123;\nconst NUM_LOCK = 144;\nconst SCROLL_LOCK = 145;\nconst FIRST_MEDIA = 166;\nconst FF_MINUS = 173;\nconst MUTE = 173; // Firefox (Gecko) fires 181 for MUTE\nconst VOLUME_DOWN = 174; // Firefox (Gecko) fires 182 for VOLUME_DOWN\nconst VOLUME_UP = 175; // Firefox (Gecko) fires 183 for VOLUME_UP\nconst FF_MUTE = 181;\nconst FF_VOLUME_DOWN = 182;\nconst LAST_MEDIA = 183;\nconst FF_VOLUME_UP = 183;\nconst SEMICOLON = 186; // Firefox (Gecko) fires 59 for SEMICOLON\nconst EQUALS = 187; // Firefox (Gecko) fires 61 for EQUALS\nconst COMMA = 188;\nconst DASH = 189; // Firefox (Gecko) fires 173 for DASH/MINUS\nconst PERIOD = 190;\nconst SLASH = 191;\nconst APOSTROPHE = 192;\nconst TILDE = 192;\nconst OPEN_SQUARE_BRACKET = 219;\nconst BACKSLASH = 220;\nconst CLOSE_SQUARE_BRACKET = 221;\nconst SINGLE_QUOTE = 222;\nconst MAC_META = 224;\n\n/**\n * Checks whether a modifier key is pressed.\n * @param event Event to be checked.\n */\nfunction hasModifierKey(event, ...modifiers) {\n    if (modifiers.length) {\n        return modifiers.some(modifier => event[modifier]);\n    }\n    return event.altKey || event.shiftKey || event.ctrlKey || event.metaKey;\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { A, ALT, APOSTROPHE, AT_SIGN, B, BACKSLASH, BACKSPACE, C, CAPS_LOCK, CLOSE_SQUARE_BRACKET, COMMA, CONTEXT_MENU, CONTROL, D, DASH, DELETE, DOWN_ARROW, E, EIGHT, END, ENTER, EQUALS, ESCAPE, F, F1, F10, F11, F12, F2, F3, F4, F5, F6, F7, F8, F9, FF_EQUALS, FF_MINUS, FF_MUTE, FF_SEMICOLON, FF_VOLUME_DOWN, FF_VOLUME_UP, FIRST_MEDIA, FIVE, FOUR, G, H, HOME, I, INSERT, J, K, L, LAST_MEDIA, LEFT_ARROW, M, MAC_ENTER, MAC_META, MAC_WK_CMD_LEFT, MAC_WK_CMD_RIGHT, META, MUTE, N, NINE, NUMPAD_DIVIDE, NUMPAD_EIGHT, NUMPAD_FIVE, NUMPAD_FOUR, NUMPAD_MINUS, NUMPAD_MULTIPLY, NUMPAD_NINE, NUMPAD_ONE, NUMPAD_PERIOD, NUMPAD_PLUS, NUMPAD_SEVEN, NUMPAD_SIX, NUMPAD_THREE, NUMPAD_TWO, NUMPAD_ZERO, NUM_CENTER, NUM_LOCK, O, ONE, OPEN_SQUARE_BRACKET, P, PAGE_DOWN, PAGE_UP, PAUSE, PERIOD, PLUS_SIGN, PRINT_SCREEN, Q, QUESTION_MARK, R, RIGHT_ARROW, S, SCROLL_LOCK, SEMICOLON, SEVEN, SHIFT, SINGLE_QUOTE, SIX, SLASH, SPACE, T, TAB, THREE, TILDE, TWO, U, UP_ARROW, V, VOLUME_DOWN, VOLUME_UP, W, X, Y, Z, ZERO, hasModifierKey };\n","/**\n * @license Angular v16.2.0\n * (c) 2010-2022 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport * as i0 from '@angular/core';\nimport { Directive, InjectionToken, forwardRef, Optional, Inject, ɵisPromise, ɵisSubscribable, ɵRuntimeError, Self, EventEmitter, Input, Host, SkipSelf, booleanAttribute, ChangeDetectorRef, Output, NgModule, Injectable, inject, Version } from '@angular/core';\nimport { ɵgetDOM } from '@angular/common';\nimport { from, forkJoin } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/**\n * Base class for all ControlValueAccessor classes defined in Forms package.\n * Contains common logic and utility functions.\n *\n * Note: this is an *internal-only* class and should not be extended or used directly in\n * applications code.\n */\nclass BaseControlValueAccessor {\n    constructor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        /**\n         * The registered callback function called when a change or input event occurs on the input\n         * element.\n         * @nodoc\n         */\n        this.onChange = (_) => { };\n        /**\n         * The registered callback function called when a blur event occurs on the input element.\n         * @nodoc\n         */\n        this.onTouched = () => { };\n    }\n    /**\n     * Helper method that sets a property on a target element using the current Renderer\n     * implementation.\n     * @nodoc\n     */\n    setProperty(key, value) {\n        this._renderer.setProperty(this._elementRef.nativeElement, key, value);\n    }\n    /**\n     * Registers a function called when the control is touched.\n     * @nodoc\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * Registers a function called when the control value changes.\n     * @nodoc\n     */\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    /**\n     * Sets the \"disabled\" property on the range input element.\n     * @nodoc\n     */\n    setDisabledState(isDisabled) {\n        this.setProperty('disabled', isDisabled);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: BaseControlValueAccessor, deps: [{ token: i0.Renderer2 }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.0\", type: BaseControlValueAccessor, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: BaseControlValueAccessor, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.Renderer2 }, { type: i0.ElementRef }]; } });\n/**\n * Base class for all built-in ControlValueAccessor classes (except DefaultValueAccessor, which is\n * used in case no other CVAs can be found). We use this class to distinguish between default CVA,\n * built-in CVAs and custom CVAs, so that Forms logic can recognize built-in CVAs and treat custom\n * ones with higher priority (when both built-in and custom CVAs are present).\n *\n * Note: this is an *internal-only* class and should not be extended or used directly in\n * applications code.\n */\nclass BuiltInControlValueAccessor extends BaseControlValueAccessor {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: BuiltInControlValueAccessor, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.0\", type: BuiltInControlValueAccessor, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: BuiltInControlValueAccessor, decorators: [{\n            type: Directive\n        }] });\n/**\n * Used to provide a `ControlValueAccessor` for form controls.\n *\n * See `DefaultValueAccessor` for how to implement one.\n *\n * @publicApi\n */\nconst NG_VALUE_ACCESSOR = new InjectionToken('NgValueAccessor');\n\nconst CHECKBOX_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => CheckboxControlValueAccessor),\n    multi: true,\n};\n/**\n * @description\n * A `ControlValueAccessor` for writing a value and listening to changes on a checkbox input\n * element.\n *\n * @usageNotes\n *\n * ### Using a checkbox with a reactive form.\n *\n * The following example shows how to use a checkbox with a reactive form.\n *\n * ```ts\n * const rememberLoginControl = new FormControl();\n * ```\n *\n * ```\n * <input type=\"checkbox\" [formControl]=\"rememberLoginControl\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass CheckboxControlValueAccessor extends BuiltInControlValueAccessor {\n    /**\n     * Sets the \"checked\" property on the input element.\n     * @nodoc\n     */\n    writeValue(value) {\n        this.setProperty('checked', value);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: CheckboxControlValueAccessor, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.0\", type: CheckboxControlValueAccessor, selector: \"input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]\", host: { listeners: { \"change\": \"onChange($event.target.checked)\", \"blur\": \"onTouched()\" } }, providers: [CHECKBOX_VALUE_ACCESSOR], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: CheckboxControlValueAccessor, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]',\n                    host: { '(change)': 'onChange($event.target.checked)', '(blur)': 'onTouched()' },\n                    providers: [CHECKBOX_VALUE_ACCESSOR]\n                }]\n        }] });\n\nconst DEFAULT_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => DefaultValueAccessor),\n    multi: true\n};\n/**\n * We must check whether the agent is Android because composition events\n * behave differently between iOS and Android.\n */\nfunction _isAndroid() {\n    const userAgent = ɵgetDOM() ? ɵgetDOM().getUserAgent() : '';\n    return /android (\\d+)/.test(userAgent.toLowerCase());\n}\n/**\n * @description\n * Provide this token to control if form directives buffer IME input until\n * the \"compositionend\" event occurs.\n * @publicApi\n */\nconst COMPOSITION_BUFFER_MODE = new InjectionToken('CompositionEventMode');\n/**\n * The default `ControlValueAccessor` for writing a value and listening to changes on input\n * elements. The accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n * {@searchKeywords ngDefaultControl}\n *\n * @usageNotes\n *\n * ### Using the default value accessor\n *\n * The following example shows how to use an input element that activates the default value accessor\n * (in this case, a text field).\n *\n * ```ts\n * const firstNameControl = new FormControl();\n * ```\n *\n * ```\n * <input type=\"text\" [formControl]=\"firstNameControl\">\n * ```\n *\n * This value accessor is used by default for `<input type=\"text\">` and `<textarea>` elements, but\n * you could also use it for custom components that have similar behavior and do not require special\n * processing. In order to attach the default value accessor to a custom element, add the\n * `ngDefaultControl` attribute as shown below.\n *\n * ```\n * <custom-input-component ngDefaultControl [(ngModel)]=\"value\"></custom-input-component>\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass DefaultValueAccessor extends BaseControlValueAccessor {\n    constructor(renderer, elementRef, _compositionMode) {\n        super(renderer, elementRef);\n        this._compositionMode = _compositionMode;\n        /** Whether the user is creating a composition string (IME events). */\n        this._composing = false;\n        if (this._compositionMode == null) {\n            this._compositionMode = !_isAndroid();\n        }\n    }\n    /**\n     * Sets the \"value\" property on the input element.\n     * @nodoc\n     */\n    writeValue(value) {\n        const normalizedValue = value == null ? '' : value;\n        this.setProperty('value', normalizedValue);\n    }\n    /** @internal */\n    _handleInput(value) {\n        if (!this._compositionMode || (this._compositionMode && !this._composing)) {\n            this.onChange(value);\n        }\n    }\n    /** @internal */\n    _compositionStart() {\n        this._composing = true;\n    }\n    /** @internal */\n    _compositionEnd(value) {\n        this._composing = false;\n        this._compositionMode && this.onChange(value);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: DefaultValueAccessor, deps: [{ token: i0.Renderer2 }, { token: i0.ElementRef }, { token: COMPOSITION_BUFFER_MODE, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.0\", type: DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\", host: { listeners: { \"input\": \"$any(this)._handleInput($event.target.value)\", \"blur\": \"onTouched()\", \"compositionstart\": \"$any(this)._compositionStart()\", \"compositionend\": \"$any(this)._compositionEnd($event.target.value)\" } }, providers: [DEFAULT_VALUE_ACCESSOR], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: DefaultValueAccessor, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]',\n                    // TODO: vsavkin replace the above selector with the one below it once\n                    // https://github.com/angular/angular/issues/3011 is implemented\n                    // selector: '[ngModel],[formControl],[formControlName]',\n                    host: {\n                        '(input)': '$any(this)._handleInput($event.target.value)',\n                        '(blur)': 'onTouched()',\n                        '(compositionstart)': '$any(this)._compositionStart()',\n                        '(compositionend)': '$any(this)._compositionEnd($event.target.value)'\n                    },\n                    providers: [DEFAULT_VALUE_ACCESSOR]\n                }]\n        }], ctorParameters: function () { return [{ type: i0.Renderer2 }, { type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [COMPOSITION_BUFFER_MODE]\n                }] }]; } });\n\nfunction isEmptyInputValue(value) {\n    /**\n     * Check if the object is a string or array before evaluating the length attribute.\n     * This avoids falsely rejecting objects that contain a custom length attribute.\n     * For example, the object {id: 1, length: 0, width: 0} should not be returned as empty.\n     */\n    return value == null ||\n        ((typeof value === 'string' || Array.isArray(value)) && value.length === 0);\n}\nfunction hasValidLength(value) {\n    // non-strict comparison is intentional, to check for both `null` and `undefined` values\n    return value != null && typeof value.length === 'number';\n}\n/**\n * @description\n * An `InjectionToken` for registering additional synchronous validators used with\n * `AbstractControl`s.\n *\n * @see {@link NG_ASYNC_VALIDATORS}\n *\n * @usageNotes\n *\n * ### Providing a custom validator\n *\n * The following example registers a custom validator directive. Adding the validator to the\n * existing collection of validators requires the `multi: true` option.\n *\n * ```typescript\n * @Directive({\n *   selector: '[customValidator]',\n *   providers: [{provide: NG_VALIDATORS, useExisting: CustomValidatorDirective, multi: true}]\n * })\n * class CustomValidatorDirective implements Validator {\n *   validate(control: AbstractControl): ValidationErrors | null {\n *     return { 'custom': true };\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nconst NG_VALIDATORS = new InjectionToken('NgValidators');\n/**\n * @description\n * An `InjectionToken` for registering additional asynchronous validators used with\n * `AbstractControl`s.\n *\n * @see {@link NG_VALIDATORS}\n *\n * @usageNotes\n *\n * ### Provide a custom async validator directive\n *\n * The following example implements the `AsyncValidator` interface to create an\n * async validator directive with a custom error key.\n *\n * ```typescript\n * @Directive({\n *   selector: '[customAsyncValidator]',\n *   providers: [{provide: NG_ASYNC_VALIDATORS, useExisting: CustomAsyncValidatorDirective, multi:\n * true}]\n * })\n * class CustomAsyncValidatorDirective implements AsyncValidator {\n *   validate(control: AbstractControl): Promise<ValidationErrors|null> {\n *     return Promise.resolve({'custom': true});\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nconst NG_ASYNC_VALIDATORS = new InjectionToken('NgAsyncValidators');\n/**\n * A regular expression that matches valid e-mail addresses.\n *\n * At a high level, this regexp matches e-mail addresses of the format `local-part@tld`, where:\n * - `local-part` consists of one or more of the allowed characters (alphanumeric and some\n *   punctuation symbols).\n * - `local-part` cannot begin or end with a period (`.`).\n * - `local-part` cannot be longer than 64 characters.\n * - `tld` consists of one or more `labels` separated by periods (`.`). For example `localhost` or\n *   `foo.com`.\n * - A `label` consists of one or more of the allowed characters (alphanumeric, dashes (`-`) and\n *   periods (`.`)).\n * - A `label` cannot begin or end with a dash (`-`) or a period (`.`).\n * - A `label` cannot be longer than 63 characters.\n * - The whole address cannot be longer than 254 characters.\n *\n * ## Implementation background\n *\n * This regexp was ported over from AngularJS (see there for git history):\n * https://github.com/angular/angular.js/blob/c133ef836/src/ng/directive/input.js#L27\n * It is based on the\n * [WHATWG version](https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address) with\n * some enhancements to incorporate more RFC rules (such as rules related to domain names and the\n * lengths of different parts of the address). The main differences from the WHATWG version are:\n *   - Disallow `local-part` to begin or end with a period (`.`).\n *   - Disallow `local-part` length to exceed 64 characters.\n *   - Disallow total address length to exceed 254 characters.\n *\n * See [this commit](https://github.com/angular/angular.js/commit/f3f5cf72e) for more details.\n */\nconst EMAIL_REGEXP = /^(?=.{1,254}$)(?=.{1,64}@)[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n/**\n * @description\n * Provides a set of built-in validators that can be used by form controls.\n *\n * A validator is a function that processes a `FormControl` or collection of\n * controls and returns an error map or null. A null map means that validation has passed.\n *\n * @see [Form Validation](/guide/form-validation)\n *\n * @publicApi\n */\nclass Validators {\n    /**\n     * @description\n     * Validator that requires the control's value to be greater than or equal to the provided number.\n     *\n     * @usageNotes\n     *\n     * ### Validate against a minimum of 3\n     *\n     * ```typescript\n     * const control = new FormControl(2, Validators.min(3));\n     *\n     * console.log(control.errors); // {min: {min: 3, actual: 2}}\n     * ```\n     *\n     * @returns A validator function that returns an error map with the\n     * `min` property if the validation check fails, otherwise `null`.\n     *\n     * @see {@link updateValueAndValidity()}\n     *\n     */\n    static min(min) {\n        return minValidator(min);\n    }\n    /**\n     * @description\n     * Validator that requires the control's value to be less than or equal to the provided number.\n     *\n     * @usageNotes\n     *\n     * ### Validate against a maximum of 15\n     *\n     * ```typescript\n     * const control = new FormControl(16, Validators.max(15));\n     *\n     * console.log(control.errors); // {max: {max: 15, actual: 16}}\n     * ```\n     *\n     * @returns A validator function that returns an error map with the\n     * `max` property if the validation check fails, otherwise `null`.\n     *\n     * @see {@link updateValueAndValidity()}\n     *\n     */\n    static max(max) {\n        return maxValidator(max);\n    }\n    /**\n     * @description\n     * Validator that requires the control have a non-empty value.\n     *\n     * @usageNotes\n     *\n     * ### Validate that the field is non-empty\n     *\n     * ```typescript\n     * const control = new FormControl('', Validators.required);\n     *\n     * console.log(control.errors); // {required: true}\n     * ```\n     *\n     * @returns An error map with the `required` property\n     * if the validation check fails, otherwise `null`.\n     *\n     * @see {@link updateValueAndValidity()}\n     *\n     */\n    static required(control) {\n        return requiredValidator(control);\n    }\n    /**\n     * @description\n     * Validator that requires the control's value be true. This validator is commonly\n     * used for required checkboxes.\n     *\n     * @usageNotes\n     *\n     * ### Validate that the field value is true\n     *\n     * ```typescript\n     * const control = new FormControl('some value', Validators.requiredTrue);\n     *\n     * console.log(control.errors); // {required: true}\n     * ```\n     *\n     * @returns An error map that contains the `required` property\n     * set to `true` if the validation check fails, otherwise `null`.\n     *\n     * @see {@link updateValueAndValidity()}\n     *\n     */\n    static requiredTrue(control) {\n        return requiredTrueValidator(control);\n    }\n    /**\n     * @description\n     * Validator that requires the control's value pass an email validation test.\n     *\n     * Tests the value using a [regular\n     * expression](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions)\n     * pattern suitable for common use cases. The pattern is based on the definition of a valid email\n     * address in the [WHATWG HTML\n     * specification](https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address) with\n     * some enhancements to incorporate more RFC rules (such as rules related to domain names and the\n     * lengths of different parts of the address).\n     *\n     * The differences from the WHATWG version include:\n     * - Disallow `local-part` (the part before the `@` symbol) to begin or end with a period (`.`).\n     * - Disallow `local-part` to be longer than 64 characters.\n     * - Disallow the whole address to be longer than 254 characters.\n     *\n     * If this pattern does not satisfy your business needs, you can use `Validators.pattern()` to\n     * validate the value against a different pattern.\n     *\n     * @usageNotes\n     *\n     * ### Validate that the field matches a valid email pattern\n     *\n     * ```typescript\n     * const control = new FormControl('bad@', Validators.email);\n     *\n     * console.log(control.errors); // {email: true}\n     * ```\n     *\n     * @returns An error map with the `email` property\n     * if the validation check fails, otherwise `null`.\n     *\n     * @see {@link updateValueAndValidity()}\n     *\n     */\n    static email(control) {\n        return emailValidator(control);\n    }\n    /**\n     * @description\n     * Validator that requires the length of the control's value to be greater than or equal\n     * to the provided minimum length. This validator is also provided by default if you use the\n     * the HTML5 `minlength` attribute. Note that the `minLength` validator is intended to be used\n     * only for types that have a numeric `length` property, such as strings or arrays. The\n     * `minLength` validator logic is also not invoked for values when their `length` property is 0\n     * (for example in case of an empty string or an empty array), to support optional controls. You\n     * can use the standard `required` validator if empty values should not be considered valid.\n     *\n     * @usageNotes\n     *\n     * ### Validate that the field has a minimum of 3 characters\n     *\n     * ```typescript\n     * const control = new FormControl('ng', Validators.minLength(3));\n     *\n     * console.log(control.errors); // {minlength: {requiredLength: 3, actualLength: 2}}\n     * ```\n     *\n     * ```html\n     * <input minlength=\"5\">\n     * ```\n     *\n     * @returns A validator function that returns an error map with the\n     * `minlength` property if the validation check fails, otherwise `null`.\n     *\n     * @see {@link updateValueAndValidity()}\n     *\n     */\n    static minLength(minLength) {\n        return minLengthValidator(minLength);\n    }\n    /**\n     * @description\n     * Validator that requires the length of the control's value to be less than or equal\n     * to the provided maximum length. This validator is also provided by default if you use the\n     * the HTML5 `maxlength` attribute. Note that the `maxLength` validator is intended to be used\n     * only for types that have a numeric `length` property, such as strings or arrays.\n     *\n     * @usageNotes\n     *\n     * ### Validate that the field has maximum of 5 characters\n     *\n     * ```typescript\n     * const control = new FormControl('Angular', Validators.maxLength(5));\n     *\n     * console.log(control.errors); // {maxlength: {requiredLength: 5, actualLength: 7}}\n     * ```\n     *\n     * ```html\n     * <input maxlength=\"5\">\n     * ```\n     *\n     * @returns A validator function that returns an error map with the\n     * `maxlength` property if the validation check fails, otherwise `null`.\n     *\n     * @see {@link updateValueAndValidity()}\n     *\n     */\n    static maxLength(maxLength) {\n        return maxLengthValidator(maxLength);\n    }\n    /**\n     * @description\n     * Validator that requires the control's value to match a regex pattern. This validator is also\n     * provided by default if you use the HTML5 `pattern` attribute.\n     *\n     * @usageNotes\n     *\n     * ### Validate that the field only contains letters or spaces\n     *\n     * ```typescript\n     * const control = new FormControl('1', Validators.pattern('[a-zA-Z ]*'));\n     *\n     * console.log(control.errors); // {pattern: {requiredPattern: '^[a-zA-Z ]*$', actualValue: '1'}}\n     * ```\n     *\n     * ```html\n     * <input pattern=\"[a-zA-Z ]*\">\n     * ```\n     *\n     * ### Pattern matching with the global or sticky flag\n     *\n     * `RegExp` objects created with the `g` or `y` flags that are passed into `Validators.pattern`\n     * can produce different results on the same input when validations are run consecutively. This is\n     * due to how the behavior of `RegExp.prototype.test` is\n     * specified in [ECMA-262](https://tc39.es/ecma262/#sec-regexpbuiltinexec)\n     * (`RegExp` preserves the index of the last match when the global or sticky flag is used).\n     * Due to this behavior, it is recommended that when using\n     * `Validators.pattern` you **do not** pass in a `RegExp` object with either the global or sticky\n     * flag enabled.\n     *\n     * ```typescript\n     * // Not recommended (since the `g` flag is used)\n     * const controlOne = new FormControl('1', Validators.pattern(/foo/g));\n     *\n     * // Good\n     * const controlTwo = new FormControl('1', Validators.pattern(/foo/));\n     * ```\n     *\n     * @param pattern A regular expression to be used as is to test the values, or a string.\n     * If a string is passed, the `^` character is prepended and the `$` character is\n     * appended to the provided string (if not already present), and the resulting regular\n     * expression is used to test the values.\n     *\n     * @returns A validator function that returns an error map with the\n     * `pattern` property if the validation check fails, otherwise `null`.\n     *\n     * @see {@link updateValueAndValidity()}\n     *\n     */\n    static pattern(pattern) {\n        return patternValidator(pattern);\n    }\n    /**\n     * @description\n     * Validator that performs no operation.\n     *\n     * @see {@link updateValueAndValidity()}\n     *\n     */\n    static nullValidator(control) {\n        return nullValidator(control);\n    }\n    static compose(validators) {\n        return compose(validators);\n    }\n    /**\n     * @description\n     * Compose multiple async validators into a single function that returns the union\n     * of the individual error objects for the provided control.\n     *\n     * @returns A validator function that returns an error map with the\n     * merged error objects of the async validators if the validation check fails, otherwise `null`.\n     *\n     * @see {@link updateValueAndValidity()}\n     *\n     */\n    static composeAsync(validators) {\n        return composeAsync(validators);\n    }\n}\n/**\n * Validator that requires the control's value to be greater than or equal to the provided number.\n * See `Validators.min` for additional information.\n */\nfunction minValidator(min) {\n    return (control) => {\n        if (isEmptyInputValue(control.value) || isEmptyInputValue(min)) {\n            return null; // don't validate empty values to allow optional controls\n        }\n        const value = parseFloat(control.value);\n        // Controls with NaN values after parsing should be treated as not having a\n        // minimum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-min\n        return !isNaN(value) && value < min ? { 'min': { 'min': min, 'actual': control.value } } : null;\n    };\n}\n/**\n * Validator that requires the control's value to be less than or equal to the provided number.\n * See `Validators.max` for additional information.\n */\nfunction maxValidator(max) {\n    return (control) => {\n        if (isEmptyInputValue(control.value) || isEmptyInputValue(max)) {\n            return null; // don't validate empty values to allow optional controls\n        }\n        const value = parseFloat(control.value);\n        // Controls with NaN values after parsing should be treated as not having a\n        // maximum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-max\n        return !isNaN(value) && value > max ? { 'max': { 'max': max, 'actual': control.value } } : null;\n    };\n}\n/**\n * Validator that requires the control have a non-empty value.\n * See `Validators.required` for additional information.\n */\nfunction requiredValidator(control) {\n    return isEmptyInputValue(control.value) ? { 'required': true } : null;\n}\n/**\n * Validator that requires the control's value be true. This validator is commonly\n * used for required checkboxes.\n * See `Validators.requiredTrue` for additional information.\n */\nfunction requiredTrueValidator(control) {\n    return control.value === true ? null : { 'required': true };\n}\n/**\n * Validator that requires the control's value pass an email validation test.\n * See `Validators.email` for additional information.\n */\nfunction emailValidator(control) {\n    if (isEmptyInputValue(control.value)) {\n        return null; // don't validate empty values to allow optional controls\n    }\n    return EMAIL_REGEXP.test(control.value) ? null : { 'email': true };\n}\n/**\n * Validator that requires the length of the control's value to be greater than or equal\n * to the provided minimum length. See `Validators.minLength` for additional information.\n */\nfunction minLengthValidator(minLength) {\n    return (control) => {\n        if (isEmptyInputValue(control.value) || !hasValidLength(control.value)) {\n            // don't validate empty values to allow optional controls\n            // don't validate values without `length` property\n            return null;\n        }\n        return control.value.length < minLength ?\n            { 'minlength': { 'requiredLength': minLength, 'actualLength': control.value.length } } :\n            null;\n    };\n}\n/**\n * Validator that requires the length of the control's value to be less than or equal\n * to the provided maximum length. See `Validators.maxLength` for additional information.\n */\nfunction maxLengthValidator(maxLength) {\n    return (control) => {\n        return hasValidLength(control.value) && control.value.length > maxLength ?\n            { 'maxlength': { 'requiredLength': maxLength, 'actualLength': control.value.length } } :\n            null;\n    };\n}\n/**\n * Validator that requires the control's value to match a regex pattern.\n * See `Validators.pattern` for additional information.\n */\nfunction patternValidator(pattern) {\n    if (!pattern)\n        return nullValidator;\n    let regex;\n    let regexStr;\n    if (typeof pattern === 'string') {\n        regexStr = '';\n        if (pattern.charAt(0) !== '^')\n            regexStr += '^';\n        regexStr += pattern;\n        if (pattern.charAt(pattern.length - 1) !== '$')\n            regexStr += '$';\n        regex = new RegExp(regexStr);\n    }\n    else {\n        regexStr = pattern.toString();\n        regex = pattern;\n    }\n    return (control) => {\n        if (isEmptyInputValue(control.value)) {\n            return null; // don't validate empty values to allow optional controls\n        }\n        const value = control.value;\n        return regex.test(value) ? null :\n            { 'pattern': { 'requiredPattern': regexStr, 'actualValue': value } };\n    };\n}\n/**\n * Function that has `ValidatorFn` shape, but performs no operation.\n */\nfunction nullValidator(control) {\n    return null;\n}\nfunction isPresent(o) {\n    return o != null;\n}\nfunction toObservable(value) {\n    const obs = ɵisPromise(value) ? from(value) : value;\n    if ((typeof ngDevMode === 'undefined' || ngDevMode) && !(ɵisSubscribable(obs))) {\n        let errorMessage = `Expected async validator to return Promise or Observable.`;\n        // A synchronous validator will return object or null.\n        if (typeof value === 'object') {\n            errorMessage +=\n                ' Are you using a synchronous validator where an async validator is expected?';\n        }\n        throw new ɵRuntimeError(-1101 /* RuntimeErrorCode.WRONG_VALIDATOR_RETURN_TYPE */, errorMessage);\n    }\n    return obs;\n}\nfunction mergeErrors(arrayOfErrors) {\n    let res = {};\n    arrayOfErrors.forEach((errors) => {\n        res = errors != null ? { ...res, ...errors } : res;\n    });\n    return Object.keys(res).length === 0 ? null : res;\n}\nfunction executeValidators(control, validators) {\n    return validators.map(validator => validator(control));\n}\nfunction isValidatorFn(validator) {\n    return !validator.validate;\n}\n/**\n * Given the list of validators that may contain both functions as well as classes, return the list\n * of validator functions (convert validator classes into validator functions). This is needed to\n * have consistent structure in validators list before composing them.\n *\n * @param validators The set of validators that may contain validators both in plain function form\n *     as well as represented as a validator class.\n */\nfunction normalizeValidators(validators) {\n    return validators.map(validator => {\n        return isValidatorFn(validator) ?\n            validator :\n            ((c) => validator.validate(c));\n    });\n}\n/**\n * Merges synchronous validators into a single validator function.\n * See `Validators.compose` for additional information.\n */\nfunction compose(validators) {\n    if (!validators)\n        return null;\n    const presentValidators = validators.filter(isPresent);\n    if (presentValidators.length == 0)\n        return null;\n    return function (control) {\n        return mergeErrors(executeValidators(control, presentValidators));\n    };\n}\n/**\n * Accepts a list of validators of different possible shapes (`Validator` and `ValidatorFn`),\n * normalizes the list (converts everything to `ValidatorFn`) and merges them into a single\n * validator function.\n */\nfunction composeValidators(validators) {\n    return validators != null ? compose(normalizeValidators(validators)) : null;\n}\n/**\n * Merges asynchronous validators into a single validator function.\n * See `Validators.composeAsync` for additional information.\n */\nfunction composeAsync(validators) {\n    if (!validators)\n        return null;\n    const presentValidators = validators.filter(isPresent);\n    if (presentValidators.length == 0)\n        return null;\n    return function (control) {\n        const observables = executeValidators(control, presentValidators).map(toObservable);\n        return forkJoin(observables).pipe(map(mergeErrors));\n    };\n}\n/**\n * Accepts a list of async validators of different possible shapes (`AsyncValidator` and\n * `AsyncValidatorFn`), normalizes the list (converts everything to `AsyncValidatorFn`) and merges\n * them into a single validator function.\n */\nfunction composeAsyncValidators(validators) {\n    return validators != null ? composeAsync(normalizeValidators(validators)) :\n        null;\n}\n/**\n * Merges raw control validators with a given directive validator and returns the combined list of\n * validators as an array.\n */\nfunction mergeValidators(controlValidators, dirValidator) {\n    if (controlValidators === null)\n        return [dirValidator];\n    return Array.isArray(controlValidators) ? [...controlValidators, dirValidator] :\n        [controlValidators, dirValidator];\n}\n/**\n * Retrieves the list of raw synchronous validators attached to a given control.\n */\nfunction getControlValidators(control) {\n    return control._rawValidators;\n}\n/**\n * Retrieves the list of raw asynchronous validators attached to a given control.\n */\nfunction getControlAsyncValidators(control) {\n    return control._rawAsyncValidators;\n}\n/**\n * Accepts a singleton validator, an array, or null, and returns an array type with the provided\n * validators.\n *\n * @param validators A validator, validators, or null.\n * @returns A validators array.\n */\nfunction makeValidatorsArray(validators) {\n    if (!validators)\n        return [];\n    return Array.isArray(validators) ? validators : [validators];\n}\n/**\n * Determines whether a validator or validators array has a given validator.\n *\n * @param validators The validator or validators to compare against.\n * @param validator The validator to check.\n * @returns Whether the validator is present.\n */\nfunction hasValidator(validators, validator) {\n    return Array.isArray(validators) ? validators.includes(validator) : validators === validator;\n}\n/**\n * Combines two arrays of validators into one. If duplicates are provided, only one will be added.\n *\n * @param validators The new validators.\n * @param currentValidators The base array of current validators.\n * @returns An array of validators.\n */\nfunction addValidators(validators, currentValidators) {\n    const current = makeValidatorsArray(currentValidators);\n    const validatorsToAdd = makeValidatorsArray(validators);\n    validatorsToAdd.forEach((v) => {\n        // Note: if there are duplicate entries in the new validators array,\n        // only the first one would be added to the current list of validators.\n        // Duplicate ones would be ignored since `hasValidator` would detect\n        // the presence of a validator function and we update the current list in place.\n        if (!hasValidator(current, v)) {\n            current.push(v);\n        }\n    });\n    return current;\n}\nfunction removeValidators(validators, currentValidators) {\n    return makeValidatorsArray(currentValidators).filter(v => !hasValidator(validators, v));\n}\n\n/**\n * @description\n * Base class for control directives.\n *\n * This class is only used internally in the `ReactiveFormsModule` and the `FormsModule`.\n *\n * @publicApi\n */\nclass AbstractControlDirective {\n    constructor() {\n        /**\n         * Set of synchronous validators as they were provided while calling `setValidators` function.\n         * @internal\n         */\n        this._rawValidators = [];\n        /**\n         * Set of asynchronous validators as they were provided while calling `setAsyncValidators`\n         * function.\n         * @internal\n         */\n        this._rawAsyncValidators = [];\n        /*\n         * The set of callbacks to be invoked when directive instance is being destroyed.\n         */\n        this._onDestroyCallbacks = [];\n    }\n    /**\n     * @description\n     * Reports the value of the control if it is present, otherwise null.\n     */\n    get value() {\n        return this.control ? this.control.value : null;\n    }\n    /**\n     * @description\n     * Reports whether the control is valid. A control is considered valid if no\n     * validation errors exist with the current value.\n     * If the control is not present, null is returned.\n     */\n    get valid() {\n        return this.control ? this.control.valid : null;\n    }\n    /**\n     * @description\n     * Reports whether the control is invalid, meaning that an error exists in the input value.\n     * If the control is not present, null is returned.\n     */\n    get invalid() {\n        return this.control ? this.control.invalid : null;\n    }\n    /**\n     * @description\n     * Reports whether a control is pending, meaning that async validation is occurring and\n     * errors are not yet available for the input value. If the control is not present, null is\n     * returned.\n     */\n    get pending() {\n        return this.control ? this.control.pending : null;\n    }\n    /**\n     * @description\n     * Reports whether the control is disabled, meaning that the control is disabled\n     * in the UI and is exempt from validation checks and excluded from aggregate\n     * values of ancestor controls. If the control is not present, null is returned.\n     */\n    get disabled() {\n        return this.control ? this.control.disabled : null;\n    }\n    /**\n     * @description\n     * Reports whether the control is enabled, meaning that the control is included in ancestor\n     * calculations of validity or value. If the control is not present, null is returned.\n     */\n    get enabled() {\n        return this.control ? this.control.enabled : null;\n    }\n    /**\n     * @description\n     * Reports the control's validation errors. If the control is not present, null is returned.\n     */\n    get errors() {\n        return this.control ? this.control.errors : null;\n    }\n    /**\n     * @description\n     * Reports whether the control is pristine, meaning that the user has not yet changed\n     * the value in the UI. If the control is not present, null is returned.\n     */\n    get pristine() {\n        return this.control ? this.control.pristine : null;\n    }\n    /**\n     * @description\n     * Reports whether the control is dirty, meaning that the user has changed\n     * the value in the UI. If the control is not present, null is returned.\n     */\n    get dirty() {\n        return this.control ? this.control.dirty : null;\n    }\n    /**\n     * @description\n     * Reports whether the control is touched, meaning that the user has triggered\n     * a `blur` event on it. If the control is not present, null is returned.\n     */\n    get touched() {\n        return this.control ? this.control.touched : null;\n    }\n    /**\n     * @description\n     * Reports the validation status of the control. Possible values include:\n     * 'VALID', 'INVALID', 'DISABLED', and 'PENDING'.\n     * If the control is not present, null is returned.\n     */\n    get status() {\n        return this.control ? this.control.status : null;\n    }\n    /**\n     * @description\n     * Reports whether the control is untouched, meaning that the user has not yet triggered\n     * a `blur` event on it. If the control is not present, null is returned.\n     */\n    get untouched() {\n        return this.control ? this.control.untouched : null;\n    }\n    /**\n     * @description\n     * Returns a multicasting observable that emits a validation status whenever it is\n     * calculated for the control. If the control is not present, null is returned.\n     */\n    get statusChanges() {\n        return this.control ? this.control.statusChanges : null;\n    }\n    /**\n     * @description\n     * Returns a multicasting observable of value changes for the control that emits every time the\n     * value of the control changes in the UI or programmatically.\n     * If the control is not present, null is returned.\n     */\n    get valueChanges() {\n        return this.control ? this.control.valueChanges : null;\n    }\n    /**\n     * @description\n     * Returns an array that represents the path from the top-level form to this control.\n     * Each index is the string name of the control on that level.\n     */\n    get path() {\n        return null;\n    }\n    /**\n     * Sets synchronous validators for this directive.\n     * @internal\n     */\n    _setValidators(validators) {\n        this._rawValidators = validators || [];\n        this._composedValidatorFn = composeValidators(this._rawValidators);\n    }\n    /**\n     * Sets asynchronous validators for this directive.\n     * @internal\n     */\n    _setAsyncValidators(validators) {\n        this._rawAsyncValidators = validators || [];\n        this._composedAsyncValidatorFn = composeAsyncValidators(this._rawAsyncValidators);\n    }\n    /**\n     * @description\n     * Synchronous validator function composed of all the synchronous validators registered with this\n     * directive.\n     */\n    get validator() {\n        return this._composedValidatorFn || null;\n    }\n    /**\n     * @description\n     * Asynchronous validator function composed of all the asynchronous validators registered with\n     * this directive.\n     */\n    get asyncValidator() {\n        return this._composedAsyncValidatorFn || null;\n    }\n    /**\n     * Internal function to register callbacks that should be invoked\n     * when directive instance is being destroyed.\n     * @internal\n     */\n    _registerOnDestroy(fn) {\n        this._onDestroyCallbacks.push(fn);\n    }\n    /**\n     * Internal function to invoke all registered \"on destroy\" callbacks.\n     * Note: calling this function also clears the list of callbacks.\n     * @internal\n     */\n    _invokeOnDestroyCallbacks() {\n        this._onDestroyCallbacks.forEach(fn => fn());\n        this._onDestroyCallbacks = [];\n    }\n    /**\n     * @description\n     * Resets the control with the provided value if the control is present.\n     */\n    reset(value = undefined) {\n        if (this.control)\n            this.control.reset(value);\n    }\n    /**\n     * @description\n     * Reports whether the control with the given path has the error specified.\n     *\n     * @param errorCode The code of the error to check\n     * @param path A list of control names that designates how to move from the current control\n     * to the control that should be queried for errors.\n     *\n     * @usageNotes\n     * For example, for the following `FormGroup`:\n     *\n     * ```\n     * form = new FormGroup({\n     *   address: new FormGroup({ street: new FormControl() })\n     * });\n     * ```\n     *\n     * The path to the 'street' control from the root form would be 'address' -> 'street'.\n     *\n     * It can be provided to this method in one of two formats:\n     *\n     * 1. An array of string control names, e.g. `['address', 'street']`\n     * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n     *\n     * If no path is given, this method checks for the error on the current control.\n     *\n     * @returns whether the given error is present in the control at the given path.\n     *\n     * If the control is not present, false is returned.\n     */\n    hasError(errorCode, path) {\n        return this.control ? this.control.hasError(errorCode, path) : false;\n    }\n    /**\n     * @description\n     * Reports error data for the control with the given path.\n     *\n     * @param errorCode The code of the error to check\n     * @param path A list of control names that designates how to move from the current control\n     * to the control that should be queried for errors.\n     *\n     * @usageNotes\n     * For example, for the following `FormGroup`:\n     *\n     * ```\n     * form = new FormGroup({\n     *   address: new FormGroup({ street: new FormControl() })\n     * });\n     * ```\n     *\n     * The path to the 'street' control from the root form would be 'address' -> 'street'.\n     *\n     * It can be provided to this method in one of two formats:\n     *\n     * 1. An array of string control names, e.g. `['address', 'street']`\n     * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n     *\n     * @returns error data for that particular error. If the control or error is not present,\n     * null is returned.\n     */\n    getError(errorCode, path) {\n        return this.control ? this.control.getError(errorCode, path) : null;\n    }\n}\n\n/**\n * @description\n * A base class for directives that contain multiple registered instances of `NgControl`.\n * Only used by the forms module.\n *\n * @publicApi\n */\nclass ControlContainer extends AbstractControlDirective {\n    /**\n     * @description\n     * The top-level form directive for the control.\n     */\n    get formDirective() {\n        return null;\n    }\n    /**\n     * @description\n     * The path to this group.\n     */\n    get path() {\n        return null;\n    }\n}\n\n/**\n * @description\n * A base class that all `FormControl`-based directives extend. It binds a `FormControl`\n * object to a DOM element.\n *\n * @publicApi\n */\nclass NgControl extends AbstractControlDirective {\n    constructor() {\n        super(...arguments);\n        /**\n         * @description\n         * The parent form for the control.\n         *\n         * @internal\n         */\n        this._parent = null;\n        /**\n         * @description\n         * The name for the control\n         */\n        this.name = null;\n        /**\n         * @description\n         * The value accessor for the control\n         */\n        this.valueAccessor = null;\n    }\n}\n\n// DO NOT REFACTOR!\n// Each status is represented by a separate function to make sure that\n// advanced Closure Compiler optimizations related to property renaming\n// can work correctly.\nclass AbstractControlStatus {\n    constructor(cd) {\n        this._cd = cd;\n    }\n    get isTouched() {\n        return !!this._cd?.control?.touched;\n    }\n    get isUntouched() {\n        return !!this._cd?.control?.untouched;\n    }\n    get isPristine() {\n        return !!this._cd?.control?.pristine;\n    }\n    get isDirty() {\n        return !!this._cd?.control?.dirty;\n    }\n    get isValid() {\n        return !!this._cd?.control?.valid;\n    }\n    get isInvalid() {\n        return !!this._cd?.control?.invalid;\n    }\n    get isPending() {\n        return !!this._cd?.control?.pending;\n    }\n    get isSubmitted() {\n        // We check for the `submitted` field from `NgForm` and `FormGroupDirective` classes, but\n        // we avoid instanceof checks to prevent non-tree-shakable references to those types.\n        return !!this._cd?.submitted;\n    }\n}\nconst ngControlStatusHost = {\n    '[class.ng-untouched]': 'isUntouched',\n    '[class.ng-touched]': 'isTouched',\n    '[class.ng-pristine]': 'isPristine',\n    '[class.ng-dirty]': 'isDirty',\n    '[class.ng-valid]': 'isValid',\n    '[class.ng-invalid]': 'isInvalid',\n    '[class.ng-pending]': 'isPending',\n};\nconst ngGroupStatusHost = {\n    ...ngControlStatusHost,\n    '[class.ng-submitted]': 'isSubmitted',\n};\n/**\n * @description\n * Directive automatically applied to Angular form controls that sets CSS classes\n * based on control status.\n *\n * @usageNotes\n *\n * ### CSS classes applied\n *\n * The following classes are applied as the properties become true:\n *\n * * ng-valid\n * * ng-invalid\n * * ng-pending\n * * ng-pristine\n * * ng-dirty\n * * ng-untouched\n * * ng-touched\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass NgControlStatus extends AbstractControlStatus {\n    constructor(cd) {\n        super(cd);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: NgControlStatus, deps: [{ token: NgControl, self: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.0\", type: NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\", host: { properties: { \"class.ng-untouched\": \"isUntouched\", \"class.ng-touched\": \"isTouched\", \"class.ng-pristine\": \"isPristine\", \"class.ng-dirty\": \"isDirty\", \"class.ng-valid\": \"isValid\", \"class.ng-invalid\": \"isInvalid\", \"class.ng-pending\": \"isPending\" } }, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: NgControlStatus, decorators: [{\n            type: Directive,\n            args: [{ selector: '[formControlName],[ngModel],[formControl]', host: ngControlStatusHost }]\n        }], ctorParameters: function () { return [{ type: NgControl, decorators: [{\n                    type: Self\n                }] }]; } });\n/**\n * @description\n * Directive automatically applied to Angular form groups that sets CSS classes\n * based on control status (valid/invalid/dirty/etc). On groups, this includes the additional\n * class ng-submitted.\n *\n * @see {@link NgControlStatus}\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass NgControlStatusGroup extends AbstractControlStatus {\n    constructor(cd) {\n        super(cd);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: NgControlStatusGroup, deps: [{ token: ControlContainer, optional: true, self: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.0\", type: NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\", host: { properties: { \"class.ng-untouched\": \"isUntouched\", \"class.ng-touched\": \"isTouched\", \"class.ng-pristine\": \"isPristine\", \"class.ng-dirty\": \"isDirty\", \"class.ng-valid\": \"isValid\", \"class.ng-invalid\": \"isInvalid\", \"class.ng-pending\": \"isPending\", \"class.ng-submitted\": \"isSubmitted\" } }, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: NgControlStatusGroup, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]',\n                    host: ngGroupStatusHost\n                }]\n        }], ctorParameters: function () { return [{ type: ControlContainer, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }] }]; } });\n\nconst formControlNameExample = `\n  <div [formGroup]=\"myGroup\">\n    <input formControlName=\"firstName\">\n  </div>\n\n  In your class:\n\n  this.myGroup = new FormGroup({\n      firstName: new FormControl()\n  });`;\nconst formGroupNameExample = `\n  <div [formGroup]=\"myGroup\">\n      <div formGroupName=\"person\">\n        <input formControlName=\"firstName\">\n      </div>\n  </div>\n\n  In your class:\n\n  this.myGroup = new FormGroup({\n      person: new FormGroup({ firstName: new FormControl() })\n  });`;\nconst formArrayNameExample = `\n  <div [formGroup]=\"myGroup\">\n    <div formArrayName=\"cities\">\n      <div *ngFor=\"let city of cityArray.controls; index as i\">\n        <input [formControlName]=\"i\">\n      </div>\n    </div>\n  </div>\n\n  In your class:\n\n  this.cityArray = new FormArray([new FormControl('SF')]);\n  this.myGroup = new FormGroup({\n    cities: this.cityArray\n  });`;\nconst ngModelGroupExample = `\n  <form>\n      <div ngModelGroup=\"person\">\n        <input [(ngModel)]=\"person.name\" name=\"firstName\">\n      </div>\n  </form>`;\nconst ngModelWithFormGroupExample = `\n  <div [formGroup]=\"myGroup\">\n      <input formControlName=\"firstName\">\n      <input [(ngModel)]=\"showMoreControls\" [ngModelOptions]=\"{standalone: true}\">\n  </div>\n`;\n\nfunction controlParentException() {\n    return new ɵRuntimeError(1050 /* RuntimeErrorCode.FORM_CONTROL_NAME_MISSING_PARENT */, `formControlName must be used with a parent formGroup directive.  You'll want to add a formGroup\n      directive and pass it an existing FormGroup instance (you can create one in your class).\n\n    Example:\n\n    ${formControlNameExample}`);\n}\nfunction ngModelGroupException() {\n    return new ɵRuntimeError(1051 /* RuntimeErrorCode.FORM_CONTROL_NAME_INSIDE_MODEL_GROUP */, `formControlName cannot be used with an ngModelGroup parent. It is only compatible with parents\n      that also have a \"form\" prefix: formGroupName, formArrayName, or formGroup.\n\n      Option 1:  Update the parent to be formGroupName (reactive form strategy)\n\n      ${formGroupNameExample}\n\n      Option 2: Use ngModel instead of formControlName (template-driven strategy)\n\n      ${ngModelGroupExample}`);\n}\nfunction missingFormException() {\n    return new ɵRuntimeError(1052 /* RuntimeErrorCode.FORM_GROUP_MISSING_INSTANCE */, `formGroup expects a FormGroup instance. Please pass one in.\n\n      Example:\n\n      ${formControlNameExample}`);\n}\nfunction groupParentException() {\n    return new ɵRuntimeError(1053 /* RuntimeErrorCode.FORM_GROUP_NAME_MISSING_PARENT */, `formGroupName must be used with a parent formGroup directive.  You'll want to add a formGroup\n    directive and pass it an existing FormGroup instance (you can create one in your class).\n\n    Example:\n\n    ${formGroupNameExample}`);\n}\nfunction arrayParentException() {\n    return new ɵRuntimeError(1054 /* RuntimeErrorCode.FORM_ARRAY_NAME_MISSING_PARENT */, `formArrayName must be used with a parent formGroup directive.  You'll want to add a formGroup\n      directive and pass it an existing FormGroup instance (you can create one in your class).\n\n      Example:\n\n      ${formArrayNameExample}`);\n}\nconst disabledAttrWarning = `\n  It looks like you're using the disabled attribute with a reactive form directive. If you set disabled to true\n  when you set up this control in your component class, the disabled attribute will actually be set in the DOM for\n  you. We recommend using this approach to avoid 'changed after checked' errors.\n\n  Example:\n  // Specify the \\`disabled\\` property at control creation time:\n  form = new FormGroup({\n    first: new FormControl({value: 'Nancy', disabled: true}, Validators.required),\n    last: new FormControl('Drew', Validators.required)\n  });\n\n  // Controls can also be enabled/disabled after creation:\n  form.get('first')?.enable();\n  form.get('last')?.disable();\n`;\nconst asyncValidatorsDroppedWithOptsWarning = `\n  It looks like you're constructing using a FormControl with both an options argument and an\n  async validators argument. Mixing these arguments will cause your async validators to be dropped.\n  You should either put all your validators in the options object, or in separate validators\n  arguments. For example:\n\n  // Using validators arguments\n  fc = new FormControl(42, Validators.required, myAsyncValidator);\n\n  // Using AbstractControlOptions\n  fc = new FormControl(42, {validators: Validators.required, asyncValidators: myAV});\n\n  // Do NOT mix them: async validators will be dropped!\n  fc = new FormControl(42, {validators: Validators.required}, /* Oops! */ myAsyncValidator);\n`;\nfunction ngModelWarning(directiveName) {\n    return `\n  It looks like you're using ngModel on the same form field as ${directiveName}.\n  Support for using the ngModel input property and ngModelChange event with\n  reactive form directives has been deprecated in Angular v6 and will be removed\n  in a future version of Angular.\n\n  For more information on this, see our API docs here:\n  https://angular.io/api/forms/${directiveName === 'formControl' ? 'FormControlDirective' : 'FormControlName'}#use-with-ngmodel\n  `;\n}\nfunction describeKey(isFormGroup, key) {\n    return isFormGroup ? `with name: '${key}'` : `at index: ${key}`;\n}\nfunction noControlsError(isFormGroup) {\n    return `\n    There are no form controls registered with this ${isFormGroup ? 'group' : 'array'} yet. If you're using ngModel,\n    you may want to check next tick (e.g. use setTimeout).\n  `;\n}\nfunction missingControlError(isFormGroup, key) {\n    return `Cannot find form control ${describeKey(isFormGroup, key)}`;\n}\nfunction missingControlValueError(isFormGroup, key) {\n    return `Must supply a value for form control ${describeKey(isFormGroup, key)}`;\n}\n\n/**\n * Reports that a control is valid, meaning that no errors exist in the input value.\n *\n * @see {@link status}\n */\nconst VALID = 'VALID';\n/**\n * Reports that a control is invalid, meaning that an error exists in the input value.\n *\n * @see {@link status}\n */\nconst INVALID = 'INVALID';\n/**\n * Reports that a control is pending, meaning that async validation is occurring and\n * errors are not yet available for the input value.\n *\n * @see {@link markAsPending}\n * @see {@link status}\n */\nconst PENDING = 'PENDING';\n/**\n * Reports that a control is disabled, meaning that the control is exempt from ancestor\n * calculations of validity or value.\n *\n * @see {@link markAsDisabled}\n * @see {@link status}\n */\nconst DISABLED = 'DISABLED';\n/**\n * Gets validators from either an options object or given validators.\n */\nfunction pickValidators(validatorOrOpts) {\n    return (isOptionsObj(validatorOrOpts) ? validatorOrOpts.validators : validatorOrOpts) || null;\n}\n/**\n * Creates validator function by combining provided validators.\n */\nfunction coerceToValidator(validator) {\n    return Array.isArray(validator) ? composeValidators(validator) : validator || null;\n}\n/**\n * Gets async validators from either an options object or given validators.\n */\nfunction pickAsyncValidators(asyncValidator, validatorOrOpts) {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        if (isOptionsObj(validatorOrOpts) && asyncValidator) {\n            console.warn(asyncValidatorsDroppedWithOptsWarning);\n        }\n    }\n    return (isOptionsObj(validatorOrOpts) ? validatorOrOpts.asyncValidators : asyncValidator) || null;\n}\n/**\n * Creates async validator function by combining provided async validators.\n */\nfunction coerceToAsyncValidator(asyncValidator) {\n    return Array.isArray(asyncValidator) ? composeAsyncValidators(asyncValidator) :\n        asyncValidator || null;\n}\nfunction isOptionsObj(validatorOrOpts) {\n    return validatorOrOpts != null && !Array.isArray(validatorOrOpts) &&\n        typeof validatorOrOpts === 'object';\n}\nfunction assertControlPresent(parent, isGroup, key) {\n    const controls = parent.controls;\n    const collection = isGroup ? Object.keys(controls) : controls;\n    if (!collection.length) {\n        throw new ɵRuntimeError(1000 /* RuntimeErrorCode.NO_CONTROLS */, (typeof ngDevMode === 'undefined' || ngDevMode) ? noControlsError(isGroup) : '');\n    }\n    if (!controls[key]) {\n        throw new ɵRuntimeError(1001 /* RuntimeErrorCode.MISSING_CONTROL */, (typeof ngDevMode === 'undefined' || ngDevMode) ? missingControlError(isGroup, key) : '');\n    }\n}\nfunction assertAllValuesPresent(control, isGroup, value) {\n    control._forEachChild((_, key) => {\n        if (value[key] === undefined) {\n            throw new ɵRuntimeError(1002 /* RuntimeErrorCode.MISSING_CONTROL_VALUE */, (typeof ngDevMode === 'undefined' || ngDevMode) ? missingControlValueError(isGroup, key) :\n                '');\n        }\n    });\n}\n// clang-format on\n/**\n * This is the base class for `FormControl`, `FormGroup`, and `FormArray`.\n *\n * It provides some of the shared behavior that all controls and groups of controls have, like\n * running validators, calculating status, and resetting state. It also defines the properties\n * that are shared between all sub-classes, like `value`, `valid`, and `dirty`. It shouldn't be\n * instantiated directly.\n *\n * The first type parameter TValue represents the value type of the control (`control.value`).\n * The optional type parameter TRawValue  represents the raw value type (`control.getRawValue()`).\n *\n * @see [Forms Guide](/guide/forms)\n * @see [Reactive Forms Guide](/guide/reactive-forms)\n * @see [Dynamic Forms Guide](/guide/dynamic-form)\n *\n * @publicApi\n */\nclass AbstractControl {\n    /**\n     * Initialize the AbstractControl instance.\n     *\n     * @param validators The function or array of functions that is used to determine the validity of\n     *     this control synchronously.\n     * @param asyncValidators The function or array of functions that is used to determine validity of\n     *     this control asynchronously.\n     */\n    constructor(validators, asyncValidators) {\n        /** @internal */\n        this._pendingDirty = false;\n        /**\n         * Indicates that a control has its own pending asynchronous validation in progress.\n         *\n         * @internal\n         */\n        this._hasOwnPendingAsyncValidator = false;\n        /** @internal */\n        this._pendingTouched = false;\n        /** @internal */\n        this._onCollectionChange = () => { };\n        this._parent = null;\n        /**\n         * A control is `pristine` if the user has not yet changed\n         * the value in the UI.\n         *\n         * @returns True if the user has not yet changed the value in the UI; compare `dirty`.\n         * Programmatic changes to a control's value do not mark it dirty.\n         */\n        this.pristine = true;\n        /**\n         * True if the control is marked as `touched`.\n         *\n         * A control is marked `touched` once the user has triggered\n         * a `blur` event on it.\n         */\n        this.touched = false;\n        /** @internal */\n        this._onDisabledChange = [];\n        this._assignValidators(validators);\n        this._assignAsyncValidators(asyncValidators);\n    }\n    /**\n     * Returns the function that is used to determine the validity of this control synchronously.\n     * If multiple validators have been added, this will be a single composed function.\n     * See `Validators.compose()` for additional information.\n     */\n    get validator() {\n        return this._composedValidatorFn;\n    }\n    set validator(validatorFn) {\n        this._rawValidators = this._composedValidatorFn = validatorFn;\n    }\n    /**\n     * Returns the function that is used to determine the validity of this control asynchronously.\n     * If multiple validators have been added, this will be a single composed function.\n     * See `Validators.compose()` for additional information.\n     */\n    get asyncValidator() {\n        return this._composedAsyncValidatorFn;\n    }\n    set asyncValidator(asyncValidatorFn) {\n        this._rawAsyncValidators = this._composedAsyncValidatorFn = asyncValidatorFn;\n    }\n    /**\n     * The parent control.\n     */\n    get parent() {\n        return this._parent;\n    }\n    /**\n     * A control is `valid` when its `status` is `VALID`.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     * @returns True if the control has passed all of its validation tests,\n     * false otherwise.\n     */\n    get valid() {\n        return this.status === VALID;\n    }\n    /**\n     * A control is `invalid` when its `status` is `INVALID`.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     * @returns True if this control has failed one or more of its validation checks,\n     * false otherwise.\n     */\n    get invalid() {\n        return this.status === INVALID;\n    }\n    /**\n     * A control is `pending` when its `status` is `PENDING`.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     * @returns True if this control is in the process of conducting a validation check,\n     * false otherwise.\n     */\n    get pending() {\n        return this.status == PENDING;\n    }\n    /**\n     * A control is `disabled` when its `status` is `DISABLED`.\n     *\n     * Disabled controls are exempt from validation checks and\n     * are not included in the aggregate value of their ancestor\n     * controls.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     * @returns True if the control is disabled, false otherwise.\n     */\n    get disabled() {\n        return this.status === DISABLED;\n    }\n    /**\n     * A control is `enabled` as long as its `status` is not `DISABLED`.\n     *\n     * @returns True if the control has any status other than 'DISABLED',\n     * false if the status is 'DISABLED'.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     */\n    get enabled() {\n        return this.status !== DISABLED;\n    }\n    /**\n     * A control is `dirty` if the user has changed the value\n     * in the UI.\n     *\n     * @returns True if the user has changed the value of this control in the UI; compare `pristine`.\n     * Programmatic changes to a control's value do not mark it dirty.\n     */\n    get dirty() {\n        return !this.pristine;\n    }\n    /**\n     * True if the control has not been marked as touched\n     *\n     * A control is `untouched` if the user has not yet triggered\n     * a `blur` event on it.\n     */\n    get untouched() {\n        return !this.touched;\n    }\n    /**\n     * Reports the update strategy of the `AbstractControl` (meaning\n     * the event on which the control updates itself).\n     * Possible values: `'change'` | `'blur'` | `'submit'`\n     * Default value: `'change'`\n     */\n    get updateOn() {\n        return this._updateOn ? this._updateOn : (this.parent ? this.parent.updateOn : 'change');\n    }\n    /**\n     * Sets the synchronous validators that are active on this control.  Calling\n     * this overwrites any existing synchronous validators.\n     *\n     * When you add or remove a validator at run time, you must call\n     * `updateValueAndValidity()` for the new validation to take effect.\n     *\n     * If you want to add a new validator without affecting existing ones, consider\n     * using `addValidators()` method instead.\n     */\n    setValidators(validators) {\n        this._assignValidators(validators);\n    }\n    /**\n     * Sets the asynchronous validators that are active on this control. Calling this\n     * overwrites any existing asynchronous validators.\n     *\n     * When you add or remove a validator at run time, you must call\n     * `updateValueAndValidity()` for the new validation to take effect.\n     *\n     * If you want to add a new validator without affecting existing ones, consider\n     * using `addAsyncValidators()` method instead.\n     */\n    setAsyncValidators(validators) {\n        this._assignAsyncValidators(validators);\n    }\n    /**\n     * Add a synchronous validator or validators to this control, without affecting other validators.\n     *\n     * When you add or remove a validator at run time, you must call\n     * `updateValueAndValidity()` for the new validation to take effect.\n     *\n     * Adding a validator that already exists will have no effect. If duplicate validator functions\n     * are present in the `validators` array, only the first instance would be added to a form\n     * control.\n     *\n     * @param validators The new validator function or functions to add to this control.\n     */\n    addValidators(validators) {\n        this.setValidators(addValidators(validators, this._rawValidators));\n    }\n    /**\n     * Add an asynchronous validator or validators to this control, without affecting other\n     * validators.\n     *\n     * When you add or remove a validator at run time, you must call\n     * `updateValueAndValidity()` for the new validation to take effect.\n     *\n     * Adding a validator that already exists will have no effect.\n     *\n     * @param validators The new asynchronous validator function or functions to add to this control.\n     */\n    addAsyncValidators(validators) {\n        this.setAsyncValidators(addValidators(validators, this._rawAsyncValidators));\n    }\n    /**\n     * Remove a synchronous validator from this control, without affecting other validators.\n     * Validators are compared by function reference; you must pass a reference to the exact same\n     * validator function as the one that was originally set. If a provided validator is not found,\n     * it is ignored.\n     *\n     * @usageNotes\n     *\n     * ### Reference to a ValidatorFn\n     *\n     * ```\n     * // Reference to the RequiredValidator\n     * const ctrl = new FormControl<string | null>('', Validators.required);\n     * ctrl.removeValidators(Validators.required);\n     *\n     * // Reference to anonymous function inside MinValidator\n     * const minValidator = Validators.min(3);\n     * const ctrl = new FormControl<string | null>('', minValidator);\n     * expect(ctrl.hasValidator(minValidator)).toEqual(true)\n     * expect(ctrl.hasValidator(Validators.min(3))).toEqual(false)\n     *\n     * ctrl.removeValidators(minValidator);\n     * ```\n     *\n     * When you add or remove a validator at run time, you must call\n     * `updateValueAndValidity()` for the new validation to take effect.\n     *\n     * @param validators The validator or validators to remove.\n     */\n    removeValidators(validators) {\n        this.setValidators(removeValidators(validators, this._rawValidators));\n    }\n    /**\n     * Remove an asynchronous validator from this control, without affecting other validators.\n     * Validators are compared by function reference; you must pass a reference to the exact same\n     * validator function as the one that was originally set. If a provided validator is not found, it\n     * is ignored.\n     *\n     * When you add or remove a validator at run time, you must call\n     * `updateValueAndValidity()` for the new validation to take effect.\n     *\n     * @param validators The asynchronous validator or validators to remove.\n     */\n    removeAsyncValidators(validators) {\n        this.setAsyncValidators(removeValidators(validators, this._rawAsyncValidators));\n    }\n    /**\n     * Check whether a synchronous validator function is present on this control. The provided\n     * validator must be a reference to the exact same function that was provided.\n     *\n     * @usageNotes\n     *\n     * ### Reference to a ValidatorFn\n     *\n     * ```\n     * // Reference to the RequiredValidator\n     * const ctrl = new FormControl<number | null>(0, Validators.required);\n     * expect(ctrl.hasValidator(Validators.required)).toEqual(true)\n     *\n     * // Reference to anonymous function inside MinValidator\n     * const minValidator = Validators.min(3);\n     * const ctrl = new FormControl<number | null>(0, minValidator);\n     * expect(ctrl.hasValidator(minValidator)).toEqual(true)\n     * expect(ctrl.hasValidator(Validators.min(3))).toEqual(false)\n     * ```\n     *\n     * @param validator The validator to check for presence. Compared by function reference.\n     * @returns Whether the provided validator was found on this control.\n     */\n    hasValidator(validator) {\n        return hasValidator(this._rawValidators, validator);\n    }\n    /**\n     * Check whether an asynchronous validator function is present on this control. The provided\n     * validator must be a reference to the exact same function that was provided.\n     *\n     * @param validator The asynchronous validator to check for presence. Compared by function\n     *     reference.\n     * @returns Whether the provided asynchronous validator was found on this control.\n     */\n    hasAsyncValidator(validator) {\n        return hasValidator(this._rawAsyncValidators, validator);\n    }\n    /**\n     * Empties out the synchronous validator list.\n     *\n     * When you add or remove a validator at run time, you must call\n     * `updateValueAndValidity()` for the new validation to take effect.\n     *\n     */\n    clearValidators() {\n        this.validator = null;\n    }\n    /**\n     * Empties out the async validator list.\n     *\n     * When you add or remove a validator at run time, you must call\n     * `updateValueAndValidity()` for the new validation to take effect.\n     *\n     */\n    clearAsyncValidators() {\n        this.asyncValidator = null;\n    }\n    /**\n     * Marks the control as `touched`. A control is touched by focus and\n     * blur events that do not change the value.\n     *\n     * @see {@link markAsUntouched()}\n     * @see {@link markAsDirty()}\n     * @see {@link markAsPristine()}\n     *\n     * @param opts Configuration options that determine how the control propagates changes\n     * and emits events after marking is applied.\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false.\n     */\n    markAsTouched(opts = {}) {\n        this.touched = true;\n        if (this._parent && !opts.onlySelf) {\n            this._parent.markAsTouched(opts);\n        }\n    }\n    /**\n     * Marks the control and all its descendant controls as `touched`.\n     * @see {@link markAsTouched()}\n     */\n    markAllAsTouched() {\n        this.markAsTouched({ onlySelf: true });\n        this._forEachChild((control) => control.markAllAsTouched());\n    }\n    /**\n     * Marks the control as `untouched`.\n     *\n     * If the control has any children, also marks all children as `untouched`\n     * and recalculates the `touched` status of all parent controls.\n     *\n     * @see {@link markAsTouched()}\n     * @see {@link markAsDirty()}\n     * @see {@link markAsPristine()}\n     *\n     * @param opts Configuration options that determine how the control propagates changes\n     * and emits events after the marking is applied.\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false.\n     */\n    markAsUntouched(opts = {}) {\n        this.touched = false;\n        this._pendingTouched = false;\n        this._forEachChild((control) => {\n            control.markAsUntouched({ onlySelf: true });\n        });\n        if (this._parent && !opts.onlySelf) {\n            this._parent._updateTouched(opts);\n        }\n    }\n    /**\n     * Marks the control as `dirty`. A control becomes dirty when\n     * the control's value is changed through the UI; compare `markAsTouched`.\n     *\n     * @see {@link markAsTouched()}\n     * @see {@link markAsUntouched()}\n     * @see {@link markAsPristine()}\n     *\n     * @param opts Configuration options that determine how the control propagates changes\n     * and emits events after marking is applied.\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false.\n     */\n    markAsDirty(opts = {}) {\n        this.pristine = false;\n        if (this._parent && !opts.onlySelf) {\n            this._parent.markAsDirty(opts);\n        }\n    }\n    /**\n     * Marks the control as `pristine`.\n     *\n     * If the control has any children, marks all children as `pristine`,\n     * and recalculates the `pristine` status of all parent\n     * controls.\n     *\n     * @see {@link markAsTouched()}\n     * @see {@link markAsUntouched()}\n     * @see {@link markAsDirty()}\n     *\n     * @param opts Configuration options that determine how the control emits events after\n     * marking is applied.\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false.\n     */\n    markAsPristine(opts = {}) {\n        this.pristine = true;\n        this._pendingDirty = false;\n        this._forEachChild((control) => {\n            control.markAsPristine({ onlySelf: true });\n        });\n        if (this._parent && !opts.onlySelf) {\n            this._parent._updatePristine(opts);\n        }\n    }\n    /**\n     * Marks the control as `pending`.\n     *\n     * A control is pending while the control performs async validation.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     * @param opts Configuration options that determine how the control propagates changes and\n     * emits events after marking is applied.\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false.\n     * * `emitEvent`: When true or not supplied (the default), the `statusChanges`\n     * observable emits an event with the latest status the control is marked pending.\n     * When false, no events are emitted.\n     *\n     */\n    markAsPending(opts = {}) {\n        this.status = PENDING;\n        if (opts.emitEvent !== false) {\n            this.statusChanges.emit(this.status);\n        }\n        if (this._parent && !opts.onlySelf) {\n            this._parent.markAsPending(opts);\n        }\n    }\n    /**\n     * Disables the control. This means the control is exempt from validation checks and\n     * excluded from the aggregate value of any parent. Its status is `DISABLED`.\n     *\n     * If the control has children, all children are also disabled.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     * @param opts Configuration options that determine how the control propagates\n     * changes and emits events after the control is disabled.\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control is disabled.\n     * When false, no events are emitted.\n     */\n    disable(opts = {}) {\n        // If parent has been marked artificially dirty we don't want to re-calculate the\n        // parent's dirtiness based on the children.\n        const skipPristineCheck = this._parentMarkedDirty(opts.onlySelf);\n        this.status = DISABLED;\n        this.errors = null;\n        this._forEachChild((control) => {\n            control.disable({ ...opts, onlySelf: true });\n        });\n        this._updateValue();\n        if (opts.emitEvent !== false) {\n            this.valueChanges.emit(this.value);\n            this.statusChanges.emit(this.status);\n        }\n        this._updateAncestors({ ...opts, skipPristineCheck });\n        this._onDisabledChange.forEach((changeFn) => changeFn(true));\n    }\n    /**\n     * Enables the control. This means the control is included in validation checks and\n     * the aggregate value of its parent. Its status recalculates based on its value and\n     * its validators.\n     *\n     * By default, if the control has children, all children are enabled.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     * @param opts Configure options that control how the control propagates changes and\n     * emits events when marked as untouched\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control is enabled.\n     * When false, no events are emitted.\n     */\n    enable(opts = {}) {\n        // If parent has been marked artificially dirty we don't want to re-calculate the\n        // parent's dirtiness based on the children.\n        const skipPristineCheck = this._parentMarkedDirty(opts.onlySelf);\n        this.status = VALID;\n        this._forEachChild((control) => {\n            control.enable({ ...opts, onlySelf: true });\n        });\n        this.updateValueAndValidity({ onlySelf: true, emitEvent: opts.emitEvent });\n        this._updateAncestors({ ...opts, skipPristineCheck });\n        this._onDisabledChange.forEach((changeFn) => changeFn(false));\n    }\n    _updateAncestors(opts) {\n        if (this._parent && !opts.onlySelf) {\n            this._parent.updateValueAndValidity(opts);\n            if (!opts.skipPristineCheck) {\n                this._parent._updatePristine();\n            }\n            this._parent._updateTouched();\n        }\n    }\n    /**\n     * Sets the parent of the control\n     *\n     * @param parent The new parent.\n     */\n    setParent(parent) {\n        this._parent = parent;\n    }\n    /**\n     * The raw value of this control. For most control implementations, the raw value will include\n     * disabled children.\n     */\n    getRawValue() {\n        return this.value;\n    }\n    /**\n     * Recalculates the value and validation status of the control.\n     *\n     * By default, it also updates the value and validity of its ancestors.\n     *\n     * @param opts Configuration options determine how the control propagates changes and emits events\n     * after updates and validity checks are applied.\n     * * `onlySelf`: When true, only update this control. When false or not supplied,\n     * update all direct ancestors. Default is false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control is updated.\n     * When false, no events are emitted.\n     */\n    updateValueAndValidity(opts = {}) {\n        this._setInitialStatus();\n        this._updateValue();\n        if (this.enabled) {\n            this._cancelExistingSubscription();\n            this.errors = this._runValidator();\n            this.status = this._calculateStatus();\n            if (this.status === VALID || this.status === PENDING) {\n                this._runAsyncValidator(opts.emitEvent);\n            }\n        }\n        if (opts.emitEvent !== false) {\n            this.valueChanges.emit(this.value);\n            this.statusChanges.emit(this.status);\n        }\n        if (this._parent && !opts.onlySelf) {\n            this._parent.updateValueAndValidity(opts);\n        }\n    }\n    /** @internal */\n    _updateTreeValidity(opts = { emitEvent: true }) {\n        this._forEachChild((ctrl) => ctrl._updateTreeValidity(opts));\n        this.updateValueAndValidity({ onlySelf: true, emitEvent: opts.emitEvent });\n    }\n    _setInitialStatus() {\n        this.status = this._allControlsDisabled() ? DISABLED : VALID;\n    }\n    _runValidator() {\n        return this.validator ? this.validator(this) : null;\n    }\n    _runAsyncValidator(emitEvent) {\n        if (this.asyncValidator) {\n            this.status = PENDING;\n            this._hasOwnPendingAsyncValidator = true;\n            const obs = toObservable(this.asyncValidator(this));\n            this._asyncValidationSubscription = obs.subscribe((errors) => {\n                this._hasOwnPendingAsyncValidator = false;\n                // This will trigger the recalculation of the validation status, which depends on\n                // the state of the asynchronous validation (whether it is in progress or not). So, it is\n                // necessary that we have updated the `_hasOwnPendingAsyncValidator` boolean flag first.\n                this.setErrors(errors, { emitEvent });\n            });\n        }\n    }\n    _cancelExistingSubscription() {\n        if (this._asyncValidationSubscription) {\n            this._asyncValidationSubscription.unsubscribe();\n            this._hasOwnPendingAsyncValidator = false;\n        }\n    }\n    /**\n     * Sets errors on a form control when running validations manually, rather than automatically.\n     *\n     * Calling `setErrors` also updates the validity of the parent control.\n     *\n     * @param opts Configuration options that determine how the control propagates\n     * changes and emits events after the control errors are set.\n     * * `emitEvent`: When true or not supplied (the default), the `statusChanges`\n     * observable emits an event after the errors are set.\n     *\n     * @usageNotes\n     *\n     * ### Manually set the errors for a control\n     *\n     * ```\n     * const login = new FormControl('someLogin');\n     * login.setErrors({\n     *   notUnique: true\n     * });\n     *\n     * expect(login.valid).toEqual(false);\n     * expect(login.errors).toEqual({ notUnique: true });\n     *\n     * login.setValue('someOtherLogin');\n     *\n     * expect(login.valid).toEqual(true);\n     * ```\n     */\n    setErrors(errors, opts = {}) {\n        this.errors = errors;\n        this._updateControlsErrors(opts.emitEvent !== false);\n    }\n    /**\n     * Retrieves a child control given the control's name or path.\n     *\n     * @param path A dot-delimited string or array of string/number values that define the path to the\n     * control. If a string is provided, passing it as a string literal will result in improved type\n     * information. Likewise, if an array is provided, passing it `as const` will cause improved type\n     * information to be available.\n     *\n     * @usageNotes\n     * ### Retrieve a nested control\n     *\n     * For example, to get a `name` control nested within a `person` sub-group:\n     *\n     * * `this.form.get('person.name');`\n     *\n     * -OR-\n     *\n     * * `this.form.get(['person', 'name'] as const);` // `as const` gives improved typings\n     *\n     * ### Retrieve a control in a FormArray\n     *\n     * When accessing an element inside a FormArray, you can use an element index.\n     * For example, to get a `price` control from the first element in an `items` array you can use:\n     *\n     * * `this.form.get('items.0.price');`\n     *\n     * -OR-\n     *\n     * * `this.form.get(['items', 0, 'price']);`\n     */\n    get(path) {\n        let currPath = path;\n        if (currPath == null)\n            return null;\n        if (!Array.isArray(currPath))\n            currPath = currPath.split('.');\n        if (currPath.length === 0)\n            return null;\n        return currPath.reduce((control, name) => control && control._find(name), this);\n    }\n    /**\n     * @description\n     * Reports error data for the control with the given path.\n     *\n     * @param errorCode The code of the error to check\n     * @param path A list of control names that designates how to move from the current control\n     * to the control that should be queried for errors.\n     *\n     * @usageNotes\n     * For example, for the following `FormGroup`:\n     *\n     * ```\n     * form = new FormGroup({\n     *   address: new FormGroup({ street: new FormControl() })\n     * });\n     * ```\n     *\n     * The path to the 'street' control from the root form would be 'address' -> 'street'.\n     *\n     * It can be provided to this method in one of two formats:\n     *\n     * 1. An array of string control names, e.g. `['address', 'street']`\n     * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n     *\n     * @returns error data for that particular error. If the control or error is not present,\n     * null is returned.\n     */\n    getError(errorCode, path) {\n        const control = path ? this.get(path) : this;\n        return control && control.errors ? control.errors[errorCode] : null;\n    }\n    /**\n     * @description\n     * Reports whether the control with the given path has the error specified.\n     *\n     * @param errorCode The code of the error to check\n     * @param path A list of control names that designates how to move from the current control\n     * to the control that should be queried for errors.\n     *\n     * @usageNotes\n     * For example, for the following `FormGroup`:\n     *\n     * ```\n     * form = new FormGroup({\n     *   address: new FormGroup({ street: new FormControl() })\n     * });\n     * ```\n     *\n     * The path to the 'street' control from the root form would be 'address' -> 'street'.\n     *\n     * It can be provided to this method in one of two formats:\n     *\n     * 1. An array of string control names, e.g. `['address', 'street']`\n     * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n     *\n     * If no path is given, this method checks for the error on the current control.\n     *\n     * @returns whether the given error is present in the control at the given path.\n     *\n     * If the control is not present, false is returned.\n     */\n    hasError(errorCode, path) {\n        return !!this.getError(errorCode, path);\n    }\n    /**\n     * Retrieves the top-level ancestor of this control.\n     */\n    get root() {\n        let x = this;\n        while (x._parent) {\n            x = x._parent;\n        }\n        return x;\n    }\n    /** @internal */\n    _updateControlsErrors(emitEvent) {\n        this.status = this._calculateStatus();\n        if (emitEvent) {\n            this.statusChanges.emit(this.status);\n        }\n        if (this._parent) {\n            this._parent._updateControlsErrors(emitEvent);\n        }\n    }\n    /** @internal */\n    _initObservables() {\n        this.valueChanges = new EventEmitter();\n        this.statusChanges = new EventEmitter();\n    }\n    _calculateStatus() {\n        if (this._allControlsDisabled())\n            return DISABLED;\n        if (this.errors)\n            return INVALID;\n        if (this._hasOwnPendingAsyncValidator || this._anyControlsHaveStatus(PENDING))\n            return PENDING;\n        if (this._anyControlsHaveStatus(INVALID))\n            return INVALID;\n        return VALID;\n    }\n    /** @internal */\n    _anyControlsHaveStatus(status) {\n        return this._anyControls((control) => control.status === status);\n    }\n    /** @internal */\n    _anyControlsDirty() {\n        return this._anyControls((control) => control.dirty);\n    }\n    /** @internal */\n    _anyControlsTouched() {\n        return this._anyControls((control) => control.touched);\n    }\n    /** @internal */\n    _updatePristine(opts = {}) {\n        this.pristine = !this._anyControlsDirty();\n        if (this._parent && !opts.onlySelf) {\n            this._parent._updatePristine(opts);\n        }\n    }\n    /** @internal */\n    _updateTouched(opts = {}) {\n        this.touched = this._anyControlsTouched();\n        if (this._parent && !opts.onlySelf) {\n            this._parent._updateTouched(opts);\n        }\n    }\n    /** @internal */\n    _registerOnCollectionChange(fn) {\n        this._onCollectionChange = fn;\n    }\n    /** @internal */\n    _setUpdateStrategy(opts) {\n        if (isOptionsObj(opts) && opts.updateOn != null) {\n            this._updateOn = opts.updateOn;\n        }\n    }\n    /**\n     * Check to see if parent has been marked artificially dirty.\n     *\n     * @internal\n     */\n    _parentMarkedDirty(onlySelf) {\n        const parentDirty = this._parent && this._parent.dirty;\n        return !onlySelf && !!parentDirty && !this._parent._anyControlsDirty();\n    }\n    /** @internal */\n    _find(name) {\n        return null;\n    }\n    /**\n     * Internal implementation of the `setValidators` method. Needs to be separated out into a\n     * different method, because it is called in the constructor and it can break cases where\n     * a control is extended.\n     */\n    _assignValidators(validators) {\n        this._rawValidators = Array.isArray(validators) ? validators.slice() : validators;\n        this._composedValidatorFn = coerceToValidator(this._rawValidators);\n    }\n    /**\n     * Internal implementation of the `setAsyncValidators` method. Needs to be separated out into a\n     * different method, because it is called in the constructor and it can break cases where\n     * a control is extended.\n     */\n    _assignAsyncValidators(validators) {\n        this._rawAsyncValidators = Array.isArray(validators) ? validators.slice() : validators;\n        this._composedAsyncValidatorFn = coerceToAsyncValidator(this._rawAsyncValidators);\n    }\n}\n\n/**\n * Tracks the value and validity state of a group of `FormControl` instances.\n *\n * A `FormGroup` aggregates the values of each child `FormControl` into one object,\n * with each control name as the key.  It calculates its status by reducing the status values\n * of its children. For example, if one of the controls in a group is invalid, the entire\n * group becomes invalid.\n *\n * `FormGroup` is one of the four fundamental building blocks used to define forms in Angular,\n * along with `FormControl`, `FormArray`, and `FormRecord`.\n *\n * When instantiating a `FormGroup`, pass in a collection of child controls as the first\n * argument. The key for each child registers the name for the control.\n *\n * `FormGroup` is intended for use cases where the keys are known ahead of time.\n * If you need to dynamically add and remove controls, use {@link FormRecord} instead.\n *\n * `FormGroup` accepts an optional type parameter `TControl`, which is an object type with inner\n * control types as values.\n *\n * @usageNotes\n *\n * ### Create a form group with 2 controls\n *\n * ```\n * const form = new FormGroup({\n *   first: new FormControl('Nancy', Validators.minLength(2)),\n *   last: new FormControl('Drew'),\n * });\n *\n * console.log(form.value);   // {first: 'Nancy', last; 'Drew'}\n * console.log(form.status);  // 'VALID'\n * ```\n *\n * ### The type argument, and optional controls\n *\n * `FormGroup` accepts one generic argument, which is an object containing its inner controls.\n * This type will usually be inferred automatically, but you can always specify it explicitly if you\n * wish.\n *\n * If you have controls that are optional (i.e. they can be removed, you can use the `?` in the\n * type):\n *\n * ```\n * const form = new FormGroup<{\n *   first: FormControl<string|null>,\n *   middle?: FormControl<string|null>, // Middle name is optional.\n *   last: FormControl<string|null>,\n * }>({\n *   first: new FormControl('Nancy'),\n *   last: new FormControl('Drew'),\n * });\n * ```\n *\n * ### Create a form group with a group-level validator\n *\n * You include group-level validators as the second arg, or group-level async\n * validators as the third arg. These come in handy when you want to perform validation\n * that considers the value of more than one child control.\n *\n * ```\n * const form = new FormGroup({\n *   password: new FormControl('', Validators.minLength(2)),\n *   passwordConfirm: new FormControl('', Validators.minLength(2)),\n * }, passwordMatchValidator);\n *\n *\n * function passwordMatchValidator(g: FormGroup) {\n *    return g.get('password').value === g.get('passwordConfirm').value\n *       ? null : {'mismatch': true};\n * }\n * ```\n *\n * Like `FormControl` instances, you choose to pass in\n * validators and async validators as part of an options object.\n *\n * ```\n * const form = new FormGroup({\n *   password: new FormControl('')\n *   passwordConfirm: new FormControl('')\n * }, { validators: passwordMatchValidator, asyncValidators: otherValidator });\n * ```\n *\n * ### Set the updateOn property for all controls in a form group\n *\n * The options object is used to set a default value for each child\n * control's `updateOn` property. If you set `updateOn` to `'blur'` at the\n * group level, all child controls default to 'blur', unless the child\n * has explicitly specified a different `updateOn` value.\n *\n * ```ts\n * const c = new FormGroup({\n *   one: new FormControl()\n * }, { updateOn: 'blur' });\n * ```\n *\n * ### Using a FormGroup with optional controls\n *\n * It is possible to have optional controls in a FormGroup. An optional control can be removed later\n * using `removeControl`, and can be omitted when calling `reset`. Optional controls must be\n * declared optional in the group's type.\n *\n * ```ts\n * const c = new FormGroup<{one?: FormControl<string>}>({\n *   one: new FormControl('')\n * });\n * ```\n *\n * Notice that `c.value.one` has type `string|null|undefined`. This is because calling `c.reset({})`\n * without providing the optional key `one` will cause it to become `null`.\n *\n * @publicApi\n */\nclass FormGroup extends AbstractControl {\n    /**\n     * Creates a new `FormGroup` instance.\n     *\n     * @param controls A collection of child controls. The key for each child is the name\n     * under which it is registered.\n     *\n     * @param validatorOrOpts A synchronous validator function, or an array of\n     * such functions, or an `AbstractControlOptions` object that contains validation functions\n     * and a validation trigger.\n     *\n     * @param asyncValidator A single async validator or array of async validator functions\n     *\n     */\n    constructor(controls, validatorOrOpts, asyncValidator) {\n        super(pickValidators(validatorOrOpts), pickAsyncValidators(asyncValidator, validatorOrOpts));\n        this.controls = controls;\n        this._initObservables();\n        this._setUpdateStrategy(validatorOrOpts);\n        this._setUpControls();\n        this.updateValueAndValidity({\n            onlySelf: true,\n            // If `asyncValidator` is present, it will trigger control status change from `PENDING` to\n            // `VALID` or `INVALID`. The status should be broadcasted via the `statusChanges` observable,\n            // so we set `emitEvent` to `true` to allow that during the control creation process.\n            emitEvent: !!this.asyncValidator\n        });\n    }\n    registerControl(name, control) {\n        if (this.controls[name])\n            return this.controls[name];\n        this.controls[name] = control;\n        control.setParent(this);\n        control._registerOnCollectionChange(this._onCollectionChange);\n        return control;\n    }\n    addControl(name, control, options = {}) {\n        this.registerControl(name, control);\n        this.updateValueAndValidity({ emitEvent: options.emitEvent });\n        this._onCollectionChange();\n    }\n    /**\n     * Remove a control from this group. In a strongly-typed group, required controls cannot be\n     * removed.\n     *\n     * This method also updates the value and validity of the control.\n     *\n     * @param name The control name to remove from the collection\n     * @param options Specifies whether this FormGroup instance should emit events after a\n     *     control is removed.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges` observables emit events with the latest status and value when the control is\n     * removed. When false, no events are emitted.\n     */\n    removeControl(name, options = {}) {\n        if (this.controls[name])\n            this.controls[name]._registerOnCollectionChange(() => { });\n        delete (this.controls[name]);\n        this.updateValueAndValidity({ emitEvent: options.emitEvent });\n        this._onCollectionChange();\n    }\n    setControl(name, control, options = {}) {\n        if (this.controls[name])\n            this.controls[name]._registerOnCollectionChange(() => { });\n        delete (this.controls[name]);\n        if (control)\n            this.registerControl(name, control);\n        this.updateValueAndValidity({ emitEvent: options.emitEvent });\n        this._onCollectionChange();\n    }\n    contains(controlName) {\n        return this.controls.hasOwnProperty(controlName) && this.controls[controlName].enabled;\n    }\n    /**\n     * Sets the value of the `FormGroup`. It accepts an object that matches\n     * the structure of the group, with control names as keys.\n     *\n     * @usageNotes\n     * ### Set the complete value for the form group\n     *\n     * ```\n     * const form = new FormGroup({\n     *   first: new FormControl(),\n     *   last: new FormControl()\n     * });\n     *\n     * console.log(form.value);   // {first: null, last: null}\n     *\n     * form.setValue({first: 'Nancy', last: 'Drew'});\n     * console.log(form.value);   // {first: 'Nancy', last: 'Drew'}\n     * ```\n     *\n     * @throws When strict checks fail, such as setting the value of a control\n     * that doesn't exist or if you exclude a value of a control that does exist.\n     *\n     * @param value The new value for the control that matches the structure of the group.\n     * @param options Configuration options that determine how the control propagates changes\n     * and emits events after the value changes.\n     * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     *\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default is\n     * false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control value is updated.\n     * When false, no events are emitted.\n     */\n    setValue(value, options = {}) {\n        assertAllValuesPresent(this, true, value);\n        Object.keys(value).forEach(name => {\n            assertControlPresent(this, true, name);\n            this.controls[name].setValue(value[name], { onlySelf: true, emitEvent: options.emitEvent });\n        });\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * Patches the value of the `FormGroup`. It accepts an object with control\n     * names as keys, and does its best to match the values to the correct controls\n     * in the group.\n     *\n     * It accepts both super-sets and sub-sets of the group without throwing an error.\n     *\n     * @usageNotes\n     * ### Patch the value for a form group\n     *\n     * ```\n     * const form = new FormGroup({\n     *    first: new FormControl(),\n     *    last: new FormControl()\n     * });\n     * console.log(form.value);   // {first: null, last: null}\n     *\n     * form.patchValue({first: 'Nancy'});\n     * console.log(form.value);   // {first: 'Nancy', last: null}\n     * ```\n     *\n     * @param value The object that matches the structure of the group.\n     * @param options Configuration options that determine how the control propagates changes and\n     * emits events after the value is patched.\n     * * `onlySelf`: When true, each change only affects this control and not its parent. Default is\n     * true.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges` observables emit events with the latest status and value when the control value\n     * is updated. When false, no events are emitted. The configuration options are passed to\n     * the {@link AbstractControl#updateValueAndValidity updateValueAndValidity} method.\n     */\n    patchValue(value, options = {}) {\n        // Even though the `value` argument type doesn't allow `null` and `undefined` values, the\n        // `patchValue` can be called recursively and inner data structures might have these values, so\n        // we just ignore such cases when a field containing FormGroup instance receives `null` or\n        // `undefined` as a value.\n        if (value == null /* both `null` and `undefined` */)\n            return;\n        Object.keys(value).forEach(name => {\n            // The compiler cannot see through the uninstantiated conditional type of `this.controls`, so\n            // `as any` is required.\n            const control = this.controls[name];\n            if (control) {\n                control.patchValue(\n                /* Guaranteed to be present, due to the outer forEach. */ value[name], { onlySelf: true, emitEvent: options.emitEvent });\n            }\n        });\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * Resets the `FormGroup`, marks all descendants `pristine` and `untouched` and sets\n     * the value of all descendants to their default values, or null if no defaults were provided.\n     *\n     * You reset to a specific form state by passing in a map of states\n     * that matches the structure of your form, with control names as keys. The state\n     * is a standalone value or a form state object with both a value and a disabled\n     * status.\n     *\n     * @param value Resets the control with an initial value,\n     * or an object that defines the initial value and disabled state.\n     *\n     * @param options Configuration options that determine how the control propagates changes\n     * and emits events when the group is reset.\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default is\n     * false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control is reset.\n     * When false, no events are emitted.\n     * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     *\n     * @usageNotes\n     *\n     * ### Reset the form group values\n     *\n     * ```ts\n     * const form = new FormGroup({\n     *   first: new FormControl('first name'),\n     *   last: new FormControl('last name')\n     * });\n     *\n     * console.log(form.value);  // {first: 'first name', last: 'last name'}\n     *\n     * form.reset({ first: 'name', last: 'last name' });\n     *\n     * console.log(form.value);  // {first: 'name', last: 'last name'}\n     * ```\n     *\n     * ### Reset the form group values and disabled status\n     *\n     * ```\n     * const form = new FormGroup({\n     *   first: new FormControl('first name'),\n     *   last: new FormControl('last name')\n     * });\n     *\n     * form.reset({\n     *   first: {value: 'name', disabled: true},\n     *   last: 'last'\n     * });\n     *\n     * console.log(form.value);  // {last: 'last'}\n     * console.log(form.get('first').status);  // 'DISABLED'\n     * ```\n     */\n    reset(value = {}, options = {}) {\n        this._forEachChild((control, name) => {\n            control.reset(value[name], { onlySelf: true, emitEvent: options.emitEvent });\n        });\n        this._updatePristine(options);\n        this._updateTouched(options);\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * The aggregate value of the `FormGroup`, including any disabled controls.\n     *\n     * Retrieves all values regardless of disabled status.\n     */\n    getRawValue() {\n        return this._reduceChildren({}, (acc, control, name) => {\n            acc[name] = control.getRawValue();\n            return acc;\n        });\n    }\n    /** @internal */\n    _syncPendingControls() {\n        let subtreeUpdated = this._reduceChildren(false, (updated, child) => {\n            return child._syncPendingControls() ? true : updated;\n        });\n        if (subtreeUpdated)\n            this.updateValueAndValidity({ onlySelf: true });\n        return subtreeUpdated;\n    }\n    /** @internal */\n    _forEachChild(cb) {\n        Object.keys(this.controls).forEach(key => {\n            // The list of controls can change (for ex. controls might be removed) while the loop\n            // is running (as a result of invoking Forms API in `valueChanges` subscription), so we\n            // have to null check before invoking the callback.\n            const control = this.controls[key];\n            control && cb(control, key);\n        });\n    }\n    /** @internal */\n    _setUpControls() {\n        this._forEachChild((control) => {\n            control.setParent(this);\n            control._registerOnCollectionChange(this._onCollectionChange);\n        });\n    }\n    /** @internal */\n    _updateValue() {\n        this.value = this._reduceValue();\n    }\n    /** @internal */\n    _anyControls(condition) {\n        for (const [controlName, control] of Object.entries(this.controls)) {\n            if (this.contains(controlName) && condition(control)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /** @internal */\n    _reduceValue() {\n        let acc = {};\n        return this._reduceChildren(acc, (acc, control, name) => {\n            if (control.enabled || this.disabled) {\n                acc[name] = control.value;\n            }\n            return acc;\n        });\n    }\n    /** @internal */\n    _reduceChildren(initValue, fn) {\n        let res = initValue;\n        this._forEachChild((control, name) => {\n            res = fn(res, control, name);\n        });\n        return res;\n    }\n    /** @internal */\n    _allControlsDisabled() {\n        for (const controlName of Object.keys(this.controls)) {\n            if (this.controls[controlName].enabled) {\n                return false;\n            }\n        }\n        return Object.keys(this.controls).length > 0 || this.disabled;\n    }\n    /** @internal */\n    _find(name) {\n        return this.controls.hasOwnProperty(name) ?\n            this.controls[name] :\n            null;\n    }\n}\nconst UntypedFormGroup = FormGroup;\n/**\n * @description\n * Asserts that the given control is an instance of `FormGroup`\n *\n * @publicApi\n */\nconst isFormGroup = (control) => control instanceof FormGroup;\n/**\n * Tracks the value and validity state of a collection of `FormControl` instances, each of which has\n * the same value type.\n *\n * `FormRecord` is very similar to {@link FormGroup}, except it can be used with a dynamic keys,\n * with controls added and removed as needed.\n *\n * `FormRecord` accepts one generic argument, which describes the type of the controls it contains.\n *\n * @usageNotes\n *\n * ```\n * let numbers = new FormRecord({bill: new FormControl('415-123-456')});\n * numbers.addControl('bob', new FormControl('415-234-567'));\n * numbers.removeControl('bill');\n * ```\n *\n * @publicApi\n */\nclass FormRecord extends FormGroup {\n}\n/**\n * @description\n * Asserts that the given control is an instance of `FormRecord`\n *\n * @publicApi\n */\nconst isFormRecord = (control) => control instanceof FormRecord;\n\n/**\n * Token to provide to allow SetDisabledState to always be called when a CVA is added, regardless of\n * whether the control is disabled or enabled.\n *\n * @see {@link FormsModule#withconfig}\n */\nconst CALL_SET_DISABLED_STATE = new InjectionToken('CallSetDisabledState', { providedIn: 'root', factory: () => setDisabledStateDefault });\n/**\n * Whether to use the fixed setDisabledState behavior by default.\n */\nconst setDisabledStateDefault = 'always';\nfunction controlPath(name, parent) {\n    return [...parent.path, name];\n}\n/**\n * Links a Form control and a Form directive by setting up callbacks (such as `onChange`) on both\n * instances. This function is typically invoked when form directive is being initialized.\n *\n * @param control Form control instance that should be linked.\n * @param dir Directive that should be linked with a given control.\n */\nfunction setUpControl(control, dir, callSetDisabledState = setDisabledStateDefault) {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        if (!control)\n            _throwError(dir, 'Cannot find control with');\n        if (!dir.valueAccessor)\n            _throwMissingValueAccessorError(dir);\n    }\n    setUpValidators(control, dir);\n    dir.valueAccessor.writeValue(control.value);\n    // The legacy behavior only calls the CVA's `setDisabledState` if the control is disabled.\n    // If the `callSetDisabledState` option is set to `always`, then this bug is fixed and\n    // the method is always called.\n    if (control.disabled || callSetDisabledState === 'always') {\n        dir.valueAccessor.setDisabledState?.(control.disabled);\n    }\n    setUpViewChangePipeline(control, dir);\n    setUpModelChangePipeline(control, dir);\n    setUpBlurPipeline(control, dir);\n    setUpDisabledChangeHandler(control, dir);\n}\n/**\n * Reverts configuration performed by the `setUpControl` control function.\n * Effectively disconnects form control with a given form directive.\n * This function is typically invoked when corresponding form directive is being destroyed.\n *\n * @param control Form control which should be cleaned up.\n * @param dir Directive that should be disconnected from a given control.\n * @param validateControlPresenceOnChange Flag that indicates whether onChange handler should\n *     contain asserts to verify that it's not called once directive is destroyed. We need this flag\n *     to avoid potentially breaking changes caused by better control cleanup introduced in #39235.\n */\nfunction cleanUpControl(control, dir, validateControlPresenceOnChange = true) {\n    const noop = () => {\n        if (validateControlPresenceOnChange && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            _noControlError(dir);\n        }\n    };\n    // The `valueAccessor` field is typically defined on FromControl and FormControlName directive\n    // instances and there is a logic in `selectValueAccessor` function that throws if it's not the\n    // case. We still check the presence of `valueAccessor` before invoking its methods to make sure\n    // that cleanup works correctly if app code or tests are setup to ignore the error thrown from\n    // `selectValueAccessor`. See https://github.com/angular/angular/issues/40521.\n    if (dir.valueAccessor) {\n        dir.valueAccessor.registerOnChange(noop);\n        dir.valueAccessor.registerOnTouched(noop);\n    }\n    cleanUpValidators(control, dir);\n    if (control) {\n        dir._invokeOnDestroyCallbacks();\n        control._registerOnCollectionChange(() => { });\n    }\n}\nfunction registerOnValidatorChange(validators, onChange) {\n    validators.forEach((validator) => {\n        if (validator.registerOnValidatorChange)\n            validator.registerOnValidatorChange(onChange);\n    });\n}\n/**\n * Sets up disabled change handler function on a given form control if ControlValueAccessor\n * associated with a given directive instance supports the `setDisabledState` call.\n *\n * @param control Form control where disabled change handler should be setup.\n * @param dir Corresponding directive instance associated with this control.\n */\nfunction setUpDisabledChangeHandler(control, dir) {\n    if (dir.valueAccessor.setDisabledState) {\n        const onDisabledChange = (isDisabled) => {\n            dir.valueAccessor.setDisabledState(isDisabled);\n        };\n        control.registerOnDisabledChange(onDisabledChange);\n        // Register a callback function to cleanup disabled change handler\n        // from a control instance when a directive is destroyed.\n        dir._registerOnDestroy(() => {\n            control._unregisterOnDisabledChange(onDisabledChange);\n        });\n    }\n}\n/**\n * Sets up sync and async directive validators on provided form control.\n * This function merges validators from the directive into the validators of the control.\n *\n * @param control Form control where directive validators should be setup.\n * @param dir Directive instance that contains validators to be setup.\n */\nfunction setUpValidators(control, dir) {\n    const validators = getControlValidators(control);\n    if (dir.validator !== null) {\n        control.setValidators(mergeValidators(validators, dir.validator));\n    }\n    else if (typeof validators === 'function') {\n        // If sync validators are represented by a single validator function, we force the\n        // `Validators.compose` call to happen by executing the `setValidators` function with\n        // an array that contains that function. We need this to avoid possible discrepancies in\n        // validators behavior, so sync validators are always processed by the `Validators.compose`.\n        // Note: we should consider moving this logic inside the `setValidators` function itself, so we\n        // have consistent behavior on AbstractControl API level. The same applies to the async\n        // validators logic below.\n        control.setValidators([validators]);\n    }\n    const asyncValidators = getControlAsyncValidators(control);\n    if (dir.asyncValidator !== null) {\n        control.setAsyncValidators(mergeValidators(asyncValidators, dir.asyncValidator));\n    }\n    else if (typeof asyncValidators === 'function') {\n        control.setAsyncValidators([asyncValidators]);\n    }\n    // Re-run validation when validator binding changes, e.g. minlength=3 -> minlength=4\n    const onValidatorChange = () => control.updateValueAndValidity();\n    registerOnValidatorChange(dir._rawValidators, onValidatorChange);\n    registerOnValidatorChange(dir._rawAsyncValidators, onValidatorChange);\n}\n/**\n * Cleans up sync and async directive validators on provided form control.\n * This function reverts the setup performed by the `setUpValidators` function, i.e.\n * removes directive-specific validators from a given control instance.\n *\n * @param control Form control from where directive validators should be removed.\n * @param dir Directive instance that contains validators to be removed.\n * @returns true if a control was updated as a result of this action.\n */\nfunction cleanUpValidators(control, dir) {\n    let isControlUpdated = false;\n    if (control !== null) {\n        if (dir.validator !== null) {\n            const validators = getControlValidators(control);\n            if (Array.isArray(validators) && validators.length > 0) {\n                // Filter out directive validator function.\n                const updatedValidators = validators.filter((validator) => validator !== dir.validator);\n                if (updatedValidators.length !== validators.length) {\n                    isControlUpdated = true;\n                    control.setValidators(updatedValidators);\n                }\n            }\n        }\n        if (dir.asyncValidator !== null) {\n            const asyncValidators = getControlAsyncValidators(control);\n            if (Array.isArray(asyncValidators) && asyncValidators.length > 0) {\n                // Filter out directive async validator function.\n                const updatedAsyncValidators = asyncValidators.filter((asyncValidator) => asyncValidator !== dir.asyncValidator);\n                if (updatedAsyncValidators.length !== asyncValidators.length) {\n                    isControlUpdated = true;\n                    control.setAsyncValidators(updatedAsyncValidators);\n                }\n            }\n        }\n    }\n    // Clear onValidatorChange callbacks by providing a noop function.\n    const noop = () => { };\n    registerOnValidatorChange(dir._rawValidators, noop);\n    registerOnValidatorChange(dir._rawAsyncValidators, noop);\n    return isControlUpdated;\n}\nfunction setUpViewChangePipeline(control, dir) {\n    dir.valueAccessor.registerOnChange((newValue) => {\n        control._pendingValue = newValue;\n        control._pendingChange = true;\n        control._pendingDirty = true;\n        if (control.updateOn === 'change')\n            updateControl(control, dir);\n    });\n}\nfunction setUpBlurPipeline(control, dir) {\n    dir.valueAccessor.registerOnTouched(() => {\n        control._pendingTouched = true;\n        if (control.updateOn === 'blur' && control._pendingChange)\n            updateControl(control, dir);\n        if (control.updateOn !== 'submit')\n            control.markAsTouched();\n    });\n}\nfunction updateControl(control, dir) {\n    if (control._pendingDirty)\n        control.markAsDirty();\n    control.setValue(control._pendingValue, { emitModelToViewChange: false });\n    dir.viewToModelUpdate(control._pendingValue);\n    control._pendingChange = false;\n}\nfunction setUpModelChangePipeline(control, dir) {\n    const onChange = (newValue, emitModelEvent) => {\n        // control -> view\n        dir.valueAccessor.writeValue(newValue);\n        // control -> ngModel\n        if (emitModelEvent)\n            dir.viewToModelUpdate(newValue);\n    };\n    control.registerOnChange(onChange);\n    // Register a callback function to cleanup onChange handler\n    // from a control instance when a directive is destroyed.\n    dir._registerOnDestroy(() => {\n        control._unregisterOnChange(onChange);\n    });\n}\n/**\n * Links a FormGroup or FormArray instance and corresponding Form directive by setting up validators\n * present in the view.\n *\n * @param control FormGroup or FormArray instance that should be linked.\n * @param dir Directive that provides view validators.\n */\nfunction setUpFormContainer(control, dir) {\n    if (control == null && (typeof ngDevMode === 'undefined' || ngDevMode))\n        _throwError(dir, 'Cannot find control with');\n    setUpValidators(control, dir);\n}\n/**\n * Reverts the setup performed by the `setUpFormContainer` function.\n *\n * @param control FormGroup or FormArray instance that should be cleaned up.\n * @param dir Directive that provided view validators.\n * @returns true if a control was updated as a result of this action.\n */\nfunction cleanUpFormContainer(control, dir) {\n    return cleanUpValidators(control, dir);\n}\nfunction _noControlError(dir) {\n    return _throwError(dir, 'There is no FormControl instance attached to form control element with');\n}\nfunction _throwError(dir, message) {\n    const messageEnd = _describeControlLocation(dir);\n    throw new Error(`${message} ${messageEnd}`);\n}\nfunction _describeControlLocation(dir) {\n    const path = dir.path;\n    if (path && path.length > 1)\n        return `path: '${path.join(' -> ')}'`;\n    if (path?.[0])\n        return `name: '${path}'`;\n    return 'unspecified name attribute';\n}\nfunction _throwMissingValueAccessorError(dir) {\n    const loc = _describeControlLocation(dir);\n    throw new ɵRuntimeError(-1203 /* RuntimeErrorCode.NG_MISSING_VALUE_ACCESSOR */, `No value accessor for form control ${loc}.`);\n}\nfunction _throwInvalidValueAccessorError(dir) {\n    const loc = _describeControlLocation(dir);\n    throw new ɵRuntimeError(1200 /* RuntimeErrorCode.NG_VALUE_ACCESSOR_NOT_PROVIDED */, `Value accessor was not provided as an array for form control with ${loc}. ` +\n        `Check that the \\`NG_VALUE_ACCESSOR\\` token is configured as a \\`multi: true\\` provider.`);\n}\nfunction isPropertyUpdated(changes, viewModel) {\n    if (!changes.hasOwnProperty('model'))\n        return false;\n    const change = changes['model'];\n    if (change.isFirstChange())\n        return true;\n    return !Object.is(viewModel, change.currentValue);\n}\nfunction isBuiltInAccessor(valueAccessor) {\n    // Check if a given value accessor is an instance of a class that directly extends\n    // `BuiltInControlValueAccessor` one.\n    return Object.getPrototypeOf(valueAccessor.constructor) === BuiltInControlValueAccessor;\n}\nfunction syncPendingControls(form, directives) {\n    form._syncPendingControls();\n    directives.forEach((dir) => {\n        const control = dir.control;\n        if (control.updateOn === 'submit' && control._pendingChange) {\n            dir.viewToModelUpdate(control._pendingValue);\n            control._pendingChange = false;\n        }\n    });\n}\n// TODO: vsavkin remove it once https://github.com/angular/angular/issues/3011 is implemented\nfunction selectValueAccessor(dir, valueAccessors) {\n    if (!valueAccessors)\n        return null;\n    if (!Array.isArray(valueAccessors) && (typeof ngDevMode === 'undefined' || ngDevMode))\n        _throwInvalidValueAccessorError(dir);\n    let defaultAccessor = undefined;\n    let builtinAccessor = undefined;\n    let customAccessor = undefined;\n    valueAccessors.forEach((v) => {\n        if (v.constructor === DefaultValueAccessor) {\n            defaultAccessor = v;\n        }\n        else if (isBuiltInAccessor(v)) {\n            if (builtinAccessor && (typeof ngDevMode === 'undefined' || ngDevMode))\n                _throwError(dir, 'More than one built-in value accessor matches form control with');\n            builtinAccessor = v;\n        }\n        else {\n            if (customAccessor && (typeof ngDevMode === 'undefined' || ngDevMode))\n                _throwError(dir, 'More than one custom value accessor matches form control with');\n            customAccessor = v;\n        }\n    });\n    if (customAccessor)\n        return customAccessor;\n    if (builtinAccessor)\n        return builtinAccessor;\n    if (defaultAccessor)\n        return defaultAccessor;\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        _throwError(dir, 'No valid value accessor for form control with');\n    }\n    return null;\n}\nfunction removeListItem$1(list, el) {\n    const index = list.indexOf(el);\n    if (index > -1)\n        list.splice(index, 1);\n}\n// TODO(kara): remove after deprecation period\nfunction _ngModelWarning(name, type, instance, warningConfig) {\n    if (warningConfig === 'never')\n        return;\n    if (((warningConfig === null || warningConfig === 'once') && !type._ngModelWarningSentOnce) ||\n        (warningConfig === 'always' && !instance._ngModelWarningSent)) {\n        console.warn(ngModelWarning(name));\n        type._ngModelWarningSentOnce = true;\n        instance._ngModelWarningSent = true;\n    }\n}\n\nconst formDirectiveProvider$1 = {\n    provide: ControlContainer,\n    useExisting: forwardRef(() => NgForm)\n};\nconst resolvedPromise$1 = (() => Promise.resolve())();\n/**\n * @description\n * Creates a top-level `FormGroup` instance and binds it to a form\n * to track aggregate form value and validation status.\n *\n * As soon as you import the `FormsModule`, this directive becomes active by default on\n * all `<form>` tags.  You don't need to add a special selector.\n *\n * You optionally export the directive into a local template variable using `ngForm` as the key\n * (ex: `#myForm=\"ngForm\"`). This is optional, but useful.  Many properties from the underlying\n * `FormGroup` instance are duplicated on the directive itself, so a reference to it\n * gives you access to the aggregate value and validity status of the form, as well as\n * user interaction properties like `dirty` and `touched`.\n *\n * To register child controls with the form, use `NgModel` with a `name`\n * attribute. You may use `NgModelGroup` to create sub-groups within the form.\n *\n * If necessary, listen to the directive's `ngSubmit` event to be notified when the user has\n * triggered a form submission. The `ngSubmit` event emits the original form\n * submission event.\n *\n * In template driven forms, all `<form>` tags are automatically tagged as `NgForm`.\n * To import the `FormsModule` but skip its usage in some forms,\n * for example, to use native HTML5 validation, add the `ngNoForm` and the `<form>`\n * tags won't create an `NgForm` directive. In reactive forms, using `ngNoForm` is\n * unnecessary because the `<form>` tags are inert. In that case, you would\n * refrain from using the `formGroup` directive.\n *\n * @usageNotes\n *\n * ### Listening for form submission\n *\n * The following example shows how to capture the form values from the \"ngSubmit\" event.\n *\n * {@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n *\n * ### Setting the update options\n *\n * The following example shows you how to change the \"updateOn\" option from its default using\n * ngFormOptions.\n *\n * ```html\n * <form [ngFormOptions]=\"{updateOn: 'blur'}\">\n *    <input name=\"one\" ngModel>  <!-- this ngModel will update on blur -->\n * </form>\n * ```\n *\n * ### Native DOM validation UI\n *\n * In order to prevent the native DOM form validation UI from interfering with Angular's form\n * validation, Angular automatically adds the `novalidate` attribute on any `<form>` whenever\n * `FormModule` or `ReactiveFormModule` are imported into the application.\n * If you want to explicitly enable native DOM validation UI with Angular forms, you can add the\n * `ngNativeValidate` attribute to the `<form>` element:\n *\n * ```html\n * <form ngNativeValidate>\n *   ...\n * </form>\n * ```\n *\n * @ngModule FormsModule\n * @publicApi\n */\nclass NgForm extends ControlContainer {\n    constructor(validators, asyncValidators, callSetDisabledState) {\n        super();\n        this.callSetDisabledState = callSetDisabledState;\n        /**\n         * @description\n         * Returns whether the form submission has been triggered.\n         */\n        this.submitted = false;\n        this._directives = new Set();\n        /**\n         * @description\n         * Event emitter for the \"ngSubmit\" event\n         */\n        this.ngSubmit = new EventEmitter();\n        this.form =\n            new FormGroup({}, composeValidators(validators), composeAsyncValidators(asyncValidators));\n    }\n    /** @nodoc */\n    ngAfterViewInit() {\n        this._setUpdateStrategy();\n    }\n    /**\n     * @description\n     * The directive instance.\n     */\n    get formDirective() {\n        return this;\n    }\n    /**\n     * @description\n     * The internal `FormGroup` instance.\n     */\n    get control() {\n        return this.form;\n    }\n    /**\n     * @description\n     * Returns an array representing the path to this group. Because this directive\n     * always lives at the top level of a form, it is always an empty array.\n     */\n    get path() {\n        return [];\n    }\n    /**\n     * @description\n     * Returns a map of the controls in this group.\n     */\n    get controls() {\n        return this.form.controls;\n    }\n    /**\n     * @description\n     * Method that sets up the control directive in this group, re-calculates its value\n     * and validity, and adds the instance to the internal list of directives.\n     *\n     * @param dir The `NgModel` directive instance.\n     */\n    addControl(dir) {\n        resolvedPromise$1.then(() => {\n            const container = this._findContainer(dir.path);\n            dir.control =\n                container.registerControl(dir.name, dir.control);\n            setUpControl(dir.control, dir, this.callSetDisabledState);\n            dir.control.updateValueAndValidity({ emitEvent: false });\n            this._directives.add(dir);\n        });\n    }\n    /**\n     * @description\n     * Retrieves the `FormControl` instance from the provided `NgModel` directive.\n     *\n     * @param dir The `NgModel` directive instance.\n     */\n    getControl(dir) {\n        return this.form.get(dir.path);\n    }\n    /**\n     * @description\n     * Removes the `NgModel` instance from the internal list of directives\n     *\n     * @param dir The `NgModel` directive instance.\n     */\n    removeControl(dir) {\n        resolvedPromise$1.then(() => {\n            const container = this._findContainer(dir.path);\n            if (container) {\n                container.removeControl(dir.name);\n            }\n            this._directives.delete(dir);\n        });\n    }\n    /**\n     * @description\n     * Adds a new `NgModelGroup` directive instance to the form.\n     *\n     * @param dir The `NgModelGroup` directive instance.\n     */\n    addFormGroup(dir) {\n        resolvedPromise$1.then(() => {\n            const container = this._findContainer(dir.path);\n            const group = new FormGroup({});\n            setUpFormContainer(group, dir);\n            container.registerControl(dir.name, group);\n            group.updateValueAndValidity({ emitEvent: false });\n        });\n    }\n    /**\n     * @description\n     * Removes the `NgModelGroup` directive instance from the form.\n     *\n     * @param dir The `NgModelGroup` directive instance.\n     */\n    removeFormGroup(dir) {\n        resolvedPromise$1.then(() => {\n            const container = this._findContainer(dir.path);\n            if (container) {\n                container.removeControl(dir.name);\n            }\n        });\n    }\n    /**\n     * @description\n     * Retrieves the `FormGroup` for a provided `NgModelGroup` directive instance\n     *\n     * @param dir The `NgModelGroup` directive instance.\n     */\n    getFormGroup(dir) {\n        return this.form.get(dir.path);\n    }\n    /**\n     * Sets the new value for the provided `NgControl` directive.\n     *\n     * @param dir The `NgControl` directive instance.\n     * @param value The new value for the directive's control.\n     */\n    updateModel(dir, value) {\n        resolvedPromise$1.then(() => {\n            const ctrl = this.form.get(dir.path);\n            ctrl.setValue(value);\n        });\n    }\n    /**\n     * @description\n     * Sets the value for this `FormGroup`.\n     *\n     * @param value The new value\n     */\n    setValue(value) {\n        this.control.setValue(value);\n    }\n    /**\n     * @description\n     * Method called when the \"submit\" event is triggered on the form.\n     * Triggers the `ngSubmit` emitter to emit the \"submit\" event as its payload.\n     *\n     * @param $event The \"submit\" event object\n     */\n    onSubmit($event) {\n        this.submitted = true;\n        syncPendingControls(this.form, this._directives);\n        this.ngSubmit.emit($event);\n        // Forms with `method=\"dialog\"` have some special behavior\n        // that won't reload the page and that shouldn't be prevented.\n        return $event?.target?.method === 'dialog';\n    }\n    /**\n     * @description\n     * Method called when the \"reset\" event is triggered on the form.\n     */\n    onReset() {\n        this.resetForm();\n    }\n    /**\n     * @description\n     * Resets the form to an initial value and resets its submitted status.\n     *\n     * @param value The new value for the form.\n     */\n    resetForm(value = undefined) {\n        this.form.reset(value);\n        this.submitted = false;\n    }\n    _setUpdateStrategy() {\n        if (this.options && this.options.updateOn != null) {\n            this.form._updateOn = this.options.updateOn;\n        }\n    }\n    _findContainer(path) {\n        path.pop();\n        return path.length ? this.form.get(path) : this.form;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: NgForm, deps: [{ token: NG_VALIDATORS, optional: true, self: true }, { token: NG_ASYNC_VALIDATORS, optional: true, self: true }, { token: CALL_SET_DISABLED_STATE, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.0\", type: NgForm, selector: \"form:not([ngNoForm]):not([formGroup]),ng-form,[ngForm]\", inputs: { options: [\"ngFormOptions\", \"options\"] }, outputs: { ngSubmit: \"ngSubmit\" }, host: { listeners: { \"submit\": \"onSubmit($event)\", \"reset\": \"onReset()\" } }, providers: [formDirectiveProvider$1], exportAs: [\"ngForm\"], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: NgForm, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'form:not([ngNoForm]):not([formGroup]),ng-form,[ngForm]',\n                    providers: [formDirectiveProvider$1],\n                    host: { '(submit)': 'onSubmit($event)', '(reset)': 'onReset()' },\n                    outputs: ['ngSubmit'],\n                    exportAs: 'ngForm'\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_VALIDATORS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_ASYNC_VALIDATORS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [CALL_SET_DISABLED_STATE]\n                }] }]; }, propDecorators: { options: [{\n                type: Input,\n                args: ['ngFormOptions']\n            }] } });\n\nfunction removeListItem(list, el) {\n    const index = list.indexOf(el);\n    if (index > -1)\n        list.splice(index, 1);\n}\n\nfunction isFormControlState(formState) {\n    return typeof formState === 'object' && formState !== null &&\n        Object.keys(formState).length === 2 && 'value' in formState && 'disabled' in formState;\n}\nconst FormControl = (class FormControl extends AbstractControl {\n    constructor(\n    // formState and defaultValue will only be null if T is nullable\n    formState = null, validatorOrOpts, asyncValidator) {\n        super(pickValidators(validatorOrOpts), pickAsyncValidators(asyncValidator, validatorOrOpts));\n        /** @publicApi */\n        this.defaultValue = null;\n        /** @internal */\n        this._onChange = [];\n        /** @internal */\n        this._pendingChange = false;\n        this._applyFormState(formState);\n        this._setUpdateStrategy(validatorOrOpts);\n        this._initObservables();\n        this.updateValueAndValidity({\n            onlySelf: true,\n            // If `asyncValidator` is present, it will trigger control status change from `PENDING` to\n            // `VALID` or `INVALID`.\n            // The status should be broadcasted via the `statusChanges` observable, so we set\n            // `emitEvent` to `true` to allow that during the control creation process.\n            emitEvent: !!this.asyncValidator\n        });\n        if (isOptionsObj(validatorOrOpts) &&\n            (validatorOrOpts.nonNullable || validatorOrOpts.initialValueIsDefault)) {\n            if (isFormControlState(formState)) {\n                this.defaultValue = formState.value;\n            }\n            else {\n                this.defaultValue = formState;\n            }\n        }\n    }\n    setValue(value, options = {}) {\n        this.value = this._pendingValue = value;\n        if (this._onChange.length && options.emitModelToViewChange !== false) {\n            this._onChange.forEach((changeFn) => changeFn(this.value, options.emitViewToModelChange !== false));\n        }\n        this.updateValueAndValidity(options);\n    }\n    patchValue(value, options = {}) {\n        this.setValue(value, options);\n    }\n    reset(formState = this.defaultValue, options = {}) {\n        this._applyFormState(formState);\n        this.markAsPristine(options);\n        this.markAsUntouched(options);\n        this.setValue(this.value, options);\n        this._pendingChange = false;\n    }\n    /**  @internal */\n    _updateValue() { }\n    /**  @internal */\n    _anyControls(condition) {\n        return false;\n    }\n    /**  @internal */\n    _allControlsDisabled() {\n        return this.disabled;\n    }\n    registerOnChange(fn) {\n        this._onChange.push(fn);\n    }\n    /** @internal */\n    _unregisterOnChange(fn) {\n        removeListItem(this._onChange, fn);\n    }\n    registerOnDisabledChange(fn) {\n        this._onDisabledChange.push(fn);\n    }\n    /** @internal */\n    _unregisterOnDisabledChange(fn) {\n        removeListItem(this._onDisabledChange, fn);\n    }\n    /** @internal */\n    _forEachChild(cb) { }\n    /** @internal */\n    _syncPendingControls() {\n        if (this.updateOn === 'submit') {\n            if (this._pendingDirty)\n                this.markAsDirty();\n            if (this._pendingTouched)\n                this.markAsTouched();\n            if (this._pendingChange) {\n                this.setValue(this._pendingValue, { onlySelf: true, emitModelToViewChange: false });\n                return true;\n            }\n        }\n        return false;\n    }\n    _applyFormState(formState) {\n        if (isFormControlState(formState)) {\n            this.value = this._pendingValue = formState.value;\n            formState.disabled ? this.disable({ onlySelf: true, emitEvent: false }) :\n                this.enable({ onlySelf: true, emitEvent: false });\n        }\n        else {\n            this.value = this._pendingValue = formState;\n        }\n    }\n});\nconst UntypedFormControl = FormControl;\n/**\n * @description\n * Asserts that the given control is an instance of `FormControl`\n *\n * @publicApi\n */\nconst isFormControl = (control) => control instanceof FormControl;\n\n/**\n * @description\n * A base class for code shared between the `NgModelGroup` and `FormGroupName` directives.\n *\n * @publicApi\n */\nclass AbstractFormGroupDirective extends ControlContainer {\n    /** @nodoc */\n    ngOnInit() {\n        this._checkParentType();\n        // Register the group with its parent group.\n        this.formDirective.addFormGroup(this);\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n        if (this.formDirective) {\n            // Remove the group from its parent group.\n            this.formDirective.removeFormGroup(this);\n        }\n    }\n    /**\n     * @description\n     * The `FormGroup` bound to this directive.\n     */\n    get control() {\n        return this.formDirective.getFormGroup(this);\n    }\n    /**\n     * @description\n     * The path to this group from the top-level directive.\n     */\n    get path() {\n        return controlPath(this.name == null ? this.name : this.name.toString(), this._parent);\n    }\n    /**\n     * @description\n     * The top-level directive for this group if present, otherwise null.\n     */\n    get formDirective() {\n        return this._parent ? this._parent.formDirective : null;\n    }\n    /** @internal */\n    _checkParentType() { }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: AbstractFormGroupDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.0\", type: AbstractFormGroupDirective, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: AbstractFormGroupDirective, decorators: [{\n            type: Directive\n        }] });\n\nfunction modelParentException() {\n    return new ɵRuntimeError(1350 /* RuntimeErrorCode.NGMODEL_IN_FORM_GROUP */, `\n    ngModel cannot be used to register form controls with a parent formGroup directive.  Try using\n    formGroup's partner directive \"formControlName\" instead.  Example:\n\n    ${formControlNameExample}\n\n    Or, if you'd like to avoid registering this form control, indicate that it's standalone in ngModelOptions:\n\n    Example:\n\n    ${ngModelWithFormGroupExample}`);\n}\nfunction formGroupNameException() {\n    return new ɵRuntimeError(1351 /* RuntimeErrorCode.NGMODEL_IN_FORM_GROUP_NAME */, `\n    ngModel cannot be used to register form controls with a parent formGroupName or formArrayName directive.\n\n    Option 1: Use formControlName instead of ngModel (reactive strategy):\n\n    ${formGroupNameExample}\n\n    Option 2:  Update ngModel's parent be ngModelGroup (template-driven strategy):\n\n    ${ngModelGroupExample}`);\n}\nfunction missingNameException() {\n    return new ɵRuntimeError(1352 /* RuntimeErrorCode.NGMODEL_WITHOUT_NAME */, `If ngModel is used within a form tag, either the name attribute must be set or the form\n    control must be defined as 'standalone' in ngModelOptions.\n\n    Example 1: <input [(ngModel)]=\"person.firstName\" name=\"first\">\n    Example 2: <input [(ngModel)]=\"person.firstName\" [ngModelOptions]=\"{standalone: true}\">`);\n}\nfunction modelGroupParentException() {\n    return new ɵRuntimeError(1353 /* RuntimeErrorCode.NGMODELGROUP_IN_FORM_GROUP */, `\n    ngModelGroup cannot be used with a parent formGroup directive.\n\n    Option 1: Use formGroupName instead of ngModelGroup (reactive strategy):\n\n    ${formGroupNameExample}\n\n    Option 2:  Use a regular form tag instead of the formGroup directive (template-driven strategy):\n\n    ${ngModelGroupExample}`);\n}\n\nconst modelGroupProvider = {\n    provide: ControlContainer,\n    useExisting: forwardRef(() => NgModelGroup)\n};\n/**\n * @description\n * Creates and binds a `FormGroup` instance to a DOM element.\n *\n * This directive can only be used as a child of `NgForm` (within `<form>` tags).\n *\n * Use this directive to validate a sub-group of your form separately from the\n * rest of your form, or if some values in your domain model make more sense\n * to consume together in a nested object.\n *\n * Provide a name for the sub-group and it will become the key\n * for the sub-group in the form's full value. If you need direct access, export the directive into\n * a local template variable using `ngModelGroup` (ex: `#myGroup=\"ngModelGroup\"`).\n *\n * @usageNotes\n *\n * ### Consuming controls in a grouping\n *\n * The following example shows you how to combine controls together in a sub-group\n * of the form.\n *\n * {@example forms/ts/ngModelGroup/ng_model_group_example.ts region='Component'}\n *\n * @ngModule FormsModule\n * @publicApi\n */\nclass NgModelGroup extends AbstractFormGroupDirective {\n    constructor(parent, validators, asyncValidators) {\n        super();\n        /**\n         * @description\n         * Tracks the name of the `NgModelGroup` bound to the directive. The name corresponds\n         * to a key in the parent `NgForm`.\n         */\n        this.name = '';\n        this._parent = parent;\n        this._setValidators(validators);\n        this._setAsyncValidators(asyncValidators);\n    }\n    /** @internal */\n    _checkParentType() {\n        if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm) &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw modelGroupParentException();\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: NgModelGroup, deps: [{ token: ControlContainer, host: true, skipSelf: true }, { token: NG_VALIDATORS, optional: true, self: true }, { token: NG_ASYNC_VALIDATORS, optional: true, self: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.0\", type: NgModelGroup, selector: \"[ngModelGroup]\", inputs: { name: [\"ngModelGroup\", \"name\"] }, providers: [modelGroupProvider], exportAs: [\"ngModelGroup\"], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: NgModelGroup, decorators: [{\n            type: Directive,\n            args: [{ selector: '[ngModelGroup]', providers: [modelGroupProvider], exportAs: 'ngModelGroup' }]\n        }], ctorParameters: function () { return [{ type: ControlContainer, decorators: [{\n                    type: Host\n                }, {\n                    type: SkipSelf\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_VALIDATORS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_ASYNC_VALIDATORS]\n                }] }]; }, propDecorators: { name: [{\n                type: Input,\n                args: ['ngModelGroup']\n            }] } });\n\nconst formControlBinding$1 = {\n    provide: NgControl,\n    useExisting: forwardRef(() => NgModel)\n};\n/**\n * `ngModel` forces an additional change detection run when its inputs change:\n * E.g.:\n * ```\n * <div>{{myModel.valid}}</div>\n * <input [(ngModel)]=\"myValue\" #myModel=\"ngModel\">\n * ```\n * I.e. `ngModel` can export itself on the element and then be used in the template.\n * Normally, this would result in expressions before the `input` that use the exported directive\n * to have an old value as they have been\n * dirty checked before. As this is a very common case for `ngModel`, we added this second change\n * detection run.\n *\n * Notes:\n * - this is just one extra run no matter how many `ngModel`s have been changed.\n * - this is a general problem when using `exportAs` for directives!\n */\nconst resolvedPromise = (() => Promise.resolve())();\n/**\n * @description\n * Creates a `FormControl` instance from a [domain\n * model](https://en.wikipedia.org/wiki/Domain_model) and binds it to a form control element.\n *\n * The `FormControl` instance tracks the value, user interaction, and\n * validation status of the control and keeps the view synced with the model. If used\n * within a parent form, the directive also registers itself with the form as a child\n * control.\n *\n * This directive is used by itself or as part of a larger form. Use the\n * `ngModel` selector to activate it.\n *\n * It accepts a domain model as an optional `Input`. If you have a one-way binding\n * to `ngModel` with `[]` syntax, changing the domain model's value in the component\n * class sets the value in the view. If you have a two-way binding with `[()]` syntax\n * (also known as 'banana-in-a-box syntax'), the value in the UI always syncs back to\n * the domain model in your class.\n *\n * To inspect the properties of the associated `FormControl` (like the validity state),\n * export the directive into a local template variable using `ngModel` as the key (ex:\n * `#myVar=\"ngModel\"`). You can then access the control using the directive's `control` property.\n * However, the most commonly used properties (like `valid` and `dirty`) also exist on the control\n * for direct access. See a full list of properties directly available in\n * `AbstractControlDirective`.\n *\n * @see {@link RadioControlValueAccessor}\n * @see {@link SelectControlValueAccessor}\n *\n * @usageNotes\n *\n * ### Using ngModel on a standalone control\n *\n * The following examples show a simple standalone control using `ngModel`:\n *\n * {@example forms/ts/simpleNgModel/simple_ng_model_example.ts region='Component'}\n *\n * When using the `ngModel` within `<form>` tags, you'll also need to supply a `name` attribute\n * so that the control can be registered with the parent form under that name.\n *\n * In the context of a parent form, it's often unnecessary to include one-way or two-way binding,\n * as the parent form syncs the value for you. You access its properties by exporting it into a\n * local template variable using `ngForm` such as (`#f=\"ngForm\"`). Use the variable where\n * needed on form submission.\n *\n * If you do need to populate initial values into your form, using a one-way binding for\n * `ngModel` tends to be sufficient as long as you use the exported form's value rather\n * than the domain model's value on submit.\n *\n * ### Using ngModel within a form\n *\n * The following example shows controls using `ngModel` within a form:\n *\n * {@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n *\n * ### Using a standalone ngModel within a group\n *\n * The following example shows you how to use a standalone ngModel control\n * within a form. This controls the display of the form, but doesn't contain form data.\n *\n * ```html\n * <form>\n *   <input name=\"login\" ngModel placeholder=\"Login\">\n *   <input type=\"checkbox\" ngModel [ngModelOptions]=\"{standalone: true}\"> Show more options?\n * </form>\n * <!-- form value: {login: ''} -->\n * ```\n *\n * ### Setting the ngModel `name` attribute through options\n *\n * The following example shows you an alternate way to set the name attribute. Here,\n * an attribute identified as name is used within a custom form control component. To still be able\n * to specify the NgModel's name, you must specify it using the `ngModelOptions` input instead.\n *\n * ```html\n * <form>\n *   <my-custom-form-control name=\"Nancy\" ngModel [ngModelOptions]=\"{name: 'user'}\">\n *   </my-custom-form-control>\n * </form>\n * <!-- form value: {user: ''} -->\n * ```\n *\n * @ngModule FormsModule\n * @publicApi\n */\nclass NgModel extends NgControl {\n    constructor(parent, validators, asyncValidators, valueAccessors, _changeDetectorRef, callSetDisabledState) {\n        super();\n        this._changeDetectorRef = _changeDetectorRef;\n        this.callSetDisabledState = callSetDisabledState;\n        this.control = new FormControl();\n        /** @internal */\n        this._registered = false;\n        /**\n         * @description\n         * Tracks the name bound to the directive. If a parent form exists, it\n         * uses this name as a key to retrieve this control's value.\n         */\n        this.name = '';\n        /**\n         * @description\n         * Event emitter for producing the `ngModelChange` event after\n         * the view model updates.\n         */\n        this.update = new EventEmitter();\n        this._parent = parent;\n        this._setValidators(validators);\n        this._setAsyncValidators(asyncValidators);\n        this.valueAccessor = selectValueAccessor(this, valueAccessors);\n    }\n    /** @nodoc */\n    ngOnChanges(changes) {\n        this._checkForErrors();\n        if (!this._registered || 'name' in changes) {\n            if (this._registered) {\n                this._checkName();\n                if (this.formDirective) {\n                    // We can't call `formDirective.removeControl(this)`, because the `name` has already been\n                    // changed. We also can't reset the name temporarily since the logic in `removeControl`\n                    // is inside a promise and it won't run immediately. We work around it by giving it an\n                    // object with the same shape instead.\n                    const oldName = changes['name'].previousValue;\n                    this.formDirective.removeControl({ name: oldName, path: this._getPath(oldName) });\n                }\n            }\n            this._setUpControl();\n        }\n        if ('isDisabled' in changes) {\n            this._updateDisabled(changes);\n        }\n        if (isPropertyUpdated(changes, this.viewModel)) {\n            this._updateValue(this.model);\n            this.viewModel = this.model;\n        }\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n        this.formDirective && this.formDirective.removeControl(this);\n    }\n    /**\n     * @description\n     * Returns an array that represents the path from the top-level form to this control.\n     * Each index is the string name of the control on that level.\n     */\n    get path() {\n        return this._getPath(this.name);\n    }\n    /**\n     * @description\n     * The top-level directive for this control if present, otherwise null.\n     */\n    get formDirective() {\n        return this._parent ? this._parent.formDirective : null;\n    }\n    /**\n     * @description\n     * Sets the new value for the view model and emits an `ngModelChange` event.\n     *\n     * @param newValue The new value emitted by `ngModelChange`.\n     */\n    viewToModelUpdate(newValue) {\n        this.viewModel = newValue;\n        this.update.emit(newValue);\n    }\n    _setUpControl() {\n        this._setUpdateStrategy();\n        this._isStandalone() ? this._setUpStandalone() : this.formDirective.addControl(this);\n        this._registered = true;\n    }\n    _setUpdateStrategy() {\n        if (this.options && this.options.updateOn != null) {\n            this.control._updateOn = this.options.updateOn;\n        }\n    }\n    _isStandalone() {\n        return !this._parent || !!(this.options && this.options.standalone);\n    }\n    _setUpStandalone() {\n        setUpControl(this.control, this, this.callSetDisabledState);\n        this.control.updateValueAndValidity({ emitEvent: false });\n    }\n    _checkForErrors() {\n        if (!this._isStandalone()) {\n            this._checkParentType();\n        }\n        this._checkName();\n    }\n    _checkParentType() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!(this._parent instanceof NgModelGroup) &&\n                this._parent instanceof AbstractFormGroupDirective) {\n                throw formGroupNameException();\n            }\n            else if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm)) {\n                throw modelParentException();\n            }\n        }\n    }\n    _checkName() {\n        if (this.options && this.options.name)\n            this.name = this.options.name;\n        if (!this._isStandalone() && !this.name && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw missingNameException();\n        }\n    }\n    _updateValue(value) {\n        resolvedPromise.then(() => {\n            this.control.setValue(value, { emitViewToModelChange: false });\n            this._changeDetectorRef?.markForCheck();\n        });\n    }\n    _updateDisabled(changes) {\n        const disabledValue = changes['isDisabled'].currentValue;\n        // checking for 0 to avoid breaking change\n        const isDisabled = disabledValue !== 0 && booleanAttribute(disabledValue);\n        resolvedPromise.then(() => {\n            if (isDisabled && !this.control.disabled) {\n                this.control.disable();\n            }\n            else if (!isDisabled && this.control.disabled) {\n                this.control.enable();\n            }\n            this._changeDetectorRef?.markForCheck();\n        });\n    }\n    _getPath(controlName) {\n        return this._parent ? controlPath(controlName, this._parent) : [controlName];\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: NgModel, deps: [{ token: ControlContainer, host: true, optional: true }, { token: NG_VALIDATORS, optional: true, self: true }, { token: NG_ASYNC_VALIDATORS, optional: true, self: true }, { token: NG_VALUE_ACCESSOR, optional: true, self: true }, { token: ChangeDetectorRef, optional: true }, { token: CALL_SET_DISABLED_STATE, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.0\", type: NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: { name: \"name\", isDisabled: [\"disabled\", \"isDisabled\"], model: [\"ngModel\", \"model\"], options: [\"ngModelOptions\", \"options\"] }, outputs: { update: \"ngModelChange\" }, providers: [formControlBinding$1], exportAs: [\"ngModel\"], usesInheritance: true, usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: NgModel, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ngModel]:not([formControlName]):not([formControl])',\n                    providers: [formControlBinding$1],\n                    exportAs: 'ngModel'\n                }]\n        }], ctorParameters: function () { return [{ type: ControlContainer, decorators: [{\n                    type: Optional\n                }, {\n                    type: Host\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_VALIDATORS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_ASYNC_VALIDATORS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_VALUE_ACCESSOR]\n                }] }, { type: i0.ChangeDetectorRef, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ChangeDetectorRef]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [CALL_SET_DISABLED_STATE]\n                }] }]; }, propDecorators: { name: [{\n                type: Input\n            }], isDisabled: [{\n                type: Input,\n                args: ['disabled']\n            }], model: [{\n                type: Input,\n                args: ['ngModel']\n            }], options: [{\n                type: Input,\n                args: ['ngModelOptions']\n            }], update: [{\n                type: Output,\n                args: ['ngModelChange']\n            }] } });\n\n/**\n * @description\n *\n * Adds `novalidate` attribute to all forms by default.\n *\n * `novalidate` is used to disable browser's native form validation.\n *\n * If you want to use native validation with Angular forms, just add `ngNativeValidate` attribute:\n *\n * ```\n * <form ngNativeValidate></form>\n * ```\n *\n * @publicApi\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n */\nclass ɵNgNoValidate {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: ɵNgNoValidate, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.0\", type: ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\", host: { attributes: { \"novalidate\": \"\" } }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: ɵNgNoValidate, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'form:not([ngNoForm]):not([ngNativeValidate])',\n                    host: { 'novalidate': '' },\n                }]\n        }] });\n\nconst NUMBER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => NumberValueAccessor),\n    multi: true\n};\n/**\n * @description\n * The `ControlValueAccessor` for writing a number value and listening to number input changes.\n * The value accessor is used by the `FormControlDirective`, `FormControlName`, and `NgModel`\n * directives.\n *\n * @usageNotes\n *\n * ### Using a number input with a reactive form.\n *\n * The following example shows how to use a number input with a reactive form.\n *\n * ```ts\n * const totalCountControl = new FormControl();\n * ```\n *\n * ```\n * <input type=\"number\" [formControl]=\"totalCountControl\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass NumberValueAccessor extends BuiltInControlValueAccessor {\n    /**\n     * Sets the \"value\" property on the input element.\n     * @nodoc\n     */\n    writeValue(value) {\n        // The value needs to be normalized for IE9, otherwise it is set to 'null' when null\n        const normalizedValue = value == null ? '' : value;\n        this.setProperty('value', normalizedValue);\n    }\n    /**\n     * Registers a function called when the control value changes.\n     * @nodoc\n     */\n    registerOnChange(fn) {\n        this.onChange = (value) => {\n            fn(value == '' ? null : parseFloat(value));\n        };\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: NumberValueAccessor, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.0\", type: NumberValueAccessor, selector: \"input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]\", host: { listeners: { \"input\": \"onChange($event.target.value)\", \"blur\": \"onTouched()\" } }, providers: [NUMBER_VALUE_ACCESSOR], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: NumberValueAccessor, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]',\n                    host: { '(input)': 'onChange($event.target.value)', '(blur)': 'onTouched()' },\n                    providers: [NUMBER_VALUE_ACCESSOR]\n                }]\n        }] });\n\nconst RADIO_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => RadioControlValueAccessor),\n    multi: true\n};\nfunction throwNameError() {\n    throw new ɵRuntimeError(1202 /* RuntimeErrorCode.NAME_AND_FORM_CONTROL_NAME_MUST_MATCH */, `\n      If you define both a name and a formControlName attribute on your radio button, their values\n      must match. Ex: <input type=\"radio\" formControlName=\"food\" name=\"food\">\n    `);\n}\n/**\n * Internal-only NgModule that works as a host for the `RadioControlRegistry` tree-shakable\n * provider. Note: the `InternalFormsSharedModule` can not be used here directly, since it's\n * declared *after* the `RadioControlRegistry` class and the `providedIn` doesn't support\n * `forwardRef` logic.\n */\nclass RadioControlRegistryModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: RadioControlRegistryModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.2.0\", ngImport: i0, type: RadioControlRegistryModule }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: RadioControlRegistryModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: RadioControlRegistryModule, decorators: [{\n            type: NgModule\n        }] });\n/**\n * @description\n * Class used by Angular to track radio buttons. For internal use only.\n */\nclass RadioControlRegistry {\n    constructor() {\n        this._accessors = [];\n    }\n    /**\n     * @description\n     * Adds a control to the internal registry. For internal use only.\n     */\n    add(control, accessor) {\n        this._accessors.push([control, accessor]);\n    }\n    /**\n     * @description\n     * Removes a control from the internal registry. For internal use only.\n     */\n    remove(accessor) {\n        for (let i = this._accessors.length - 1; i >= 0; --i) {\n            if (this._accessors[i][1] === accessor) {\n                this._accessors.splice(i, 1);\n                return;\n            }\n        }\n    }\n    /**\n     * @description\n     * Selects a radio button. For internal use only.\n     */\n    select(accessor) {\n        this._accessors.forEach((c) => {\n            if (this._isSameGroup(c, accessor) && c[1] !== accessor) {\n                c[1].fireUncheck(accessor.value);\n            }\n        });\n    }\n    _isSameGroup(controlPair, accessor) {\n        if (!controlPair[0].control)\n            return false;\n        return controlPair[0]._parent === accessor._control._parent &&\n            controlPair[1].name === accessor.name;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: RadioControlRegistry, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: RadioControlRegistry, providedIn: RadioControlRegistryModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: RadioControlRegistry, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: RadioControlRegistryModule }]\n        }] });\n/**\n * @description\n * The `ControlValueAccessor` for writing radio control values and listening to radio control\n * changes. The value accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n * @usageNotes\n *\n * ### Using radio buttons with reactive form directives\n *\n * The follow example shows how to use radio buttons in a reactive form. When using radio buttons in\n * a reactive form, radio buttons in the same group should have the same `formControlName`.\n * Providing a `name` attribute is optional.\n *\n * {@example forms/ts/reactiveRadioButtons/reactive_radio_button_example.ts region='Reactive'}\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass RadioControlValueAccessor extends BuiltInControlValueAccessor {\n    constructor(renderer, elementRef, _registry, _injector) {\n        super(renderer, elementRef);\n        this._registry = _registry;\n        this._injector = _injector;\n        this.setDisabledStateFired = false;\n        /**\n         * The registered callback function called when a change event occurs on the input element.\n         * Note: we declare `onChange` here (also used as host listener) as a function with no arguments\n         * to override the `onChange` function (which expects 1 argument) in the parent\n         * `BaseControlValueAccessor` class.\n         * @nodoc\n         */\n        this.onChange = () => { };\n        this.callSetDisabledState = inject(CALL_SET_DISABLED_STATE, { optional: true }) ?? setDisabledStateDefault;\n    }\n    /** @nodoc */\n    ngOnInit() {\n        this._control = this._injector.get(NgControl);\n        this._checkName();\n        this._registry.add(this._control, this);\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n        this._registry.remove(this);\n    }\n    /**\n     * Sets the \"checked\" property value on the radio input element.\n     * @nodoc\n     */\n    writeValue(value) {\n        this._state = value === this.value;\n        this.setProperty('checked', this._state);\n    }\n    /**\n     * Registers a function called when the control value changes.\n     * @nodoc\n     */\n    registerOnChange(fn) {\n        this._fn = fn;\n        this.onChange = () => {\n            fn(this.value);\n            this._registry.select(this);\n        };\n    }\n    /** @nodoc */\n    setDisabledState(isDisabled) {\n        /**\n         * `setDisabledState` is supposed to be called whenever the disabled state of a control changes,\n         * including upon control creation. However, a longstanding bug caused the method to not fire\n         * when an *enabled* control was attached. This bug was fixed in v15 in #47576.\n         *\n         * This had a side effect: previously, it was possible to instantiate a reactive form control\n         * with `[attr.disabled]=true`, even though the corresponding control was enabled in the\n         * model. This resulted in a mismatch between the model and the DOM. Now, because\n         * `setDisabledState` is always called, the value in the DOM will be immediately overwritten\n         * with the \"correct\" enabled value.\n         *\n         * However, the fix also created an exceptional case: radio buttons. Because Reactive Forms\n         * models the entire group of radio buttons as a single `FormControl`, there is no way to\n         * control the disabled state for individual radios, so they can no longer be configured as\n         * disabled. Thus, we keep the old behavior for radio buttons, so that `[attr.disabled]`\n         * continues to work. Specifically, we drop the first call to `setDisabledState` if `disabled`\n         * is `false`, and we are not in legacy mode.\n         */\n        if (this.setDisabledStateFired || isDisabled ||\n            this.callSetDisabledState === 'whenDisabledForLegacyCode') {\n            this.setProperty('disabled', isDisabled);\n        }\n        this.setDisabledStateFired = true;\n    }\n    /**\n     * Sets the \"value\" on the radio input element and unchecks it.\n     *\n     * @param value\n     */\n    fireUncheck(value) {\n        this.writeValue(value);\n    }\n    _checkName() {\n        if (this.name && this.formControlName && this.name !== this.formControlName &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwNameError();\n        }\n        if (!this.name && this.formControlName)\n            this.name = this.formControlName;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: RadioControlValueAccessor, deps: [{ token: i0.Renderer2 }, { token: i0.ElementRef }, { token: RadioControlRegistry }, { token: i0.Injector }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.0\", type: RadioControlValueAccessor, selector: \"input[type=radio][formControlName],input[type=radio][formControl],input[type=radio][ngModel]\", inputs: { name: \"name\", formControlName: \"formControlName\", value: \"value\" }, host: { listeners: { \"change\": \"onChange()\", \"blur\": \"onTouched()\" } }, providers: [RADIO_VALUE_ACCESSOR], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: RadioControlValueAccessor, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[type=radio][formControlName],input[type=radio][formControl],input[type=radio][ngModel]',\n                    host: { '(change)': 'onChange()', '(blur)': 'onTouched()' },\n                    providers: [RADIO_VALUE_ACCESSOR]\n                }]\n        }], ctorParameters: function () { return [{ type: i0.Renderer2 }, { type: i0.ElementRef }, { type: RadioControlRegistry }, { type: i0.Injector }]; }, propDecorators: { name: [{\n                type: Input\n            }], formControlName: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }] } });\n\nconst RANGE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => RangeValueAccessor),\n    multi: true\n};\n/**\n * @description\n * The `ControlValueAccessor` for writing a range value and listening to range input changes.\n * The value accessor is used by the `FormControlDirective`, `FormControlName`, and  `NgModel`\n * directives.\n *\n * @usageNotes\n *\n * ### Using a range input with a reactive form\n *\n * The following example shows how to use a range input with a reactive form.\n *\n * ```ts\n * const ageControl = new FormControl();\n * ```\n *\n * ```\n * <input type=\"range\" [formControl]=\"ageControl\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass RangeValueAccessor extends BuiltInControlValueAccessor {\n    /**\n     * Sets the \"value\" property on the input element.\n     * @nodoc\n     */\n    writeValue(value) {\n        this.setProperty('value', parseFloat(value));\n    }\n    /**\n     * Registers a function called when the control value changes.\n     * @nodoc\n     */\n    registerOnChange(fn) {\n        this.onChange = (value) => {\n            fn(value == '' ? null : parseFloat(value));\n        };\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: RangeValueAccessor, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.0\", type: RangeValueAccessor, selector: \"input[type=range][formControlName],input[type=range][formControl],input[type=range][ngModel]\", host: { listeners: { \"change\": \"onChange($event.target.value)\", \"input\": \"onChange($event.target.value)\", \"blur\": \"onTouched()\" } }, providers: [RANGE_VALUE_ACCESSOR], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: RangeValueAccessor, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[type=range][formControlName],input[type=range][formControl],input[type=range][ngModel]',\n                    host: {\n                        '(change)': 'onChange($event.target.value)',\n                        '(input)': 'onChange($event.target.value)',\n                        '(blur)': 'onTouched()'\n                    },\n                    providers: [RANGE_VALUE_ACCESSOR]\n                }]\n        }] });\n\n/**\n * Token to provide to turn off the ngModel warning on formControl and formControlName.\n */\nconst NG_MODEL_WITH_FORM_CONTROL_WARNING = new InjectionToken('NgModelWithFormControlWarning');\nconst formControlBinding = {\n    provide: NgControl,\n    useExisting: forwardRef(() => FormControlDirective)\n};\n/**\n * @description\n * Synchronizes a standalone `FormControl` instance to a form control element.\n *\n * Note that support for using the `ngModel` input property and `ngModelChange` event with reactive\n * form directives was deprecated in Angular v6 and is scheduled for removal in\n * a future version of Angular.\n * For details, see [Deprecated features](guide/deprecations#ngmodel-with-reactive-forms).\n *\n * @see [Reactive Forms Guide](guide/reactive-forms)\n * @see {@link FormControl}\n * @see {@link AbstractControl}\n *\n * @usageNotes\n *\n * The following example shows how to register a standalone control and set its value.\n *\n * {@example forms/ts/simpleFormControl/simple_form_control_example.ts region='Component'}\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nclass FormControlDirective extends NgControl {\n    /**\n     * @description\n     * Triggers a warning in dev mode that this input should not be used with reactive forms.\n     */\n    set isDisabled(isDisabled) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            console.warn(disabledAttrWarning);\n        }\n    }\n    /**\n     * @description\n     * Static property used to track whether any ngModel warnings have been sent across\n     * all instances of FormControlDirective. Used to support warning config of \"once\".\n     *\n     * @internal\n     */\n    static { this._ngModelWarningSentOnce = false; }\n    constructor(validators, asyncValidators, valueAccessors, _ngModelWarningConfig, callSetDisabledState) {\n        super();\n        this._ngModelWarningConfig = _ngModelWarningConfig;\n        this.callSetDisabledState = callSetDisabledState;\n        /** @deprecated as of v6 */\n        this.update = new EventEmitter();\n        /**\n         * @description\n         * Instance property used to track whether an ngModel warning has been sent out for this\n         * particular `FormControlDirective` instance. Used to support warning config of \"always\".\n         *\n         * @internal\n         */\n        this._ngModelWarningSent = false;\n        this._setValidators(validators);\n        this._setAsyncValidators(asyncValidators);\n        this.valueAccessor = selectValueAccessor(this, valueAccessors);\n    }\n    /** @nodoc */\n    ngOnChanges(changes) {\n        if (this._isControlChanged(changes)) {\n            const previousForm = changes['form'].previousValue;\n            if (previousForm) {\n                cleanUpControl(previousForm, this, /* validateControlPresenceOnChange */ false);\n            }\n            setUpControl(this.form, this, this.callSetDisabledState);\n            this.form.updateValueAndValidity({ emitEvent: false });\n        }\n        if (isPropertyUpdated(changes, this.viewModel)) {\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                _ngModelWarning('formControl', FormControlDirective, this, this._ngModelWarningConfig);\n            }\n            this.form.setValue(this.model);\n            this.viewModel = this.model;\n        }\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n        if (this.form) {\n            cleanUpControl(this.form, this, /* validateControlPresenceOnChange */ false);\n        }\n    }\n    /**\n     * @description\n     * Returns an array that represents the path from the top-level form to this control.\n     * Each index is the string name of the control on that level.\n     */\n    get path() {\n        return [];\n    }\n    /**\n     * @description\n     * The `FormControl` bound to this directive.\n     */\n    get control() {\n        return this.form;\n    }\n    /**\n     * @description\n     * Sets the new value for the view model and emits an `ngModelChange` event.\n     *\n     * @param newValue The new value for the view model.\n     */\n    viewToModelUpdate(newValue) {\n        this.viewModel = newValue;\n        this.update.emit(newValue);\n    }\n    _isControlChanged(changes) {\n        return changes.hasOwnProperty('form');\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: FormControlDirective, deps: [{ token: NG_VALIDATORS, optional: true, self: true }, { token: NG_ASYNC_VALIDATORS, optional: true, self: true }, { token: NG_VALUE_ACCESSOR, optional: true, self: true }, { token: NG_MODEL_WITH_FORM_CONTROL_WARNING, optional: true }, { token: CALL_SET_DISABLED_STATE, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.0\", type: FormControlDirective, selector: \"[formControl]\", inputs: { form: [\"formControl\", \"form\"], isDisabled: [\"disabled\", \"isDisabled\"], model: [\"ngModel\", \"model\"] }, outputs: { update: \"ngModelChange\" }, providers: [formControlBinding], exportAs: [\"ngForm\"], usesInheritance: true, usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: FormControlDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: '[formControl]', providers: [formControlBinding], exportAs: 'ngForm' }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_VALIDATORS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_ASYNC_VALIDATORS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_VALUE_ACCESSOR]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [NG_MODEL_WITH_FORM_CONTROL_WARNING]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [CALL_SET_DISABLED_STATE]\n                }] }]; }, propDecorators: { form: [{\n                type: Input,\n                args: ['formControl']\n            }], isDisabled: [{\n                type: Input,\n                args: ['disabled']\n            }], model: [{\n                type: Input,\n                args: ['ngModel']\n            }], update: [{\n                type: Output,\n                args: ['ngModelChange']\n            }] } });\n\nconst formDirectiveProvider = {\n    provide: ControlContainer,\n    useExisting: forwardRef(() => FormGroupDirective)\n};\n/**\n * @description\n *\n * Binds an existing `FormGroup` or `FormRecord` to a DOM element.\n *\n * This directive accepts an existing `FormGroup` instance. It will then use this\n * `FormGroup` instance to match any child `FormControl`, `FormGroup`/`FormRecord`,\n * and `FormArray` instances to child `FormControlName`, `FormGroupName`,\n * and `FormArrayName` directives.\n *\n * @see [Reactive Forms Guide](guide/reactive-forms)\n * @see {@link AbstractControl}\n *\n * @usageNotes\n * ### Register Form Group\n *\n * The following example registers a `FormGroup` with first name and last name controls,\n * and listens for the *ngSubmit* event when the button is clicked.\n *\n * {@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nclass FormGroupDirective extends ControlContainer {\n    constructor(validators, asyncValidators, callSetDisabledState) {\n        super();\n        this.callSetDisabledState = callSetDisabledState;\n        /**\n         * @description\n         * Reports whether the form submission has been triggered.\n         */\n        this.submitted = false;\n        /**\n         * Callback that should be invoked when controls in FormGroup or FormArray collection change\n         * (added or removed). This callback triggers corresponding DOM updates.\n         */\n        this._onCollectionChange = () => this._updateDomValue();\n        /**\n         * @description\n         * Tracks the list of added `FormControlName` instances\n         */\n        this.directives = [];\n        /**\n         * @description\n         * Tracks the `FormGroup` bound to this directive.\n         */\n        this.form = null;\n        /**\n         * @description\n         * Emits an event when the form submission has been triggered.\n         */\n        this.ngSubmit = new EventEmitter();\n        this._setValidators(validators);\n        this._setAsyncValidators(asyncValidators);\n    }\n    /** @nodoc */\n    ngOnChanges(changes) {\n        this._checkFormPresent();\n        if (changes.hasOwnProperty('form')) {\n            this._updateValidators();\n            this._updateDomValue();\n            this._updateRegistrations();\n            this._oldForm = this.form;\n        }\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n        if (this.form) {\n            cleanUpValidators(this.form, this);\n            // Currently the `onCollectionChange` callback is rewritten each time the\n            // `_registerOnCollectionChange` function is invoked. The implication is that cleanup should\n            // happen *only* when the `onCollectionChange` callback was set by this directive instance.\n            // Otherwise it might cause overriding a callback of some other directive instances. We should\n            // consider updating this logic later to make it similar to how `onChange` callbacks are\n            // handled, see https://github.com/angular/angular/issues/39732 for additional info.\n            if (this.form._onCollectionChange === this._onCollectionChange) {\n                this.form._registerOnCollectionChange(() => { });\n            }\n        }\n    }\n    /**\n     * @description\n     * Returns this directive's instance.\n     */\n    get formDirective() {\n        return this;\n    }\n    /**\n     * @description\n     * Returns the `FormGroup` bound to this directive.\n     */\n    get control() {\n        return this.form;\n    }\n    /**\n     * @description\n     * Returns an array representing the path to this group. Because this directive\n     * always lives at the top level of a form, it always an empty array.\n     */\n    get path() {\n        return [];\n    }\n    /**\n     * @description\n     * Method that sets up the control directive in this group, re-calculates its value\n     * and validity, and adds the instance to the internal list of directives.\n     *\n     * @param dir The `FormControlName` directive instance.\n     */\n    addControl(dir) {\n        const ctrl = this.form.get(dir.path);\n        setUpControl(ctrl, dir, this.callSetDisabledState);\n        ctrl.updateValueAndValidity({ emitEvent: false });\n        this.directives.push(dir);\n        return ctrl;\n    }\n    /**\n     * @description\n     * Retrieves the `FormControl` instance from the provided `FormControlName` directive\n     *\n     * @param dir The `FormControlName` directive instance.\n     */\n    getControl(dir) {\n        return this.form.get(dir.path);\n    }\n    /**\n     * @description\n     * Removes the `FormControlName` instance from the internal list of directives\n     *\n     * @param dir The `FormControlName` directive instance.\n     */\n    removeControl(dir) {\n        cleanUpControl(dir.control || null, dir, /* validateControlPresenceOnChange */ false);\n        removeListItem$1(this.directives, dir);\n    }\n    /**\n     * Adds a new `FormGroupName` directive instance to the form.\n     *\n     * @param dir The `FormGroupName` directive instance.\n     */\n    addFormGroup(dir) {\n        this._setUpFormContainer(dir);\n    }\n    /**\n     * Performs the necessary cleanup when a `FormGroupName` directive instance is removed from the\n     * view.\n     *\n     * @param dir The `FormGroupName` directive instance.\n     */\n    removeFormGroup(dir) {\n        this._cleanUpFormContainer(dir);\n    }\n    /**\n     * @description\n     * Retrieves the `FormGroup` for a provided `FormGroupName` directive instance\n     *\n     * @param dir The `FormGroupName` directive instance.\n     */\n    getFormGroup(dir) {\n        return this.form.get(dir.path);\n    }\n    /**\n     * Performs the necessary setup when a `FormArrayName` directive instance is added to the view.\n     *\n     * @param dir The `FormArrayName` directive instance.\n     */\n    addFormArray(dir) {\n        this._setUpFormContainer(dir);\n    }\n    /**\n     * Performs the necessary cleanup when a `FormArrayName` directive instance is removed from the\n     * view.\n     *\n     * @param dir The `FormArrayName` directive instance.\n     */\n    removeFormArray(dir) {\n        this._cleanUpFormContainer(dir);\n    }\n    /**\n     * @description\n     * Retrieves the `FormArray` for a provided `FormArrayName` directive instance.\n     *\n     * @param dir The `FormArrayName` directive instance.\n     */\n    getFormArray(dir) {\n        return this.form.get(dir.path);\n    }\n    /**\n     * Sets the new value for the provided `FormControlName` directive.\n     *\n     * @param dir The `FormControlName` directive instance.\n     * @param value The new value for the directive's control.\n     */\n    updateModel(dir, value) {\n        const ctrl = this.form.get(dir.path);\n        ctrl.setValue(value);\n    }\n    /**\n     * @description\n     * Method called with the \"submit\" event is triggered on the form.\n     * Triggers the `ngSubmit` emitter to emit the \"submit\" event as its payload.\n     *\n     * @param $event The \"submit\" event object\n     */\n    onSubmit($event) {\n        this.submitted = true;\n        syncPendingControls(this.form, this.directives);\n        this.ngSubmit.emit($event);\n        // Forms with `method=\"dialog\"` have some special behavior that won't reload the page and that\n        // shouldn't be prevented. Note that we need to null check the `event` and the `target`, because\n        // some internal apps call this method directly with the wrong arguments.\n        return $event?.target?.method === 'dialog';\n    }\n    /**\n     * @description\n     * Method called when the \"reset\" event is triggered on the form.\n     */\n    onReset() {\n        this.resetForm();\n    }\n    /**\n     * @description\n     * Resets the form to an initial value and resets its submitted status.\n     *\n     * @param value The new value for the form.\n     */\n    resetForm(value = undefined) {\n        this.form.reset(value);\n        this.submitted = false;\n    }\n    /** @internal */\n    _updateDomValue() {\n        this.directives.forEach(dir => {\n            const oldCtrl = dir.control;\n            const newCtrl = this.form.get(dir.path);\n            if (oldCtrl !== newCtrl) {\n                // Note: the value of the `dir.control` may not be defined, for example when it's a first\n                // `FormControl` that is added to a `FormGroup` instance (via `addControl` call).\n                cleanUpControl(oldCtrl || null, dir);\n                // Check whether new control at the same location inside the corresponding `FormGroup` is an\n                // instance of `FormControl` and perform control setup only if that's the case.\n                // Note: we don't need to clear the list of directives (`this.directives`) here, it would be\n                // taken care of in the `removeControl` method invoked when corresponding `formControlName`\n                // directive instance is being removed (invoked from `FormControlName.ngOnDestroy`).\n                if (isFormControl(newCtrl)) {\n                    setUpControl(newCtrl, dir, this.callSetDisabledState);\n                    dir.control = newCtrl;\n                }\n            }\n        });\n        this.form._updateTreeValidity({ emitEvent: false });\n    }\n    _setUpFormContainer(dir) {\n        const ctrl = this.form.get(dir.path);\n        setUpFormContainer(ctrl, dir);\n        // NOTE: this operation looks unnecessary in case no new validators were added in\n        // `setUpFormContainer` call. Consider updating this code to match the logic in\n        // `_cleanUpFormContainer` function.\n        ctrl.updateValueAndValidity({ emitEvent: false });\n    }\n    _cleanUpFormContainer(dir) {\n        if (this.form) {\n            const ctrl = this.form.get(dir.path);\n            if (ctrl) {\n                const isControlUpdated = cleanUpFormContainer(ctrl, dir);\n                if (isControlUpdated) {\n                    // Run validity check only in case a control was updated (i.e. view validators were\n                    // removed) as removing view validators might cause validity to change.\n                    ctrl.updateValueAndValidity({ emitEvent: false });\n                }\n            }\n        }\n    }\n    _updateRegistrations() {\n        this.form._registerOnCollectionChange(this._onCollectionChange);\n        if (this._oldForm) {\n            this._oldForm._registerOnCollectionChange(() => { });\n        }\n    }\n    _updateValidators() {\n        setUpValidators(this.form, this);\n        if (this._oldForm) {\n            cleanUpValidators(this._oldForm, this);\n        }\n    }\n    _checkFormPresent() {\n        if (!this.form && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw missingFormException();\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: FormGroupDirective, deps: [{ token: NG_VALIDATORS, optional: true, self: true }, { token: NG_ASYNC_VALIDATORS, optional: true, self: true }, { token: CALL_SET_DISABLED_STATE, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.0\", type: FormGroupDirective, selector: \"[formGroup]\", inputs: { form: [\"formGroup\", \"form\"] }, outputs: { ngSubmit: \"ngSubmit\" }, host: { listeners: { \"submit\": \"onSubmit($event)\", \"reset\": \"onReset()\" } }, providers: [formDirectiveProvider], exportAs: [\"ngForm\"], usesInheritance: true, usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: FormGroupDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[formGroup]',\n                    providers: [formDirectiveProvider],\n                    host: { '(submit)': 'onSubmit($event)', '(reset)': 'onReset()' },\n                    exportAs: 'ngForm'\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_VALIDATORS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_ASYNC_VALIDATORS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [CALL_SET_DISABLED_STATE]\n                }] }]; }, propDecorators: { form: [{\n                type: Input,\n                args: ['formGroup']\n            }], ngSubmit: [{\n                type: Output\n            }] } });\n\nconst formGroupNameProvider = {\n    provide: ControlContainer,\n    useExisting: forwardRef(() => FormGroupName)\n};\n/**\n * @description\n *\n * Syncs a nested `FormGroup` or `FormRecord` to a DOM element.\n *\n * This directive can only be used with a parent `FormGroupDirective`.\n *\n * It accepts the string name of the nested `FormGroup` or `FormRecord` to link, and\n * looks for a `FormGroup` or `FormRecord` registered with that name in the parent\n * `FormGroup` instance you passed into `FormGroupDirective`.\n *\n * Use nested form groups to validate a sub-group of a\n * form separately from the rest or to group the values of certain\n * controls into their own nested object.\n *\n * @see [Reactive Forms Guide](guide/reactive-forms)\n *\n * @usageNotes\n *\n * ### Access the group by name\n *\n * The following example uses the `AbstractControl.get` method to access the\n * associated `FormGroup`\n *\n * ```ts\n *   this.form.get('name');\n * ```\n *\n * ### Access individual controls in the group\n *\n * The following example uses the `AbstractControl.get` method to access\n * individual controls within the group using dot syntax.\n *\n * ```ts\n *   this.form.get('name.first');\n * ```\n *\n * ### Register a nested `FormGroup`.\n *\n * The following example registers a nested *name* `FormGroup` within an existing `FormGroup`,\n * and provides methods to retrieve the nested `FormGroup` and individual controls.\n *\n * {@example forms/ts/nestedFormGroup/nested_form_group_example.ts region='Component'}\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nclass FormGroupName extends AbstractFormGroupDirective {\n    constructor(parent, validators, asyncValidators) {\n        super();\n        /**\n         * @description\n         * Tracks the name of the `FormGroup` bound to the directive. The name corresponds\n         * to a key in the parent `FormGroup` or `FormArray`.\n         * Accepts a name as a string or a number.\n         * The name in the form of a string is useful for individual forms,\n         * while the numerical form allows for form groups to be bound\n         * to indices when iterating over groups in a `FormArray`.\n         */\n        this.name = null;\n        this._parent = parent;\n        this._setValidators(validators);\n        this._setAsyncValidators(asyncValidators);\n    }\n    /** @internal */\n    _checkParentType() {\n        if (_hasInvalidParent(this._parent) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw groupParentException();\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: FormGroupName, deps: [{ token: ControlContainer, host: true, optional: true, skipSelf: true }, { token: NG_VALIDATORS, optional: true, self: true }, { token: NG_ASYNC_VALIDATORS, optional: true, self: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.0\", type: FormGroupName, selector: \"[formGroupName]\", inputs: { name: [\"formGroupName\", \"name\"] }, providers: [formGroupNameProvider], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: FormGroupName, decorators: [{\n            type: Directive,\n            args: [{ selector: '[formGroupName]', providers: [formGroupNameProvider] }]\n        }], ctorParameters: function () { return [{ type: ControlContainer, decorators: [{\n                    type: Optional\n                }, {\n                    type: Host\n                }, {\n                    type: SkipSelf\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_VALIDATORS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_ASYNC_VALIDATORS]\n                }] }]; }, propDecorators: { name: [{\n                type: Input,\n                args: ['formGroupName']\n            }] } });\nconst formArrayNameProvider = {\n    provide: ControlContainer,\n    useExisting: forwardRef(() => FormArrayName)\n};\n/**\n * @description\n *\n * Syncs a nested `FormArray` to a DOM element.\n *\n * This directive is designed to be used with a parent `FormGroupDirective` (selector:\n * `[formGroup]`).\n *\n * It accepts the string name of the nested `FormArray` you want to link, and\n * will look for a `FormArray` registered with that name in the parent\n * `FormGroup` instance you passed into `FormGroupDirective`.\n *\n * @see [Reactive Forms Guide](guide/reactive-forms)\n * @see {@link AbstractControl}\n *\n * @usageNotes\n *\n * ### Example\n *\n * {@example forms/ts/nestedFormArray/nested_form_array_example.ts region='Component'}\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nclass FormArrayName extends ControlContainer {\n    constructor(parent, validators, asyncValidators) {\n        super();\n        /**\n         * @description\n         * Tracks the name of the `FormArray` bound to the directive. The name corresponds\n         * to a key in the parent `FormGroup` or `FormArray`.\n         * Accepts a name as a string or a number.\n         * The name in the form of a string is useful for individual forms,\n         * while the numerical form allows for form arrays to be bound\n         * to indices when iterating over arrays in a `FormArray`.\n         */\n        this.name = null;\n        this._parent = parent;\n        this._setValidators(validators);\n        this._setAsyncValidators(asyncValidators);\n    }\n    /**\n     * A lifecycle method called when the directive's inputs are initialized. For internal use only.\n     * @throws If the directive does not have a valid parent.\n     * @nodoc\n     */\n    ngOnInit() {\n        this._checkParentType();\n        this.formDirective.addFormArray(this);\n    }\n    /**\n     * A lifecycle method called before the directive's instance is destroyed. For internal use only.\n     * @nodoc\n     */\n    ngOnDestroy() {\n        if (this.formDirective) {\n            this.formDirective.removeFormArray(this);\n        }\n    }\n    /**\n     * @description\n     * The `FormArray` bound to this directive.\n     */\n    get control() {\n        return this.formDirective.getFormArray(this);\n    }\n    /**\n     * @description\n     * The top-level directive for this group if present, otherwise null.\n     */\n    get formDirective() {\n        return this._parent ? this._parent.formDirective : null;\n    }\n    /**\n     * @description\n     * Returns an array that represents the path from the top-level form to this control.\n     * Each index is the string name of the control on that level.\n     */\n    get path() {\n        return controlPath(this.name == null ? this.name : this.name.toString(), this._parent);\n    }\n    _checkParentType() {\n        if (_hasInvalidParent(this._parent) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw arrayParentException();\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: FormArrayName, deps: [{ token: ControlContainer, host: true, optional: true, skipSelf: true }, { token: NG_VALIDATORS, optional: true, self: true }, { token: NG_ASYNC_VALIDATORS, optional: true, self: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.0\", type: FormArrayName, selector: \"[formArrayName]\", inputs: { name: [\"formArrayName\", \"name\"] }, providers: [formArrayNameProvider], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: FormArrayName, decorators: [{\n            type: Directive,\n            args: [{ selector: '[formArrayName]', providers: [formArrayNameProvider] }]\n        }], ctorParameters: function () { return [{ type: ControlContainer, decorators: [{\n                    type: Optional\n                }, {\n                    type: Host\n                }, {\n                    type: SkipSelf\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_VALIDATORS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_ASYNC_VALIDATORS]\n                }] }]; }, propDecorators: { name: [{\n                type: Input,\n                args: ['formArrayName']\n            }] } });\nfunction _hasInvalidParent(parent) {\n    return !(parent instanceof FormGroupName) && !(parent instanceof FormGroupDirective) &&\n        !(parent instanceof FormArrayName);\n}\n\nconst controlNameBinding = {\n    provide: NgControl,\n    useExisting: forwardRef(() => FormControlName)\n};\n/**\n * @description\n * Syncs a `FormControl` in an existing `FormGroup` to a form control\n * element by name.\n *\n * @see [Reactive Forms Guide](guide/reactive-forms)\n * @see {@link FormControl}\n * @see {@link AbstractControl}\n *\n * @usageNotes\n *\n * ### Register `FormControl` within a group\n *\n * The following example shows how to register multiple form controls within a form group\n * and set their value.\n *\n * {@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n *\n * To see `formControlName` examples with different form control types, see:\n *\n * * Radio buttons: `RadioControlValueAccessor`\n * * Selects: `SelectControlValueAccessor`\n *\n * ### Use with ngModel is deprecated\n *\n * Support for using the `ngModel` input property and `ngModelChange` event with reactive\n * form directives has been deprecated in Angular v6 and is scheduled for removal in\n * a future version of Angular.\n *\n * For details, see [Deprecated features](guide/deprecations#ngmodel-with-reactive-forms).\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nclass FormControlName extends NgControl {\n    /**\n     * @description\n     * Triggers a warning in dev mode that this input should not be used with reactive forms.\n     */\n    set isDisabled(isDisabled) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            console.warn(disabledAttrWarning);\n        }\n    }\n    /**\n     * @description\n     * Static property used to track whether any ngModel warnings have been sent across\n     * all instances of FormControlName. Used to support warning config of \"once\".\n     *\n     * @internal\n     */\n    static { this._ngModelWarningSentOnce = false; }\n    constructor(parent, validators, asyncValidators, valueAccessors, _ngModelWarningConfig) {\n        super();\n        this._ngModelWarningConfig = _ngModelWarningConfig;\n        this._added = false;\n        /**\n         * @description\n         * Tracks the name of the `FormControl` bound to the directive. The name corresponds\n         * to a key in the parent `FormGroup` or `FormArray`.\n         * Accepts a name as a string or a number.\n         * The name in the form of a string is useful for individual forms,\n         * while the numerical form allows for form controls to be bound\n         * to indices when iterating over controls in a `FormArray`.\n         */\n        this.name = null;\n        /** @deprecated as of v6 */\n        this.update = new EventEmitter();\n        /**\n         * @description\n         * Instance property used to track whether an ngModel warning has been sent out for this\n         * particular FormControlName instance. Used to support warning config of \"always\".\n         *\n         * @internal\n         */\n        this._ngModelWarningSent = false;\n        this._parent = parent;\n        this._setValidators(validators);\n        this._setAsyncValidators(asyncValidators);\n        this.valueAccessor = selectValueAccessor(this, valueAccessors);\n    }\n    /** @nodoc */\n    ngOnChanges(changes) {\n        if (!this._added)\n            this._setUpControl();\n        if (isPropertyUpdated(changes, this.viewModel)) {\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                _ngModelWarning('formControlName', FormControlName, this, this._ngModelWarningConfig);\n            }\n            this.viewModel = this.model;\n            this.formDirective.updateModel(this, this.model);\n        }\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n        if (this.formDirective) {\n            this.formDirective.removeControl(this);\n        }\n    }\n    /**\n     * @description\n     * Sets the new value for the view model and emits an `ngModelChange` event.\n     *\n     * @param newValue The new value for the view model.\n     */\n    viewToModelUpdate(newValue) {\n        this.viewModel = newValue;\n        this.update.emit(newValue);\n    }\n    /**\n     * @description\n     * Returns an array that represents the path from the top-level form to this control.\n     * Each index is the string name of the control on that level.\n     */\n    get path() {\n        return controlPath(this.name == null ? this.name : this.name.toString(), this._parent);\n    }\n    /**\n     * @description\n     * The top-level directive for this group if present, otherwise null.\n     */\n    get formDirective() {\n        return this._parent ? this._parent.formDirective : null;\n    }\n    _checkParentType() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!(this._parent instanceof FormGroupName) &&\n                this._parent instanceof AbstractFormGroupDirective) {\n                throw ngModelGroupException();\n            }\n            else if (!(this._parent instanceof FormGroupName) &&\n                !(this._parent instanceof FormGroupDirective) &&\n                !(this._parent instanceof FormArrayName)) {\n                throw controlParentException();\n            }\n        }\n    }\n    _setUpControl() {\n        this._checkParentType();\n        this.control = this.formDirective.addControl(this);\n        this._added = true;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: FormControlName, deps: [{ token: ControlContainer, host: true, optional: true, skipSelf: true }, { token: NG_VALIDATORS, optional: true, self: true }, { token: NG_ASYNC_VALIDATORS, optional: true, self: true }, { token: NG_VALUE_ACCESSOR, optional: true, self: true }, { token: NG_MODEL_WITH_FORM_CONTROL_WARNING, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.0\", type: FormControlName, selector: \"[formControlName]\", inputs: { name: [\"formControlName\", \"name\"], isDisabled: [\"disabled\", \"isDisabled\"], model: [\"ngModel\", \"model\"] }, outputs: { update: \"ngModelChange\" }, providers: [controlNameBinding], usesInheritance: true, usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: FormControlName, decorators: [{\n            type: Directive,\n            args: [{ selector: '[formControlName]', providers: [controlNameBinding] }]\n        }], ctorParameters: function () { return [{ type: ControlContainer, decorators: [{\n                    type: Optional\n                }, {\n                    type: Host\n                }, {\n                    type: SkipSelf\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_VALIDATORS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_ASYNC_VALIDATORS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_VALUE_ACCESSOR]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [NG_MODEL_WITH_FORM_CONTROL_WARNING]\n                }] }]; }, propDecorators: { name: [{\n                type: Input,\n                args: ['formControlName']\n            }], isDisabled: [{\n                type: Input,\n                args: ['disabled']\n            }], model: [{\n                type: Input,\n                args: ['ngModel']\n            }], update: [{\n                type: Output,\n                args: ['ngModelChange']\n            }] } });\n\nconst SELECT_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => SelectControlValueAccessor),\n    multi: true\n};\nfunction _buildValueString$1(id, value) {\n    if (id == null)\n        return `${value}`;\n    if (value && typeof value === 'object')\n        value = 'Object';\n    return `${id}: ${value}`.slice(0, 50);\n}\nfunction _extractId$1(valueString) {\n    return valueString.split(':')[0];\n}\n/**\n * @description\n * The `ControlValueAccessor` for writing select control values and listening to select control\n * changes. The value accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n * @usageNotes\n *\n * ### Using select controls in a reactive form\n *\n * The following examples show how to use a select control in a reactive form.\n *\n * {@example forms/ts/reactiveSelectControl/reactive_select_control_example.ts region='Component'}\n *\n * ### Using select controls in a template-driven form\n *\n * To use a select in a template-driven form, simply add an `ngModel` and a `name`\n * attribute to the main `<select>` tag.\n *\n * {@example forms/ts/selectControl/select_control_example.ts region='Component'}\n *\n * ### Customizing option selection\n *\n * Angular uses object identity to select option. It's possible for the identities of items\n * to change while the data does not. This can happen, for example, if the items are produced\n * from an RPC to the server, and that RPC is re-run. Even if the data hasn't changed, the\n * second response will produce objects with different identities.\n *\n * To customize the default option comparison algorithm, `<select>` supports `compareWith` input.\n * `compareWith` takes a **function** which has two arguments: `option1` and `option2`.\n * If `compareWith` is given, Angular selects option by the return value of the function.\n *\n * ```ts\n * const selectedCountriesControl = new FormControl();\n * ```\n *\n * ```\n * <select [compareWith]=\"compareFn\"  [formControl]=\"selectedCountriesControl\">\n *     <option *ngFor=\"let country of countries\" [ngValue]=\"country\">\n *         {{country.name}}\n *     </option>\n * </select>\n *\n * compareFn(c1: Country, c2: Country): boolean {\n *     return c1 && c2 ? c1.id === c2.id : c1 === c2;\n * }\n * ```\n *\n * **Note:** We listen to the 'change' event because 'input' events aren't fired\n * for selects in IE, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/input_event#browser_compatibility\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass SelectControlValueAccessor extends BuiltInControlValueAccessor {\n    constructor() {\n        super(...arguments);\n        /** @internal */\n        this._optionMap = new Map();\n        /** @internal */\n        this._idCounter = 0;\n        this._compareWith = Object.is;\n    }\n    /**\n     * @description\n     * Tracks the option comparison algorithm for tracking identities when\n     * checking for changes.\n     */\n    set compareWith(fn) {\n        if (typeof fn !== 'function' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw new ɵRuntimeError(1201 /* RuntimeErrorCode.COMPAREWITH_NOT_A_FN */, `compareWith must be a function, but received ${JSON.stringify(fn)}`);\n        }\n        this._compareWith = fn;\n    }\n    /**\n     * Sets the \"value\" property on the select element.\n     * @nodoc\n     */\n    writeValue(value) {\n        this.value = value;\n        const id = this._getOptionId(value);\n        const valueString = _buildValueString$1(id, value);\n        this.setProperty('value', valueString);\n    }\n    /**\n     * Registers a function called when the control value changes.\n     * @nodoc\n     */\n    registerOnChange(fn) {\n        this.onChange = (valueString) => {\n            this.value = this._getOptionValue(valueString);\n            fn(this.value);\n        };\n    }\n    /** @internal */\n    _registerOption() {\n        return (this._idCounter++).toString();\n    }\n    /** @internal */\n    _getOptionId(value) {\n        for (const id of this._optionMap.keys()) {\n            if (this._compareWith(this._optionMap.get(id), value))\n                return id;\n        }\n        return null;\n    }\n    /** @internal */\n    _getOptionValue(valueString) {\n        const id = _extractId$1(valueString);\n        return this._optionMap.has(id) ? this._optionMap.get(id) : valueString;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: SelectControlValueAccessor, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.0\", type: SelectControlValueAccessor, selector: \"select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]\", inputs: { compareWith: \"compareWith\" }, host: { listeners: { \"change\": \"onChange($event.target.value)\", \"blur\": \"onTouched()\" } }, providers: [SELECT_VALUE_ACCESSOR], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: SelectControlValueAccessor, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]',\n                    host: { '(change)': 'onChange($event.target.value)', '(blur)': 'onTouched()' },\n                    providers: [SELECT_VALUE_ACCESSOR]\n                }]\n        }], propDecorators: { compareWith: [{\n                type: Input\n            }] } });\n/**\n * @description\n * Marks `<option>` as dynamic, so Angular can be notified when options change.\n *\n * @see {@link SelectControlValueAccessor}\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass NgSelectOption {\n    constructor(_element, _renderer, _select) {\n        this._element = _element;\n        this._renderer = _renderer;\n        this._select = _select;\n        if (this._select)\n            this.id = this._select._registerOption();\n    }\n    /**\n     * @description\n     * Tracks the value bound to the option element. Unlike the value binding,\n     * ngValue supports binding to objects.\n     */\n    set ngValue(value) {\n        if (this._select == null)\n            return;\n        this._select._optionMap.set(this.id, value);\n        this._setElementValue(_buildValueString$1(this.id, value));\n        this._select.writeValue(this._select.value);\n    }\n    /**\n     * @description\n     * Tracks simple string values bound to the option element.\n     * For objects, use the `ngValue` input binding.\n     */\n    set value(value) {\n        this._setElementValue(value);\n        if (this._select)\n            this._select.writeValue(this._select.value);\n    }\n    /** @internal */\n    _setElementValue(value) {\n        this._renderer.setProperty(this._element.nativeElement, 'value', value);\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n        if (this._select) {\n            this._select._optionMap.delete(this.id);\n            this._select.writeValue(this._select.value);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: NgSelectOption, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }, { token: SelectControlValueAccessor, host: true, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.0\", type: NgSelectOption, selector: \"option\", inputs: { ngValue: \"ngValue\", value: \"value\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: NgSelectOption, decorators: [{\n            type: Directive,\n            args: [{ selector: 'option' }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.Renderer2 }, { type: SelectControlValueAccessor, decorators: [{\n                    type: Optional\n                }, {\n                    type: Host\n                }] }]; }, propDecorators: { ngValue: [{\n                type: Input,\n                args: ['ngValue']\n            }], value: [{\n                type: Input,\n                args: ['value']\n            }] } });\n\nconst SELECT_MULTIPLE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => SelectMultipleControlValueAccessor),\n    multi: true\n};\nfunction _buildValueString(id, value) {\n    if (id == null)\n        return `${value}`;\n    if (typeof value === 'string')\n        value = `'${value}'`;\n    if (value && typeof value === 'object')\n        value = 'Object';\n    return `${id}: ${value}`.slice(0, 50);\n}\nfunction _extractId(valueString) {\n    return valueString.split(':')[0];\n}\n/** Mock interface for HTMLCollection */\nclass HTMLCollection {\n}\n/**\n * @description\n * The `ControlValueAccessor` for writing multi-select control values and listening to multi-select\n * control changes. The value accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n * @see {@link SelectControlValueAccessor}\n *\n * @usageNotes\n *\n * ### Using a multi-select control\n *\n * The follow example shows you how to use a multi-select control with a reactive form.\n *\n * ```ts\n * const countryControl = new FormControl();\n * ```\n *\n * ```\n * <select multiple name=\"countries\" [formControl]=\"countryControl\">\n *   <option *ngFor=\"let country of countries\" [ngValue]=\"country\">\n *     {{ country.name }}\n *   </option>\n * </select>\n * ```\n *\n * ### Customizing option selection\n *\n * To customize the default option comparison algorithm, `<select>` supports `compareWith` input.\n * See the `SelectControlValueAccessor` for usage.\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass SelectMultipleControlValueAccessor extends BuiltInControlValueAccessor {\n    constructor() {\n        super(...arguments);\n        /** @internal */\n        this._optionMap = new Map();\n        /** @internal */\n        this._idCounter = 0;\n        this._compareWith = Object.is;\n    }\n    /**\n     * @description\n     * Tracks the option comparison algorithm for tracking identities when\n     * checking for changes.\n     */\n    set compareWith(fn) {\n        if (typeof fn !== 'function' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw new ɵRuntimeError(1201 /* RuntimeErrorCode.COMPAREWITH_NOT_A_FN */, `compareWith must be a function, but received ${JSON.stringify(fn)}`);\n        }\n        this._compareWith = fn;\n    }\n    /**\n     * Sets the \"value\" property on one or of more of the select's options.\n     * @nodoc\n     */\n    writeValue(value) {\n        this.value = value;\n        let optionSelectedStateSetter;\n        if (Array.isArray(value)) {\n            // convert values to ids\n            const ids = value.map((v) => this._getOptionId(v));\n            optionSelectedStateSetter = (opt, o) => {\n                opt._setSelected(ids.indexOf(o.toString()) > -1);\n            };\n        }\n        else {\n            optionSelectedStateSetter = (opt, o) => {\n                opt._setSelected(false);\n            };\n        }\n        this._optionMap.forEach(optionSelectedStateSetter);\n    }\n    /**\n     * Registers a function called when the control value changes\n     * and writes an array of the selected options.\n     * @nodoc\n     */\n    registerOnChange(fn) {\n        this.onChange = (element) => {\n            const selected = [];\n            const selectedOptions = element.selectedOptions;\n            if (selectedOptions !== undefined) {\n                const options = selectedOptions;\n                for (let i = 0; i < options.length; i++) {\n                    const opt = options[i];\n                    const val = this._getOptionValue(opt.value);\n                    selected.push(val);\n                }\n            }\n            // Degrade to use `options` when `selectedOptions` property is not available.\n            // Note: the `selectedOptions` is available in all supported browsers, but the Domino lib\n            // doesn't have it currently, see https://github.com/fgnass/domino/issues/177.\n            else {\n                const options = element.options;\n                for (let i = 0; i < options.length; i++) {\n                    const opt = options[i];\n                    if (opt.selected) {\n                        const val = this._getOptionValue(opt.value);\n                        selected.push(val);\n                    }\n                }\n            }\n            this.value = selected;\n            fn(selected);\n        };\n    }\n    /** @internal */\n    _registerOption(value) {\n        const id = (this._idCounter++).toString();\n        this._optionMap.set(id, value);\n        return id;\n    }\n    /** @internal */\n    _getOptionId(value) {\n        for (const id of this._optionMap.keys()) {\n            if (this._compareWith(this._optionMap.get(id)._value, value))\n                return id;\n        }\n        return null;\n    }\n    /** @internal */\n    _getOptionValue(valueString) {\n        const id = _extractId(valueString);\n        return this._optionMap.has(id) ? this._optionMap.get(id)._value : valueString;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: SelectMultipleControlValueAccessor, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.0\", type: SelectMultipleControlValueAccessor, selector: \"select[multiple][formControlName],select[multiple][formControl],select[multiple][ngModel]\", inputs: { compareWith: \"compareWith\" }, host: { listeners: { \"change\": \"onChange($event.target)\", \"blur\": \"onTouched()\" } }, providers: [SELECT_MULTIPLE_VALUE_ACCESSOR], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: SelectMultipleControlValueAccessor, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'select[multiple][formControlName],select[multiple][formControl],select[multiple][ngModel]',\n                    host: { '(change)': 'onChange($event.target)', '(blur)': 'onTouched()' },\n                    providers: [SELECT_MULTIPLE_VALUE_ACCESSOR]\n                }]\n        }], propDecorators: { compareWith: [{\n                type: Input\n            }] } });\n/**\n * @description\n * Marks `<option>` as dynamic, so Angular can be notified when options change.\n *\n * @see {@link SelectMultipleControlValueAccessor}\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass ɵNgSelectMultipleOption {\n    constructor(_element, _renderer, _select) {\n        this._element = _element;\n        this._renderer = _renderer;\n        this._select = _select;\n        if (this._select) {\n            this.id = this._select._registerOption(this);\n        }\n    }\n    /**\n     * @description\n     * Tracks the value bound to the option element. Unlike the value binding,\n     * ngValue supports binding to objects.\n     */\n    set ngValue(value) {\n        if (this._select == null)\n            return;\n        this._value = value;\n        this._setElementValue(_buildValueString(this.id, value));\n        this._select.writeValue(this._select.value);\n    }\n    /**\n     * @description\n     * Tracks simple string values bound to the option element.\n     * For objects, use the `ngValue` input binding.\n     */\n    set value(value) {\n        if (this._select) {\n            this._value = value;\n            this._setElementValue(_buildValueString(this.id, value));\n            this._select.writeValue(this._select.value);\n        }\n        else {\n            this._setElementValue(value);\n        }\n    }\n    /** @internal */\n    _setElementValue(value) {\n        this._renderer.setProperty(this._element.nativeElement, 'value', value);\n    }\n    /** @internal */\n    _setSelected(selected) {\n        this._renderer.setProperty(this._element.nativeElement, 'selected', selected);\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n        if (this._select) {\n            this._select._optionMap.delete(this.id);\n            this._select.writeValue(this._select.value);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: ɵNgSelectMultipleOption, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }, { token: SelectMultipleControlValueAccessor, host: true, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.0\", type: ɵNgSelectMultipleOption, selector: \"option\", inputs: { ngValue: \"ngValue\", value: \"value\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: ɵNgSelectMultipleOption, decorators: [{\n            type: Directive,\n            args: [{ selector: 'option' }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.Renderer2 }, { type: SelectMultipleControlValueAccessor, decorators: [{\n                    type: Optional\n                }, {\n                    type: Host\n                }] }]; }, propDecorators: { ngValue: [{\n                type: Input,\n                args: ['ngValue']\n            }], value: [{\n                type: Input,\n                args: ['value']\n            }] } });\n\n/**\n * Method that updates string to integer if not already a number\n *\n * @param value The value to convert to integer.\n * @returns value of parameter converted to number or integer.\n */\nfunction toInteger(value) {\n    return typeof value === 'number' ? value : parseInt(value, 10);\n}\n/**\n * Method that ensures that provided value is a float (and converts it to float if needed).\n *\n * @param value The value to convert to float.\n * @returns value of parameter converted to number or float.\n */\nfunction toFloat(value) {\n    return typeof value === 'number' ? value : parseFloat(value);\n}\n/**\n * A base class for Validator-based Directives. The class contains common logic shared across such\n * Directives.\n *\n * For internal use only, this class is not intended for use outside of the Forms package.\n */\nclass AbstractValidatorDirective {\n    constructor() {\n        this._validator = nullValidator;\n    }\n    /** @nodoc */\n    ngOnChanges(changes) {\n        if (this.inputName in changes) {\n            const input = this.normalizeInput(changes[this.inputName].currentValue);\n            this._enabled = this.enabled(input);\n            this._validator = this._enabled ? this.createValidator(input) : nullValidator;\n            if (this._onChange) {\n                this._onChange();\n            }\n        }\n    }\n    /** @nodoc */\n    validate(control) {\n        return this._validator(control);\n    }\n    /** @nodoc */\n    registerOnValidatorChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * @description\n     * Determines whether this validator should be active or not based on an input.\n     * Base class implementation checks whether an input is defined (if the value is different from\n     * `null` and `undefined`). Validator classes that extend this base class can override this\n     * function with the logic specific to a particular validator directive.\n     */\n    enabled(input) {\n        return input != null /* both `null` and `undefined` */;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: AbstractValidatorDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.0\", type: AbstractValidatorDirective, usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: AbstractValidatorDirective, decorators: [{\n            type: Directive\n        }] });\n/**\n * @description\n * Provider which adds `MaxValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst MAX_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MaxValidator),\n    multi: true\n};\n/**\n * A directive which installs the {@link MaxValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `max` attribute.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a max validator\n *\n * The following example shows how to add a max validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input type=\"number\" ngModel max=\"4\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass MaxValidator extends AbstractValidatorDirective {\n    constructor() {\n        super(...arguments);\n        /** @internal */\n        this.inputName = 'max';\n        /** @internal */\n        this.normalizeInput = (input) => toFloat(input);\n        /** @internal */\n        this.createValidator = (max) => maxValidator(max);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: MaxValidator, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.0\", type: MaxValidator, selector: \"input[type=number][max][formControlName],input[type=number][max][formControl],input[type=number][max][ngModel]\", inputs: { max: \"max\" }, host: { properties: { \"attr.max\": \"_enabled ? max : null\" } }, providers: [MAX_VALIDATOR], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: MaxValidator, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[type=number][max][formControlName],input[type=number][max][formControl],input[type=number][max][ngModel]',\n                    providers: [MAX_VALIDATOR],\n                    host: { '[attr.max]': '_enabled ? max : null' }\n                }]\n        }], propDecorators: { max: [{\n                type: Input\n            }] } });\n/**\n * @description\n * Provider which adds `MinValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst MIN_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MinValidator),\n    multi: true\n};\n/**\n * A directive which installs the {@link MinValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `min` attribute.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a min validator\n *\n * The following example shows how to add a min validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input type=\"number\" ngModel min=\"4\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass MinValidator extends AbstractValidatorDirective {\n    constructor() {\n        super(...arguments);\n        /** @internal */\n        this.inputName = 'min';\n        /** @internal */\n        this.normalizeInput = (input) => toFloat(input);\n        /** @internal */\n        this.createValidator = (min) => minValidator(min);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: MinValidator, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.0\", type: MinValidator, selector: \"input[type=number][min][formControlName],input[type=number][min][formControl],input[type=number][min][ngModel]\", inputs: { min: \"min\" }, host: { properties: { \"attr.min\": \"_enabled ? min : null\" } }, providers: [MIN_VALIDATOR], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: MinValidator, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[type=number][min][formControlName],input[type=number][min][formControl],input[type=number][min][ngModel]',\n                    providers: [MIN_VALIDATOR],\n                    host: { '[attr.min]': '_enabled ? min : null' }\n                }]\n        }], propDecorators: { min: [{\n                type: Input\n            }] } });\n/**\n * @description\n * Provider which adds `RequiredValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => RequiredValidator),\n    multi: true\n};\n/**\n * @description\n * Provider which adds `CheckboxRequiredValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst CHECKBOX_REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => CheckboxRequiredValidator),\n    multi: true\n};\n/**\n * @description\n * A directive that adds the `required` validator to any controls marked with the\n * `required` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a required validator using template-driven forms\n *\n * ```\n * <input name=\"fullName\" ngModel required>\n * ```\n *\n * @ngModule FormsModule\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nclass RequiredValidator extends AbstractValidatorDirective {\n    constructor() {\n        super(...arguments);\n        /** @internal */\n        this.inputName = 'required';\n        /** @internal */\n        this.normalizeInput = booleanAttribute;\n        /** @internal */\n        this.createValidator = (input) => requiredValidator;\n    }\n    /** @nodoc */\n    enabled(input) {\n        return input;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: RequiredValidator, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.0\", type: RequiredValidator, selector: \":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]\", inputs: { required: \"required\" }, host: { properties: { \"attr.required\": \"_enabled ? \\\"\\\" : null\" } }, providers: [REQUIRED_VALIDATOR], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: RequiredValidator, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: ':not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]',\n                    providers: [REQUIRED_VALIDATOR],\n                    host: { '[attr.required]': '_enabled ? \"\" : null' }\n                }]\n        }], propDecorators: { required: [{\n                type: Input\n            }] } });\n/**\n * A Directive that adds the `required` validator to checkbox controls marked with the\n * `required` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a required checkbox validator using template-driven forms\n *\n * The following example shows how to add a checkbox required validator to an input attached to an\n * ngModel binding.\n *\n * ```\n * <input type=\"checkbox\" name=\"active\" ngModel required>\n * ```\n *\n * @publicApi\n * @ngModule FormsModule\n * @ngModule ReactiveFormsModule\n */\nclass CheckboxRequiredValidator extends RequiredValidator {\n    constructor() {\n        super(...arguments);\n        /** @internal */\n        this.createValidator = (input) => requiredTrueValidator;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: CheckboxRequiredValidator, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.0\", type: CheckboxRequiredValidator, selector: \"input[type=checkbox][required][formControlName],input[type=checkbox][required][formControl],input[type=checkbox][required][ngModel]\", host: { properties: { \"attr.required\": \"_enabled ? \\\"\\\" : null\" } }, providers: [CHECKBOX_REQUIRED_VALIDATOR], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: CheckboxRequiredValidator, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[type=checkbox][required][formControlName],input[type=checkbox][required][formControl],input[type=checkbox][required][ngModel]',\n                    providers: [CHECKBOX_REQUIRED_VALIDATOR],\n                    host: { '[attr.required]': '_enabled ? \"\" : null' }\n                }]\n        }] });\n/**\n * @description\n * Provider which adds `EmailValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst EMAIL_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => EmailValidator),\n    multi: true\n};\n/**\n * A directive that adds the `email` validator to controls marked with the\n * `email` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * The email validation is based on the WHATWG HTML specification with some enhancements to\n * incorporate more RFC rules. More information can be found on the [Validators.email\n * page](api/forms/Validators#email).\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding an email validator\n *\n * The following example shows how to add an email validator to an input attached to an ngModel\n * binding.\n *\n * ```\n * <input type=\"email\" name=\"email\" ngModel email>\n * <input type=\"email\" name=\"email\" ngModel email=\"true\">\n * <input type=\"email\" name=\"email\" ngModel [email]=\"true\">\n * ```\n *\n * @publicApi\n * @ngModule FormsModule\n * @ngModule ReactiveFormsModule\n */\nclass EmailValidator extends AbstractValidatorDirective {\n    constructor() {\n        super(...arguments);\n        /** @internal */\n        this.inputName = 'email';\n        /** @internal */\n        this.normalizeInput = booleanAttribute;\n        /** @internal */\n        this.createValidator = (input) => emailValidator;\n    }\n    /** @nodoc */\n    enabled(input) {\n        return input;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: EmailValidator, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.0\", type: EmailValidator, selector: \"[email][formControlName],[email][formControl],[email][ngModel]\", inputs: { email: \"email\" }, providers: [EMAIL_VALIDATOR], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: EmailValidator, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[email][formControlName],[email][formControl],[email][ngModel]',\n                    providers: [EMAIL_VALIDATOR]\n                }]\n        }], propDecorators: { email: [{\n                type: Input\n            }] } });\n/**\n * @description\n * Provider which adds `MinLengthValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst MIN_LENGTH_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MinLengthValidator),\n    multi: true\n};\n/**\n * A directive that adds minimum length validation to controls marked with the\n * `minlength` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a minimum length validator\n *\n * The following example shows how to add a minimum length validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input name=\"firstName\" ngModel minlength=\"4\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass MinLengthValidator extends AbstractValidatorDirective {\n    constructor() {\n        super(...arguments);\n        /** @internal */\n        this.inputName = 'minlength';\n        /** @internal */\n        this.normalizeInput = (input) => toInteger(input);\n        /** @internal */\n        this.createValidator = (minlength) => minLengthValidator(minlength);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: MinLengthValidator, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.0\", type: MinLengthValidator, selector: \"[minlength][formControlName],[minlength][formControl],[minlength][ngModel]\", inputs: { minlength: \"minlength\" }, host: { properties: { \"attr.minlength\": \"_enabled ? minlength : null\" } }, providers: [MIN_LENGTH_VALIDATOR], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: MinLengthValidator, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[minlength][formControlName],[minlength][formControl],[minlength][ngModel]',\n                    providers: [MIN_LENGTH_VALIDATOR],\n                    host: { '[attr.minlength]': '_enabled ? minlength : null' }\n                }]\n        }], propDecorators: { minlength: [{\n                type: Input\n            }] } });\n/**\n * @description\n * Provider which adds `MaxLengthValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst MAX_LENGTH_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MaxLengthValidator),\n    multi: true\n};\n/**\n * A directive that adds max length validation to controls marked with the\n * `maxlength` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a maximum length validator\n *\n * The following example shows how to add a maximum length validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input name=\"firstName\" ngModel maxlength=\"25\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass MaxLengthValidator extends AbstractValidatorDirective {\n    constructor() {\n        super(...arguments);\n        /** @internal */\n        this.inputName = 'maxlength';\n        /** @internal */\n        this.normalizeInput = (input) => toInteger(input);\n        /** @internal */\n        this.createValidator = (maxlength) => maxLengthValidator(maxlength);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: MaxLengthValidator, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.0\", type: MaxLengthValidator, selector: \"[maxlength][formControlName],[maxlength][formControl],[maxlength][ngModel]\", inputs: { maxlength: \"maxlength\" }, host: { properties: { \"attr.maxlength\": \"_enabled ? maxlength : null\" } }, providers: [MAX_LENGTH_VALIDATOR], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: MaxLengthValidator, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[maxlength][formControlName],[maxlength][formControl],[maxlength][ngModel]',\n                    providers: [MAX_LENGTH_VALIDATOR],\n                    host: { '[attr.maxlength]': '_enabled ? maxlength : null' }\n                }]\n        }], propDecorators: { maxlength: [{\n                type: Input\n            }] } });\n/**\n * @description\n * Provider which adds `PatternValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst PATTERN_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => PatternValidator),\n    multi: true\n};\n/**\n * @description\n * A directive that adds regex pattern validation to controls marked with the\n * `pattern` attribute. The regex must match the entire control value.\n * The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a pattern validator\n *\n * The following example shows how to add a pattern validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input name=\"firstName\" ngModel pattern=\"[a-zA-Z ]*\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass PatternValidator extends AbstractValidatorDirective {\n    constructor() {\n        super(...arguments);\n        /** @internal */\n        this.inputName = 'pattern';\n        /** @internal */\n        this.normalizeInput = (input) => input;\n        /** @internal */\n        this.createValidator = (input) => patternValidator(input);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: PatternValidator, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.0\", type: PatternValidator, selector: \"[pattern][formControlName],[pattern][formControl],[pattern][ngModel]\", inputs: { pattern: \"pattern\" }, host: { properties: { \"attr.pattern\": \"_enabled ? pattern : null\" } }, providers: [PATTERN_VALIDATOR], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: PatternValidator, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[pattern][formControlName],[pattern][formControl],[pattern][ngModel]',\n                    providers: [PATTERN_VALIDATOR],\n                    host: { '[attr.pattern]': '_enabled ? pattern : null' }\n                }]\n        }], propDecorators: { pattern: [{\n                type: Input\n            }] } });\n\nconst SHARED_FORM_DIRECTIVES = [\n    ɵNgNoValidate,\n    NgSelectOption,\n    ɵNgSelectMultipleOption,\n    DefaultValueAccessor,\n    NumberValueAccessor,\n    RangeValueAccessor,\n    CheckboxControlValueAccessor,\n    SelectControlValueAccessor,\n    SelectMultipleControlValueAccessor,\n    RadioControlValueAccessor,\n    NgControlStatus,\n    NgControlStatusGroup,\n    RequiredValidator,\n    MinLengthValidator,\n    MaxLengthValidator,\n    PatternValidator,\n    CheckboxRequiredValidator,\n    EmailValidator,\n    MinValidator,\n    MaxValidator,\n];\nconst TEMPLATE_DRIVEN_DIRECTIVES = [NgModel, NgModelGroup, NgForm];\nconst REACTIVE_DRIVEN_DIRECTIVES = [FormControlDirective, FormGroupDirective, FormControlName, FormGroupName, FormArrayName];\n/**\n * Internal module used for sharing directives between FormsModule and ReactiveFormsModule\n */\nclass ɵInternalFormsSharedModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: ɵInternalFormsSharedModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.2.0\", ngImport: i0, type: ɵInternalFormsSharedModule, declarations: [ɵNgNoValidate,\n            NgSelectOption,\n            ɵNgSelectMultipleOption,\n            DefaultValueAccessor,\n            NumberValueAccessor,\n            RangeValueAccessor,\n            CheckboxControlValueAccessor,\n            SelectControlValueAccessor,\n            SelectMultipleControlValueAccessor,\n            RadioControlValueAccessor,\n            NgControlStatus,\n            NgControlStatusGroup,\n            RequiredValidator,\n            MinLengthValidator,\n            MaxLengthValidator,\n            PatternValidator,\n            CheckboxRequiredValidator,\n            EmailValidator,\n            MinValidator,\n            MaxValidator], imports: [RadioControlRegistryModule], exports: [ɵNgNoValidate,\n            NgSelectOption,\n            ɵNgSelectMultipleOption,\n            DefaultValueAccessor,\n            NumberValueAccessor,\n            RangeValueAccessor,\n            CheckboxControlValueAccessor,\n            SelectControlValueAccessor,\n            SelectMultipleControlValueAccessor,\n            RadioControlValueAccessor,\n            NgControlStatus,\n            NgControlStatusGroup,\n            RequiredValidator,\n            MinLengthValidator,\n            MaxLengthValidator,\n            PatternValidator,\n            CheckboxRequiredValidator,\n            EmailValidator,\n            MinValidator,\n            MaxValidator] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: ɵInternalFormsSharedModule, imports: [RadioControlRegistryModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: ɵInternalFormsSharedModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: SHARED_FORM_DIRECTIVES,\n                    imports: [RadioControlRegistryModule],\n                    exports: SHARED_FORM_DIRECTIVES,\n                }]\n        }] });\n\n/**\n * Tracks the value and validity state of an array of `FormControl`,\n * `FormGroup` or `FormArray` instances.\n *\n * A `FormArray` aggregates the values of each child `FormControl` into an array.\n * It calculates its status by reducing the status values of its children. For example, if one of\n * the controls in a `FormArray` is invalid, the entire array becomes invalid.\n *\n * `FormArray` accepts one generic argument, which is the type of the controls inside.\n * If you need a heterogenous array, use {@link UntypedFormArray}.\n *\n * `FormArray` is one of the four fundamental building blocks used to define forms in Angular,\n * along with `FormControl`, `FormGroup`, and `FormRecord`.\n *\n * @usageNotes\n *\n * ### Create an array of form controls\n *\n * ```\n * const arr = new FormArray([\n *   new FormControl('Nancy', Validators.minLength(2)),\n *   new FormControl('Drew'),\n * ]);\n *\n * console.log(arr.value);   // ['Nancy', 'Drew']\n * console.log(arr.status);  // 'VALID'\n * ```\n *\n * ### Create a form array with array-level validators\n *\n * You include array-level validators and async validators. These come in handy\n * when you want to perform validation that considers the value of more than one child\n * control.\n *\n * The two types of validators are passed in separately as the second and third arg\n * respectively, or together as part of an options object.\n *\n * ```\n * const arr = new FormArray([\n *   new FormControl('Nancy'),\n *   new FormControl('Drew')\n * ], {validators: myValidator, asyncValidators: myAsyncValidator});\n * ```\n *\n * ### Set the updateOn property for all controls in a form array\n *\n * The options object is used to set a default value for each child\n * control's `updateOn` property. If you set `updateOn` to `'blur'` at the\n * array level, all child controls default to 'blur', unless the child\n * has explicitly specified a different `updateOn` value.\n *\n * ```ts\n * const arr = new FormArray([\n *    new FormControl()\n * ], {updateOn: 'blur'});\n * ```\n *\n * ### Adding or removing controls from a form array\n *\n * To change the controls in the array, use the `push`, `insert`, `removeAt` or `clear` methods\n * in `FormArray` itself. These methods ensure the controls are properly tracked in the\n * form's hierarchy. Do not modify the array of `AbstractControl`s used to instantiate\n * the `FormArray` directly, as that result in strange and unexpected behavior such\n * as broken change detection.\n *\n * @publicApi\n */\nclass FormArray extends AbstractControl {\n    /**\n     * Creates a new `FormArray` instance.\n     *\n     * @param controls An array of child controls. Each child control is given an index\n     * where it is registered.\n     *\n     * @param validatorOrOpts A synchronous validator function, or an array of\n     * such functions, or an `AbstractControlOptions` object that contains validation functions\n     * and a validation trigger.\n     *\n     * @param asyncValidator A single async validator or array of async validator functions\n     *\n     */\n    constructor(controls, validatorOrOpts, asyncValidator) {\n        super(pickValidators(validatorOrOpts), pickAsyncValidators(asyncValidator, validatorOrOpts));\n        this.controls = controls;\n        this._initObservables();\n        this._setUpdateStrategy(validatorOrOpts);\n        this._setUpControls();\n        this.updateValueAndValidity({\n            onlySelf: true,\n            // If `asyncValidator` is present, it will trigger control status change from `PENDING` to\n            // `VALID` or `INVALID`.\n            // The status should be broadcasted via the `statusChanges` observable, so we set `emitEvent`\n            // to `true` to allow that during the control creation process.\n            emitEvent: !!this.asyncValidator\n        });\n    }\n    /**\n     * Get the `AbstractControl` at the given `index` in the array.\n     *\n     * @param index Index in the array to retrieve the control. If `index` is negative, it will wrap\n     *     around from the back, and if index is greatly negative (less than `-length`), the result is\n     * undefined. This behavior is the same as `Array.at(index)`.\n     */\n    at(index) {\n        return this.controls[this._adjustIndex(index)];\n    }\n    /**\n     * Insert a new `AbstractControl` at the end of the array.\n     *\n     * @param control Form control to be inserted\n     * @param options Specifies whether this FormArray instance should emit events after a new\n     *     control is added.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges` observables emit events with the latest status and value when the control is\n     * inserted. When false, no events are emitted.\n     */\n    push(control, options = {}) {\n        this.controls.push(control);\n        this._registerControl(control);\n        this.updateValueAndValidity({ emitEvent: options.emitEvent });\n        this._onCollectionChange();\n    }\n    /**\n     * Insert a new `AbstractControl` at the given `index` in the array.\n     *\n     * @param index Index in the array to insert the control. If `index` is negative, wraps around\n     *     from the back. If `index` is greatly negative (less than `-length`), prepends to the array.\n     * This behavior is the same as `Array.splice(index, 0, control)`.\n     * @param control Form control to be inserted\n     * @param options Specifies whether this FormArray instance should emit events after a new\n     *     control is inserted.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges` observables emit events with the latest status and value when the control is\n     * inserted. When false, no events are emitted.\n     */\n    insert(index, control, options = {}) {\n        this.controls.splice(index, 0, control);\n        this._registerControl(control);\n        this.updateValueAndValidity({ emitEvent: options.emitEvent });\n    }\n    /**\n     * Remove the control at the given `index` in the array.\n     *\n     * @param index Index in the array to remove the control.  If `index` is negative, wraps around\n     *     from the back. If `index` is greatly negative (less than `-length`), removes the first\n     *     element. This behavior is the same as `Array.splice(index, 1)`.\n     * @param options Specifies whether this FormArray instance should emit events after a\n     *     control is removed.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges` observables emit events with the latest status and value when the control is\n     * removed. When false, no events are emitted.\n     */\n    removeAt(index, options = {}) {\n        // Adjust the index, then clamp it at no less than 0 to prevent undesired underflows.\n        let adjustedIndex = this._adjustIndex(index);\n        if (adjustedIndex < 0)\n            adjustedIndex = 0;\n        if (this.controls[adjustedIndex])\n            this.controls[adjustedIndex]._registerOnCollectionChange(() => { });\n        this.controls.splice(adjustedIndex, 1);\n        this.updateValueAndValidity({ emitEvent: options.emitEvent });\n    }\n    /**\n     * Replace an existing control.\n     *\n     * @param index Index in the array to replace the control. If `index` is negative, wraps around\n     *     from the back. If `index` is greatly negative (less than `-length`), replaces the first\n     *     element. This behavior is the same as `Array.splice(index, 1, control)`.\n     * @param control The `AbstractControl` control to replace the existing control\n     * @param options Specifies whether this FormArray instance should emit events after an\n     *     existing control is replaced with a new one.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges` observables emit events with the latest status and value when the control is\n     * replaced with a new one. When false, no events are emitted.\n     */\n    setControl(index, control, options = {}) {\n        // Adjust the index, then clamp it at no less than 0 to prevent undesired underflows.\n        let adjustedIndex = this._adjustIndex(index);\n        if (adjustedIndex < 0)\n            adjustedIndex = 0;\n        if (this.controls[adjustedIndex])\n            this.controls[adjustedIndex]._registerOnCollectionChange(() => { });\n        this.controls.splice(adjustedIndex, 1);\n        if (control) {\n            this.controls.splice(adjustedIndex, 0, control);\n            this._registerControl(control);\n        }\n        this.updateValueAndValidity({ emitEvent: options.emitEvent });\n        this._onCollectionChange();\n    }\n    /**\n     * Length of the control array.\n     */\n    get length() {\n        return this.controls.length;\n    }\n    /**\n     * Sets the value of the `FormArray`. It accepts an array that matches\n     * the structure of the control.\n     *\n     * This method performs strict checks, and throws an error if you try\n     * to set the value of a control that doesn't exist or if you exclude the\n     * value of a control.\n     *\n     * @usageNotes\n     * ### Set the values for the controls in the form array\n     *\n     * ```\n     * const arr = new FormArray([\n     *   new FormControl(),\n     *   new FormControl()\n     * ]);\n     * console.log(arr.value);   // [null, null]\n     *\n     * arr.setValue(['Nancy', 'Drew']);\n     * console.log(arr.value);   // ['Nancy', 'Drew']\n     * ```\n     *\n     * @param value Array of values for the controls\n     * @param options Configure options that determine how the control propagates changes and\n     * emits events after the value changes\n     *\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default\n     * is false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control value is updated.\n     * When false, no events are emitted.\n     * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     */\n    setValue(value, options = {}) {\n        assertAllValuesPresent(this, false, value);\n        value.forEach((newValue, index) => {\n            assertControlPresent(this, false, index);\n            this.at(index).setValue(newValue, { onlySelf: true, emitEvent: options.emitEvent });\n        });\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * Patches the value of the `FormArray`. It accepts an array that matches the\n     * structure of the control, and does its best to match the values to the correct\n     * controls in the group.\n     *\n     * It accepts both super-sets and sub-sets of the array without throwing an error.\n     *\n     * @usageNotes\n     * ### Patch the values for controls in a form array\n     *\n     * ```\n     * const arr = new FormArray([\n     *    new FormControl(),\n     *    new FormControl()\n     * ]);\n     * console.log(arr.value);   // [null, null]\n     *\n     * arr.patchValue(['Nancy']);\n     * console.log(arr.value);   // ['Nancy', null]\n     * ```\n     *\n     * @param value Array of latest values for the controls\n     * @param options Configure options that determine how the control propagates changes and\n     * emits events after the value changes\n     *\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default\n     * is false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges` observables emit events with the latest status and value when the control\n     * value is updated. When false, no events are emitted. The configuration options are passed to\n     * the {@link AbstractControl#updateValueAndValidity updateValueAndValidity} method.\n     */\n    patchValue(value, options = {}) {\n        // Even though the `value` argument type doesn't allow `null` and `undefined` values, the\n        // `patchValue` can be called recursively and inner data structures might have these values,\n        // so we just ignore such cases when a field containing FormArray instance receives `null` or\n        // `undefined` as a value.\n        if (value == null /* both `null` and `undefined` */)\n            return;\n        value.forEach((newValue, index) => {\n            if (this.at(index)) {\n                this.at(index).patchValue(newValue, { onlySelf: true, emitEvent: options.emitEvent });\n            }\n        });\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * Resets the `FormArray` and all descendants are marked `pristine` and `untouched`, and the\n     * value of all descendants to null or null maps.\n     *\n     * You reset to a specific form state by passing in an array of states\n     * that matches the structure of the control. The state is a standalone value\n     * or a form state object with both a value and a disabled status.\n     *\n     * @usageNotes\n     * ### Reset the values in a form array\n     *\n     * ```ts\n     * const arr = new FormArray([\n     *    new FormControl(),\n     *    new FormControl()\n     * ]);\n     * arr.reset(['name', 'last name']);\n     *\n     * console.log(arr.value);  // ['name', 'last name']\n     * ```\n     *\n     * ### Reset the values in a form array and the disabled status for the first control\n     *\n     * ```\n     * arr.reset([\n     *   {value: 'name', disabled: true},\n     *   'last'\n     * ]);\n     *\n     * console.log(arr.value);  // ['last']\n     * console.log(arr.at(0).status);  // 'DISABLED'\n     * ```\n     *\n     * @param value Array of values for the controls\n     * @param options Configure options that determine how the control propagates changes and\n     * emits events after the value changes\n     *\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default\n     * is false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control is reset.\n     * When false, no events are emitted.\n     * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     */\n    reset(value = [], options = {}) {\n        this._forEachChild((control, index) => {\n            control.reset(value[index], { onlySelf: true, emitEvent: options.emitEvent });\n        });\n        this._updatePristine(options);\n        this._updateTouched(options);\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * The aggregate value of the array, including any disabled controls.\n     *\n     * Reports all values regardless of disabled status.\n     */\n    getRawValue() {\n        return this.controls.map((control) => control.getRawValue());\n    }\n    /**\n     * Remove all controls in the `FormArray`.\n     *\n     * @param options Specifies whether this FormArray instance should emit events after all\n     *     controls are removed.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges` observables emit events with the latest status and value when all controls\n     * in this FormArray instance are removed. When false, no events are emitted.\n     *\n     * @usageNotes\n     * ### Remove all elements from a FormArray\n     *\n     * ```ts\n     * const arr = new FormArray([\n     *    new FormControl(),\n     *    new FormControl()\n     * ]);\n     * console.log(arr.length);  // 2\n     *\n     * arr.clear();\n     * console.log(arr.length);  // 0\n     * ```\n     *\n     * It's a simpler and more efficient alternative to removing all elements one by one:\n     *\n     * ```ts\n     * const arr = new FormArray([\n     *    new FormControl(),\n     *    new FormControl()\n     * ]);\n     *\n     * while (arr.length) {\n     *    arr.removeAt(0);\n     * }\n     * ```\n     */\n    clear(options = {}) {\n        if (this.controls.length < 1)\n            return;\n        this._forEachChild((control) => control._registerOnCollectionChange(() => { }));\n        this.controls.splice(0);\n        this.updateValueAndValidity({ emitEvent: options.emitEvent });\n    }\n    /**\n     * Adjusts a negative index by summing it with the length of the array. For very negative\n     * indices, the result may remain negative.\n     * @internal\n     */\n    _adjustIndex(index) {\n        return index < 0 ? index + this.length : index;\n    }\n    /** @internal */\n    _syncPendingControls() {\n        let subtreeUpdated = this.controls.reduce((updated, child) => {\n            return child._syncPendingControls() ? true : updated;\n        }, false);\n        if (subtreeUpdated)\n            this.updateValueAndValidity({ onlySelf: true });\n        return subtreeUpdated;\n    }\n    /** @internal */\n    _forEachChild(cb) {\n        this.controls.forEach((control, index) => {\n            cb(control, index);\n        });\n    }\n    /** @internal */\n    _updateValue() {\n        this.value =\n            this.controls.filter((control) => control.enabled || this.disabled)\n                .map((control) => control.value);\n    }\n    /** @internal */\n    _anyControls(condition) {\n        return this.controls.some((control) => control.enabled && condition(control));\n    }\n    /** @internal */\n    _setUpControls() {\n        this._forEachChild((control) => this._registerControl(control));\n    }\n    /** @internal */\n    _allControlsDisabled() {\n        for (const control of this.controls) {\n            if (control.enabled)\n                return false;\n        }\n        return this.controls.length > 0 || this.disabled;\n    }\n    _registerControl(control) {\n        control.setParent(this);\n        control._registerOnCollectionChange(this._onCollectionChange);\n    }\n    /** @internal */\n    _find(name) {\n        return this.at(name) ?? null;\n    }\n}\nconst UntypedFormArray = FormArray;\n/**\n * @description\n * Asserts that the given control is an instance of `FormArray`\n *\n * @publicApi\n */\nconst isFormArray = (control) => control instanceof FormArray;\n\nfunction isAbstractControlOptions(options) {\n    return !!options &&\n        (options.asyncValidators !== undefined ||\n            options.validators !== undefined ||\n            options.updateOn !== undefined);\n}\n// clang-format on\n/**\n * @description\n * Creates an `AbstractControl` from a user-specified configuration.\n *\n * The `FormBuilder` provides syntactic sugar that shortens creating instances of a\n * `FormControl`, `FormGroup`, or `FormArray`. It reduces the amount of boilerplate needed to\n * build complex forms.\n *\n * @see [Reactive Forms Guide](guide/reactive-forms)\n *\n * @publicApi\n */\nclass FormBuilder {\n    constructor() {\n        this.useNonNullable = false;\n    }\n    /**\n     * @description\n     * Returns a FormBuilder in which automatically constructed `FormControl` elements\n     * have `{nonNullable: true}` and are non-nullable.\n     *\n     * **Constructing non-nullable controls**\n     *\n     * When constructing a control, it will be non-nullable, and will reset to its initial value.\n     *\n     * ```ts\n     * let nnfb = new FormBuilder().nonNullable;\n     * let name = nnfb.control('Alex'); // FormControl<string>\n     * name.reset();\n     * console.log(name); // 'Alex'\n     * ```\n     *\n     * **Constructing non-nullable groups or arrays**\n     *\n     * When constructing a group or array, all automatically created inner controls will be\n     * non-nullable, and will reset to their initial values.\n     *\n     * ```ts\n     * let nnfb = new FormBuilder().nonNullable;\n     * let name = nnfb.group({who: 'Alex'}); // FormGroup<{who: FormControl<string>}>\n     * name.reset();\n     * console.log(name); // {who: 'Alex'}\n     * ```\n     * **Constructing *nullable* fields on groups or arrays**\n     *\n     * It is still possible to have a nullable field. In particular, any `FormControl` which is\n     * *already* constructed will not be altered. For example:\n     *\n     * ```ts\n     * let nnfb = new FormBuilder().nonNullable;\n     * // FormGroup<{who: FormControl<string|null>}>\n     * let name = nnfb.group({who: new FormControl('Alex')});\n     * name.reset(); console.log(name); // {who: null}\n     * ```\n     *\n     * Because the inner control is constructed explicitly by the caller, the builder has\n     * no control over how it is created, and cannot exclude the `null`.\n     */\n    get nonNullable() {\n        const nnfb = new FormBuilder();\n        nnfb.useNonNullable = true;\n        return nnfb;\n    }\n    group(controls, options = null) {\n        const reducedControls = this._reduceControls(controls);\n        let newOptions = {};\n        if (isAbstractControlOptions(options)) {\n            // `options` are `AbstractControlOptions`\n            newOptions = options;\n        }\n        else if (options !== null) {\n            // `options` are legacy form group options\n            newOptions.validators = options.validator;\n            newOptions.asyncValidators = options.asyncValidator;\n        }\n        return new FormGroup(reducedControls, newOptions);\n    }\n    /**\n     * @description\n     * Constructs a new `FormRecord` instance. Accepts a single generic argument, which is an object\n     * containing all the keys and corresponding inner control types.\n     *\n     * @param controls A collection of child controls. The key for each child is the name\n     * under which it is registered.\n     *\n     * @param options Configuration options object for the `FormRecord`. The object should have the\n     * `AbstractControlOptions` type and might contain the following fields:\n     * * `validators`: A synchronous validator function, or an array of validator functions.\n     * * `asyncValidators`: A single async validator or array of async validator functions.\n     * * `updateOn`: The event upon which the control should be updated (options: 'change' | 'blur'\n     * | submit').\n     */\n    record(controls, options = null) {\n        const reducedControls = this._reduceControls(controls);\n        // Cast to `any` because the inferred types are not as specific as Element.\n        return new FormRecord(reducedControls, options);\n    }\n    /**\n     * @description\n     * Constructs a new `FormControl` with the given state, validators and options. Sets\n     * `{nonNullable: true}` in the options to get a non-nullable control. Otherwise, the\n     * control will be nullable. Accepts a single generic argument, which is the type  of the\n     * control's value.\n     *\n     * @param formState Initializes the control with an initial state value, or\n     * with an object that contains both a value and a disabled status.\n     *\n     * @param validatorOrOpts A synchronous validator function, or an array of\n     * such functions, or a `FormControlOptions` object that contains\n     * validation functions and a validation trigger.\n     *\n     * @param asyncValidator A single async validator or array of async validator\n     * functions.\n     *\n     * @usageNotes\n     *\n     * ### Initialize a control as disabled\n     *\n     * The following example returns a control with an initial value in a disabled state.\n     *\n     * <code-example path=\"forms/ts/formBuilder/form_builder_example.ts\" region=\"disabled-control\">\n     * </code-example>\n     */\n    control(formState, validatorOrOpts, asyncValidator) {\n        let newOptions = {};\n        if (!this.useNonNullable) {\n            return new FormControl(formState, validatorOrOpts, asyncValidator);\n        }\n        if (isAbstractControlOptions(validatorOrOpts)) {\n            // If the second argument is options, then they are copied.\n            newOptions = validatorOrOpts;\n        }\n        else {\n            // If the other arguments are validators, they are copied into an options object.\n            newOptions.validators = validatorOrOpts;\n            newOptions.asyncValidators = asyncValidator;\n        }\n        return new FormControl(formState, { ...newOptions, nonNullable: true });\n    }\n    /**\n     * Constructs a new `FormArray` from the given array of configurations,\n     * validators and options. Accepts a single generic argument, which is the type of each control\n     * inside the array.\n     *\n     * @param controls An array of child controls or control configs. Each child control is given an\n     *     index when it is registered.\n     *\n     * @param validatorOrOpts A synchronous validator function, or an array of such functions, or an\n     *     `AbstractControlOptions` object that contains\n     * validation functions and a validation trigger.\n     *\n     * @param asyncValidator A single async validator or array of async validator functions.\n     */\n    array(controls, validatorOrOpts, asyncValidator) {\n        const createdControls = controls.map(c => this._createControl(c));\n        // Cast to `any` because the inferred types are not as specific as Element.\n        return new FormArray(createdControls, validatorOrOpts, asyncValidator);\n    }\n    /** @internal */\n    _reduceControls(controls) {\n        const createdControls = {};\n        Object.keys(controls).forEach(controlName => {\n            createdControls[controlName] = this._createControl(controls[controlName]);\n        });\n        return createdControls;\n    }\n    /** @internal */\n    _createControl(controls) {\n        if (controls instanceof FormControl) {\n            return controls;\n        }\n        else if (controls instanceof AbstractControl) { // A control; just return it\n            return controls;\n        }\n        else if (Array.isArray(controls)) { // ControlConfig Tuple\n            const value = controls[0];\n            const validator = controls.length > 1 ? controls[1] : null;\n            const asyncValidator = controls.length > 2 ? controls[2] : null;\n            return this.control(value, validator, asyncValidator);\n        }\n        else { // T or FormControlState<T>\n            return this.control(controls);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: FormBuilder, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: FormBuilder, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: FormBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n/**\n * @description\n * `NonNullableFormBuilder` is similar to {@link FormBuilder}, but automatically constructed\n * {@link FormControl} elements have `{nonNullable: true}` and are non-nullable.\n *\n * @publicApi\n */\nclass NonNullableFormBuilder {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: NonNullableFormBuilder, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: NonNullableFormBuilder, providedIn: 'root', useFactory: () => inject(FormBuilder).nonNullable }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: NonNullableFormBuilder, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                    useFactory: () => inject(FormBuilder).nonNullable,\n                }]\n        }] });\n/**\n * UntypedFormBuilder is the same as `FormBuilder`, but it provides untyped controls.\n */\nclass UntypedFormBuilder extends FormBuilder {\n    group(controlsConfig, options = null) {\n        return super.group(controlsConfig, options);\n    }\n    /**\n     * Like `FormBuilder#control`, except the resulting control is untyped.\n     */\n    control(formState, validatorOrOpts, asyncValidator) {\n        return super.control(formState, validatorOrOpts, asyncValidator);\n    }\n    /**\n     * Like `FormBuilder#array`, except the resulting array is untyped.\n     */\n    array(controlsConfig, validatorOrOpts, asyncValidator) {\n        return super.array(controlsConfig, validatorOrOpts, asyncValidator);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: UntypedFormBuilder, deps: null, target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: UntypedFormBuilder, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: UntypedFormBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the forms package.\n */\n/**\n * @publicApi\n */\nconst VERSION = new Version('16.2.0');\n\n/**\n * Exports the required providers and directives for template-driven forms,\n * making them available for import by NgModules that import this module.\n *\n * Providers associated with this module:\n * * `RadioControlRegistry`\n *\n * @see [Forms Overview](/guide/forms-overview)\n * @see [Template-driven Forms Guide](/guide/forms)\n *\n * @publicApi\n */\nclass FormsModule {\n    /**\n     * @description\n     * Provides options for configuring the forms module.\n     *\n     * @param opts An object of configuration options\n     * * `callSetDisabledState` Configures whether to `always` call `setDisabledState`, which is more\n     * correct, or to only call it `whenDisabled`, which is the legacy behavior.\n     */\n    static withConfig(opts) {\n        return {\n            ngModule: FormsModule,\n            providers: [{\n                    provide: CALL_SET_DISABLED_STATE,\n                    useValue: opts.callSetDisabledState ?? setDisabledStateDefault\n                }]\n        };\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: FormsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.2.0\", ngImport: i0, type: FormsModule, declarations: [NgModel, NgModelGroup, NgForm], exports: [ɵInternalFormsSharedModule, NgModel, NgModelGroup, NgForm] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: FormsModule, imports: [ɵInternalFormsSharedModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: FormsModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: TEMPLATE_DRIVEN_DIRECTIVES,\n                    exports: [ɵInternalFormsSharedModule, TEMPLATE_DRIVEN_DIRECTIVES]\n                }]\n        }] });\n/**\n * Exports the required infrastructure and directives for reactive forms,\n * making them available for import by NgModules that import this module.\n *\n * Providers associated with this module:\n * * `RadioControlRegistry`\n *\n * @see [Forms Overview](guide/forms-overview)\n * @see [Reactive Forms Guide](guide/reactive-forms)\n *\n * @publicApi\n */\nclass ReactiveFormsModule {\n    /**\n     * @description\n     * Provides options for configuring the reactive forms module.\n     *\n     * @param opts An object of configuration options\n     * * `warnOnNgModelWithFormControl` Configures when to emit a warning when an `ngModel`\n     * binding is used with reactive form directives.\n     * * `callSetDisabledState` Configures whether to `always` call `setDisabledState`, which is more\n     * correct, or to only call it `whenDisabled`, which is the legacy behavior.\n     */\n    static withConfig(opts) {\n        return {\n            ngModule: ReactiveFormsModule,\n            providers: [\n                {\n                    provide: NG_MODEL_WITH_FORM_CONTROL_WARNING,\n                    useValue: opts.warnOnNgModelWithFormControl ?? 'always'\n                },\n                {\n                    provide: CALL_SET_DISABLED_STATE,\n                    useValue: opts.callSetDisabledState ?? setDisabledStateDefault\n                }\n            ]\n        };\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: ReactiveFormsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.2.0\", ngImport: i0, type: ReactiveFormsModule, declarations: [FormControlDirective, FormGroupDirective, FormControlName, FormGroupName, FormArrayName], exports: [ɵInternalFormsSharedModule, FormControlDirective, FormGroupDirective, FormControlName, FormGroupName, FormArrayName] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: ReactiveFormsModule, imports: [ɵInternalFormsSharedModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.0\", ngImport: i0, type: ReactiveFormsModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [REACTIVE_DRIVEN_DIRECTIVES],\n                    exports: [ɵInternalFormsSharedModule, REACTIVE_DRIVEN_DIRECTIVES]\n                }]\n        }] });\n\n/**\n * @module\n * @description\n * This module is used for handling user input, by defining and building a `FormGroup` that\n * consists of `FormControl` objects, and mapping them onto the DOM. `FormControl`\n * objects can then be used to read information from the form DOM elements.\n *\n * Forms providers are not included in default providers; you must import these providers\n * explicitly.\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n// This file is not used to build this module. It is only used during editing\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AbstractControl, AbstractControlDirective, AbstractFormGroupDirective, COMPOSITION_BUFFER_MODE, CheckboxControlValueAccessor, CheckboxRequiredValidator, ControlContainer, DefaultValueAccessor, EmailValidator, FormArray, FormArrayName, FormBuilder, FormControl, FormControlDirective, FormControlName, FormGroup, FormGroupDirective, FormGroupName, FormRecord, FormsModule, MaxLengthValidator, MaxValidator, MinLengthValidator, MinValidator, NG_ASYNC_VALIDATORS, NG_VALIDATORS, NG_VALUE_ACCESSOR, NgControl, NgControlStatus, NgControlStatusGroup, NgForm, NgModel, NgModelGroup, NgSelectOption, NonNullableFormBuilder, NumberValueAccessor, PatternValidator, RadioControlValueAccessor, RangeValueAccessor, ReactiveFormsModule, RequiredValidator, SelectControlValueAccessor, SelectMultipleControlValueAccessor, UntypedFormArray, UntypedFormBuilder, UntypedFormControl, UntypedFormGroup, VERSION, Validators, isFormArray, isFormControl, isFormGroup, isFormRecord, ɵInternalFormsSharedModule, ɵNgNoValidate, ɵNgSelectMultipleOption };\n","import { Observable } from '../Observable';\nimport { argsArgArrayOrObject } from '../util/argsArgArrayOrObject';\nimport { innerFrom } from './innerFrom';\nimport { popResultSelector } from '../util/args';\nimport { createOperatorSubscriber } from '../operators/OperatorSubscriber';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nimport { createObject } from '../util/createObject';\nexport function forkJoin() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    var resultSelector = popResultSelector(args);\n    var _a = argsArgArrayOrObject(args), sources = _a.args, keys = _a.keys;\n    var result = new Observable(function (subscriber) {\n        var length = sources.length;\n        if (!length) {\n            subscriber.complete();\n            return;\n        }\n        var values = new Array(length);\n        var remainingCompletions = length;\n        var remainingEmissions = length;\n        var _loop_1 = function (sourceIndex) {\n            var hasValue = false;\n            innerFrom(sources[sourceIndex]).subscribe(createOperatorSubscriber(subscriber, function (value) {\n                if (!hasValue) {\n                    hasValue = true;\n                    remainingEmissions--;\n                }\n                values[sourceIndex] = value;\n            }, function () { return remainingCompletions--; }, undefined, function () {\n                if (!remainingCompletions || !hasValue) {\n                    if (!remainingEmissions) {\n                        subscriber.next(keys ? createObject(keys, values) : values);\n                    }\n                    subscriber.complete();\n                }\n            }));\n        };\n        for (var sourceIndex = 0; sourceIndex < length; sourceIndex++) {\n            _loop_1(sourceIndex);\n        }\n    });\n    return resultSelector ? result.pipe(mapOneOrManyArgs(resultSelector)) : result;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.componentWrapperDecorator = exports.applicationConfig = exports.moduleMetadata = void 0;\nconst ComputesTemplateFromComponent_1 = require(\"./angular-beta/ComputesTemplateFromComponent\");\nconst NgComponentAnalyzer_1 = require(\"./angular-beta/utils/NgComponentAnalyzer\");\n// We use `any` here as the default type rather than `Args` because we need something that is\n// castable to any component-specific args type when the user is being careful.\nconst moduleMetadata = (metadata) => (storyFn) => {\n    const story = storyFn();\n    const storyMetadata = story.moduleMetadata || {};\n    metadata = metadata || {};\n    return {\n        ...story,\n        moduleMetadata: {\n            declarations: [...(metadata.declarations || []), ...(storyMetadata.declarations || [])],\n            entryComponents: [\n                ...(metadata.entryComponents || []),\n                ...(storyMetadata.entryComponents || []),\n            ],\n            imports: [...(metadata.imports || []), ...(storyMetadata.imports || [])],\n            schemas: [...(metadata.schemas || []), ...(storyMetadata.schemas || [])],\n            providers: [...(metadata.providers || []), ...(storyMetadata.providers || [])],\n        },\n    };\n};\nexports.moduleMetadata = moduleMetadata;\n/**\n * Decorator to set the config options which are available during the application bootstrap operation\n */\nfunction applicationConfig(\n/**\n * Set of config options available during the application bootstrap operation.\n */\nconfig) {\n    return (storyFn) => {\n        const story = storyFn();\n        const storyConfig = story.applicationConfig;\n        return {\n            ...story,\n            applicationConfig: storyConfig || config\n                ? {\n                    ...config,\n                    ...storyConfig,\n                    providers: [...(config?.providers || []), ...(storyConfig?.providers || [])],\n                }\n                : undefined,\n        };\n    };\n}\nexports.applicationConfig = applicationConfig;\nconst componentWrapperDecorator = (element, props) => (storyFn, storyContext) => {\n    const story = storyFn();\n    const currentProps = typeof props === 'function' ? props(storyContext) : props;\n    const template = (0, NgComponentAnalyzer_1.isComponent)(element)\n        ? (0, ComputesTemplateFromComponent_1.computesTemplateFromComponent)(element, currentProps ?? {}, story.template)\n        : element(story.template);\n    return {\n        ...story,\n        template,\n        ...(currentProps || story.props\n            ? {\n                props: {\n                    ...currentProps,\n                    ...story.props,\n                },\n            }\n            : {}),\n    };\n};\nexports.componentWrapperDecorator = componentWrapperDecorator;\n","\"use strict\";\n/// <reference types=\"webpack-env\" />\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.applicationConfig = exports.componentWrapperDecorator = exports.moduleMetadata = void 0;\nrequire(\"./globals\");\n// eslint-disable-next-line import/export\n__exportStar(require(\"./public-api\"), exports);\n// eslint-disable-next-line import/export\n__exportStar(require(\"./public-types\"), exports);\nvar decorators_1 = require(\"./decorators\");\nObject.defineProperty(exports, \"moduleMetadata\", { enumerable: true, get: function () { return decorators_1.moduleMetadata; } });\nObject.defineProperty(exports, \"componentWrapperDecorator\", { enumerable: true, get: function () { return decorators_1.componentWrapperDecorator; } });\nObject.defineProperty(exports, \"applicationConfig\", { enumerable: true, get: function () { return decorators_1.applicationConfig; } });\n// optimization: stop HMR propagation in webpack\nif (typeof module !== 'undefined')\n    module?.hot?.decline();\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.raw = exports.forceReRender = exports.configure = exports.storiesOf = void 0;\nconst preview_api_1 = require(\"@storybook/preview-api\");\nconst render_1 = require(\"./render\");\nconst decorateStory_1 = __importDefault(require(\"./decorateStory\"));\n__exportStar(require(\"./public-types\"), exports);\nconst RENDERER = 'angular';\nconst api = (0, preview_api_1.start)(render_1.renderToCanvas, { decorateStory: decorateStory_1.default, render: render_1.render });\nconst storiesOf = (kind, m) => {\n    return api.clientApi.storiesOf(kind, m).addParameters({\n        renderer: RENDERER,\n    });\n};\nexports.storiesOf = storiesOf;\nconst configure = (...args) => api.configure(RENDERER, ...args);\nexports.configure = configure;\nexports.forceReRender = api.forceReRender;\nexports.raw = api.clientApi.raw;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","import { __extends } from \"tslib\";\nimport { Subject } from './Subject';\nimport { dateTimestampProvider } from './scheduler/dateTimestampProvider';\nvar ReplaySubject = (function (_super) {\n    __extends(ReplaySubject, _super);\n    function ReplaySubject(_bufferSize, _windowTime, _timestampProvider) {\n        if (_bufferSize === void 0) { _bufferSize = Infinity; }\n        if (_windowTime === void 0) { _windowTime = Infinity; }\n        if (_timestampProvider === void 0) { _timestampProvider = dateTimestampProvider; }\n        var _this = _super.call(this) || this;\n        _this._bufferSize = _bufferSize;\n        _this._windowTime = _windowTime;\n        _this._timestampProvider = _timestampProvider;\n        _this._buffer = [];\n        _this._infiniteTimeWindow = true;\n        _this._infiniteTimeWindow = _windowTime === Infinity;\n        _this._bufferSize = Math.max(1, _bufferSize);\n        _this._windowTime = Math.max(1, _windowTime);\n        return _this;\n    }\n    ReplaySubject.prototype.next = function (value) {\n        var _a = this, isStopped = _a.isStopped, _buffer = _a._buffer, _infiniteTimeWindow = _a._infiniteTimeWindow, _timestampProvider = _a._timestampProvider, _windowTime = _a._windowTime;\n        if (!isStopped) {\n            _buffer.push(value);\n            !_infiniteTimeWindow && _buffer.push(_timestampProvider.now() + _windowTime);\n        }\n        this._trimBuffer();\n        _super.prototype.next.call(this, value);\n    };\n    ReplaySubject.prototype._subscribe = function (subscriber) {\n        this._throwIfClosed();\n        this._trimBuffer();\n        var subscription = this._innerSubscribe(subscriber);\n        var _a = this, _infiniteTimeWindow = _a._infiniteTimeWindow, _buffer = _a._buffer;\n        var copy = _buffer.slice();\n        for (var i = 0; i < copy.length && !subscriber.closed; i += _infiniteTimeWindow ? 1 : 2) {\n            subscriber.next(copy[i]);\n        }\n        this._checkFinalizedStatuses(subscriber);\n        return subscription;\n    };\n    ReplaySubject.prototype._trimBuffer = function () {\n        var _a = this, _bufferSize = _a._bufferSize, _timestampProvider = _a._timestampProvider, _buffer = _a._buffer, _infiniteTimeWindow = _a._infiniteTimeWindow;\n        var adjustedBufferSize = (_infiniteTimeWindow ? 1 : 2) * _bufferSize;\n        _bufferSize < Infinity && adjustedBufferSize < _buffer.length && _buffer.splice(0, _buffer.length - adjustedBufferSize);\n        if (!_infiniteTimeWindow) {\n            var now = _timestampProvider.now();\n            var last = 0;\n            for (var i = 1; i < _buffer.length && _buffer[i] <= now; i += 2) {\n                last = i;\n            }\n            last && _buffer.splice(0, last + 1);\n        }\n    };\n    return ReplaySubject;\n}(Subject));\nexport { ReplaySubject };\n","import { ReplaySubject } from \"rxjs\";\nimport { takeUntil } from \"rxjs/operators\";\n/*\nfunction getInternalAngularComponent<T>(type: any): any {\n    noinspection JSNonASCIINames\n    // return type.ɵdir || type.ɵcmp;\n}\n\nexport function ObserveOnDestroy() {\n    return (target: any) => {\n        const componentDefinition = getInternalAngularComponent(target);\n        if (componentDefinition) {\n            const old = componentDefinition.onDestroy;\n            componentDefinition.onDestroy = function (this: any) {\n                const onDestroySubject = componentDestroyed(this) as Subject<void>;\n                onDestroySubject.next();\n\n                if (old !== undefined && old !== null) {\n                    old();\n                }\n            };\n        } else {\n            throw new Error(\"Ivy and AoT must be enabled for @ObserveOnDestroy().\");\n        }\n\n        function decorated(this: any) {\n            const instance = Reflect.construct(target, arguments);\n            instance[ON_DESTROY_SUBJECT_KEY] = new ReplaySubject(1);\n            return instance;\n        }\n\n        Object.setPrototypeOf(decorated, target);\n        return decorated as any;\n    };\n}\n*/\nvar ON_DESTROY_SUBJECT_KEY = Symbol(\"ON_DESTROY_SUBJECT_KEY\");\nvar OnDestroyMixin = /** @class */ (function () {\n    function OnDestroyMixin() {\n        this[ON_DESTROY_SUBJECT_KEY] = new ReplaySubject();\n    }\n    OnDestroyMixin.prototype.observeOnDestroy = function () {\n        return this[ON_DESTROY_SUBJECT_KEY];\n    };\n    OnDestroyMixin.prototype.ngOnDestroy = function () {\n        this.observeOnDestroy().next();\n    };\n    return OnDestroyMixin;\n}());\nexport { OnDestroyMixin };\nexport function componentDestroyed(target) {\n    var onDestroySubject = target[ON_DESTROY_SUBJECT_KEY];\n    if (onDestroySubject === undefined) {\n        var proto = Object.getPrototypeOf(target);\n        var compInfo = proto !== undefined && proto.constructor !== undefined !== proto.constructor.name !== undefined\n            ? \" (component: \" + proto.constructor.name + \")\"\n            : \"\";\n        throw new Error(\"You are almost there! Please extends the base class 'OnDestroyMixin'\" + compInfo + \".\");\n    }\n    return onDestroySubject;\n}\nexport function untilComponentDestroyed(component) {\n    return function (source) { return source.pipe(takeUntil(componentDestroyed(component))); };\n}\n","/**\n * @license\n * Lodash <https://lodash.com/>\n * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.17.21';\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Error message constants. */\n  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',\n      FUNC_ERROR_TEXT = 'Expected a function',\n      INVALID_TEMPL_VAR_ERROR_TEXT = 'Invalid `variable` option passed into `_.template`';\n\n  /** Used to stand-in for `undefined` hash values. */\n  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n  /** Used as the maximum memoize cache size. */\n  var MAX_MEMOIZE_SIZE = 500;\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** Used to compose bitmasks for cloning. */\n  var CLONE_DEEP_FLAG = 1,\n      CLONE_FLAT_FLAG = 2,\n      CLONE_SYMBOLS_FLAG = 4;\n\n  /** Used to compose bitmasks for value comparisons. */\n  var COMPARE_PARTIAL_FLAG = 1,\n      COMPARE_UNORDERED_FLAG = 2;\n\n  /** Used to compose bitmasks for function metadata. */\n  var WRAP_BIND_FLAG = 1,\n      WRAP_BIND_KEY_FLAG = 2,\n      WRAP_CURRY_BOUND_FLAG = 4,\n      WRAP_CURRY_FLAG = 8,\n      WRAP_CURRY_RIGHT_FLAG = 16,\n      WRAP_PARTIAL_FLAG = 32,\n      WRAP_PARTIAL_RIGHT_FLAG = 64,\n      WRAP_ARY_FLAG = 128,\n      WRAP_REARG_FLAG = 256,\n      WRAP_FLIP_FLAG = 512;\n\n  /** Used as default options for `_.truncate`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n  var HOT_COUNT = 800,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2,\n      LAZY_WHILE_FLAG = 3;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991,\n      MAX_INTEGER = 1.7976931348623157e+308,\n      NAN = 0 / 0;\n\n  /** Used as references for the maximum length and index of an array. */\n  var MAX_ARRAY_LENGTH = 4294967295,\n      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n  /** Used to associate wrap methods with their bit flags. */\n  var wrapFlags = [\n    ['ary', WRAP_ARY_FLAG],\n    ['bind', WRAP_BIND_FLAG],\n    ['bindKey', WRAP_BIND_KEY_FLAG],\n    ['curry', WRAP_CURRY_FLAG],\n    ['curryRight', WRAP_CURRY_RIGHT_FLAG],\n    ['flip', WRAP_FLIP_FLAG],\n    ['partial', WRAP_PARTIAL_FLAG],\n    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],\n    ['rearg', WRAP_REARG_FLAG]\n  ];\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      asyncTag = '[object AsyncFunction]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      domExcTag = '[object DOMException]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      nullTag = '[object Null]',\n      objectTag = '[object Object]',\n      promiseTag = '[object Promise]',\n      proxyTag = '[object Proxy]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      symbolTag = '[object Symbol]',\n      undefinedTag = '[object Undefined]',\n      weakMapTag = '[object WeakMap]',\n      weakSetTag = '[object WeakSet]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      dataViewTag = '[object DataView]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,\n      reUnescapedHtml = /[&<>\"']/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n  /**\n   * Used to match `RegExp`\n   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n   */\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n      reHasRegExpChar = RegExp(reRegExpChar.source);\n\n  /** Used to match leading whitespace. */\n  var reTrimStart = /^\\s+/;\n\n  /** Used to match a single whitespace character. */\n  var reWhitespace = /\\s/;\n\n  /** Used to match wrap detail comments. */\n  var reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,\n      reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n      reSplitDetails = /,? & /;\n\n  /** Used to match words composed of alphanumeric characters. */\n  var reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n  /**\n   * Used to validate the `validate` option in `_.template` variable.\n   *\n   * Forbids characters which could potentially change the meaning of the function argument definition:\n   * - \"(),\" (modification of function parameters)\n   * - \"=\" (default value)\n   * - \"[]{}\" (destructuring of function parameters)\n   * - \"/\" (beginning of a comment)\n   * - whitespace\n   */\n  var reForbiddenIdentifierChars = /[()=,{}\\[\\]\\/\\s]/;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /**\n   * Used to match\n   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect bad signed hexadecimal string values. */\n  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n  /** Used to detect binary string values. */\n  var reIsBinary = /^0b[01]+$/i;\n\n  /** Used to detect host constructors (Safari). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect octal string values. */\n  var reIsOctal = /^0o[0-7]+$/i;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to match Latin Unicode letters (excluding mathematical operators). */\n  var reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to compose unicode character classes. */\n  var rsAstralRange = '\\\\ud800-\\\\udfff',\n      rsComboMarksRange = '\\\\u0300-\\\\u036f',\n      reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n      rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n  /** Used to compose unicode capture groups. */\n  var rsApos = \"['\\u2019]\",\n      rsAstral = '[' + rsAstralRange + ']',\n      rsBreak = '[' + rsBreakRange + ']',\n      rsCombo = '[' + rsComboRange + ']',\n      rsDigits = '\\\\d+',\n      rsDingbat = '[' + rsDingbatRange + ']',\n      rsLower = '[' + rsLowerRange + ']',\n      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n      rsNonAstral = '[^' + rsAstralRange + ']',\n      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n      rsUpper = '[' + rsUpperRange + ']',\n      rsZWJ = '\\\\u200d';\n\n  /** Used to compose unicode regexes. */\n  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n      reOptMod = rsModifier + '?',\n      rsOptVar = '[' + rsVarRange + ']?',\n      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n      rsOrdLower = '\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])',\n      rsOrdUpper = '\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])',\n      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n  /** Used to match apostrophes. */\n  var reApos = RegExp(rsApos, 'g');\n\n  /**\n   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n   */\n  var reComboMark = RegExp(rsCombo, 'g');\n\n  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n  /** Used to match complex or compound words. */\n  var reUnicodeWord = RegExp([\n    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n    rsUpper + '+' + rsOptContrUpper,\n    rsOrdUpper,\n    rsOrdLower,\n    rsDigits,\n    rsEmoji\n  ].join('|'), 'g');\n\n  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n  /** Used to detect strings that need a more robust regexp to match words. */\n  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n  typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n  cloneableTags[boolTag] = cloneableTags[dateTag] =\n  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[setTag] =\n  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map Latin Unicode letters to basic Latin letters. */\n  var deburredLetters = {\n    // Latin-1 Supplement block.\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss',\n    // Latin Extended-A block.\n    '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n    '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n    '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n    '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n    '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n    '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n    '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n    '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n    '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n    '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n    '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n    '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n    '\\u0134': 'J',  '\\u0135': 'j',\n    '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n    '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n    '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n    '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n    '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n    '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n    '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n    '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n    '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n    '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n    '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n    '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n    '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n    '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n    '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n    '\\u0174': 'W',  '\\u0175': 'w',\n    '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n    '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n    '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n    '\\u0132': 'IJ', '\\u0133': 'ij',\n    '\\u0152': 'Oe', '\\u0153': 'oe',\n    '\\u0149': \"'n\", '\\u017f': 's'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\"\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Built-in method references without a dependency on `root`. */\n  var freeParseFloat = parseFloat,\n      freeParseInt = parseInt;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n\n  /** Detect free variable `process` from Node.js. */\n  var freeProcess = moduleExports && freeGlobal.process;\n\n  /** Used to access faster Node.js helpers. */\n  var nodeUtil = (function() {\n    try {\n      // Use `util.types` for Node.js 10+.\n      var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n      if (types) {\n        return types;\n      }\n\n      // Legacy `process.binding('util')` for Node.js < 10.\n      return freeProcess && freeProcess.binding && freeProcess.binding('util');\n    } catch (e) {}\n  }());\n\n  /* Node.js helper references. */\n  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,\n      nodeIsDate = nodeUtil && nodeUtil.isDate,\n      nodeIsMap = nodeUtil && nodeUtil.isMap,\n      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,\n      nodeIsSet = nodeUtil && nodeUtil.isSet,\n      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * A faster alternative to `Function#apply`, this function invokes `func`\n   * with the `this` binding of `thisArg` and the arguments of `args`.\n   *\n   * @private\n   * @param {Function} func The function to invoke.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} args The arguments to invoke `func` with.\n   * @returns {*} Returns the result of `func`.\n   */\n  function apply(func, thisArg, args) {\n    switch (args.length) {\n      case 0: return func.call(thisArg);\n      case 1: return func.call(thisArg, args[0]);\n      case 2: return func.call(thisArg, args[0], args[1]);\n      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n    }\n    return func.apply(thisArg, args);\n  }\n\n  /**\n   * A specialized version of `baseAggregator` for arrays.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} setter The function to set `accumulator` values.\n   * @param {Function} iteratee The iteratee to transform keys.\n   * @param {Object} accumulator The initial aggregated object.\n   * @returns {Function} Returns `accumulator`.\n   */\n  function arrayAggregator(array, setter, iteratee, accumulator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      var value = array[index];\n      setter(accumulator, value, iteratee(value), array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.forEach` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEach(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (iteratee(array[index], index, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.forEachRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEachRight(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n\n    while (length--) {\n      if (iteratee(array[length], length, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.every` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   */\n  function arrayEvery(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (!predicate(array[index], index, array)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * A specialized version of `_.filter` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function arrayFilter(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (predicate(value, index, array)) {\n        result[resIndex++] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.includes` for arrays without support for\n   * specifying an index to search from.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludes(array, value) {\n    var length = array == null ? 0 : array.length;\n    return !!length && baseIndexOf(array, value, 0) > -1;\n  }\n\n  /**\n   * This function is like `arrayIncludes` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludesWith(array, value, comparator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (comparator(value, array[index])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `_.map` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function arrayMap(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = iteratee(array[index], index, array);\n    }\n    return result;\n  }\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    var index = -1,\n        length = values.length,\n        offset = array.length;\n\n    while (++index < length) {\n      array[offset + index] = values[index];\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.reduce` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the first element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduce(array, iteratee, accumulator, initAccum) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    if (initAccum && length) {\n      accumulator = array[++index];\n    }\n    while (++index < length) {\n      accumulator = iteratee(accumulator, array[index], index, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.reduceRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the last element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n    var length = array == null ? 0 : array.length;\n    if (initAccum && length) {\n      accumulator = array[--length];\n    }\n    while (length--) {\n      accumulator = iteratee(accumulator, array[length], length, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.some` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function arraySome(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (predicate(array[index], index, array)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Gets the size of an ASCII `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  var asciiSize = baseProperty('length');\n\n  /**\n   * Converts an ASCII `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function asciiToArray(string) {\n    return string.split('');\n  }\n\n  /**\n   * Splits an ASCII `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function asciiWords(string) {\n    return string.match(reAsciiWord) || [];\n  }\n\n  /**\n   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n   * without support for iteratee shorthands, which iterates over `collection`\n   * using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the found element or its key, else `undefined`.\n   */\n  function baseFindKey(collection, predicate, eachFunc) {\n    var result;\n    eachFunc(collection, function(value, key, collection) {\n      if (predicate(value, key, collection)) {\n        result = key;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    return value === value\n      ? strictIndexOf(array, value, fromIndex)\n      : baseFindIndex(array, baseIsNaN, fromIndex);\n  }\n\n  /**\n   * This function is like `baseIndexOf` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOfWith(array, value, fromIndex, comparator) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (comparator(array[index], value)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isNaN` without support for number objects.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n   */\n  function baseIsNaN(value) {\n    return value !== value;\n  }\n\n  /**\n   * The base implementation of `_.mean` and `_.meanBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the mean.\n   */\n  function baseMean(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n    return length ? (baseSum(array, iteratee) / length) : NAN;\n  }\n\n  /**\n   * The base implementation of `_.property` without support for deep paths.\n   *\n   * @private\n   * @param {string} key The key of the property to get.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function baseProperty(key) {\n    return function(object) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.propertyOf` without support for deep paths.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function basePropertyOf(object) {\n    return function(key) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.sortBy` which uses `comparer` to define the\n   * sort order of `array` and replaces criteria objects with their corresponding\n   * values.\n   *\n   * @private\n   * @param {Array} array The array to sort.\n   * @param {Function} comparer The function to define sort order.\n   * @returns {Array} Returns `array`.\n   */\n  function baseSortBy(array, comparer) {\n    var length = array.length;\n\n    array.sort(comparer);\n    while (length--) {\n      array[length] = array[length].value;\n    }\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.sum` and `_.sumBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the sum.\n   */\n  function baseSum(array, iteratee) {\n    var result,\n        index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var current = iteratee(array[index]);\n      if (current !== undefined) {\n        result = result === undefined ? current : (result + current);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.times` without support for iteratee shorthands\n   * or max array length checks.\n   *\n   * @private\n   * @param {number} n The number of times to invoke `iteratee`.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the array of results.\n   */\n  function baseTimes(n, iteratee) {\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = iteratee(index);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n   * of key-value pairs for `object` corresponding to the property names of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the key-value pairs.\n   */\n  function baseToPairs(object, props) {\n    return arrayMap(props, function(key) {\n      return [key, object[key]];\n    });\n  }\n\n  /**\n   * The base implementation of `_.trim`.\n   *\n   * @private\n   * @param {string} string The string to trim.\n   * @returns {string} Returns the trimmed string.\n   */\n  function baseTrim(string) {\n    return string\n      ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n      : string;\n  }\n\n  /**\n   * The base implementation of `_.unary` without support for storing metadata.\n   *\n   * @private\n   * @param {Function} func The function to cap arguments for.\n   * @returns {Function} Returns the new capped function.\n   */\n  function baseUnary(func) {\n    return function(value) {\n      return func(value);\n    };\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return arrayMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Checks if a `cache` value for `key` exists.\n   *\n   * @private\n   * @param {Object} cache The cache to query.\n   * @param {string} key The key of the entry to check.\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n   */\n  function cacheHas(cache, key) {\n    return cache.has(key);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the first unmatched string symbol.\n   */\n  function charsStartIndex(strSymbols, chrSymbols) {\n    var index = -1,\n        length = strSymbols.length;\n\n    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the last unmatched string symbol.\n   */\n  function charsEndIndex(strSymbols, chrSymbols) {\n    var index = strSymbols.length;\n\n    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Gets the number of `placeholder` occurrences in `array`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} placeholder The placeholder to search for.\n   * @returns {number} Returns the placeholder count.\n   */\n  function countHolders(array, placeholder) {\n    var length = array.length,\n        result = 0;\n\n    while (length--) {\n      if (array[length] === placeholder) {\n        ++result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n   * letters to basic Latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  var deburrLetter = basePropertyOf(deburredLetters);\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the value at `key` of `object`.\n   *\n   * @private\n   * @param {Object} [object] The object to query.\n   * @param {string} key The key of the property to get.\n   * @returns {*} Returns the property value.\n   */\n  function getValue(object, key) {\n    return object == null ? undefined : object[key];\n  }\n\n  /**\n   * Checks if `string` contains Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n   */\n  function hasUnicode(string) {\n    return reHasUnicode.test(string);\n  }\n\n  /**\n   * Checks if `string` contains a word composed of Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a word is found, else `false`.\n   */\n  function hasUnicodeWord(string) {\n    return reHasUnicodeWord.test(string);\n  }\n\n  /**\n   * Converts `iterator` to an array.\n   *\n   * @private\n   * @param {Object} iterator The iterator to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function iteratorToArray(iterator) {\n    var data,\n        result = [];\n\n    while (!(data = iterator.next()).done) {\n      result.push(data.value);\n    }\n    return result;\n  }\n\n  /**\n   * Converts `map` to its key-value pairs.\n   *\n   * @private\n   * @param {Object} map The map to convert.\n   * @returns {Array} Returns the key-value pairs.\n   */\n  function mapToArray(map) {\n    var index = -1,\n        result = Array(map.size);\n\n    map.forEach(function(value, key) {\n      result[++index] = [key, value];\n    });\n    return result;\n  }\n\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function(arg) {\n      return func(transform(arg));\n    };\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value === placeholder || value === PLACEHOLDER) {\n        array[index] = PLACEHOLDER;\n        result[resIndex++] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `set` to an array of its values.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the values.\n   */\n  function setToArray(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Converts `set` to its value-value pairs.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the value-value pairs.\n   */\n  function setToPairs(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = [value, value];\n    });\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.indexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictIndexOf(array, value, fromIndex) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * A specialized version of `_.lastIndexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictLastIndexOf(array, value, fromIndex) {\n    var index = fromIndex + 1;\n    while (index--) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return index;\n  }\n\n  /**\n   * Gets the number of symbols in `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the string size.\n   */\n  function stringSize(string) {\n    return hasUnicode(string)\n      ? unicodeSize(string)\n      : asciiSize(string);\n  }\n\n  /**\n   * Converts `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function stringToArray(string) {\n    return hasUnicode(string)\n      ? unicodeToArray(string)\n      : asciiToArray(string);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n   * character of `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the index of the last non-whitespace character.\n   */\n  function trimmedEndIndex(string) {\n    var index = string.length;\n\n    while (index-- && reWhitespace.test(string.charAt(index))) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\n  /**\n   * Gets the size of a Unicode `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  function unicodeSize(string) {\n    var result = reUnicode.lastIndex = 0;\n    while (reUnicode.test(string)) {\n      ++result;\n    }\n    return result;\n  }\n\n  /**\n   * Converts a Unicode `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function unicodeToArray(string) {\n    return string.match(reUnicode) || [];\n  }\n\n  /**\n   * Splits a Unicode `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function unicodeWords(string) {\n    return string.match(reUnicodeWord) || [];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Util\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // Create a suped-up `defer` in Node.js.\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  var runInContext = (function runInContext(context) {\n    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));\n\n    /** Built-in constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for built-in method references. */\n    var arrayProto = Array.prototype,\n        funcProto = Function.prototype,\n        objectProto = Object.prototype;\n\n    /** Used to detect overreaching core-js shims. */\n    var coreJsData = context['__core-js_shared__'];\n\n    /** Used to resolve the decompiled source of functions. */\n    var funcToString = funcProto.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /** Used to detect methods masquerading as native. */\n    var maskSrcKey = (function() {\n      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n      return uid ? ('Symbol(src)_1.' + uid) : '';\n    }());\n\n    /**\n     * Used to resolve the\n     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var nativeObjectToString = objectProto.toString;\n\n    /** Used to infer the `Object` constructor. */\n    var objectCtorString = funcToString.call(Object);\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Built-in value references. */\n    var Buffer = moduleExports ? context.Buffer : undefined,\n        Symbol = context.Symbol,\n        Uint8Array = context.Uint8Array,\n        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n        getPrototype = overArg(Object.getPrototypeOf, Object),\n        objectCreate = Object.create,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        splice = arrayProto.splice,\n        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,\n        symIterator = Symbol ? Symbol.iterator : undefined,\n        symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n    var defineProperty = (function() {\n      try {\n        var func = getNative(Object, 'defineProperty');\n        func({}, '', {});\n        return func;\n      } catch (e) {}\n    }());\n\n    /** Mocked built-ins. */\n    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,\n        ctxNow = Date && Date.now !== root.Date.now && Date.now,\n        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;\n\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeFloor = Math.floor,\n        nativeGetSymbols = Object.getOwnPropertySymbols,\n        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n        nativeIsFinite = context.isFinite,\n        nativeJoin = arrayProto.join,\n        nativeKeys = overArg(Object.keys, Object),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = Date.now,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random,\n        nativeReverse = arrayProto.reverse;\n\n    /* Built-in method references that are verified to be native. */\n    var DataView = getNative(context, 'DataView'),\n        Map = getNative(context, 'Map'),\n        Promise = getNative(context, 'Promise'),\n        Set = getNative(context, 'Set'),\n        WeakMap = getNative(context, 'WeakMap'),\n        nativeCreate = getNative(Object, 'create');\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /** Used to detect maps, sets, and weakmaps. */\n    var dataViewCtorString = toSource(DataView),\n        mapCtorString = toSource(Map),\n        promiseCtorString = toSource(Promise),\n        setCtorString = toSource(Set),\n        weakMapCtorString = toSource(WeakMap);\n\n    /** Used to convert symbols to primitives and strings. */\n    var symbolProto = Symbol ? Symbol.prototype : undefined,\n        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit method\n     * chain sequences. Methods that operate on and return arrays, collections,\n     * and functions can be chained together. Methods that retrieve a single value\n     * or may return a primitive value will automatically end the chain sequence\n     * and return the unwrapped value. Otherwise, the value must be unwrapped\n     * with `_#value`.\n     *\n     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n     * enabled using `_.chain`.\n     *\n     * The execution of chained methods is lazy, that is, it's deferred until\n     * `_#value` is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion.\n     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n     * the creation of intermediate arrays and can greatly reduce the number of\n     * iteratee executions. Sections of a chain sequence qualify for shortcut\n     * fusion if the section is applied to an array and iteratees accept only\n     * one argument. The heuristic for whether a section qualifies for shortcut\n     * fusion is subject to change.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n     * `zipObject`, `zipObjectDeep`, and `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n     * `upperFirst`, `value`, and `words`\n     *\n     * @name _\n     * @constructor\n     * @category Seq\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // Returns an unwrapped value.\n     * wrapped.reduce(_.add);\n     * // => 6\n     *\n     * // Returns a wrapped value.\n     * var squares = wrapped.map(square);\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} proto The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(proto) {\n        if (!isObject(proto)) {\n          return {};\n        }\n        if (objectCreate) {\n          return objectCreate(proto);\n        }\n        object.prototype = proto;\n        var result = new object;\n        object.prototype = undefined;\n        return result;\n      };\n    }());\n\n    /**\n     * The function whose prototype chain sequence wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n     */\n    function LodashWrapper(value, chainAll) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__chain__ = !!chainAll;\n      this.__index__ = 0;\n      this.__values__ = undefined;\n    }\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB) as well as ES2015 template strings. Change the\n     * following template settings to use alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type {Object}\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type {string}\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type {Object}\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type {Function}\n         */\n        '_': lodash\n      }\n    };\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n    lodash.prototype.constructor = lodash;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @constructor\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = MAX_ARRAY_LENGTH;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = copyArray(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = copyArray(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = copyArray(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a hash object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Hash(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the hash.\n     *\n     * @private\n     * @name clear\n     * @memberOf Hash\n     */\n    function hashClear() {\n      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the hash.\n     *\n     * @private\n     * @name delete\n     * @memberOf Hash\n     * @param {Object} hash The hash to modify.\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function hashDelete(key) {\n      var result = this.has(key) && delete this.__data__[key];\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the hash value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Hash\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function hashGet(key) {\n      var data = this.__data__;\n      if (nativeCreate) {\n        var result = data[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n      }\n      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n    }\n\n    /**\n     * Checks if a hash value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Hash\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function hashHas(key) {\n      var data = this.__data__;\n      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n    }\n\n    /**\n     * Sets the hash `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Hash\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the hash instance.\n     */\n    function hashSet(key, value) {\n      var data = this.__data__;\n      this.size += this.has(key) ? 0 : 1;\n      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n      return this;\n    }\n\n    // Add methods to `Hash`.\n    Hash.prototype.clear = hashClear;\n    Hash.prototype['delete'] = hashDelete;\n    Hash.prototype.get = hashGet;\n    Hash.prototype.has = hashHas;\n    Hash.prototype.set = hashSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an list cache object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function ListCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the list cache.\n     *\n     * @private\n     * @name clear\n     * @memberOf ListCache\n     */\n    function listCacheClear() {\n      this.__data__ = [];\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the list cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf ListCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function listCacheDelete(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        return false;\n      }\n      var lastIndex = data.length - 1;\n      if (index == lastIndex) {\n        data.pop();\n      } else {\n        splice.call(data, index, 1);\n      }\n      --this.size;\n      return true;\n    }\n\n    /**\n     * Gets the list cache value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf ListCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function listCacheGet(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      return index < 0 ? undefined : data[index][1];\n    }\n\n    /**\n     * Checks if a list cache value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf ListCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function listCacheHas(key) {\n      return assocIndexOf(this.__data__, key) > -1;\n    }\n\n    /**\n     * Sets the list cache `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf ListCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the list cache instance.\n     */\n    function listCacheSet(key, value) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        ++this.size;\n        data.push([key, value]);\n      } else {\n        data[index][1] = value;\n      }\n      return this;\n    }\n\n    // Add methods to `ListCache`.\n    ListCache.prototype.clear = listCacheClear;\n    ListCache.prototype['delete'] = listCacheDelete;\n    ListCache.prototype.get = listCacheGet;\n    ListCache.prototype.has = listCacheHas;\n    ListCache.prototype.set = listCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a map cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function MapCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the map.\n     *\n     * @private\n     * @name clear\n     * @memberOf MapCache\n     */\n    function mapCacheClear() {\n      this.size = 0;\n      this.__data__ = {\n        'hash': new Hash,\n        'map': new (Map || ListCache),\n        'string': new Hash\n      };\n    }\n\n    /**\n     * Removes `key` and its value from the map.\n     *\n     * @private\n     * @name delete\n     * @memberOf MapCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function mapCacheDelete(key) {\n      var result = getMapData(this, key)['delete'](key);\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the map value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf MapCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function mapCacheGet(key) {\n      return getMapData(this, key).get(key);\n    }\n\n    /**\n     * Checks if a map value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf MapCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapCacheHas(key) {\n      return getMapData(this, key).has(key);\n    }\n\n    /**\n     * Sets the map `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf MapCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the map cache instance.\n     */\n    function mapCacheSet(key, value) {\n      var data = getMapData(this, key),\n          size = data.size;\n\n      data.set(key, value);\n      this.size += data.size == size ? 0 : 1;\n      return this;\n    }\n\n    // Add methods to `MapCache`.\n    MapCache.prototype.clear = mapCacheClear;\n    MapCache.prototype['delete'] = mapCacheDelete;\n    MapCache.prototype.get = mapCacheGet;\n    MapCache.prototype.has = mapCacheHas;\n    MapCache.prototype.set = mapCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates an array cache object to store unique values.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var index = -1,\n          length = values == null ? 0 : values.length;\n\n      this.__data__ = new MapCache;\n      while (++index < length) {\n        this.add(values[index]);\n      }\n    }\n\n    /**\n     * Adds `value` to the array cache.\n     *\n     * @private\n     * @name add\n     * @memberOf SetCache\n     * @alias push\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache instance.\n     */\n    function setCacheAdd(value) {\n      this.__data__.set(value, HASH_UNDEFINED);\n      return this;\n    }\n\n    /**\n     * Checks if `value` is in the array cache.\n     *\n     * @private\n     * @name has\n     * @memberOf SetCache\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `true` if `value` is found, else `false`.\n     */\n    function setCacheHas(value) {\n      return this.__data__.has(value);\n    }\n\n    // Add methods to `SetCache`.\n    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n    SetCache.prototype.has = setCacheHas;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a stack cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Stack(entries) {\n      var data = this.__data__ = new ListCache(entries);\n      this.size = data.size;\n    }\n\n    /**\n     * Removes all key-value entries from the stack.\n     *\n     * @private\n     * @name clear\n     * @memberOf Stack\n     */\n    function stackClear() {\n      this.__data__ = new ListCache;\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the stack.\n     *\n     * @private\n     * @name delete\n     * @memberOf Stack\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function stackDelete(key) {\n      var data = this.__data__,\n          result = data['delete'](key);\n\n      this.size = data.size;\n      return result;\n    }\n\n    /**\n     * Gets the stack value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Stack\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function stackGet(key) {\n      return this.__data__.get(key);\n    }\n\n    /**\n     * Checks if a stack value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Stack\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function stackHas(key) {\n      return this.__data__.has(key);\n    }\n\n    /**\n     * Sets the stack `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Stack\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the stack cache instance.\n     */\n    function stackSet(key, value) {\n      var data = this.__data__;\n      if (data instanceof ListCache) {\n        var pairs = data.__data__;\n        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n          pairs.push([key, value]);\n          this.size = ++data.size;\n          return this;\n        }\n        data = this.__data__ = new MapCache(pairs);\n      }\n      data.set(key, value);\n      this.size = data.size;\n      return this;\n    }\n\n    // Add methods to `Stack`.\n    Stack.prototype.clear = stackClear;\n    Stack.prototype['delete'] = stackDelete;\n    Stack.prototype.get = stackGet;\n    Stack.prototype.has = stackHas;\n    Stack.prototype.set = stackSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of the enumerable property names of the array-like `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @param {boolean} inherited Specify returning inherited property names.\n     * @returns {Array} Returns the array of property names.\n     */\n    function arrayLikeKeys(value, inherited) {\n      var isArr = isArray(value),\n          isArg = !isArr && isArguments(value),\n          isBuff = !isArr && !isArg && isBuffer(value),\n          isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n          skipIndexes = isArr || isArg || isBuff || isType,\n          result = skipIndexes ? baseTimes(value.length, String) : [],\n          length = result.length;\n\n      for (var key in value) {\n        if ((inherited || hasOwnProperty.call(value, key)) &&\n            !(skipIndexes && (\n               // Safari 9 has enumerable `arguments.length` in strict mode.\n               key == 'length' ||\n               // Node.js 0.10 has enumerable non-index properties on buffers.\n               (isBuff && (key == 'offset' || key == 'parent')) ||\n               // PhantomJS 2 has enumerable non-index properties on typed arrays.\n               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n               // Skip index properties.\n               isIndex(key, length)\n            ))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.sample` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @returns {*} Returns the random element.\n     */\n    function arraySample(array) {\n      var length = array.length;\n      return length ? array[baseRandom(0, length - 1)] : undefined;\n    }\n\n    /**\n     * A specialized version of `_.sampleSize` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function arraySampleSize(array, n) {\n      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * A specialized version of `_.shuffle` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function arrayShuffle(array) {\n      return shuffleSelf(copyArray(array));\n    }\n\n    /**\n     * This function is like `assignValue` except that it doesn't assign\n     * `undefined` values.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignMergeValue(object, key, value) {\n      if ((value !== undefined && !eq(object[key], value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignValue(object, key, value) {\n      var objValue = object[key];\n      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Gets the index at which the `key` is found in `array` of key-value pairs.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {*} key The key to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     */\n    function assocIndexOf(array, key) {\n      var length = array.length;\n      while (length--) {\n        if (eq(array[length][0], key)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Aggregates elements of `collection` on `accumulator` with keys transformed\n     * by `iteratee` and values set by `setter`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform keys.\n     * @param {Object} accumulator The initial aggregated object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseAggregator(collection, setter, iteratee, accumulator) {\n      baseEach(collection, function(value, key, collection) {\n        setter(accumulator, value, iteratee(value), collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return object && copyObject(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.assignIn` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssignIn(object, source) {\n      return object && copyObject(source, keysIn(source), object);\n    }\n\n    /**\n     * The base implementation of `assignValue` and `assignMergeValue` without\n     * value checks.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function baseAssignValue(object, key, value) {\n      if (key == '__proto__' && defineProperty) {\n        defineProperty(object, key, {\n          'configurable': true,\n          'enumerable': true,\n          'value': value,\n          'writable': true\n        });\n      } else {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * The base implementation of `_.at` without support for individual paths.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Array} Returns the picked elements.\n     */\n    function baseAt(object, paths) {\n      var index = -1,\n          length = paths.length,\n          result = Array(length),\n          skip = object == null;\n\n      while (++index < length) {\n        result[index] = skip ? undefined : get(object, paths[index]);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.clamp` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     */\n    function baseClamp(number, lower, upper) {\n      if (number === number) {\n        if (upper !== undefined) {\n          number = number <= upper ? number : upper;\n        }\n        if (lower !== undefined) {\n          number = number >= lower ? number : lower;\n        }\n      }\n      return number;\n    }\n\n    /**\n     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n     * traversed objects.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Deep clone\n     *  2 - Flatten inherited properties\n     *  4 - Clone symbols\n     * @param {Function} [customizer] The function to customize cloning.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The parent object of `value`.\n     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, bitmask, customizer, key, object, stack) {\n      var result,\n          isDeep = bitmask & CLONE_DEEP_FLAG,\n          isFlat = bitmask & CLONE_FLAT_FLAG,\n          isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n      if (customizer) {\n        result = object ? customizer(value, key, object, stack) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return copyArray(value, result);\n        }\n      } else {\n        var tag = getTag(value),\n            isFunc = tag == funcTag || tag == genTag;\n\n        if (isBuffer(value)) {\n          return cloneBuffer(value, isDeep);\n        }\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = (isFlat || isFunc) ? {} : initCloneObject(value);\n          if (!isDeep) {\n            return isFlat\n              ? copySymbolsIn(value, baseAssignIn(result, value))\n              : copySymbols(value, baseAssign(result, value));\n          }\n        } else {\n          if (!cloneableTags[tag]) {\n            return object ? value : {};\n          }\n          result = initCloneByTag(value, tag, isDeep);\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stack || (stack = new Stack);\n      var stacked = stack.get(value);\n      if (stacked) {\n        return stacked;\n      }\n      stack.set(value, result);\n\n      if (isSet(value)) {\n        value.forEach(function(subValue) {\n          result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n        });\n      } else if (isMap(value)) {\n        value.forEach(function(subValue, key) {\n          result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n        });\n      }\n\n      var keysFunc = isFull\n        ? (isFlat ? getAllKeysIn : getAllKeys)\n        : (isFlat ? keysIn : keys);\n\n      var props = isArr ? undefined : keysFunc(value);\n      arrayEach(props || value, function(subValue, key) {\n        if (props) {\n          key = subValue;\n          subValue = value[key];\n        }\n        // Recursively populate clone (susceptible to call stack limits).\n        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.conforms` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseConforms(source) {\n      var props = keys(source);\n      return function(object) {\n        return baseConformsTo(object, source, props);\n      };\n    }\n\n    /**\n     * The base implementation of `_.conformsTo` which accepts `props` to check.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     */\n    function baseConformsTo(object, source, props) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (length--) {\n        var key = props[length],\n            predicate = source[key],\n            value = object[key];\n\n        if ((value === undefined && !(key in object)) || !predicate(value)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts `args`\n     * to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Array} args The arguments to provide to `func`.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of methods like `_.difference` without support\n     * for excluding multiple arrays or iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          isCommon = true,\n          length = array.length,\n          result = [],\n          valuesLength = values.length;\n\n      if (!length) {\n        return result;\n      }\n      if (iteratee) {\n        values = arrayMap(values, baseUnary(iteratee));\n      }\n      if (comparator) {\n        includes = arrayIncludesWith;\n        isCommon = false;\n      }\n      else if (values.length >= LARGE_ARRAY_SIZE) {\n        includes = cacheHas;\n        isCommon = false;\n        values = new SetCache(values);\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee == null ? value : iteratee(value);\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === computed) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (!includes(values, computed, comparator)) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of methods like `_.max` and `_.min` which accepts a\n     * `comparator` to determine the extremum value.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The iteratee invoked per iteration.\n     * @param {Function} comparator The comparator used to compare values.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(array, iteratee, comparator) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index],\n            current = iteratee(value);\n\n        if (current != null && (computed === undefined\n              ? (current === current && !isSymbol(current))\n              : comparator(current, computed)\n            )) {\n          var computed = current,\n              result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = toInteger(start);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : toInteger(end);\n      if (end < 0) {\n        end += length;\n      }\n      end = start > end ? 0 : toLength(end);\n      while (start < end) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with support for restricting flattening.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {number} depth The maximum recursion depth.\n     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, depth, predicate, isStrict, result) {\n      var index = -1,\n          length = array.length;\n\n      predicate || (predicate = isFlattenable);\n      result || (result = []);\n\n      while (++index < length) {\n        var value = array[index];\n        if (depth > 0 && predicate(value)) {\n          if (depth > 1) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, depth - 1, predicate, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForOwn` which iterates over `object`\n     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return object && baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return object && baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from `props`.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the function names.\n     */\n    function baseFunctions(object, props) {\n      return arrayFilter(props, function(key) {\n        return isFunction(object[key]);\n      });\n    }\n\n    /**\n     * The base implementation of `_.get` without support for default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path) {\n      path = castPath(path, object);\n\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[toKey(path[index++])];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n      var result = keysFunc(object);\n      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n    }\n\n    /**\n     * The base implementation of `getTag` without fallbacks for buggy environments.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    function baseGetTag(value) {\n      if (value == null) {\n        return value === undefined ? undefinedTag : nullTag;\n      }\n      return (symToStringTag && symToStringTag in Object(value))\n        ? getRawTag(value)\n        : objectToString(value);\n    }\n\n    /**\n     * The base implementation of `_.gt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     */\n    function baseGt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * The base implementation of `_.has` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHas(object, key) {\n      return object != null && hasOwnProperty.call(object, key);\n    }\n\n    /**\n     * The base implementation of `_.hasIn` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHasIn(object, key) {\n      return object != null && key in Object(object);\n    }\n\n    /**\n     * The base implementation of `_.inRange` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to check.\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     */\n    function baseInRange(number, start, end) {\n      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n    }\n\n    /**\n     * The base implementation of methods like `_.intersection`, without support\n     * for iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of shared values.\n     */\n    function baseIntersection(arrays, iteratee, comparator) {\n      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n          length = arrays[0].length,\n          othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(othLength),\n          maxLength = Infinity,\n          result = [];\n\n      while (othIndex--) {\n        var array = arrays[othIndex];\n        if (othIndex && iteratee) {\n          array = arrayMap(array, baseUnary(iteratee));\n        }\n        maxLength = nativeMin(array.length, maxLength);\n        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n          ? new SetCache(othIndex && array)\n          : undefined;\n      }\n      array = arrays[0];\n\n      var index = -1,\n          seen = caches[0];\n\n      outer:\n      while (++index < length && result.length < maxLength) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (!(seen\n              ? cacheHas(seen, computed)\n              : includes(result, computed, comparator)\n            )) {\n          othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if (!(cache\n                  ? cacheHas(cache, computed)\n                  : includes(arrays[othIndex], computed, comparator))\n                ) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.invert` and `_.invertBy` which inverts\n     * `object` with values transformed by `iteratee` and set by `setter`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform values.\n     * @param {Object} accumulator The initial inverted object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseInverter(object, setter, iteratee, accumulator) {\n      baseForOwn(object, function(value, key, object) {\n        setter(accumulator, iteratee(value), key, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.invoke` without support for individual\n     * method arguments.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function baseInvoke(object, path, args) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      var func = object == null ? object : object[toKey(last(path))];\n      return func == null ? undefined : apply(func, object, args);\n    }\n\n    /**\n     * The base implementation of `_.isArguments`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     */\n    function baseIsArguments(value) {\n      return isObjectLike(value) && baseGetTag(value) == argsTag;\n    }\n\n    /**\n     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     */\n    function baseIsArrayBuffer(value) {\n      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;\n    }\n\n    /**\n     * The base implementation of `_.isDate` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     */\n    function baseIsDate(value) {\n      return isObjectLike(value) && baseGetTag(value) == dateTag;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` which supports partial comparisons\n     * and tracks traversed objects.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Unordered comparison\n     *  2 - Partial comparison\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, bitmask, customizer, stack) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = objIsArr ? arrayTag : getTag(object),\n          othTag = othIsArr ? arrayTag : getTag(other);\n\n      objTag = objTag == argsTag ? objectTag : objTag;\n      othTag = othTag == argsTag ? objectTag : othTag;\n\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && isBuffer(object)) {\n        if (!isBuffer(other)) {\n          return false;\n        }\n        objIsArr = true;\n        objIsObj = false;\n      }\n      if (isSameTag && !objIsObj) {\n        stack || (stack = new Stack);\n        return (objIsArr || isTypedArray(object))\n          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n      }\n      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          var objUnwrapped = objIsWrapped ? object.value() : object,\n              othUnwrapped = othIsWrapped ? other.value() : other;\n\n          stack || (stack = new Stack);\n          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      stack || (stack = new Stack);\n      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n    }\n\n    /**\n     * The base implementation of `_.isMap` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     */\n    function baseIsMap(value) {\n      return isObjectLike(value) && getTag(value) == mapTag;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Array} matchData The property names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, source, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var stack = new Stack;\n          if (customizer) {\n            var result = customizer(objValue, srcValue, key, object, source, stack);\n          }\n          if (!(result === undefined\n                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n                : result\n              )) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.isNative` without bad shim checks.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     */\n    function baseIsNative(value) {\n      if (!isObject(value) || isMasked(value)) {\n        return false;\n      }\n      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n      return pattern.test(toSource(value));\n    }\n\n    /**\n     * The base implementation of `_.isRegExp` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     */\n    function baseIsRegExp(value) {\n      return isObjectLike(value) && baseGetTag(value) == regexpTag;\n    }\n\n    /**\n     * The base implementation of `_.isSet` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     */\n    function baseIsSet(value) {\n      return isObjectLike(value) && getTag(value) == setTag;\n    }\n\n    /**\n     * The base implementation of `_.isTypedArray` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     */\n    function baseIsTypedArray(value) {\n      return isObjectLike(value) &&\n        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n    }\n\n    /**\n     * The base implementation of `_.iteratee`.\n     *\n     * @private\n     * @param {*} [value=_.identity] The value to convert to an iteratee.\n     * @returns {Function} Returns the iteratee.\n     */\n    function baseIteratee(value) {\n      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n      if (typeof value == 'function') {\n        return value;\n      }\n      if (value == null) {\n        return identity;\n      }\n      if (typeof value == 'object') {\n        return isArray(value)\n          ? baseMatchesProperty(value[0], value[1])\n          : baseMatches(value);\n      }\n      return property(value);\n    }\n\n    /**\n     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeys(object) {\n      if (!isPrototype(object)) {\n        return nativeKeys(object);\n      }\n      var result = [];\n      for (var key in Object(object)) {\n        if (hasOwnProperty.call(object, key) && key != 'constructor') {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeysIn(object) {\n      if (!isObject(object)) {\n        return nativeKeysIn(object);\n      }\n      var isProto = isPrototype(object),\n          result = [];\n\n      for (var key in object) {\n        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.lt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     */\n    function baseLt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n      }\n      return function(object) {\n        return object === source || baseIsMatch(object, source, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      if (isKey(path) && isStrictComparable(srcValue)) {\n        return matchesStrictComparable(toKey(path), srcValue);\n      }\n      return function(object) {\n        var objValue = get(object, path);\n        return (objValue === undefined && objValue === srcValue)\n          ? hasIn(object, path)\n          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for multiple sources.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMerge(object, source, srcIndex, customizer, stack) {\n      if (object === source) {\n        return;\n      }\n      baseFor(source, function(srcValue, key) {\n        stack || (stack = new Stack);\n        if (isObject(srcValue)) {\n          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n        }\n        else {\n          var newValue = customizer\n            ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n            : undefined;\n\n          if (newValue === undefined) {\n            newValue = srcValue;\n          }\n          assignMergeValue(object, key, newValue);\n        }\n      }, keysIn);\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n      var objValue = safeGet(object, key),\n          srcValue = safeGet(source, key),\n          stacked = stack.get(srcValue);\n\n      if (stacked) {\n        assignMergeValue(object, key, stacked);\n        return;\n      }\n      var newValue = customizer\n        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      var isCommon = newValue === undefined;\n\n      if (isCommon) {\n        var isArr = isArray(srcValue),\n            isBuff = !isArr && isBuffer(srcValue),\n            isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n        newValue = srcValue;\n        if (isArr || isBuff || isTyped) {\n          if (isArray(objValue)) {\n            newValue = objValue;\n          }\n          else if (isArrayLikeObject(objValue)) {\n            newValue = copyArray(objValue);\n          }\n          else if (isBuff) {\n            isCommon = false;\n            newValue = cloneBuffer(srcValue, true);\n          }\n          else if (isTyped) {\n            isCommon = false;\n            newValue = cloneTypedArray(srcValue, true);\n          }\n          else {\n            newValue = [];\n          }\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          newValue = objValue;\n          if (isArguments(objValue)) {\n            newValue = toPlainObject(objValue);\n          }\n          else if (!isObject(objValue) || isFunction(objValue)) {\n            newValue = initCloneObject(srcValue);\n          }\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, newValue);\n        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n        stack['delete'](srcValue);\n      }\n      assignMergeValue(object, key, newValue);\n    }\n\n    /**\n     * The base implementation of `_.nth` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {number} n The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     */\n    function baseNth(array, n) {\n      var length = array.length;\n      if (!length) {\n        return;\n      }\n      n += n < 0 ? length : 0;\n      return isIndex(n, length) ? array[n] : undefined;\n    }\n\n    /**\n     * The base implementation of `_.orderBy` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {string[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseOrderBy(collection, iteratees, orders) {\n      if (iteratees.length) {\n        iteratees = arrayMap(iteratees, function(iteratee) {\n          if (isArray(iteratee)) {\n            return function(value) {\n              return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);\n            }\n          }\n          return iteratee;\n        });\n      } else {\n        iteratees = [identity];\n      }\n\n      var index = -1;\n      iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n\n      var result = baseMap(collection, function(value, key, collection) {\n        var criteria = arrayMap(iteratees, function(iteratee) {\n          return iteratee(value);\n        });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.pick` without support for individual\n     * property identifiers.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function basePick(object, paths) {\n      return basePickBy(object, paths, function(value, path) {\n        return hasIn(object, path);\n      });\n    }\n\n    /**\n     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @param {Function} predicate The function invoked per property.\n     * @returns {Object} Returns the new object.\n     */\n    function basePickBy(object, paths, predicate) {\n      var index = -1,\n          length = paths.length,\n          result = {};\n\n      while (++index < length) {\n        var path = paths[index],\n            value = baseGet(object, path);\n\n        if (predicate(value, path)) {\n          baseSet(result, castPath(path, object), value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     */\n    function basePropertyDeep(path) {\n      return function(object) {\n        return baseGet(object, path);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAllBy` without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAll(array, values, iteratee, comparator) {\n      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n          index = -1,\n          length = values.length,\n          seen = array;\n\n      if (array === values) {\n        values = copyArray(values);\n      }\n      if (iteratee) {\n        seen = arrayMap(array, baseUnary(iteratee));\n      }\n      while (++index < length) {\n        var fromIndex = 0,\n            value = values[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n          if (seen !== array) {\n            splice.call(seen, fromIndex, 1);\n          }\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * indexes or capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0,\n          lastIndex = length - 1;\n\n      while (length--) {\n        var index = indexes[length];\n        if (length == lastIndex || index !== previous) {\n          var previous = index;\n          if (isIndex(index)) {\n            splice.call(array, index, 1);\n          } else {\n            baseUnset(array, index);\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for returning\n     * floating-point numbers.\n     *\n     * @private\n     * @param {number} lower The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(lower, upper) {\n      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n    }\n\n    /**\n     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n     * coerce arguments.\n     *\n     * @private\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} step The value to increment or decrement by.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the range of numbers.\n     */\n    function baseRange(start, end, step, fromRight) {\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (length--) {\n        result[fromRight ? length : ++index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.repeat` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {string} string The string to repeat.\n     * @param {number} n The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     */\n    function baseRepeat(string, n) {\n      var result = '';\n      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        if (n) {\n          string += string;\n        }\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     */\n    function baseRest(func, start) {\n      return setToString(overRest(func, start, identity), func + '');\n    }\n\n    /**\n     * The base implementation of `_.sample`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     */\n    function baseSample(collection) {\n      return arraySample(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.sampleSize` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function baseSampleSize(collection, n) {\n      var array = values(collection);\n      return shuffleSelf(array, baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * The base implementation of `_.set`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseSet(object, path, value, customizer) {\n      if (!isObject(object)) {\n        return object;\n      }\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = toKey(path[index]),\n            newValue = value;\n\n        if (key === '__proto__' || key === 'constructor' || key === 'prototype') {\n          return object;\n        }\n\n        if (index != lastIndex) {\n          var objValue = nested[key];\n          newValue = customizer ? customizer(objValue, key, nested) : undefined;\n          if (newValue === undefined) {\n            newValue = isObject(objValue)\n              ? objValue\n              : (isIndex(path[index + 1]) ? [] : {});\n          }\n        }\n        assignValue(nested, key, newValue);\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `setToString` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetToString = !defineProperty ? identity : function(func, string) {\n      return defineProperty(func, 'toString', {\n        'configurable': true,\n        'enumerable': false,\n        'value': constant(string),\n        'writable': true\n      });\n    };\n\n    /**\n     * The base implementation of `_.shuffle`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function baseShuffle(collection) {\n      return shuffleSelf(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = end > length ? length : end;\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n     * performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndex(array, value, retHighest) {\n      var low = 0,\n          high = array == null ? low : array.length;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if (computed !== null && !isSymbol(computed) &&\n              (retHighest ? (computed <= value) : (computed < value))) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return baseSortedIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n     * which invokes `iteratee` for `value` and each element of `array` to compute\n     * their sort ranking. The iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The iteratee invoked per element.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n      var low = 0,\n          high = array == null ? 0 : array.length;\n      if (high === 0) {\n        return 0;\n      }\n\n      value = iteratee(value);\n      var valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsSymbol = isSymbol(value),\n          valIsUndefined = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            othIsDefined = computed !== undefined,\n            othIsNull = computed === null,\n            othIsReflexive = computed === computed,\n            othIsSymbol = isSymbol(computed);\n\n        if (valIsNaN) {\n          var setLow = retHighest || othIsReflexive;\n        } else if (valIsUndefined) {\n          setLow = othIsReflexive && (retHighest || othIsDefined);\n        } else if (valIsNull) {\n          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n        } else if (valIsSymbol) {\n          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n        } else if (othIsNull || othIsSymbol) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n     * support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseSortedUniq(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (!index || !eq(computed, seen)) {\n          var seen = computed;\n          result[resIndex++] = value === 0 ? 0 : value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.toNumber` which doesn't ensure correct\n     * conversions of binary, hexadecimal, or octal string values.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     */\n    function baseToNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      return +value;\n    }\n\n    /**\n     * The base implementation of `_.toString` which doesn't convert nullish\n     * values to empty strings.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     */\n    function baseToString(value) {\n      // Exit early for strings to avoid a performance hit in some environments.\n      if (typeof value == 'string') {\n        return value;\n      }\n      if (isArray(value)) {\n        // Recursively convert values (susceptible to call stack limits).\n        return arrayMap(value, baseToString) + '';\n      }\n      if (isSymbol(value)) {\n        return symbolToString ? symbolToString.call(value) : '';\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseUniq(array, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          length = array.length,\n          isCommon = true,\n          result = [],\n          seen = result;\n\n      if (comparator) {\n        isCommon = false;\n        includes = arrayIncludesWith;\n      }\n      else if (length >= LARGE_ARRAY_SIZE) {\n        var set = iteratee ? null : createSet(array);\n        if (set) {\n          return setToArray(set);\n        }\n        isCommon = false;\n        includes = cacheHas;\n        seen = new SetCache;\n      }\n      else {\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (!includes(seen, computed, comparator)) {\n          if (seen !== result) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.unset`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The property path to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     */\n    function baseUnset(object, path) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      return object == null || delete object[toKey(last(path))];\n    }\n\n    /**\n     * The base implementation of `_.update`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to update.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseUpdate(object, path, updater, customizer) {\n      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n    }\n\n    /**\n     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n     * without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) &&\n        predicate(array[index], index, array)) {}\n\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      return arrayReduce(actions, function(result, action) {\n        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }, result);\n    }\n\n    /**\n     * The base implementation of methods like `_.xor`, without support for\n     * iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of values.\n     */\n    function baseXor(arrays, iteratee, comparator) {\n      var length = arrays.length;\n      if (length < 2) {\n        return length ? baseUniq(arrays[0]) : [];\n      }\n      var index = -1,\n          result = Array(length);\n\n      while (++index < length) {\n        var array = arrays[index],\n            othIndex = -1;\n\n        while (++othIndex < length) {\n          if (othIndex != index) {\n            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);\n          }\n        }\n      }\n      return baseUniq(baseFlatten(result, 1), iteratee, comparator);\n    }\n\n    /**\n     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n     *\n     * @private\n     * @param {Array} props The property identifiers.\n     * @param {Array} values The property values.\n     * @param {Function} assignFunc The function to assign values.\n     * @returns {Object} Returns the new object.\n     */\n    function baseZipObject(props, values, assignFunc) {\n      var index = -1,\n          length = props.length,\n          valsLength = values.length,\n          result = {};\n\n      while (++index < length) {\n        var value = index < valsLength ? values[index] : undefined;\n        assignFunc(result, props[index], value);\n      }\n      return result;\n    }\n\n    /**\n     * Casts `value` to an empty array if it's not an array like object.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array|Object} Returns the cast array-like object.\n     */\n    function castArrayLikeObject(value) {\n      return isArrayLikeObject(value) ? value : [];\n    }\n\n    /**\n     * Casts `value` to `identity` if it's not a function.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Function} Returns cast function.\n     */\n    function castFunction(value) {\n      return typeof value == 'function' ? value : identity;\n    }\n\n    /**\n     * Casts `value` to a path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {Array} Returns the cast property path array.\n     */\n    function castPath(value, object) {\n      if (isArray(value)) {\n        return value;\n      }\n      return isKey(value, object) ? [value] : stringToPath(toString(value));\n    }\n\n    /**\n     * A `baseRest` alias which can be replaced with `identity` by module\n     * replacement plugins.\n     *\n     * @private\n     * @type {Function}\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    var castRest = baseRest;\n\n    /**\n     * Casts `array` to a slice if it's needed.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {number} start The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the cast slice.\n     */\n    function castSlice(array, start, end) {\n      var length = array.length;\n      end = end === undefined ? length : end;\n      return (!start && end >= length) ? array : baseSlice(array, start, end);\n    }\n\n    /**\n     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).\n     *\n     * @private\n     * @param {number|Object} id The timer id or timeout object of the timer to clear.\n     */\n    var clearTimeout = ctxClearTimeout || function(id) {\n      return root.clearTimeout(id);\n    };\n\n    /**\n     * Creates a clone of  `buffer`.\n     *\n     * @private\n     * @param {Buffer} buffer The buffer to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Buffer} Returns the cloned buffer.\n     */\n    function cloneBuffer(buffer, isDeep) {\n      if (isDeep) {\n        return buffer.slice();\n      }\n      var length = buffer.length,\n          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n      buffer.copy(result);\n      return result;\n    }\n\n    /**\n     * Creates a clone of `arrayBuffer`.\n     *\n     * @private\n     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function cloneArrayBuffer(arrayBuffer) {\n      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n      return result;\n    }\n\n    /**\n     * Creates a clone of `dataView`.\n     *\n     * @private\n     * @param {Object} dataView The data view to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned data view.\n     */\n    function cloneDataView(dataView, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n    }\n\n    /**\n     * Creates a clone of `regexp`.\n     *\n     * @private\n     * @param {Object} regexp The regexp to clone.\n     * @returns {Object} Returns the cloned regexp.\n     */\n    function cloneRegExp(regexp) {\n      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n      result.lastIndex = regexp.lastIndex;\n      return result;\n    }\n\n    /**\n     * Creates a clone of the `symbol` object.\n     *\n     * @private\n     * @param {Object} symbol The symbol object to clone.\n     * @returns {Object} Returns the cloned symbol object.\n     */\n    function cloneSymbol(symbol) {\n      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n    }\n\n    /**\n     * Creates a clone of `typedArray`.\n     *\n     * @private\n     * @param {Object} typedArray The typed array to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned typed array.\n     */\n    function cloneTypedArray(typedArray, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n    }\n\n    /**\n     * Compares values to sort them in ascending order.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {number} Returns the sort order indicator for `value`.\n     */\n    function compareAscending(value, other) {\n      if (value !== other) {\n        var valIsDefined = value !== undefined,\n            valIsNull = value === null,\n            valIsReflexive = value === value,\n            valIsSymbol = isSymbol(value);\n\n        var othIsDefined = other !== undefined,\n            othIsNull = other === null,\n            othIsReflexive = other === other,\n            othIsSymbol = isSymbol(other);\n\n        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n            (valIsNull && othIsDefined && othIsReflexive) ||\n            (!valIsDefined && othIsReflexive) ||\n            !valIsReflexive) {\n          return 1;\n        }\n        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n            (othIsNull && valIsDefined && valIsReflexive) ||\n            (!othIsDefined && valIsReflexive) ||\n            !othIsReflexive) {\n          return -1;\n        }\n      }\n      return 0;\n    }\n\n    /**\n     * Used by `_.orderBy` to compare multiple properties of a value to another\n     * and stable sort them.\n     *\n     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n     * of corresponding values.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {boolean[]|string[]} orders The order to sort by for each property.\n     * @returns {number} Returns the sort order indicator for `object`.\n     */\n    function compareMultiple(object, other, orders) {\n      var index = -1,\n          objCriteria = object.criteria,\n          othCriteria = other.criteria,\n          length = objCriteria.length,\n          ordersLength = orders.length;\n\n      while (++index < length) {\n        var result = compareAscending(objCriteria[index], othCriteria[index]);\n        if (result) {\n          if (index >= ordersLength) {\n            return result;\n          }\n          var order = orders[index];\n          return result * (order == 'desc' ? -1 : 1);\n        }\n      }\n      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n      // that causes it, under certain circumstances, to provide the same value for\n      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n      // for more details.\n      //\n      // This also ensures a stable sort in V8 and other engines.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n      return object.index - other.index;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersLength = holders.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(leftLength + rangeLength),\n          isUncurried = !isCurried;\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[holders[argsIndex]] = args[argsIndex];\n        }\n      }\n      while (rangeLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersIndex = -1,\n          holdersLength = holders.length,\n          rightIndex = -1,\n          rightLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(rangeLength + rightLength),\n          isUncurried = !isCurried;\n\n      while (++argsIndex < rangeLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[offset + holders[holdersIndex]] = args[argsIndex++];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function copyArray(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property identifiers to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @param {Function} [customizer] The function to customize copied values.\n     * @returns {Object} Returns `object`.\n     */\n    function copyObject(source, props, object, customizer) {\n      var isNew = !object;\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n\n        var newValue = customizer\n          ? customizer(object[key], source[key], key, object, source)\n          : undefined;\n\n        if (newValue === undefined) {\n          newValue = source[key];\n        }\n        if (isNew) {\n          baseAssignValue(object, key, newValue);\n        } else {\n          assignValue(object, key, newValue);\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Copies own symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbols(source, object) {\n      return copyObject(source, getSymbols(source), object);\n    }\n\n    /**\n     * Copies own and inherited symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbolsIn(source, object) {\n      return copyObject(source, getSymbolsIn(source), object);\n    }\n\n    /**\n     * Creates a function like `_.groupBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} [initializer] The accumulator object initializer.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee) {\n        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n            accumulator = initializer ? initializer() : {};\n\n        return func(collection, setter, getIteratee(iteratee, 2), accumulator);\n      };\n    }\n\n    /**\n     * Creates a function like `_.assign`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return baseRest(function(object, sources) {\n        var index = -1,\n            length = sources.length,\n            customizer = length > 1 ? sources[length - 1] : undefined,\n            guard = length > 2 ? sources[2] : undefined;\n\n        customizer = (assigner.length > 3 && typeof customizer == 'function')\n          ? (length--, customizer)\n          : undefined;\n\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        object = Object(object);\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, index, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        if (collection == null) {\n          return collection;\n        }\n        if (!isArrayLike(collection)) {\n          return eachFunc(collection, iteratee);\n        }\n        var length = collection.length,\n            index = fromRight ? length : -1,\n            iterable = Object(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var index = -1,\n            iterable = Object(object),\n            props = keysFunc(object),\n            length = props.length;\n\n        while (length--) {\n          var key = props[fromRight ? length : ++index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the optional `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createBind(func, bitmask, thisArg) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.lowerFirst`.\n     *\n     * @private\n     * @param {string} methodName The name of the `String` case method to use.\n     * @returns {Function} Returns the new case function.\n     */\n    function createCaseFirst(methodName) {\n      return function(string) {\n        string = toString(string);\n\n        var strSymbols = hasUnicode(string)\n          ? stringToArray(string)\n          : undefined;\n\n        var chr = strSymbols\n          ? strSymbols[0]\n          : string.charAt(0);\n\n        var trailing = strSymbols\n          ? castSlice(strSymbols, 1).join('')\n          : string.slice(1);\n\n        return chr[methodName]() + trailing;\n      };\n    }\n\n    /**\n     * Creates a function like `_.camelCase`.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtor(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors. See\n        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to enable currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {number} arity The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCurry(func, bitmask, arity) {\n      var Ctor = createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length,\n            placeholder = getHolder(wrapper);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n          ? []\n          : replaceHolders(args, placeholder);\n\n        length -= holders.length;\n        if (length < arity) {\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, undefined,\n            args, holders, undefined, undefined, arity - length);\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return apply(fn, this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} findIndexFunc The function to find the collection index.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(findIndexFunc) {\n      return function(collection, predicate, fromIndex) {\n        var iterable = Object(collection);\n        if (!isArrayLike(collection)) {\n          var iteratee = getIteratee(predicate, 3);\n          collection = keys(collection);\n          predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n        }\n        var index = findIndexFunc(collection, predicate, fromIndex);\n        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return flatRest(function(funcs) {\n        var length = funcs.length,\n            index = length,\n            prereq = LodashWrapper.prototype.thru;\n\n        if (fromRight) {\n          funcs.reverse();\n        }\n        while (index--) {\n          var func = funcs[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n            var wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? index : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) &&\n                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&\n                !data[4].length && data[9] == 1\n              ) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func))\n              ? wrapper[funcName]()\n              : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 && isArray(value)) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      });\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with optional `this`\n     * binding of `thisArg`, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided\n     *  to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & WRAP_ARY_FLAG,\n          isBind = bitmask & WRAP_BIND_FLAG,\n          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\n          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\n          isFlip = bitmask & WRAP_FLIP_FLAG,\n          Ctor = isBindKey ? undefined : createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length;\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (isCurried) {\n          var placeholder = getHolder(wrapper),\n              holdersCount = countHolders(args, placeholder);\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders, isCurried);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n        }\n        length -= holdersCount;\n        if (isCurried && length < arity) {\n          var newHolders = replaceHolders(args, placeholder);\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n            args, newHolders, argPos, ary, arity - length\n          );\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        length = args.length;\n        if (argPos) {\n          args = reorder(args, argPos);\n        } else if (isFlip && length > 1) {\n          args.reverse();\n        }\n        if (isAry && ary < length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtor(fn);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.invertBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} toIteratee The function to resolve iteratees.\n     * @returns {Function} Returns the new inverter function.\n     */\n    function createInverter(setter, toIteratee) {\n      return function(object, iteratee) {\n        return baseInverter(object, setter, toIteratee(iteratee), {});\n      };\n    }\n\n    /**\n     * Creates a function that performs a mathematical operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @param {number} [defaultValue] The value used for `undefined` arguments.\n     * @returns {Function} Returns the new mathematical operation function.\n     */\n    function createMathOperation(operator, defaultValue) {\n      return function(value, other) {\n        var result;\n        if (value === undefined && other === undefined) {\n          return defaultValue;\n        }\n        if (value !== undefined) {\n          result = value;\n        }\n        if (other !== undefined) {\n          if (result === undefined) {\n            return other;\n          }\n          if (typeof value == 'string' || typeof other == 'string') {\n            value = baseToString(value);\n            other = baseToString(other);\n          } else {\n            value = baseToNumber(value);\n            other = baseToNumber(other);\n          }\n          result = operator(value, other);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function like `_.over`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over iteratees.\n     * @returns {Function} Returns the new over function.\n     */\n    function createOver(arrayFunc) {\n      return flatRest(function(iteratees) {\n        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n        return baseRest(function(args) {\n          var thisArg = this;\n          return arrayFunc(iteratees, function(iteratee) {\n            return apply(iteratee, thisArg, args);\n          });\n        });\n      });\n    }\n\n    /**\n     * Creates the padding for `string` based on `length`. The `chars` string\n     * is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {number} length The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padding for `string`.\n     */\n    function createPadding(length, chars) {\n      chars = chars === undefined ? ' ' : baseToString(chars);\n\n      var charsLength = chars.length;\n      if (charsLength < 2) {\n        return charsLength ? baseRepeat(chars, length) : chars;\n      }\n      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n      return hasUnicode(chars)\n        ? castSlice(stringToArray(result), 0, length).join('')\n        : result.slice(0, length);\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the `this` binding\n     * of `thisArg` and `partials` prepended to the arguments it receives.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to\n     *  the new function.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createPartial(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength),\n            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        return apply(fn, isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.range` or `_.rangeRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new range function.\n     */\n    function createRange(fromRight) {\n      return function(start, end, step) {\n        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n          end = step = undefined;\n        }\n        // Ensure the sign of `-0` is preserved.\n        start = toFinite(start);\n        if (end === undefined) {\n          end = start;\n          start = 0;\n        } else {\n          end = toFinite(end);\n        }\n        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n        return baseRange(start, end, step, fromRight);\n      };\n    }\n\n    /**\n     * Creates a function that performs a relational operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @returns {Function} Returns the new relational operation function.\n     */\n    function createRelationalOperation(operator) {\n      return function(value, other) {\n        if (!(typeof value == 'string' && typeof other == 'string')) {\n          value = toNumber(value);\n          other = toNumber(other);\n        }\n        return operator(value, other);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to continue currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {Function} wrapFunc The function to create the `func` wrapper.\n     * @param {*} placeholder The placeholder value.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n      var isCurry = bitmask & WRAP_CURRY_FLAG,\n          newHolders = isCurry ? holders : undefined,\n          newHoldersRight = isCurry ? undefined : holders,\n          newPartials = isCurry ? partials : undefined,\n          newPartialsRight = isCurry ? undefined : partials;\n\n      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);\n      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);\n\n      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {\n        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);\n      }\n      var newData = [\n        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n        newHoldersRight, argPos, ary, arity\n      ];\n\n      var result = wrapFunc.apply(undefined, newData);\n      if (isLaziable(func)) {\n        setData(result, newData);\n      }\n      result.placeholder = placeholder;\n      return setWrapToString(result, func, bitmask);\n    }\n\n    /**\n     * Creates a function like `_.round`.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        number = toNumber(number);\n        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);\n        if (precision && nativeIsFinite(number)) {\n          // Shift with exponential notation to avoid floating-point issues.\n          // See [MDN](https://mdn.io/round#Examples) for more details.\n          var pair = (toString(number) + 'e').split('e'),\n              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n          pair = (toString(value) + 'e').split('e');\n          return +(pair[0] + 'e' + (+pair[1] - precision));\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a set object of `values`.\n     *\n     * @private\n     * @param {Array} values The values to add to the set.\n     * @returns {Object} Returns the new set.\n     */\n    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n      return new Set(values);\n    };\n\n    /**\n     * Creates a `_.toPairs` or `_.toPairsIn` function.\n     *\n     * @private\n     * @param {Function} keysFunc The function to get the keys of a given object.\n     * @returns {Function} Returns the new pairs function.\n     */\n    function createToPairs(keysFunc) {\n      return function(object) {\n        var tag = getTag(object);\n        if (tag == mapTag) {\n          return mapToArray(object);\n        }\n        if (tag == setTag) {\n          return setToPairs(object);\n        }\n        return baseToPairs(object, keysFunc(object));\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags.\n     *    1 - `_.bind`\n     *    2 - `_.bindKey`\n     *    4 - `_.curry` or `_.curryRight` of a bound function\n     *    8 - `_.curry`\n     *   16 - `_.curryRight`\n     *   32 - `_.partial`\n     *   64 - `_.partialRight`\n     *  128 - `_.rearg`\n     *  256 - `_.ary`\n     *  512 - `_.flip`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n      arity = arity === undefined ? arity : toInteger(arity);\n      length -= holders ? holders.length : 0;\n\n      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func);\n\n      var newData = [\n        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n        argPos, ary, arity\n      ];\n\n      if (data) {\n        mergeData(newData, data);\n      }\n      func = newData[0];\n      bitmask = newData[1];\n      thisArg = newData[2];\n      partials = newData[3];\n      holders = newData[4];\n      arity = newData[9] = newData[9] === undefined\n        ? (isBindKey ? 0 : func.length)\n        : nativeMax(newData[9] - length, 0);\n\n      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {\n        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);\n      }\n      if (!bitmask || bitmask == WRAP_BIND_FLAG) {\n        var result = createBind(func, bitmask, thisArg);\n      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {\n        result = createCurry(func, bitmask, arity);\n      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {\n        result = createPartial(func, bitmask, thisArg, partials);\n      } else {\n        result = createHybrid.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setWrapToString(setter(result, newData), func, bitmask);\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties\n     * of source objects to the destination object for all destination properties\n     * that resolve to `undefined`.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to assign.\n     * @param {Object} object The parent object of `objValue`.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsAssignIn(objValue, srcValue, key, object) {\n      if (objValue === undefined ||\n          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        return srcValue;\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source\n     * objects into destination objects that are passed thru.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to merge.\n     * @param {Object} object The parent object of `objValue`.\n     * @param {Object} source The parent object of `srcValue`.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {\n      if (isObject(objValue) && isObject(srcValue)) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, objValue);\n        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);\n        stack['delete'](srcValue);\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n     * objects.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {string} key The key of the property to inspect.\n     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n     */\n    function customOmitClone(value) {\n      return isPlainObject(value) ? undefined : value;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `array` and `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n        return false;\n      }\n      // Check that cyclic values are equal.\n      var arrStacked = stack.get(array);\n      var othStacked = stack.get(other);\n      if (arrStacked && othStacked) {\n        return arrStacked == other && othStacked == array;\n      }\n      var index = -1,\n          result = true,\n          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n      stack.set(array, other);\n      stack.set(other, array);\n\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, arrValue, index, other, array, stack)\n            : customizer(arrValue, othValue, index, array, other, stack);\n        }\n        if (compared !== undefined) {\n          if (compared) {\n            continue;\n          }\n          result = false;\n          break;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (seen) {\n          if (!arraySome(other, function(othValue, othIndex) {\n                if (!cacheHas(seen, othIndex) &&\n                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n                  return seen.push(othIndex);\n                }\n              })) {\n            result = false;\n            break;\n          }\n        } else if (!(\n              arrValue === othValue ||\n                equalFunc(arrValue, othValue, bitmask, customizer, stack)\n            )) {\n          result = false;\n          break;\n        }\n      }\n      stack['delete'](array);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n      switch (tag) {\n        case dataViewTag:\n          if ((object.byteLength != other.byteLength) ||\n              (object.byteOffset != other.byteOffset)) {\n            return false;\n          }\n          object = object.buffer;\n          other = other.buffer;\n\n        case arrayBufferTag:\n          if ((object.byteLength != other.byteLength) ||\n              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n            return false;\n          }\n          return true;\n\n        case boolTag:\n        case dateTag:\n        case numberTag:\n          // Coerce booleans to `1` or `0` and dates to milliseconds.\n          // Invalid dates are coerced to `NaN`.\n          return eq(+object, +other);\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings, primitives and objects,\n          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n          // for more details.\n          return object == (other + '');\n\n        case mapTag:\n          var convert = mapToArray;\n\n        case setTag:\n          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n          convert || (convert = setToArray);\n\n          if (object.size != other.size && !isPartial) {\n            return false;\n          }\n          // Assume cyclic values are equal.\n          var stacked = stack.get(object);\n          if (stacked) {\n            return stacked == other;\n          }\n          bitmask |= COMPARE_UNORDERED_FLAG;\n\n          // Recursively compare objects (susceptible to call stack limits).\n          stack.set(object, other);\n          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n          stack['delete'](object);\n          return result;\n\n        case symbolTag:\n          if (symbolValueOf) {\n            return symbolValueOf.call(object) == symbolValueOf.call(other);\n          }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          objProps = getAllKeys(object),\n          objLength = objProps.length,\n          othProps = getAllKeys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isPartial) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      // Check that cyclic values are equal.\n      var objStacked = stack.get(object);\n      var othStacked = stack.get(other);\n      if (objStacked && othStacked) {\n        return objStacked == other && othStacked == object;\n      }\n      var result = true;\n      stack.set(object, other);\n      stack.set(other, object);\n\n      var skipCtor = isPartial;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, objValue, key, other, object, stack)\n            : customizer(objValue, othValue, key, object, other, stack);\n        }\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(compared === undefined\n              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n              : compared\n            )) {\n          result = false;\n          break;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (result && !skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          result = false;\n        }\n      }\n      stack['delete'](object);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseRest` which flattens the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    function flatRest(func) {\n      return setToString(overRest(func, undefined, flatten), func + '');\n    }\n\n    /**\n     * Creates an array of own enumerable property names and symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeys(object) {\n      return baseGetAllKeys(object, keys, getSymbols);\n    }\n\n    /**\n     * Creates an array of own and inherited enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeysIn(object) {\n      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = (func.name + ''),\n          array = realNames[result],\n          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the argument placeholder value for `func`.\n     *\n     * @private\n     * @param {Function} func The function to inspect.\n     * @returns {*} Returns the placeholder value.\n     */\n    function getHolder(func) {\n      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n      return object.placeholder;\n    }\n\n    /**\n     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n     * this function returns the custom method, otherwise it returns `baseIteratee`.\n     * If arguments are provided, the chosen function is invoked with them and\n     * its result is returned.\n     *\n     * @private\n     * @param {*} [value] The value to convert to an iteratee.\n     * @param {number} [arity] The arity of the created iteratee.\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getIteratee() {\n      var result = lodash.iteratee || iteratee;\n      result = result === iteratee ? baseIteratee : result;\n      return arguments.length ? result(arguments[0], arguments[1]) : result;\n    }\n\n    /**\n     * Gets the data for `map`.\n     *\n     * @private\n     * @param {Object} map The map to query.\n     * @param {string} key The reference key.\n     * @returns {*} Returns the map data.\n     */\n    function getMapData(map, key) {\n      var data = map.__data__;\n      return isKeyable(key)\n        ? data[typeof key == 'string' ? 'string' : 'hash']\n        : data.map;\n    }\n\n    /**\n     * Gets the property names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = keys(object),\n          length = result.length;\n\n      while (length--) {\n        var key = result[length],\n            value = object[key];\n\n        result[length] = [key, value, isStrictComparable(value)];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = getValue(object, key);\n      return baseIsNative(value) ? value : undefined;\n    }\n\n    /**\n     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the raw `toStringTag`.\n     */\n    function getRawTag(value) {\n      var isOwn = hasOwnProperty.call(value, symToStringTag),\n          tag = value[symToStringTag];\n\n      try {\n        value[symToStringTag] = undefined;\n        var unmasked = true;\n      } catch (e) {}\n\n      var result = nativeObjectToString.call(value);\n      if (unmasked) {\n        if (isOwn) {\n          value[symToStringTag] = tag;\n        } else {\n          delete value[symToStringTag];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n      if (object == null) {\n        return [];\n      }\n      object = Object(object);\n      return arrayFilter(nativeGetSymbols(object), function(symbol) {\n        return propertyIsEnumerable.call(object, symbol);\n      });\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n      var result = [];\n      while (object) {\n        arrayPush(result, getSymbols(object));\n        object = getPrototype(object);\n      }\n      return result;\n    };\n\n    /**\n     * Gets the `toStringTag` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    var getTag = baseGetTag;\n\n    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n        (Map && getTag(new Map) != mapTag) ||\n        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n        (Set && getTag(new Set) != setTag) ||\n        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n      getTag = function(value) {\n        var result = baseGetTag(value),\n            Ctor = result == objectTag ? value.constructor : undefined,\n            ctorString = Ctor ? toSource(Ctor) : '';\n\n        if (ctorString) {\n          switch (ctorString) {\n            case dataViewCtorString: return dataViewTag;\n            case mapCtorString: return mapTag;\n            case promiseCtorString: return promiseTag;\n            case setCtorString: return setTag;\n            case weakMapCtorString: return weakMapTag;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Extracts wrapper details from the `source` body comment.\n     *\n     * @private\n     * @param {string} source The source to inspect.\n     * @returns {Array} Returns the wrapper details.\n     */\n    function getWrapDetails(source) {\n      var match = source.match(reWrapDetails);\n      return match ? match[1].split(reSplitDetails) : [];\n    }\n\n    /**\n     * Checks if `path` exists on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @param {Function} hasFunc The function to check properties.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     */\n    function hasPath(object, path, hasFunc) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          result = false;\n\n      while (++index < length) {\n        var key = toKey(path[index]);\n        if (!(result = object != null && hasFunc(object, key))) {\n          break;\n        }\n        object = object[key];\n      }\n      if (result || ++index != length) {\n        return result;\n      }\n      length = object == null ? 0 : object.length;\n      return !!length && isLength(length) && isIndex(key, length) &&\n        (isArray(object) || isArguments(object));\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = new array.constructor(length);\n\n      // Add properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      return (typeof object.constructor == 'function' && !isPrototype(object))\n        ? baseCreate(getPrototype(object))\n        : {};\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return cloneArrayBuffer(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case dataViewTag:\n          return cloneDataView(object, isDeep);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          return cloneTypedArray(object, isDeep);\n\n        case mapTag:\n          return new Ctor;\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          return cloneRegExp(object);\n\n        case setTag:\n          return new Ctor;\n\n        case symbolTag:\n          return cloneSymbol(object);\n      }\n    }\n\n    /**\n     * Inserts wrapper `details` in a comment at the top of the `source` body.\n     *\n     * @private\n     * @param {string} source The source to modify.\n     * @returns {Array} details The details to insert.\n     * @returns {string} Returns the modified source.\n     */\n    function insertWrapDetails(source, details) {\n      var length = details.length;\n      if (!length) {\n        return source;\n      }\n      var lastIndex = length - 1;\n      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n      details = details.join(length > 2 ? ', ' : ' ');\n      return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n    }\n\n    /**\n     * Checks if `value` is a flattenable `arguments` object or array.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n     */\n    function isFlattenable(value) {\n      return isArray(value) || isArguments(value) ||\n        !!(spreadableSymbol && value && value[spreadableSymbol]);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      var type = typeof value;\n      length = length == null ? MAX_SAFE_INTEGER : length;\n\n      return !!length &&\n        (type == 'number' ||\n          (type != 'symbol' && reIsUint.test(value))) &&\n            (value > -1 && value % 1 == 0 && value < length);\n    }\n\n    /**\n     * Checks if the given arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n     *  else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n            ? (isArrayLike(object) && isIndex(index, object.length))\n            : (type == 'string' && index in object)\n          ) {\n        return eq(object[index], value);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      if (isArray(value)) {\n        return false;\n      }\n      var type = typeof value;\n      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n          value == null || isSymbol(value)) {\n        return true;\n      }\n      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n        (object != null && value in Object(object));\n    }\n\n    /**\n     * Checks if `value` is suitable for use as unique object key.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n     */\n    function isKeyable(value) {\n      var type = typeof value;\n      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n        ? (value !== '__proto__')\n        : (value === null);\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n     *  else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func),\n          other = lodash[funcName];\n\n      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `func` has its source masked.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n     */\n    function isMasked(func) {\n      return !!maskSrcKey && (maskSrcKey in func);\n    }\n\n    /**\n     * Checks if `func` is capable of being masked.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n     */\n    var isMaskable = coreJsData ? isFunction : stubFalse;\n\n    /**\n     * Checks if `value` is likely a prototype object.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n     */\n    function isPrototype(value) {\n      var Ctor = value && value.constructor,\n          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n      return value === proto;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * A specialized version of `matchesProperty` for source values suitable\n     * for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function matchesStrictComparable(key, srcValue) {\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        return object[key] === srcValue &&\n          (srcValue !== undefined || (key in Object(object)));\n      };\n    }\n\n    /**\n     * A specialized version of `_.memoize` which clears the memoized function's\n     * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n     *\n     * @private\n     * @param {Function} func The function to have its output memoized.\n     * @returns {Function} Returns the new memoized function.\n     */\n    function memoizeCapped(func) {\n      var result = memoize(func, function(key) {\n        if (cache.size === MAX_MEMOIZE_SIZE) {\n          cache.clear();\n        }\n        return key;\n      });\n\n      var cache = result.cache;\n      return result;\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers used to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and\n     * `_.rearg` modify function arguments, making the order in which they are\n     * executed important, preventing the merging of metadata. However, we make\n     * an exception for a safe combined case where curried functions have `_.ary`\n     * and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);\n\n      var isCombo =\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||\n        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & WRAP_BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = value;\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & WRAP_ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * This function is like\n     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * except that it includes inherited enumerable properties.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function nativeKeysIn(object) {\n      var result = [];\n      if (object != null) {\n        for (var key in Object(object)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a string using `Object.prototype.toString`.\n     *\n     * @private\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     */\n    function objectToString(value) {\n      return nativeObjectToString.call(value);\n    }\n\n    /**\n     * A specialized version of `baseRest` which transforms the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @param {Function} transform The rest array transform.\n     * @returns {Function} Returns the new function.\n     */\n    function overRest(func, start, transform) {\n      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            array = Array(length);\n\n        while (++index < length) {\n          array[index] = args[start + index];\n        }\n        index = -1;\n        var otherArgs = Array(start + 1);\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = transform(array);\n        return apply(func, this, otherArgs);\n      };\n    }\n\n    /**\n     * Gets the parent value at `path` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path to get the parent value of.\n     * @returns {*} Returns the parent value.\n     */\n    function parent(object, path) {\n      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = copyArray(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Gets the value at `key`, unless `key` is \"__proto__\" or \"constructor\".\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the property to get.\n     * @returns {*} Returns the property value.\n     */\n    function safeGet(object, key) {\n      if (key === 'constructor' && typeof object[key] === 'function') {\n        return;\n      }\n\n      if (key == '__proto__') {\n        return;\n      }\n\n      return object[key];\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity\n     * function to avoid garbage collection pauses in V8. See\n     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = shortOut(baseSetData);\n\n    /**\n     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    var setTimeout = ctxSetTimeout || function(func, wait) {\n      return root.setTimeout(func, wait);\n    };\n\n    /**\n     * Sets the `toString` method of `func` to return `string`.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var setToString = shortOut(baseSetToString);\n\n    /**\n     * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n     * with wrapper details in a comment at the top of the source body.\n     *\n     * @private\n     * @param {Function} wrapper The function to modify.\n     * @param {Function} reference The reference function.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Function} Returns `wrapper`.\n     */\n    function setWrapToString(wrapper, reference, bitmask) {\n      var source = (reference + '');\n      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\n    }\n\n    /**\n     * Creates a function that'll short out and invoke `identity` instead\n     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n     * milliseconds.\n     *\n     * @private\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new shortable function.\n     */\n    function shortOut(func) {\n      var count = 0,\n          lastCalled = 0;\n\n      return function() {\n        var stamp = nativeNow(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return arguments[0];\n          }\n        } else {\n          count = 0;\n        }\n        return func.apply(undefined, arguments);\n      };\n    }\n\n    /**\n     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @param {number} [size=array.length] The size of `array`.\n     * @returns {Array} Returns `array`.\n     */\n    function shuffleSelf(array, size) {\n      var index = -1,\n          length = array.length,\n          lastIndex = length - 1;\n\n      size = size === undefined ? length : size;\n      while (++index < size) {\n        var rand = baseRandom(index, lastIndex),\n            value = array[rand];\n\n        array[rand] = array[index];\n        array[index] = value;\n      }\n      array.length = size;\n      return array;\n    }\n\n    /**\n     * Converts `string` to a property path array.\n     *\n     * @private\n     * @param {string} string The string to convert.\n     * @returns {Array} Returns the property path array.\n     */\n    var stringToPath = memoizeCapped(function(string) {\n      var result = [];\n      if (string.charCodeAt(0) === 46 /* . */) {\n        result.push('');\n      }\n      string.replace(rePropName, function(match, number, quote, subString) {\n        result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    });\n\n    /**\n     * Converts `value` to a string key if it's not a string or symbol.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {string|symbol} Returns the key.\n     */\n    function toKey(value) {\n      if (typeof value == 'string' || isSymbol(value)) {\n        return value;\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * Converts `func` to its source code.\n     *\n     * @private\n     * @param {Function} func The function to convert.\n     * @returns {string} Returns the source code.\n     */\n    function toSource(func) {\n      if (func != null) {\n        try {\n          return funcToString.call(func);\n        } catch (e) {}\n        try {\n          return (func + '');\n        } catch (e) {}\n      }\n      return '';\n    }\n\n    /**\n     * Updates wrapper `details` based on `bitmask` flags.\n     *\n     * @private\n     * @returns {Array} details The details to modify.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Array} Returns `details`.\n     */\n    function updateWrapDetails(details, bitmask) {\n      arrayEach(wrapFlags, function(pair) {\n        var value = '_.' + pair[0];\n        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n          details.push(value);\n        }\n      });\n      return details.sort();\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      if (wrapper instanceof LazyWrapper) {\n        return wrapper.clone();\n      }\n      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n      result.__actions__ = copyArray(wrapper.__actions__);\n      result.__index__  = wrapper.__index__;\n      result.__values__ = wrapper.__values__;\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `array` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the new array of chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n        size = 1;\n      } else {\n        size = nativeMax(toInteger(size), 0);\n      }\n      var length = array == null ? 0 : array.length;\n      if (!length || size < 1) {\n        return [];\n      }\n      var index = 0,\n          resIndex = 0,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[resIndex++] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array == null ? 0 : array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[resIndex++] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a new array concatenating `array` with any additional arrays\n     * and/or values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to concatenate.\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var other = _.concat(array, 2, [3], [[4]]);\n     *\n     * console.log(other);\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    function concat() {\n      var length = arguments.length;\n      if (!length) {\n        return [];\n      }\n      var args = Array(length - 1),\n          array = arguments[0],\n          index = length;\n\n      while (index--) {\n        args[index - 1] = arguments[index];\n      }\n      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n    }\n\n    /**\n     * Creates an array of `array` values not included in the other given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * **Note:** Unlike `_.pullAll`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.without, _.xor\n     * @example\n     *\n     * _.difference([2, 1], [2, 3]);\n     * // => [1]\n     */\n    var difference = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `iteratee` which\n     * is invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var differenceBy = baseRest(function(array, values) {\n      var iteratee = last(values);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `comparator`\n     * which is invoked to compare elements of `array` to `values`. The order and\n     * references of result values are determined by the first array. The comparator\n     * is invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     *\n     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }]\n     */\n    var differenceWith = baseRest(function(array, values) {\n      var comparator = last(values);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.dropRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropRightWhile(users, ['active', false]);\n     * // => objects for ['barney']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropRightWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.dropWhile(users, function(o) { return !o.active; });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropWhile(users, ['active', false]);\n     * // => objects for ['pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8, 10], '*', 1, 3);\n     * // => [4, '*', '*', 10]\n     */\n    function fill(array, value, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n     * // => 0\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findIndex(users, ['active', false]);\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    function findIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index);\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n     * // => 2\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastIndex(users, ['active', false]);\n     * // => 2\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    function findLastIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length - 1;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = fromIndex < 0\n          ? nativeMax(length + index, 0)\n          : nativeMin(index, length - 1);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n    }\n\n    /**\n     * Flattens `array` a single level deep.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, [3, [4]], 5]\n     */\n    function flatten(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, 1) : [];\n    }\n\n    /**\n     * Recursively flattens `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, 3, 4, 5]\n     */\n    function flattenDeep(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, INFINITY) : [];\n    }\n\n    /**\n     * Recursively flatten `array` up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * var array = [1, [2, [3, [4]], 5]];\n     *\n     * _.flattenDepth(array, 1);\n     * // => [1, 2, [3, [4]], 5]\n     *\n     * _.flattenDepth(array, 2);\n     * // => [1, 2, 3, [4], 5]\n     */\n    function flattenDepth(array, depth) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(array, depth);\n    }\n\n    /**\n     * The inverse of `_.toPairs`; this method returns an object composed\n     * from key-value `pairs`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} pairs The key-value pairs.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.fromPairs([['a', 1], ['b', 2]]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function fromPairs(pairs) {\n      var index = -1,\n          length = pairs == null ? 0 : pairs.length,\n          result = {};\n\n      while (++index < length) {\n        var pair = pairs[index];\n        result[pair[0]] = pair[1];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias first\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.head([1, 2, 3]);\n     * // => 1\n     *\n     * _.head([]);\n     * // => undefined\n     */\n    function head(array) {\n      return (array && array.length) ? array[0] : undefined;\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it's used as the\n     * offset from the end of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // Search from the `fromIndex`.\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseIndexOf(array, value, index);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 0, -1) : [];\n    }\n\n    /**\n     * Creates an array of unique values that are included in all given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersection([2, 1], [2, 3]);\n     * // => [2]\n     */\n    var intersection = baseRest(function(arrays) {\n      var mapped = arrayMap(arrays, castArrayLikeObject);\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped)\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `iteratee`\n     * which is invoked for each element of each `arrays` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [2.1]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }]\n     */\n    var intersectionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (iteratee === last(mapped)) {\n        iteratee = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `comparator`\n     * which is invoked to compare elements of `arrays`. The order and references\n     * of result values are determined by the first array. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.intersectionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }]\n     */\n    var intersectionWith = baseRest(function(arrays) {\n      var comparator = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      if (comparator) {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Converts all elements in `array` into a string separated by `separator`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to convert.\n     * @param {string} [separator=','] The element separator.\n     * @returns {string} Returns the joined string.\n     * @example\n     *\n     * _.join(['a', 'b', 'c'], '~');\n     * // => 'a~b~c'\n     */\n    function join(array, separator) {\n      return array == null ? '' : nativeJoin.call(array, separator);\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // Search from the `fromIndex`.\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);\n      }\n      return value === value\n        ? strictLastIndexOf(array, value, index)\n        : baseFindIndex(array, baseIsNaN, index, true);\n    }\n\n    /**\n     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n     * element from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.11.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=0] The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     *\n     * _.nth(array, 1);\n     * // => 'b'\n     *\n     * _.nth(array, -2);\n     * // => 'c';\n     */\n    function nth(array, n) {\n      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n    }\n\n    /**\n     * Removes all given values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n     * to remove elements from an array by predicate.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pull(array, 'a', 'c');\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    var pull = baseRest(pullAll);\n\n    /**\n     * This method is like `_.pull` except that it accepts an array of values to remove.\n     *\n     * **Note:** Unlike `_.difference`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pullAll(array, ['a', 'c']);\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    function pullAll(array, values) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values)\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n     * invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The iteratee is invoked with one argument: (value).\n     *\n     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n     *\n     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n     * console.log(array);\n     * // => [{ 'x': 2 }]\n     */\n    function pullAllBy(array, values, iteratee) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, getIteratee(iteratee, 2))\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `comparator` which\n     * is invoked to compare elements of `array` to `values`. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n     *\n     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n     * console.log(array);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n     */\n    function pullAllWith(array, values, comparator) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, undefined, comparator)\n        : array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to `indexes` and returns an\n     * array of removed elements.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     * var pulled = _.pullAt(array, [1, 3]);\n     *\n     * console.log(array);\n     * // => ['a', 'c']\n     *\n     * console.log(pulled);\n     * // => ['b', 'd']\n     */\n    var pullAt = flatRest(function(array, indexes) {\n      var length = array == null ? 0 : array.length,\n          result = baseAt(array, indexes);\n\n      basePullAt(array, arrayMap(indexes, function(index) {\n        return isIndex(index, length) ? +index : index;\n      }).sort(compareAscending));\n\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is invoked\n     * with three arguments: (value, index, array).\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n     * to pull elements from an array by value.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getIteratee(predicate, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Reverses `array` so that the first element becomes the last, the second\n     * element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates `array` and is based on\n     * [`Array#reverse`](https://mdn.io/Array/reverse).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.reverse(array);\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function reverse(array) {\n      return array == null ? array : nativeReverse.call(array);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of\n     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n     * returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      else {\n        start = start == null ? 0 : toInteger(start);\n        end = end === undefined ? length : toInteger(end);\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     */\n    function sortedIndex(array, value) {\n      return baseSortedIndex(array, value);\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 0\n     */\n    function sortedIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 1\n     */\n    function sortedIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value);\n        if (index < length && eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n     * // => 4\n     */\n    function sortedLastIndex(array, value) {\n      return baseSortedIndex(array, value, true);\n    }\n\n    /**\n     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 1\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 1\n     */\n    function sortedLastIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);\n    }\n\n    /**\n     * This method is like `_.lastIndexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 3\n     */\n    function sortedLastIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value, true) - 1;\n        if (eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.uniq` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniq([1, 1, 2]);\n     * // => [1, 2]\n     */\n    function sortedUniq(array) {\n      return (array && array.length)\n        ? baseSortedUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniqBy` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n     * // => [1.1, 2.3]\n     */\n    function sortedUniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSortedUniq(array, getIteratee(iteratee, 2))\n        : [];\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.tail([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function tail(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 1, length) : [];\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.takeRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeRightWhile(users, ['active', false]);\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeRightWhile(users, 'active');\n     * // => []\n     */\n    function takeRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.takeWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeWhile(users, ['active', false]);\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeWhile(users, 'active');\n     * // => []\n     */\n    function takeWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all given arrays using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([2], [1, 2]);\n     * // => [2, 1]\n     */\n    var union = baseRest(function(arrays) {\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which uniqueness is computed. Result values are chosen from the first\n     * array in which the value occurs. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    var unionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `comparator` which\n     * is invoked to compare elements of `arrays`. Result values are chosen from\n     * the first array in which the value occurs. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.unionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var unionWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurrence of each element\n     * is kept. The order of result values is determined by the order they occur\n     * in the array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     */\n    function uniq(array) {\n      return (array && array.length) ? baseUniq(array) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * uniqueness is computed. The order of result values is determined by the\n     * order they occur in the array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniqBy(array, iteratee) {\n      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `comparator` which\n     * is invoked to compare elements of `array`. The order of result values is\n     * determined by the order they occur in the array.The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.uniqWith(objects, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n     */\n    function uniqWith(array, comparator) {\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.2.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['a', 'b'], [1, 2], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var length = 0;\n      array = arrayFilter(array, function(group) {\n        if (isArrayLikeObject(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      return baseTimes(length, function(index) {\n        return arrayMap(array, baseProperty(index));\n      });\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n     * how regrouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  regrouped values.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      return arrayMap(result, function(group) {\n        return apply(iteratee, undefined, group);\n      });\n    }\n\n    /**\n     * Creates an array excluding all given values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.pull`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.xor\n     * @example\n     *\n     * _.without([2, 1, 2, 3], 1, 2);\n     * // => [3]\n     */\n    var without = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the\n     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the given arrays. The order of result values is determined by the order\n     * they occur in the arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.without\n     * @example\n     *\n     * _.xor([2, 1], [2, 3]);\n     * // => [1, 3]\n     */\n    var xor = baseRest(function(arrays) {\n      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which by which they're compared. The order of result values is determined\n     * by the order they occur in the arrays. The iteratee is invoked with one\n     * argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2, 3.4]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var xorBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `comparator` which is\n     * invoked to compare elements of `arrays`. The order of result values is\n     * determined by the order they occur in the arrays. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.xorWith(objects, others, _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var xorWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n    });\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the\n     * first elements of the given arrays, the second of which contains the\n     * second elements of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     */\n    var zip = baseRest(unzip);\n\n    /**\n     * This method is like `_.fromPairs` except that it accepts two arrays,\n     * one of property identifiers and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.4.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject(['a', 'b'], [1, 2]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function zipObject(props, values) {\n      return baseZipObject(props || [], values || [], assignValue);\n    }\n\n    /**\n     * This method is like `_.zipObject` except that it supports property paths.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n     */\n    function zipObjectDeep(props, values) {\n      return baseZipObject(props || [], values || [], baseSet);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts `iteratee` to specify\n     * how grouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  grouped values.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n     *   return a + b + c;\n     * });\n     * // => [111, 222]\n     */\n    var zipWith = baseRest(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n      return unzipWith(arrays, iteratee);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n     * chain sequences enabled. The result of such sequences must be unwrapped\n     * with `_#value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Seq\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _\n     *   .chain(users)\n     *   .sortBy('age')\n     *   .map(function(o) {\n     *     return o.user + ' is ' + o.age;\n     *   })\n     *   .head()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor\n     * is invoked with one argument; (value). The purpose of this method is to\n     * \"tap into\" a method chain sequence in order to modify intermediate results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    // Mutate input array.\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     * The purpose of this method is to \"pass thru\" values replacing intermediate\n     * results in a method chain sequence.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor) {\n      return interceptor(value);\n    }\n\n    /**\n     * This method is the wrapper version of `_.at`.\n     *\n     * @name at\n     * @memberOf _\n     * @since 1.0.0\n     * @category Seq\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _(object).at(['a[0].b.c', 'a[1]']).value();\n     * // => [3, 4]\n     */\n    var wrapperAt = flatRest(function(paths) {\n      var length = paths.length,\n          start = length ? paths[0] : 0,\n          value = this.__wrapped__,\n          interceptor = function(object) { return baseAt(object, paths); };\n\n      if (length > 1 || this.__actions__.length ||\n          !(value instanceof LazyWrapper) || !isIndex(start)) {\n        return this.thru(interceptor);\n      }\n      value = value.slice(start, +start + (length ? 1 : 0));\n      value.__actions__.push({\n        'func': thru,\n        'args': [interceptor],\n        'thisArg': undefined\n      });\n      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n        if (length && !array.length) {\n          array.push(undefined);\n        }\n        return array;\n      });\n    });\n\n    /**\n     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n     *\n     * @name chain\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // A sequence without explicit chaining.\n     * _(users).head();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // A sequence with explicit chaining.\n     * _(users)\n     *   .chain()\n     *   .head()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chain sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Gets the next value on a wrapped object following the\n     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n     *\n     * @name next\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the next iterator value.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 1 }\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 2 }\n     *\n     * wrapped.next();\n     * // => { 'done': true, 'value': undefined }\n     */\n    function wrapperNext() {\n      if (this.__values__ === undefined) {\n        this.__values__ = toArray(this.value());\n      }\n      var done = this.__index__ >= this.__values__.length,\n          value = done ? undefined : this.__values__[this.__index__++];\n\n      return { 'done': done, 'value': value };\n    }\n\n    /**\n     * Enables the wrapper to be iterable.\n     *\n     * @name Symbol.iterator\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped[Symbol.iterator]() === wrapped;\n     * // => true\n     *\n     * Array.from(wrapped);\n     * // => [1, 2]\n     */\n    function wrapperToIterator() {\n      return this;\n    }\n\n    /**\n     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @param {*} value The value to plant.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2]).map(square);\n     * var other = wrapped.plant([3, 4]);\n     *\n     * other.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        clone.__index__ = 0;\n        clone.__values__ = undefined;\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * This method is the wrapper version of `_.reverse`.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({\n          'func': thru,\n          'args': [reverse],\n          'thisArg': undefined\n        });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(reverse);\n    }\n\n    /**\n     * Executes the chain sequence to resolve the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @since 0.1.0\n     * @alias toJSON, valueOf\n     * @category Seq\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the number of times the key was returned by `iteratee`. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': 1, '6': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        ++result[key];\n      } else {\n        baseAssignValue(result, key, 1);\n      }\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * Iteration is stopped once `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * **Note:** This method returns `true` for\n     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n     * elements of empty collections.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.every(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, guard) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * **Note:** Unlike `_.remove`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.reject\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, { 'age': 36, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.filter(users, 'active');\n     * // => objects for ['barney']\n     *\n     * // Combining several predicates using `_.overEvery` or `_.overSome`.\n     * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));\n     * // => objects for ['fred', 'barney']\n     */\n    function filter(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.find(users, function(o) { return o.age < 40; });\n     * // => object for 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.find(users, { 'age': 1, 'active': true });\n     * // => object for 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.find(users, ['active', false]);\n     * // => object for 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.find(users, 'active');\n     * // => object for 'barney'\n     */\n    var find = createFind(findIndex);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=collection.length-1] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(findLastIndex);\n\n    /**\n     * Creates a flattened array of values by running each element in `collection`\n     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [n, n];\n     * }\n     *\n     * _.flatMap([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMap(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), 1);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDeep([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMapDeep(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), INFINITY);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDepth([1, 2], duplicate, 2);\n     * // => [[1, 1], [2, 2]]\n     */\n    function flatMapDepth(collection, iteratee, depth) {\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(map(collection, iteratee), depth);\n    }\n\n    /**\n     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n     * The iteratee is invoked with three arguments: (value, index|key, collection).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n     * or `_.forOwn` for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias each\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEachRight\n     * @example\n     *\n     * _.forEach([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `1` then `2`.\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forEach(collection, iteratee) {\n      var func = isArray(collection) ? arrayEach : baseEach;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEach\n     * @example\n     *\n     * _.forEachRight([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `2` then `1`.\n     */\n    function forEachRight(collection, iteratee) {\n      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The order of grouped values\n     * is determined by the order they occur in `collection`. The corresponding\n     * value of each key is an array of elements responsible for generating the\n     * key. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': [4.2], '6': [6.1, 6.3] }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        baseAssignValue(result, key, [value]);\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\n     * checked for a substring of `value`, otherwise\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n     * the offset from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\n     * // => true\n     *\n     * _.includes('abcd', 'bc');\n     * // => true\n     */\n    function includes(collection, value, fromIndex, guard) {\n      collection = isArrayLike(collection) ? collection : values(collection);\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n      var length = collection.length;\n      if (fromIndex < 0) {\n        fromIndex = nativeMax(length + fromIndex, 0);\n      }\n      return isString(collection)\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n    }\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `path` is a function, it's invoked\n     * for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke each method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invokeMap([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invokeMap = baseRest(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the last element responsible for generating the key. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var array = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.keyBy(array, function(o) {\n     *   return String.fromCharCode(o.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.keyBy(array, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     */\n    var keyBy = createAggregator(function(result, value, key) {\n      baseAssignValue(result, key, value);\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * _.map([4, 8], square);\n     * // => [16, 64]\n     *\n     * _.map({ 'a': 4, 'b': 8 }, square);\n     * // => [16, 64] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it allows specifying the sort\n     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n     * descending or \"asc\" for ascending sort order of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @param {string[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // Sort by `user` in ascending order and by `age` in descending order.\n     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    function orderBy(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      orders = guard ? undefined : orders;\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseOrderBy(collection, iteratees, orders);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, the second of which\n     * contains elements `predicate` returns falsey for. The predicate is\n     * invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.partition(users, function(o) { return o.active; });\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.partition(users, { 'age': 1, 'active': false });\n     * // => objects for [['pebbles'], ['barney', 'fred']]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.partition(users, ['active', false]);\n     * // => objects for [['barney', 'pebbles'], ['fred']]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.partition(users, 'active');\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` thru `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not given, the first element of `collection` is used as the initial\n     * value. The iteratee is invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n     * and `sortBy`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduceRight\n     * @example\n     *\n     * _.reduce([1, 2], function(sum, n) {\n     *   return sum + n;\n     * }, 0);\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     *   return result;\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n     */\n    function reduce(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduce : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduce\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n    }\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.filter\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * _.reject(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.reject(users, { 'age': 40, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.reject(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.reject(users, 'active');\n     * // => objects for ['barney']\n     */\n    function reject(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, negate(getIteratee(predicate, 3)));\n    }\n\n    /**\n     * Gets a random element from `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     */\n    function sample(collection) {\n      var func = isArray(collection) ? arraySample : baseSample;\n      return func(collection);\n    }\n\n    /**\n     * Gets `n` random elements at unique keys from `collection` up to the\n     * size of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} [n=1] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the random elements.\n     * @example\n     *\n     * _.sampleSize([1, 2, 3], 2);\n     * // => [3, 1]\n     *\n     * _.sampleSize([1, 2, 3], 4);\n     * // => [2, 3, 1]\n     */\n    function sampleSize(collection, n, guard) {\n      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      var func = isArray(collection) ? arraySampleSize : baseSampleSize;\n      return func(collection, n);\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      var func = isArray(collection) ? arrayShuffle : baseShuffle;\n      return func(collection);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable string keyed properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the collection size.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      if (collection == null) {\n        return 0;\n      }\n      if (isArrayLike(collection)) {\n        return isString(collection) ? stringSize(collection) : collection.length;\n      }\n      var tag = getTag(collection);\n      if (tag == mapTag || tag == setTag) {\n        return collection.size;\n      }\n      return baseKeys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * Iteration is stopped once `predicate` returns truthy. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.some(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, guard) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection thru each iteratee. This method\n     * performs a stable sort, that is, it preserves the original sort order of\n     * equal elements. The iteratees are invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 30 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.sortBy(users, [function(o) { return o.user; }]);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 30]]\n     *\n     * _.sortBy(users, ['user', 'age']);\n     * // => objects for [['barney', 34], ['barney', 36], ['fred', 30], ['fred', 48]]\n     */\n    var sortBy = baseRest(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var length = iteratees.length;\n      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n        iteratees = [];\n      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n        iteratees = [iteratees[0]];\n      }\n      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the timestamp of the number of milliseconds that have elapsed since\n     * the Unix epoch (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Date\n     * @returns {number} Returns the timestamp.\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => Logs the number of milliseconds it took for the deferred invocation.\n     */\n    var now = ctxNow || function() {\n      return root.Date.now();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it's called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => Logs 'done saving!' after the two async saves have completed.\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func`, with up to `n` arguments,\n     * ignoring any additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      n = guard ? undefined : n;\n      n = (func && n == null) ? func.length : n;\n      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it's called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery(element).on('click', _.before(5, addContactToList));\n     * // => Allows adding up to 4 contacts to the list.\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and `partials` prepended to the arguments it receives.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * function greet(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * }\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = baseRest(function(func, thisArg, partials) {\n      var bitmask = WRAP_BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bind));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` with `partials`\n     * prepended to the arguments it receives.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist. See\n     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Function\n     * @param {Object} object The object to invoke the method on.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = baseRest(function(object, key, partials) {\n      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bindKey));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts arguments of `func` and either invokes\n     * `func` returning its result, if at least `arity` number of arguments have\n     * been provided, or returns a function that accepts the remaining `func`\n     * arguments, and so on. The arity of `func` may be specified if `func.length`\n     * is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    function curry(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curry.placeholder;\n      return result;\n    }\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    function curryRight(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curryRight.placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed `func` invocations and a `flush` method to immediately invoke them.\n     * Provide `options` to indicate whether `func` should be invoked on the\n     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n     * with the last arguments provided to the debounced function. Subsequent\n     * calls to the debounced function return the result of the last `func`\n     * invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the debounced function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=false]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {number} [options.maxWait]\n     *  The maximum time `func` is allowed to be delayed before it's invoked.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // Avoid costly calculations while the window size is in flux.\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', debounced);\n     *\n     * // Cancel the trailing debounced invocation.\n     * jQuery(window).on('popstate', debounced.cancel);\n     */\n    function debounce(func, wait, options) {\n      var lastArgs,\n          lastThis,\n          maxWait,\n          result,\n          timerId,\n          lastCallTime,\n          lastInvokeTime = 0,\n          leading = false,\n          maxing = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = toNumber(wait) || 0;\n      if (isObject(options)) {\n        leading = !!options.leading;\n        maxing = 'maxWait' in options;\n        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function invokeFunc(time) {\n        var args = lastArgs,\n            thisArg = lastThis;\n\n        lastArgs = lastThis = undefined;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n      }\n\n      function leadingEdge(time) {\n        // Reset any `maxWait` timer.\n        lastInvokeTime = time;\n        // Start the timer for the trailing edge.\n        timerId = setTimeout(timerExpired, wait);\n        // Invoke the leading edge.\n        return leading ? invokeFunc(time) : result;\n      }\n\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime,\n            timeWaiting = wait - timeSinceLastCall;\n\n        return maxing\n          ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n          : timeWaiting;\n      }\n\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime;\n\n        // Either this is the first call, activity has stopped and we're at the\n        // trailing edge, the system time has gone backwards and we're treating\n        // it as the trailing edge, or we've hit the `maxWait` limit.\n        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n      }\n\n      function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n          return trailingEdge(time);\n        }\n        // Restart the timer.\n        timerId = setTimeout(timerExpired, remainingWait(time));\n      }\n\n      function trailingEdge(time) {\n        timerId = undefined;\n\n        // Only invoke if we have `lastArgs` which means `func` has been\n        // debounced at least once.\n        if (trailing && lastArgs) {\n          return invokeFunc(time);\n        }\n        lastArgs = lastThis = undefined;\n        return result;\n      }\n\n      function cancel() {\n        if (timerId !== undefined) {\n          clearTimeout(timerId);\n        }\n        lastInvokeTime = 0;\n        lastArgs = lastCallTime = lastThis = timerId = undefined;\n      }\n\n      function flush() {\n        return timerId === undefined ? result : trailingEdge(now());\n      }\n\n      function debounced() {\n        var time = now(),\n            isInvoking = shouldInvoke(time);\n\n        lastArgs = arguments;\n        lastThis = this;\n        lastCallTime = time;\n\n        if (isInvoking) {\n          if (timerId === undefined) {\n            return leadingEdge(lastCallTime);\n          }\n          if (maxing) {\n            // Handle invocations in a tight loop.\n            clearTimeout(timerId);\n            timerId = setTimeout(timerExpired, wait);\n            return invokeFunc(lastCallTime);\n          }\n        }\n        if (timerId === undefined) {\n          timerId = setTimeout(timerExpired, wait);\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      debounced.flush = flush;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // => Logs 'deferred' after one millisecond.\n     */\n    var defer = baseRest(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => Logs 'later' after one second.\n     */\n    var delay = baseRest(function(func, wait, args) {\n      return baseDelay(func, toNumber(wait) || 0, args);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments reversed.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to flip arguments for.\n     * @returns {Function} Returns the new flipped function.\n     * @example\n     *\n     * var flipped = _.flip(function() {\n     *   return _.toArray(arguments);\n     * });\n     *\n     * flipped('a', 'b', 'c', 'd');\n     * // => ['d', 'c', 'b', 'a']\n     */\n    function flip(func) {\n      return createWrap(func, WRAP_FLIP_FLAG);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided, it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is used as the map cache key. The `func`\n     * is invoked with the `this` binding of the memoized function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the\n     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoized function.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     * var other = { 'c': 3, 'd': 4 };\n     *\n     * var values = _.memoize(_.values);\n     * values(object);\n     * // => [1, 2]\n     *\n     * values(other);\n     * // => [3, 4]\n     *\n     * object.a = 2;\n     * values(object);\n     * // => [1, 2]\n     *\n     * // Modify the result cache.\n     * values.cache.set(object, ['a', 'b']);\n     * values(object);\n     * // => ['a', 'b']\n     *\n     * // Replace `_.memoize.Cache`.\n     * _.memoize.Cache = WeakMap;\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result) || cache;\n        return result;\n      };\n      memoized.cache = new (memoize.Cache || MapCache);\n      return memoized;\n    }\n\n    // Expose `MapCache`.\n    memoize.Cache = MapCache;\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new negated function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        var args = arguments;\n        switch (args.length) {\n          case 0: return !predicate.call(this);\n          case 1: return !predicate.call(this, args[0]);\n          case 2: return !predicate.call(this, args[0], args[1]);\n          case 3: return !predicate.call(this, args[0], args[1], args[2]);\n        }\n        return !predicate.apply(this, args);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first invocation. The `func` is\n     * invoked with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // => `createApplication` is invoked once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with its arguments transformed.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms=[_.identity]]\n     *  The argument transforms.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var func = _.overArgs(function(x, y) {\n     *   return [x, y];\n     * }, [square, doubled]);\n     *\n     * func(9, 3);\n     * // => [81, 6]\n     *\n     * func(10, 5);\n     * // => [100, 10]\n     */\n    var overArgs = castRest(function(func, transforms) {\n      transforms = (transforms.length == 1 && isArray(transforms[0]))\n        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));\n\n      var funcsLength = transforms.length;\n      return baseRest(function(args) {\n        var index = -1,\n            length = nativeMin(args.length, funcsLength);\n\n        while (++index < length) {\n          args[index] = transforms[index].call(this, args[index]);\n        }\n        return apply(func, this, args);\n      });\n    });\n\n    /**\n     * Creates a function that invokes `func` with `partials` prepended to the\n     * arguments it receives. This method is like `_.bind` except it does **not**\n     * alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.2.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // Partially applied with placeholders.\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partial));\n      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to the arguments it receives.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // Partially applied with placeholders.\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partialRight));\n      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified `indexes` where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, [2, 0, 1]);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     */\n    var rearg = flatRest(function(func, indexes) {\n      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as\n     * an array.\n     *\n     * **Note:** This method is based on the\n     * [rest parameter](https://mdn.io/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.rest(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function rest(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? start : toInteger(start);\n      return baseRest(func, start);\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * create function and an array of arguments much like\n     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\n     *\n     * **Note:** This method is based on the\n     * [spread operator](https://mdn.io/spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @param {number} [start=0] The start position of the spread.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start == null ? 0 : nativeMax(toInteger(start), 0);\n      return baseRest(function(args) {\n        var array = args[start],\n            otherArgs = castSlice(args, 0, start);\n\n        if (array) {\n          arrayPush(otherArgs, array);\n        }\n        return apply(func, this, otherArgs);\n      });\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed `func` invocations and a `flush` method to\n     * immediately invoke them. Provide `options` to indicate whether `func`\n     * should be invoked on the leading and/or trailing edge of the `wait`\n     * timeout. The `func` is invoked with the last arguments provided to the\n     * throttled function. Subsequent calls to the throttled function return the\n     * result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the throttled function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=true]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // Avoid excessively updating the position while scrolling.\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n     * jQuery(element).on('click', throttled);\n     *\n     * // Cancel the trailing throttled invocation.\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, {\n        'leading': leading,\n        'maxWait': wait,\n        'trailing': trailing\n      });\n    }\n\n    /**\n     * Creates a function that accepts up to one argument, ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.unary(parseInt));\n     * // => [6, 8, 10]\n     */\n    function unary(func) {\n      return ary(func, 1);\n    }\n\n    /**\n     * Creates a function that provides `value` to `wrapper` as its first\n     * argument. Any additional arguments provided to the function are appended\n     * to those provided to the `wrapper`. The wrapper is invoked with the `this`\n     * binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} [wrapper=identity] The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      return partial(castFunction(wrapper), value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Casts `value` as an array if it's not one.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Lang\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast array.\n     * @example\n     *\n     * _.castArray(1);\n     * // => [1]\n     *\n     * _.castArray({ 'a': 1 });\n     * // => [{ 'a': 1 }]\n     *\n     * _.castArray('abc');\n     * // => ['abc']\n     *\n     * _.castArray(null);\n     * // => [null]\n     *\n     * _.castArray(undefined);\n     * // => [undefined]\n     *\n     * _.castArray();\n     * // => []\n     *\n     * var array = [1, 2, 3];\n     * console.log(_.castArray(array) === array);\n     * // => true\n     */\n    function castArray() {\n      if (!arguments.length) {\n        return [];\n      }\n      var value = arguments[0];\n      return isArray(value) ? value : [value];\n    }\n\n    /**\n     * Creates a shallow clone of `value`.\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n     * arrays. The own enumerable properties of `arguments` objects are cloned\n     * as plain objects. An empty object is returned for uncloneable values such\n     * as error objects, functions, DOM nodes, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeep\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var shallow = _.clone(objects);\n     * console.log(shallow[0] === objects[0]);\n     * // => true\n     */\n    function clone(value) {\n      return baseClone(value, CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.clone` except that it accepts `customizer` which\n     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n     * cloning is handled by the method instead. The `customizer` is invoked with\n     * up to four arguments; (value [, index|key, object, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeepWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * }\n     *\n     * var el = _.cloneWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 0\n     */\n    function cloneWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * This method is like `_.clone` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.clone\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var deep = _.cloneDeep(objects);\n     * console.log(deep[0] === objects[0]);\n     * // => false\n     */\n    function cloneDeep(value) {\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.cloneWith` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.cloneWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * }\n     *\n     * var el = _.cloneDeepWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 20\n     */\n    function cloneDeepWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * Checks if `object` conforms to `source` by invoking the predicate\n     * properties of `source` with the corresponding property values of `object`.\n     *\n     * **Note:** This method is equivalent to `_.conforms` when `source` is\n     * partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });\n     * // => true\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });\n     * // => false\n     */\n    function conformsTo(object, source) {\n      return source == null || baseConformsTo(object, source, keys(source));\n    }\n\n    /**\n     * Performs a\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * comparison between two values to determine if they are equivalent.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.eq(object, object);\n     * // => true\n     *\n     * _.eq(object, other);\n     * // => false\n     *\n     * _.eq('a', 'a');\n     * // => true\n     *\n     * _.eq('a', Object('a'));\n     * // => false\n     *\n     * _.eq(NaN, NaN);\n     * // => true\n     */\n    function eq(value, other) {\n      return value === other || (value !== value && other !== other);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     * @see _.lt\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    var gt = createRelationalOperation(baseGt);\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n     *  `other`, else `false`.\n     * @see _.lte\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    var gte = createRelationalOperation(function(value, other) {\n      return value >= other;\n    });\n\n    /**\n     * Checks if `value` is likely an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n        !propertyIsEnumerable.call(value, 'callee');\n    };\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(document.body.children);\n     * // => false\n     *\n     * _.isArray('abc');\n     * // => false\n     *\n     * _.isArray(_.noop);\n     * // => false\n     */\n    var isArray = Array.isArray;\n\n    /**\n     * Checks if `value` is classified as an `ArrayBuffer` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     * @example\n     *\n     * _.isArrayBuffer(new ArrayBuffer(2));\n     * // => true\n     *\n     * _.isArrayBuffer(new Array(2));\n     * // => false\n     */\n    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\n    /**\n     * Checks if `value` is array-like. A value is considered array-like if it's\n     * not a function and has a `value.length` that's an integer greater than or\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     * @example\n     *\n     * _.isArrayLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLike(document.body.children);\n     * // => true\n     *\n     * _.isArrayLike('abc');\n     * // => true\n     *\n     * _.isArrayLike(_.noop);\n     * // => false\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(value.length) && !isFunction(value);\n    }\n\n    /**\n     * This method is like `_.isArrayLike` except that it also checks if `value`\n     * is an object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array-like object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArrayLikeObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLikeObject(document.body.children);\n     * // => true\n     *\n     * _.isArrayLikeObject('abc');\n     * // => false\n     *\n     * _.isArrayLikeObject(_.noop);\n     * // => false\n     */\n    function isArrayLikeObject(value) {\n      return isObjectLike(value) && isArrayLike(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        (isObjectLike(value) && baseGetTag(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is a buffer.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n     * @example\n     *\n     * _.isBuffer(new Buffer(2));\n     * // => true\n     *\n     * _.isBuffer(new Uint8Array(2));\n     * // => false\n     */\n    var isBuffer = nativeIsBuffer || stubFalse;\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\n    /**\n     * Checks if `value` is likely a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is an empty object, collection, map, or set.\n     *\n     * Objects are considered empty if they have no own enumerable string keyed\n     * properties.\n     *\n     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n     * jQuery-like collections are considered empty if they have a `length` of `0`.\n     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) &&\n          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n            isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n        return !value.length;\n      }\n      var tag = getTag(value);\n      if (tag == mapTag || tag == setTag) {\n        return !value.size;\n      }\n      if (isPrototype(value)) {\n        return !baseKeys(value).length;\n      }\n      for (var key in value) {\n        if (hasOwnProperty.call(value, key)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent.\n     *\n     * **Note:** This method supports comparing arrays, array buffers, booleans,\n     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n     * by their own, not inherited, enumerable properties. Functions and DOM\n     * nodes are compared by strict equality, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * object === other;\n     * // => false\n     */\n    function isEqual(value, other) {\n      return baseIsEqual(value, other);\n    }\n\n    /**\n     * This method is like `_.isEqual` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with up to\n     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, othValue) {\n     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqualWith(array, other, customizer);\n     * // => true\n     */\n    function isEqualWith(value, other, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      if (!isObjectLike(value)) {\n        return false;\n      }\n      var tag = baseGetTag(value);\n      return tag == errorTag || tag == domExcTag ||\n        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on\n     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(3);\n     * // => true\n     *\n     * _.isFinite(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     *\n     * _.isFinite('3');\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      if (!isObject(value)) {\n        return false;\n      }\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in Safari 9 which returns 'object' for typed arrays and other constructors.\n      var tag = baseGetTag(value);\n      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n    }\n\n    /**\n     * Checks if `value` is an integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n     * @example\n     *\n     * _.isInteger(3);\n     * // => true\n     *\n     * _.isInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isInteger(Infinity);\n     * // => false\n     *\n     * _.isInteger('3');\n     * // => false\n     */\n    function isInteger(value) {\n      return typeof value == 'number' && value == toInteger(value);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     * @example\n     *\n     * _.isLength(3);\n     * // => true\n     *\n     * _.isLength(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isLength(Infinity);\n     * // => false\n     *\n     * _.isLength('3');\n     * // => false\n     */\n    function isLength(value) {\n      return typeof value == 'number' &&\n        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is the\n     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(_.noop);\n     * // => true\n     *\n     * _.isObject(null);\n     * // => false\n     */\n    function isObject(value) {\n      var type = typeof value;\n      return value != null && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Checks if `value` is object-like. A value is object-like if it's not `null`\n     * and has a `typeof` result of \"object\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n     * @example\n     *\n     * _.isObjectLike({});\n     * // => true\n     *\n     * _.isObjectLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isObjectLike(_.noop);\n     * // => false\n     *\n     * _.isObjectLike(null);\n     * // => false\n     */\n    function isObjectLike(value) {\n      return value != null && typeof value == 'object';\n    }\n\n    /**\n     * Checks if `value` is classified as a `Map` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     * @example\n     *\n     * _.isMap(new Map);\n     * // => true\n     *\n     * _.isMap(new WeakMap);\n     * // => false\n     */\n    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\n    /**\n     * Performs a partial deep comparison between `object` and `source` to\n     * determine if `object` contains equivalent property values.\n     *\n     * **Note:** This method is equivalent to `_.matches` when `source` is\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.isMatch(object, { 'b': 2 });\n     * // => true\n     *\n     * _.isMatch(object, { 'b': 1 });\n     * // => false\n     */\n    function isMatch(object, source) {\n      return object === source || baseIsMatch(object, source, getMatchData(source));\n    }\n\n    /**\n     * This method is like `_.isMatch` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with five\n     * arguments: (objValue, srcValue, index|key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatchWith(object, source, customizer);\n     * // => true\n     */\n    function isMatchWith(object, source, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseIsMatch(object, source, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is based on\n     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n     * `undefined` and other non-number values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some\n      // ActiveX objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a pristine native function.\n     *\n     * **Note:** This method can't reliably detect native functions in the presence\n     * of the core-js package because core-js circumvents this kind of detection.\n     * Despite multiple requests, the core-js maintainer has made it clear: any\n     * attempt to fix the detection will be obstructed. As a result, we're left\n     * with little choice but to throw an error. Unfortunately, this also affects\n     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n     * which rely on core-js.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (isMaskable(value)) {\n        throw new Error(CORE_ERROR_TEXT);\n      }\n      return baseIsNative(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is `null` or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n     * @example\n     *\n     * _.isNil(null);\n     * // => true\n     *\n     * _.isNil(void 0);\n     * // => true\n     *\n     * _.isNil(NaN);\n     * // => false\n     */\n    function isNil(value) {\n      return value == null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n     * classified as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n     * @example\n     *\n     * _.isNumber(3);\n     * // => true\n     *\n     * _.isNumber(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isNumber(Infinity);\n     * // => true\n     *\n     * _.isNumber('3');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        (isObjectLike(value) && baseGetTag(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.8.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n        return false;\n      }\n      var proto = getPrototype(value);\n      if (proto === null) {\n        return true;\n      }\n      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n      return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n        funcToString.call(Ctor) == objectCtorString;\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\n    /**\n     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n     * double precision number which isn't the result of a rounded unsafe integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n     * @example\n     *\n     * _.isSafeInteger(3);\n     * // => true\n     *\n     * _.isSafeInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isSafeInteger(Infinity);\n     * // => false\n     *\n     * _.isSafeInteger('3');\n     * // => false\n     */\n    function isSafeInteger(value) {\n      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Set` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     * @example\n     *\n     * _.isSet(new Set);\n     * // => true\n     *\n     * _.isSet(new WeakSet);\n     * // => false\n     */\n    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Symbol` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n     * @example\n     *\n     * _.isSymbol(Symbol.iterator);\n     * // => true\n     *\n     * _.isSymbol('abc');\n     * // => false\n     */\n    function isSymbol(value) {\n      return typeof value == 'symbol' ||\n        (isObjectLike(value) && baseGetTag(value) == symbolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakMap` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.\n     * @example\n     *\n     * _.isWeakMap(new WeakMap);\n     * // => true\n     *\n     * _.isWeakMap(new Map);\n     * // => false\n     */\n    function isWeakMap(value) {\n      return isObjectLike(value) && getTag(value) == weakMapTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakSet` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.\n     * @example\n     *\n     * _.isWeakSet(new WeakSet);\n     * // => true\n     *\n     * _.isWeakSet(new Set);\n     * // => false\n     */\n    function isWeakSet(value) {\n      return isObjectLike(value) && baseGetTag(value) == weakSetTag;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     * @see _.gt\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    var lt = createRelationalOperation(baseLt);\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to\n     *  `other`, else `false`.\n     * @see _.gte\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    var lte = createRelationalOperation(function(value, other) {\n      return value <= other;\n    });\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * _.toArray({ 'a': 1, 'b': 2 });\n     * // => [1, 2]\n     *\n     * _.toArray('abc');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toArray(1);\n     * // => []\n     *\n     * _.toArray(null);\n     * // => []\n     */\n    function toArray(value) {\n      if (!value) {\n        return [];\n      }\n      if (isArrayLike(value)) {\n        return isString(value) ? stringToArray(value) : copyArray(value);\n      }\n      if (symIterator && value[symIterator]) {\n        return iteratorToArray(value[symIterator]());\n      }\n      var tag = getTag(value),\n          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n      return func(value);\n    }\n\n    /**\n     * Converts `value` to a finite number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.12.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted number.\n     * @example\n     *\n     * _.toFinite(3.2);\n     * // => 3.2\n     *\n     * _.toFinite(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toFinite(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toFinite('3.2');\n     * // => 3.2\n     */\n    function toFinite(value) {\n      if (!value) {\n        return value === 0 ? value : 0;\n      }\n      value = toNumber(value);\n      if (value === INFINITY || value === -INFINITY) {\n        var sign = (value < 0 ? -1 : 1);\n        return sign * MAX_INTEGER;\n      }\n      return value === value ? value : 0;\n    }\n\n    /**\n     * Converts `value` to an integer.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toInteger(3.2);\n     * // => 3\n     *\n     * _.toInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toInteger(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toInteger('3.2');\n     * // => 3\n     */\n    function toInteger(value) {\n      var result = toFinite(value),\n          remainder = result % 1;\n\n      return result === result ? (remainder ? result - remainder : result) : 0;\n    }\n\n    /**\n     * Converts `value` to an integer suitable for use as the length of an\n     * array-like object.\n     *\n     * **Note:** This method is based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toLength(3.2);\n     * // => 3\n     *\n     * _.toLength(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toLength(Infinity);\n     * // => 4294967295\n     *\n     * _.toLength('3.2');\n     * // => 3\n     */\n    function toLength(value) {\n      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n    }\n\n    /**\n     * Converts `value` to a number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     * @example\n     *\n     * _.toNumber(3.2);\n     * // => 3.2\n     *\n     * _.toNumber(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toNumber(Infinity);\n     * // => Infinity\n     *\n     * _.toNumber('3.2');\n     * // => 3.2\n     */\n    function toNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      if (isObject(value)) {\n        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n        value = isObject(other) ? (other + '') : other;\n      }\n      if (typeof value != 'string') {\n        return value === 0 ? value : +value;\n      }\n      value = baseTrim(value);\n      var isBinary = reIsBinary.test(value);\n      return (isBinary || reIsOctal.test(value))\n        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n        : (reIsBadHex.test(value) ? NAN : +value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable string\n     * keyed properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return copyObject(value, keysIn(value));\n    }\n\n    /**\n     * Converts `value` to a safe integer. A safe integer can be compared and\n     * represented correctly.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toSafeInteger(3.2);\n     * // => 3\n     *\n     * _.toSafeInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toSafeInteger(Infinity);\n     * // => 9007199254740991\n     *\n     * _.toSafeInteger('3.2');\n     * // => 3\n     */\n    function toSafeInteger(value) {\n      return value\n        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)\n        : (value === 0 ? value : 0);\n    }\n\n    /**\n     * Converts `value` to a string. An empty string is returned for `null`\n     * and `undefined` values. The sign of `-0` is preserved.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.toString(null);\n     * // => ''\n     *\n     * _.toString(-0);\n     * // => '-0'\n     *\n     * _.toString([1, 2, 3]);\n     * // => '1,2,3'\n     */\n    function toString(value) {\n      return value == null ? '' : baseToString(value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable string keyed properties of source objects to the\n     * destination object. Source objects are applied from left to right.\n     * Subsequent sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object` and is loosely based on\n     * [`Object.assign`](https://mdn.io/Object/assign).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assignIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assign({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var assign = createAssigner(function(object, source) {\n      if (isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keys(source), object);\n        return;\n      }\n      for (var key in source) {\n        if (hasOwnProperty.call(source, key)) {\n          assignValue(object, key, source[key]);\n        }\n      }\n    });\n\n    /**\n     * This method is like `_.assign` except that it iterates over own and\n     * inherited source properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assign\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n     */\n    var assignIn = createAssigner(function(object, source) {\n      copyObject(source, keysIn(source), object);\n    });\n\n    /**\n     * This method is like `_.assignIn` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extendWith\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignInWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keysIn(source), object, customizer);\n    });\n\n    /**\n     * This method is like `_.assign` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignInWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keys(source), object, customizer);\n    });\n\n    /**\n     * Creates an array of values corresponding to `paths` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Array} Returns the picked values.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _.at(object, ['a[0].b.c', 'a[1]']);\n     * // => [3, 4]\n     */\n    var at = flatRest(baseAt);\n\n    /**\n     * Creates an object that inherits from the `prototype` object. If a\n     * `properties` object is given, its own enumerable string keyed properties\n     * are assigned to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties == null ? result : baseAssign(result, properties);\n    }\n\n    /**\n     * Assigns own and inherited enumerable string keyed properties of source\n     * objects to the destination object for all destination properties that\n     * resolve to `undefined`. Source objects are applied from left to right.\n     * Once a property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaultsDeep\n     * @example\n     *\n     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var defaults = baseRest(function(object, sources) {\n      object = Object(object);\n\n      var index = -1;\n      var length = sources.length;\n      var guard = length > 2 ? sources[2] : undefined;\n\n      if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n        length = 1;\n      }\n\n      while (++index < length) {\n        var source = sources[index];\n        var props = keysIn(source);\n        var propsIndex = -1;\n        var propsLength = props.length;\n\n        while (++propsIndex < propsLength) {\n          var key = props[propsIndex];\n          var value = object[key];\n\n          if (value === undefined ||\n              (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n            object[key] = source[key];\n          }\n        }\n      }\n\n      return object;\n    });\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaults\n     * @example\n     *\n     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n     * // => { 'a': { 'b': 2, 'c': 3 } }\n     */\n    var defaultsDeep = baseRest(function(args) {\n      args.push(undefined, customDefaultsMerge);\n      return apply(mergeWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(o) { return o.age < 40; });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    function findKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(o) { return o.age < 40; });\n     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n    }\n\n    /**\n     * Iterates over own and inherited enumerable string keyed properties of an\n     * object and invokes `iteratee` for each property. The iteratee is invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forInRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n     */\n    function forIn(object, iteratee) {\n      return object == null\n        ? object\n        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n     */\n    function forInRight(object, iteratee) {\n      return object == null\n        ? object\n        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * Iterates over own enumerable string keyed properties of an object and\n     * invokes `iteratee` for each property. The iteratee is invoked with three\n     * arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwnRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forOwn(object, iteratee) {\n      return object && baseForOwn(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n     */\n    function forOwnRight(object, iteratee) {\n      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an array of function property names from own enumerable properties\n     * of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functionsIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functions(new Foo);\n     * // => ['a', 'b']\n     */\n    function functions(object) {\n      return object == null ? [] : baseFunctions(object, keys(object));\n    }\n\n    /**\n     * Creates an array of function property names from own and inherited\n     * enumerable properties of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functions\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functionsIn(new Foo);\n     * // => ['a', 'b', 'c']\n     */\n    function functionsIn(object) {\n      return object == null ? [] : baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the value at `path` of `object`. If the resolved value is\n     * `undefined`, the `defaultValue` is returned in its place.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, path);\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': 2 } };\n     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b');\n     * // => true\n     *\n     * _.has(object, ['a', 'b']);\n     * // => true\n     *\n     * _.has(other, 'a');\n     * // => false\n     */\n    function has(object, path) {\n      return object != null && hasPath(object, path, baseHas);\n    }\n\n    /**\n     * Checks if `path` is a direct or inherited property of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.hasIn(object, 'a');\n     * // => true\n     *\n     * _.hasIn(object, 'a.b');\n     * // => true\n     *\n     * _.hasIn(object, ['a', 'b']);\n     * // => true\n     *\n     * _.hasIn(object, 'b');\n     * // => false\n     */\n    function hasIn(object, path) {\n      return object != null && hasPath(object, path, baseHasIn);\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite\n     * property assignments of previous values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     */\n    var invert = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      result[value] = key;\n    }, constant(identity));\n\n    /**\n     * This method is like `_.invert` except that the inverted object is generated\n     * from the results of running each element of `object` thru `iteratee`. The\n     * corresponding inverted value of each inverted key is an array of keys\n     * responsible for generating the inverted value. The iteratee is invoked\n     * with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invertBy(object);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     *\n     * _.invertBy(object, function(value) {\n     *   return 'group' + value;\n     * });\n     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n     */\n    var invertBy = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      if (hasOwnProperty.call(result, value)) {\n        result[value].push(key);\n      } else {\n        result[value] = [key];\n      }\n    }, getIteratee);\n\n    /**\n     * Invokes the method at `path` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n     *\n     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n     * // => [2, 3]\n     */\n    var invoke = baseRest(baseInvoke);\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    function keys(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n     * with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapValues\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    function mapKeys(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, iteratee(value, key, object), value);\n      });\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated\n     * by running each own enumerable string keyed property of `object` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapKeys\n     * @example\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * _.mapValues(users, function(o) { return o.age; });\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, key, iteratee(value, key, object));\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.assign` except that it recursively merges own and\n     * inherited enumerable string keyed properties of source objects into the\n     * destination object. Source properties that resolve to `undefined` are\n     * skipped if a destination value exists. Array and plain object properties\n     * are merged recursively. Other objects and value types are overridden by\n     * assignment. Source objects are applied from left to right. Subsequent\n     * sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {\n     *   'a': [{ 'b': 2 }, { 'd': 4 }]\n     * };\n     *\n     * var other = {\n     *   'a': [{ 'c': 3 }, { 'e': 5 }]\n     * };\n     *\n     * _.merge(object, other);\n     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n     */\n    var merge = createAssigner(function(object, source, srcIndex) {\n      baseMerge(object, source, srcIndex);\n    });\n\n    /**\n     * This method is like `_.merge` except that it accepts `customizer` which\n     * is invoked to produce the merged values of the destination and source\n     * properties. If `customizer` returns `undefined`, merging is handled by the\n     * method instead. The `customizer` is invoked with six arguments:\n     * (objValue, srcValue, key, object, source, stack).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (_.isArray(objValue)) {\n     *     return objValue.concat(srcValue);\n     *   }\n     * }\n     *\n     * var object = { 'a': [1], 'b': [2] };\n     * var other = { 'a': [3], 'b': [4] };\n     *\n     * _.mergeWith(object, other, customizer);\n     * // => { 'a': [1, 3], 'b': [2, 4] }\n     */\n    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n      baseMerge(object, source, srcIndex, customizer);\n    });\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable property paths of `object` that are not omitted.\n     *\n     * **Note:** This method is considerably slower than `_.pick`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to omit.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omit(object, ['a', 'c']);\n     * // => { 'b': '2' }\n     */\n    var omit = flatRest(function(object, paths) {\n      var result = {};\n      if (object == null) {\n        return result;\n      }\n      var isDeep = false;\n      paths = arrayMap(paths, function(path) {\n        path = castPath(path, object);\n        isDeep || (isDeep = path.length > 1);\n        return path;\n      });\n      copyObject(object, getAllKeysIn(object), result);\n      if (isDeep) {\n        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n      }\n      var length = paths.length;\n      while (length--) {\n        baseUnset(result, paths[length]);\n      }\n      return result;\n    });\n\n    /**\n     * The opposite of `_.pickBy`; this method creates an object composed of\n     * the own and inherited enumerable string keyed properties of `object` that\n     * `predicate` doesn't return truthy for. The predicate is invoked with two\n     * arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omitBy(object, _.isNumber);\n     * // => { 'b': '2' }\n     */\n    function omitBy(object, predicate) {\n      return pickBy(object, negate(getIteratee(predicate)));\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pick(object, ['a', 'c']);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var pick = flatRest(function(object, paths) {\n      return object == null ? {} : basePick(object, paths);\n    });\n\n    /**\n     * Creates an object composed of the `object` properties `predicate` returns\n     * truthy for. The predicate is invoked with two arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pickBy(object, _.isNumber);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    function pickBy(object, predicate) {\n      if (object == null) {\n        return {};\n      }\n      var props = arrayMap(getAllKeysIn(object), function(prop) {\n        return [prop];\n      });\n      predicate = getIteratee(predicate);\n      return basePickBy(object, props, function(value, path) {\n        return predicate(value, path[0]);\n      });\n    }\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a\n     * function it's invoked with the `this` binding of its parent object and\n     * its result is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a[0].b.c3', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a[0].b.c3', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length;\n\n      // Ensure the loop is entered when path is empty.\n      if (!length) {\n        length = 1;\n        object = undefined;\n      }\n      while (++index < length) {\n        var value = object == null ? undefined : object[toKey(path[index])];\n        if (value === undefined) {\n          index = length;\n          value = defaultValue;\n        }\n        object = isFunction(value) ? value.call(object) : value;\n      }\n      return object;\n    }\n\n    /**\n     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n     * it's created. Arrays are created for missing index properties while objects\n     * are created for all other missing properties. Use `_.setWith` to customize\n     * `path` creation.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, ['x', '0', 'y', 'z'], 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      return object == null ? object : baseSet(object, path, value);\n    }\n\n    /**\n     * This method is like `_.set` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.setWith(object, '[0][1]', 'a', Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function setWith(object, path, value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseSet(object, path, value, customizer);\n    }\n\n    /**\n     * Creates an array of own enumerable string keyed-value pairs for `object`\n     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n     * entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entries\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairs(new Foo);\n     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n     */\n    var toPairs = createToPairs(keys);\n\n    /**\n     * Creates an array of own and inherited enumerable string keyed-value pairs\n     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n     * or set, its entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entriesIn\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairsIn(new Foo);\n     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n     */\n    var toPairsIn = createToPairs(keysIn);\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own\n     * enumerable string keyed properties thru `iteratee`, with each invocation\n     * potentially mutating the `accumulator` object. If `accumulator` is not\n     * provided, a new object with the same `[[Prototype]]` will be used. The\n     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * }, []);\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function transform(object, iteratee, accumulator) {\n      var isArr = isArray(object),\n          isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\n      iteratee = getIteratee(iteratee, 4);\n      if (accumulator == null) {\n        var Ctor = object && object.constructor;\n        if (isArrLike) {\n          accumulator = isArr ? new Ctor : [];\n        }\n        else if (isObject(object)) {\n          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n        }\n        else {\n          accumulator = {};\n        }\n      }\n      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Removes the property at `path` of `object`.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n     * _.unset(object, 'a[0].b.c');\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     *\n     * _.unset(object, ['a', '0', 'b', 'c']);\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     */\n    function unset(object, path) {\n      return object == null ? true : baseUnset(object, path);\n    }\n\n    /**\n     * This method is like `_.set` except that accepts `updater` to produce the\n     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n     * is invoked with one argument: (value).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n     * console.log(object.a[0].b.c);\n     * // => 9\n     *\n     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n     * console.log(object.x[0].y.z);\n     * // => 0\n     */\n    function update(object, path, updater) {\n      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n    }\n\n    /**\n     * This method is like `_.update` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function updateWith(object, path, updater, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n    }\n\n    /**\n     * Creates an array of the own enumerable string keyed property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return object == null ? [] : baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable string keyed property\n     * values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return object == null ? [] : baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Number\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     * @example\n     *\n     * _.clamp(-10, -5, 5);\n     * // => -5\n     *\n     * _.clamp(10, -5, 5);\n     * // => 5\n     */\n    function clamp(number, lower, upper) {\n      if (upper === undefined) {\n        upper = lower;\n        lower = undefined;\n      }\n      if (upper !== undefined) {\n        upper = toNumber(upper);\n        upper = upper === upper ? upper : 0;\n      }\n      if (lower !== undefined) {\n        lower = toNumber(lower);\n        lower = lower === lower ? lower : 0;\n      }\n      return baseClamp(toNumber(number), lower, upper);\n    }\n\n    /**\n     * Checks if `n` is between `start` and up to, but not including, `end`. If\n     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n     * If `start` is greater than `end` the params are swapped to support\n     * negative ranges.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.3.0\n     * @category Number\n     * @param {number} number The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     * @see _.range, _.rangeRight\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     *\n     * _.inRange(-3, -2, -6);\n     * // => true\n     */\n    function inRange(number, start, end) {\n      start = toFinite(start);\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = toFinite(end);\n      }\n      number = toNumber(number);\n      return baseInRange(number, start, end);\n    }\n\n    /**\n     * Produces a random number between the inclusive `lower` and `upper` bounds.\n     * If only one argument is provided a number between `0` and the given number\n     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n     * floats, a floating-point number is returned instead of an integer.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Number\n     * @param {number} [lower=0] The lower bound.\n     * @param {number} [upper=1] The upper bound.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(lower, upper, floating) {\n      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n        upper = floating = undefined;\n      }\n      if (floating === undefined) {\n        if (typeof upper == 'boolean') {\n          floating = upper;\n          upper = undefined;\n        }\n        else if (typeof lower == 'boolean') {\n          floating = lower;\n          lower = undefined;\n        }\n      }\n      if (lower === undefined && upper === undefined) {\n        lower = 0;\n        upper = 1;\n      }\n      else {\n        lower = toFinite(lower);\n        if (upper === undefined) {\n          upper = lower;\n          lower = 0;\n        } else {\n          upper = toFinite(upper);\n        }\n      }\n      if (lower > upper) {\n        var temp = lower;\n        lower = upper;\n        upper = temp;\n      }\n      if (floating || lower % 1 || upper % 1) {\n        var rand = nativeRandom();\n        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n      }\n      return baseRandom(lower, upper);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar--');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__FOO_BAR__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? capitalize(word) : word);\n    });\n\n    /**\n     * Converts the first character of `string` to upper case and the remaining\n     * to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('FRED');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      return upperFirst(toString(string).toLowerCase());\n    }\n\n    /**\n     * Deburrs `string` by converting\n     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n     * letters to basic Latin letters and removing\n     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = toString(string);\n      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search up to.\n     * @returns {boolean} Returns `true` if `string` ends with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = toString(string);\n      target = baseToString(target);\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : baseClamp(toInteger(position), 0, length);\n\n      var end = position;\n      position -= target.length;\n      return position >= 0 && string.slice(position, end) == target;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n     * corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional\n     * characters use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value. See\n     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * When working with HTML you should always\n     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n     * XSS vectors.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      string = toString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n     */\n    function escapeRegExp(string) {\n      string = toString(string);\n      return (string && reHasRegExpChar.test(string))\n        ? string.replace(reRegExpChar, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to\n     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__FOO_BAR__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string`, as space separated words, to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.lowerCase('--Foo-Bar--');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('fooBar');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('__FOO_BAR__');\n     * // => 'foo bar'\n     */\n    var lowerCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts the first character of `string` to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.lowerFirst('Fred');\n     * // => 'fred'\n     *\n     * _.lowerFirst('FRED');\n     * // => 'fRED'\n     */\n    var lowerFirst = createCaseFirst('toLowerCase');\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      if (!length || strLength >= length) {\n        return string;\n      }\n      var mid = (length - strLength) / 2;\n      return (\n        createPadding(nativeFloor(mid), chars) +\n        string +\n        createPadding(nativeCeil(mid), chars)\n      );\n    }\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padEnd('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padEnd('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padEnd('abc', 3);\n     * // => 'abc'\n     */\n    function padEnd(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (string + createPadding(length - strLength, chars))\n        : string;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padStart('abc', 6);\n     * // => '   abc'\n     *\n     * _.padStart('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padStart('abc', 3);\n     * // => 'abc'\n     */\n    function padStart(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (createPadding(length - strLength, chars) + string)\n        : string;\n    }\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n     * hexadecimal, in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the\n     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix=10] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      if (guard || radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=1] The number of times to repeat the string.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n, guard) {\n      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      return baseRepeat(toString(string), n);\n    }\n\n    /**\n     * Replaces matches for `pattern` in `string` with `replacement`.\n     *\n     * **Note:** This method is based on\n     * [`String#replace`](https://mdn.io/String/replace).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to modify.\n     * @param {RegExp|string} pattern The pattern to replace.\n     * @param {Function|string} replacement The match replacement.\n     * @returns {string} Returns the modified string.\n     * @example\n     *\n     * _.replace('Hi Fred', 'Fred', 'Barney');\n     * // => 'Hi Barney'\n     */\n    function replace() {\n      var args = arguments,\n          string = toString(args[0]);\n\n      return args.length < 3 ? string : string.replace(args[1], args[2]);\n    }\n\n    /**\n     * Converts `string` to\n     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--FOO-BAR--');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Splits `string` by `separator`.\n     *\n     * **Note:** This method is based on\n     * [`String#split`](https://mdn.io/String/split).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to split.\n     * @param {RegExp|string} separator The separator pattern to split by.\n     * @param {number} [limit] The length to truncate results to.\n     * @returns {Array} Returns the string segments.\n     * @example\n     *\n     * _.split('a-b-c', '-', 2);\n     * // => ['a', 'b']\n     */\n    function split(string, separator, limit) {\n      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n        separator = limit = undefined;\n      }\n      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n      if (!limit) {\n        return [];\n      }\n      string = toString(string);\n      if (string && (\n            typeof separator == 'string' ||\n            (separator != null && !isRegExp(separator))\n          )) {\n        separator = baseToString(separator);\n        if (!separator && hasUnicode(string)) {\n          return castSlice(stringToArray(string), 0, limit);\n        }\n      }\n      return string.split(separator, limit);\n    }\n\n    /**\n     * Converts `string` to\n     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.1.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar--');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__FOO_BAR__');\n     * // => 'FOO BAR'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + upperFirst(word);\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = toString(string);\n      position = position == null\n        ? 0\n        : baseClamp(toInteger(position), 0, string.length);\n\n      target = baseToString(target);\n      return string.slice(position, position + target.length) == target;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is given, it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options={}] The options object.\n     * @param {RegExp} [options.escape=_.templateSettings.escape]\n     *  The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n     *  The \"evaluate\" delimiter.\n     * @param {Object} [options.imports=_.templateSettings.imports]\n     *  An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n     *  The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n     *  The sourceURL of the compiled template.\n     * @param {string} [options.variable='obj']\n     *  The data object variable name.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // Use the \"interpolate\" delimiter to create a compiled template.\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // Use the HTML \"escape\" delimiter to escape data property values.\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the internal `print` function in \"evaluate\" delimiters.\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // Use the ES template literal delimiter as an \"interpolate\" delimiter.\n     * // Disable support by replacing the \"interpolate\" delimiter.\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // Use backslashes to treat delimiters as plain text.\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // Use the `imports` option to import `jQuery` as `jq`.\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n     *\n     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // Use custom template delimiters.\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // Use the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and stack traces.\n     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, guard) {\n      // Based on John Resig's `tmpl` implementation\n      // (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      string = toString(string);\n      options = assignInWith({}, options, settings, customDefaultsAssignIn);\n\n      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      // The sourceURL gets injected into the source that's eval-ed, so be careful\n      // to normalize all kinds of whitespace, so e.g. newlines (and unicode versions of it) can't sneak in\n      // and escape the comment, thus injecting code that gets evaled.\n      var sourceURL = '//# sourceURL=' +\n        (hasOwnProperty.call(options, 'sourceURL')\n          ? (options.sourceURL + '').replace(/\\s/g, ' ')\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products needs `match` returned in\n        // order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = hasOwnProperty.call(options, 'variable') && options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Throw an error if a forbidden character was found in `variable`, to prevent\n      // potential command injection attacks.\n      else if (reForbiddenIdentifierChars.test(variable)) {\n        throw new Error(INVALID_TEMPL_VAR_ERROR_TEXT);\n      }\n\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source)\n          .apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Converts `string`, as a whole, to lower case just like\n     * [String#toLowerCase](https://mdn.io/toLowerCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.toLower('--Foo-Bar--');\n     * // => '--foo-bar--'\n     *\n     * _.toLower('fooBar');\n     * // => 'foobar'\n     *\n     * _.toLower('__FOO_BAR__');\n     * // => '__foo_bar__'\n     */\n    function toLower(value) {\n      return toString(value).toLowerCase();\n    }\n\n    /**\n     * Converts `string`, as a whole, to upper case just like\n     * [String#toUpperCase](https://mdn.io/toUpperCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.toUpper('--foo-bar--');\n     * // => '--FOO-BAR--'\n     *\n     * _.toUpper('fooBar');\n     * // => 'FOOBAR'\n     *\n     * _.toUpper('__foo_bar__');\n     * // => '__FOO_BAR__'\n     */\n    function toUpper(value) {\n      return toString(value).toUpperCase();\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return baseTrim(string);\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          chrSymbols = stringToArray(chars),\n          start = charsStartIndex(strSymbols, chrSymbols),\n          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n      return castSlice(strSymbols, start, end).join('');\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimEnd('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimEnd('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimEnd(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.slice(0, trimmedEndIndex(string) + 1);\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\n      return castSlice(strSymbols, 0, end).join('');\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimStart('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimStart('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimStart(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimStart, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          start = charsStartIndex(strSymbols, stringToArray(chars));\n\n      return castSlice(strSymbols, start).join('');\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object} [options={}] The options object.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.truncate('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function truncate(string, options) {\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (isObject(options)) {\n        var separator = 'separator' in options ? options.separator : separator;\n        length = 'length' in options ? toInteger(options.length) : length;\n        omission = 'omission' in options ? baseToString(options.omission) : omission;\n      }\n      string = toString(string);\n\n      var strLength = string.length;\n      if (hasUnicode(string)) {\n        var strSymbols = stringToArray(string);\n        strLength = strSymbols.length;\n      }\n      if (length >= strLength) {\n        return string;\n      }\n      var end = length - stringSize(omission);\n      if (end < 1) {\n        return omission;\n      }\n      var result = strSymbols\n        ? castSlice(strSymbols, 0, end).join('')\n        : string.slice(0, end);\n\n      if (separator === undefined) {\n        return result + omission;\n      }\n      if (strSymbols) {\n        end += (result.length - end);\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              substring = result;\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            var newEnd = match.index;\n          }\n          result = result.slice(0, newEnd === undefined ? end : newEnd);\n        }\n      } else if (string.indexOf(baseToString(separator), end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\n     * their corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional\n     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.6.0\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = toString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Converts `string`, as space separated words, to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.upperCase('--foo-bar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('fooBar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('__foo_bar__');\n     * // => 'FOO BAR'\n     */\n    var upperCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toUpperCase();\n    });\n\n    /**\n     * Converts the first character of `string` to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.upperFirst('fred');\n     * // => 'Fred'\n     *\n     * _.upperFirst('FRED');\n     * // => 'FRED'\n     */\n    var upperFirst = createCaseFirst('toUpperCase');\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      string = toString(string);\n      pattern = guard ? undefined : pattern;\n\n      if (pattern === undefined) {\n        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n      }\n      return string.match(pattern) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Function} func The function to attempt.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // Avoid throwing errors for invalid selectors.\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = baseRest(function(func, args) {\n      try {\n        return apply(func, undefined, args);\n      } catch (e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method.\n     *\n     * **Note:** This method doesn't set the \"length\" property of bound functions.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} methodNames The object method names to bind.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'click': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view, ['click']);\n     * jQuery(element).on('click', view.click);\n     * // => Logs 'clicked docs' when clicked.\n     */\n    var bindAll = flatRest(function(object, methodNames) {\n      arrayEach(methodNames, function(key) {\n        key = toKey(key);\n        baseAssignValue(object, key, bind(object[key], object));\n      });\n      return object;\n    });\n\n    /**\n     * Creates a function that iterates over `pairs` and invokes the corresponding\n     * function of the first predicate to return truthy. The predicate-function\n     * pairs are invoked with the `this` binding and arguments of the created\n     * function.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Array} pairs The predicate-function pairs.\n     * @returns {Function} Returns the new composite function.\n     * @example\n     *\n     * var func = _.cond([\n     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n     *   [_.stubTrue,                      _.constant('no match')]\n     * ]);\n     *\n     * func({ 'a': 1, 'b': 2 });\n     * // => 'matches A'\n     *\n     * func({ 'a': 0, 'b': 1 });\n     * // => 'matches B'\n     *\n     * func({ 'a': '1', 'b': '2' });\n     * // => 'no match'\n     */\n    function cond(pairs) {\n      var length = pairs == null ? 0 : pairs.length,\n          toIteratee = getIteratee();\n\n      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n        if (typeof pair[1] != 'function') {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n        return [toIteratee(pair[0]), pair[1]];\n      });\n\n      return baseRest(function(args) {\n        var index = -1;\n        while (++index < length) {\n          var pair = pairs[index];\n          if (apply(pair[0], this, args)) {\n            return apply(pair[1], this, args);\n          }\n        }\n      });\n    }\n\n    /**\n     * Creates a function that invokes the predicate properties of `source` with\n     * the corresponding property values of a given object, returning `true` if\n     * all predicates return truthy, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.conformsTo` with\n     * `source` partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 2, 'b': 1 },\n     *   { 'a': 1, 'b': 2 }\n     * ];\n     *\n     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n     * // => [{ 'a': 1, 'b': 2 }]\n     */\n    function conforms(source) {\n      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new constant function.\n     * @example\n     *\n     * var objects = _.times(2, _.constant({ 'a': 1 }));\n     *\n     * console.log(objects);\n     * // => [{ 'a': 1 }, { 'a': 1 }]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Checks `value` to determine whether a default value should be returned in\n     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n     * or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Util\n     * @param {*} value The value to check.\n     * @param {*} defaultValue The default value.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * _.defaultTo(1, 10);\n     * // => 1\n     *\n     * _.defaultTo(undefined, 10);\n     * // => 10\n     */\n    function defaultTo(value, defaultValue) {\n      return (value == null || value !== value) ? defaultValue : value;\n    }\n\n    /**\n     * Creates a function that returns the result of invoking the given functions\n     * with the `this` binding of the created function, where each successive\n     * invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flowRight\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow([_.add, square]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the given functions from right to left.\n     *\n     * @static\n     * @since 3.0.0\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flow\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight([square, _.add]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * This method returns the first argument it receives.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     *\n     * console.log(_.identity(object) === object);\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that invokes `func` with the arguments of the created\n     * function. If `func` is a property name, the created function returns the\n     * property value for a given element. If `func` is an array or object, the\n     * created function returns `true` for elements that contain the equivalent\n     * source properties, otherwise it returns `false`.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Util\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, _.iteratee(['user', 'fred']));\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, _.iteratee('user'));\n     * // => ['barney', 'fred']\n     *\n     * // Create custom iteratee shorthands.\n     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n     *     return func.test(string);\n     *   };\n     * });\n     *\n     * _.filter(['abc', 'def'], /ef/);\n     * // => ['def']\n     */\n    function iteratee(func) {\n      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between a given\n     * object and `source`, returning `true` if the given object has equivalent\n     * property values, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.isMatch` with `source`\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * **Note:** Multiple values can be checked by combining several matchers\n     * using `_.overSome`\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n     *\n     * // Checking for several possible values\n     * _.filter(objects, _.overSome([_.matches({ 'a': 1 }), _.matches({ 'a': 4 })]));\n     * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between the\n     * value at `path` of a given object to `srcValue`, returning `true` if the\n     * object value is equivalent, else `false`.\n     *\n     * **Note:** Partial comparisons will match empty array and empty object\n     * `srcValue` values against any array or object value, respectively. See\n     * `_.isEqual` for a list of supported value comparisons.\n     *\n     * **Note:** Multiple values can be checked by combining several matchers\n     * using `_.overSome`\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.find(objects, _.matchesProperty('a', 4));\n     * // => { 'a': 4, 'b': 5, 'c': 6 }\n     *\n     * // Checking for several possible values\n     * _.filter(objects, _.overSome([_.matchesProperty('a', 1), _.matchesProperty('a', 4)]));\n     * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` of a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': _.constant(2) } },\n     *   { 'a': { 'b': _.constant(1) } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(objects, _.method(['a', 'b']));\n     * // => [2, 1]\n     */\n    var method = baseRest(function(path, args) {\n      return function(object) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path of `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = baseRest(function(object, args) {\n      return function(path) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable string keyed function properties of a source\n     * object to the destination object. If `object` is a function, then methods\n     * are added to its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      var props = keys(source),\n          methodNames = baseFunctions(source, props);\n\n      if (options == null &&\n          !(isObject(source) && (methodNames.length || !props.length))) {\n        options = source;\n        source = object;\n        object = this;\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n          isFunc = isFunction(object);\n\n      arrayEach(methodNames, function(methodName) {\n        var func = source[methodName];\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = function() {\n            var chainAll = this.__chain__;\n            if (chain || chainAll) {\n              var result = object(this.__wrapped__),\n                  actions = result.__actions__ = copyArray(this.__actions__);\n\n              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n              result.__chain__ = chainAll;\n              return result;\n            }\n            return func.apply(object, arrayPush([this.value()], arguments));\n          };\n        }\n      });\n\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      if (root._ === this) {\n        root._ = oldDash;\n      }\n      return this;\n    }\n\n    /**\n     * This method returns `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Util\n     * @example\n     *\n     * _.times(2, _.noop);\n     * // => [undefined, undefined]\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that gets the argument at index `n`. If `n` is negative,\n     * the nth argument from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [n=0] The index of the argument to return.\n     * @returns {Function} Returns the new pass-thru function.\n     * @example\n     *\n     * var func = _.nthArg(1);\n     * func('a', 'b', 'c', 'd');\n     * // => 'b'\n     *\n     * var func = _.nthArg(-2);\n     * func('a', 'b', 'c', 'd');\n     * // => 'c'\n     */\n    function nthArg(n) {\n      n = toInteger(n);\n      return baseRest(function(args) {\n        return baseNth(args, n);\n      });\n    }\n\n    /**\n     * Creates a function that invokes `iteratees` with the arguments it receives\n     * and returns their results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.over([Math.max, Math.min]);\n     *\n     * func(1, 2, 3, 4);\n     * // => [4, 1]\n     */\n    var over = createOver(arrayMap);\n\n    /**\n     * Creates a function that checks if **all** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * Following shorthands are possible for providing predicates.\n     * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.\n     * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overEvery([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => false\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overEvery = createOver(arrayEvery);\n\n    /**\n     * Creates a function that checks if **any** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * Following shorthands are possible for providing predicates.\n     * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.\n     * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overSome([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => true\n     *\n     * func(NaN);\n     * // => false\n     *\n     * var matchesFunc = _.overSome([{ 'a': 1 }, { 'a': 2 }])\n     * var matchesPropertyFunc = _.overSome([['a', 1], ['a', 2]])\n     */\n    var overSome = createOver(arraySome);\n\n    /**\n     * Creates a function that returns the value at `path` of a given object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': 2 } },\n     *   { 'a': { 'b': 1 } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the value at a given path of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return object == null ? undefined : baseGet(object, path);\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n     * `start` is specified without an `end` or `step`. If `end` is not specified,\n     * it's set to `start` with `start` then set to `0`.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.rangeRight\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(-4);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    var range = createRange();\n\n    /**\n     * This method is like `_.range` except that it populates values in\n     * descending order.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.range\n     * @example\n     *\n     * _.rangeRight(4);\n     * // => [3, 2, 1, 0]\n     *\n     * _.rangeRight(-4);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 5);\n     * // => [4, 3, 2, 1]\n     *\n     * _.rangeRight(0, 20, 5);\n     * // => [15, 10, 5, 0]\n     *\n     * _.rangeRight(0, -4, -1);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.rangeRight(0);\n     * // => []\n     */\n    var rangeRight = createRange(true);\n\n    /**\n     * This method returns a new empty array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Array} Returns the new empty array.\n     * @example\n     *\n     * var arrays = _.times(2, _.stubArray);\n     *\n     * console.log(arrays);\n     * // => [[], []]\n     *\n     * console.log(arrays[0] === arrays[1]);\n     * // => false\n     */\n    function stubArray() {\n      return [];\n    }\n\n    /**\n     * This method returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `false`.\n     * @example\n     *\n     * _.times(2, _.stubFalse);\n     * // => [false, false]\n     */\n    function stubFalse() {\n      return false;\n    }\n\n    /**\n     * This method returns a new empty object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Object} Returns the new empty object.\n     * @example\n     *\n     * var objects = _.times(2, _.stubObject);\n     *\n     * console.log(objects);\n     * // => [{}, {}]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => false\n     */\n    function stubObject() {\n      return {};\n    }\n\n    /**\n     * This method returns an empty string.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {string} Returns the empty string.\n     * @example\n     *\n     * _.times(2, _.stubString);\n     * // => ['', '']\n     */\n    function stubString() {\n      return '';\n    }\n\n    /**\n     * This method returns `true`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `true`.\n     * @example\n     *\n     * _.times(2, _.stubTrue);\n     * // => [true, true]\n     */\n    function stubTrue() {\n      return true;\n    }\n\n    /**\n     * Invokes the iteratee `n` times, returning an array of the results of\n     * each invocation. The iteratee is invoked with one argument; (index).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.times(3, String);\n     * // => ['0', '1', '2']\n     *\n     *  _.times(4, _.constant(0));\n     * // => [0, 0, 0, 0]\n     */\n    function times(n, iteratee) {\n      n = toInteger(n);\n      if (n < 1 || n > MAX_SAFE_INTEGER) {\n        return [];\n      }\n      var index = MAX_ARRAY_LENGTH,\n          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n      iteratee = getIteratee(iteratee);\n      n -= MAX_ARRAY_LENGTH;\n\n      var result = baseTimes(length, iteratee);\n      while (++index < n) {\n        iteratee(index);\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a property path array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the new property path array.\n     * @example\n     *\n     * _.toPath('a.b.c');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toPath('a[0].b.c');\n     * // => ['a', '0', 'b', 'c']\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return arrayMap(value, toKey);\n      }\n      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {string} [prefix=''] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return toString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {number} augend The first number in an addition.\n     * @param {number} addend The second number in an addition.\n     * @returns {number} Returns the total.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    var add = createMathOperation(function(augend, addend) {\n      return augend + addend;\n    }, 0);\n\n    /**\n     * Computes `number` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Divide two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} dividend The first number in a division.\n     * @param {number} divisor The second number in a division.\n     * @returns {number} Returns the quotient.\n     * @example\n     *\n     * _.divide(6, 4);\n     * // => 1.5\n     */\n    var divide = createMathOperation(function(dividend, divisor) {\n      return dividend / divisor;\n    }, 1);\n\n    /**\n     * Computes `number` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Computes the maximum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => undefined\n     */\n    function max(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseGt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.max` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.maxBy(objects, function(o) { return o.n; });\n     * // => { 'n': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.maxBy(objects, 'n');\n     * // => { 'n': 2 }\n     */\n    function maxBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)\n        : undefined;\n    }\n\n    /**\n     * Computes the mean of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * _.mean([4, 2, 8, 6]);\n     * // => 5\n     */\n    function mean(array) {\n      return baseMean(array, identity);\n    }\n\n    /**\n     * This method is like `_.mean` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be averaged.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.meanBy(objects, function(o) { return o.n; });\n     * // => 5\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.meanBy(objects, 'n');\n     * // => 5\n     */\n    function meanBy(array, iteratee) {\n      return baseMean(array, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * Computes the minimum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => undefined\n     */\n    function min(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseLt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.min` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.minBy(objects, function(o) { return o.n; });\n     * // => { 'n': 1 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.minBy(objects, 'n');\n     * // => { 'n': 1 }\n     */\n    function minBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)\n        : undefined;\n    }\n\n    /**\n     * Multiply two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} multiplier The first number in a multiplication.\n     * @param {number} multiplicand The second number in a multiplication.\n     * @returns {number} Returns the product.\n     * @example\n     *\n     * _.multiply(6, 4);\n     * // => 24\n     */\n    var multiply = createMathOperation(function(multiplier, multiplicand) {\n      return multiplier * multiplicand;\n    }, 1);\n\n    /**\n     * Computes `number` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Subtract two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {number} minuend The first number in a subtraction.\n     * @param {number} subtrahend The second number in a subtraction.\n     * @returns {number} Returns the difference.\n     * @example\n     *\n     * _.subtract(6, 4);\n     * // => 2\n     */\n    var subtract = createMathOperation(function(minuend, subtrahend) {\n      return minuend - subtrahend;\n    }, 0);\n\n    /**\n     * Computes the sum of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 2, 8, 6]);\n     * // => 20\n     */\n    function sum(array) {\n      return (array && array.length)\n        ? baseSum(array, identity)\n        : 0;\n    }\n\n    /**\n     * This method is like `_.sum` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be summed.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.sumBy(objects, function(o) { return o.n; });\n     * // => 20\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sumBy(objects, 'n');\n     * // => 20\n     */\n    function sumBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSum(array, getIteratee(iteratee, 2))\n        : 0;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return wrapped values in chain sequences.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.assignIn = assignIn;\n    lodash.assignInWith = assignInWith;\n    lodash.assignWith = assignWith;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.castArray = castArray;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.concat = concat;\n    lodash.cond = cond;\n    lodash.conforms = conforms;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.differenceBy = differenceBy;\n    lodash.differenceWith = differenceWith;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatMap = flatMap;\n    lodash.flatMapDeep = flatMapDeep;\n    lodash.flatMapDepth = flatMapDepth;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flattenDepth = flattenDepth;\n    lodash.flip = flip;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.fromPairs = fromPairs;\n    lodash.functions = functions;\n    lodash.functionsIn = functionsIn;\n    lodash.groupBy = groupBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.intersectionBy = intersectionBy;\n    lodash.intersectionWith = intersectionWith;\n    lodash.invert = invert;\n    lodash.invertBy = invertBy;\n    lodash.invokeMap = invokeMap;\n    lodash.iteratee = iteratee;\n    lodash.keyBy = keyBy;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.mergeWith = mergeWith;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.nthArg = nthArg;\n    lodash.omit = omit;\n    lodash.omitBy = omitBy;\n    lodash.once = once;\n    lodash.orderBy = orderBy;\n    lodash.over = over;\n    lodash.overArgs = overArgs;\n    lodash.overEvery = overEvery;\n    lodash.overSome = overSome;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pickBy = pickBy;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAll = pullAll;\n    lodash.pullAllBy = pullAllBy;\n    lodash.pullAllWith = pullAllWith;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rangeRight = rangeRight;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.reverse = reverse;\n    lodash.sampleSize = sampleSize;\n    lodash.set = set;\n    lodash.setWith = setWith;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortedUniq = sortedUniq;\n    lodash.sortedUniqBy = sortedUniqBy;\n    lodash.split = split;\n    lodash.spread = spread;\n    lodash.tail = tail;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.toArray = toArray;\n    lodash.toPairs = toPairs;\n    lodash.toPairsIn = toPairsIn;\n    lodash.toPath = toPath;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.unary = unary;\n    lodash.union = union;\n    lodash.unionBy = unionBy;\n    lodash.unionWith = unionWith;\n    lodash.uniq = uniq;\n    lodash.uniqBy = uniqBy;\n    lodash.uniqWith = uniqWith;\n    lodash.unset = unset;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.update = update;\n    lodash.updateWith = updateWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.without = without;\n    lodash.words = words;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.xorBy = xorBy;\n    lodash.xorWith = xorWith;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipObjectDeep = zipObjectDeep;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.entries = toPairs;\n    lodash.entriesIn = toPairsIn;\n    lodash.extend = assignIn;\n    lodash.extendWith = assignInWith;\n\n    // Add methods to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return unwrapped values in chain sequences.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clamp = clamp;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.cloneDeepWith = cloneDeepWith;\n    lodash.cloneWith = cloneWith;\n    lodash.conformsTo = conformsTo;\n    lodash.deburr = deburr;\n    lodash.defaultTo = defaultTo;\n    lodash.divide = divide;\n    lodash.endsWith = endsWith;\n    lodash.eq = eq;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.floor = floor;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.hasIn = hasIn;\n    lodash.head = head;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.invoke = invoke;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isArrayBuffer = isArrayBuffer;\n    lodash.isArrayLike = isArrayLike;\n    lodash.isArrayLikeObject = isArrayLikeObject;\n    lodash.isBoolean = isBoolean;\n    lodash.isBuffer = isBuffer;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isEqualWith = isEqualWith;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isInteger = isInteger;\n    lodash.isLength = isLength;\n    lodash.isMap = isMap;\n    lodash.isMatch = isMatch;\n    lodash.isMatchWith = isMatchWith;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNil = isNil;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isObjectLike = isObjectLike;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isSafeInteger = isSafeInteger;\n    lodash.isSet = isSet;\n    lodash.isString = isString;\n    lodash.isSymbol = isSymbol;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.isWeakMap = isWeakMap;\n    lodash.isWeakSet = isWeakSet;\n    lodash.join = join;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lowerCase = lowerCase;\n    lodash.lowerFirst = lowerFirst;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.maxBy = maxBy;\n    lodash.mean = mean;\n    lodash.meanBy = meanBy;\n    lodash.min = min;\n    lodash.minBy = minBy;\n    lodash.stubArray = stubArray;\n    lodash.stubFalse = stubFalse;\n    lodash.stubObject = stubObject;\n    lodash.stubString = stubString;\n    lodash.stubTrue = stubTrue;\n    lodash.multiply = multiply;\n    lodash.nth = nth;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padEnd = padEnd;\n    lodash.padStart = padStart;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.replace = replace;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.sample = sample;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedIndexBy = sortedIndexBy;\n    lodash.sortedIndexOf = sortedIndexOf;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.sortedLastIndexBy = sortedLastIndexBy;\n    lodash.sortedLastIndexOf = sortedLastIndexOf;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.subtract = subtract;\n    lodash.sum = sum;\n    lodash.sumBy = sumBy;\n    lodash.template = template;\n    lodash.times = times;\n    lodash.toFinite = toFinite;\n    lodash.toInteger = toInteger;\n    lodash.toLength = toLength;\n    lodash.toLower = toLower;\n    lodash.toNumber = toNumber;\n    lodash.toSafeInteger = toSafeInteger;\n    lodash.toString = toString;\n    lodash.toUpper = toUpper;\n    lodash.trim = trim;\n    lodash.trimEnd = trimEnd;\n    lodash.trimStart = trimStart;\n    lodash.truncate = truncate;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.upperCase = upperCase;\n    lodash.upperFirst = upperFirst;\n\n    // Add aliases.\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.first = head;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), { 'chain': false });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type {string}\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\n        var result = (this.__filtered__ && !index)\n          ? new LazyWrapper(this)\n          : this.clone();\n\n        if (result.__filtered__) {\n          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n        } else {\n          result.__views__.push({\n            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n          });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee) {\n        var result = this.clone();\n        result.__iteratees__.push({\n          'iteratee': getIteratee(iteratee, 3),\n          'type': type\n        });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n    arrayEach(['head', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n    arrayEach(['initial', 'tail'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.find = function(predicate) {\n      return this.filter(predicate).head();\n    };\n\n    LazyWrapper.prototype.findLast = function(predicate) {\n      return this.reverse().find(predicate);\n    };\n\n    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\n      if (typeof path == 'function') {\n        return new LazyWrapper(this);\n      }\n      return this.map(function(value) {\n        return baseInvoke(value, path, args);\n      });\n    });\n\n    LazyWrapper.prototype.reject = function(predicate) {\n      return this.filter(negate(getIteratee(predicate)));\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = toInteger(start);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = toInteger(end);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n      return this.reverse().takeWhile(predicate).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(MAX_ARRAY_LENGTH);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n          isTaker = /^(?:head|last)$/.test(methodName),\n          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n          retUnwrapped = isTaker || /^find/.test(methodName);\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var value = this.__wrapped__,\n            args = isTaker ? [1] : arguments,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        var interceptor = function(value) {\n          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n          return (isTaker && chainAll) ? result[0] : result;\n        };\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var chainAll = this.__chain__,\n            isHybrid = !!this.__actions__.length,\n            isUnwrapped = retUnwrapped && !chainAll,\n            onlyLazy = isLazy && !isHybrid;\n\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n          return new LodashWrapper(result, chainAll);\n        }\n        if (isUnwrapped && onlyLazy) {\n          return func.apply(this, args);\n        }\n        result = this.thru(interceptor);\n        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n      };\n    });\n\n    // Add `Array` methods to `lodash.prototype`.\n    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n      var func = arrayProto[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          var value = this.value();\n          return func.apply(isArray(value) ? value : [], args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(isArray(value) ? value : [], args);\n        });\n      };\n    });\n\n    // Map minified method names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = lodashFunc.name + '';\n        if (!hasOwnProperty.call(realNames, key)) {\n          realNames[key] = [];\n        }\n        realNames[key].push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{\n      'name': 'wrapper',\n      'func': undefined\n    }];\n\n    // Add methods to `LazyWrapper`.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chain sequence methods to the `lodash` wrapper.\n    lodash.prototype.at = wrapperAt;\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.next = wrapperNext;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add lazy aliases.\n    lodash.prototype.first = lodash.prototype.head;\n\n    if (symIterator) {\n      lodash.prototype[symIterator] = wrapperToIterator;\n    }\n    return lodash;\n  });\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds it.\n  else if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = _)._ = _;\n    // Export for CommonJS support.\n    freeExports._ = _;\n  }\n  else {\n    // Export to the global object.\n    root._ = _;\n  }\n}.call(this));\n","/*! *****************************************************************************\nCopyright (C) Microsoft. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\nvar Reflect;\n(function (Reflect) {\n    // Metadata Proposal\n    // https://rbuckton.github.io/reflect-metadata/\n    (function (factory) {\n        var root = typeof global === \"object\" ? global :\n            typeof self === \"object\" ? self :\n                typeof this === \"object\" ? this :\n                    Function(\"return this;\")();\n        var exporter = makeExporter(Reflect);\n        if (typeof root.Reflect === \"undefined\") {\n            root.Reflect = Reflect;\n        }\n        else {\n            exporter = makeExporter(root.Reflect, exporter);\n        }\n        factory(exporter);\n        function makeExporter(target, previous) {\n            return function (key, value) {\n                if (typeof target[key] !== \"function\") {\n                    Object.defineProperty(target, key, { configurable: true, writable: true, value: value });\n                }\n                if (previous)\n                    previous(key, value);\n            };\n        }\n    })(function (exporter) {\n        var hasOwn = Object.prototype.hasOwnProperty;\n        // feature test for Symbol support\n        var supportsSymbol = typeof Symbol === \"function\";\n        var toPrimitiveSymbol = supportsSymbol && typeof Symbol.toPrimitive !== \"undefined\" ? Symbol.toPrimitive : \"@@toPrimitive\";\n        var iteratorSymbol = supportsSymbol && typeof Symbol.iterator !== \"undefined\" ? Symbol.iterator : \"@@iterator\";\n        var supportsCreate = typeof Object.create === \"function\"; // feature test for Object.create support\n        var supportsProto = { __proto__: [] } instanceof Array; // feature test for __proto__ support\n        var downLevel = !supportsCreate && !supportsProto;\n        var HashMap = {\n            // create an object in dictionary mode (a.k.a. \"slow\" mode in v8)\n            create: supportsCreate\n                ? function () { return MakeDictionary(Object.create(null)); }\n                : supportsProto\n                    ? function () { return MakeDictionary({ __proto__: null }); }\n                    : function () { return MakeDictionary({}); },\n            has: downLevel\n                ? function (map, key) { return hasOwn.call(map, key); }\n                : function (map, key) { return key in map; },\n            get: downLevel\n                ? function (map, key) { return hasOwn.call(map, key) ? map[key] : undefined; }\n                : function (map, key) { return map[key]; },\n        };\n        // Load global or shim versions of Map, Set, and WeakMap\n        var functionPrototype = Object.getPrototypeOf(Function);\n        var usePolyfill = typeof process === \"object\" && process.env && process.env[\"REFLECT_METADATA_USE_MAP_POLYFILL\"] === \"true\";\n        var _Map = !usePolyfill && typeof Map === \"function\" && typeof Map.prototype.entries === \"function\" ? Map : CreateMapPolyfill();\n        var _Set = !usePolyfill && typeof Set === \"function\" && typeof Set.prototype.entries === \"function\" ? Set : CreateSetPolyfill();\n        var _WeakMap = !usePolyfill && typeof WeakMap === \"function\" ? WeakMap : CreateWeakMapPolyfill();\n        // [[Metadata]] internal slot\n        // https://rbuckton.github.io/reflect-metadata/#ordinary-object-internal-methods-and-internal-slots\n        var Metadata = new _WeakMap();\n        /**\n         * Applies a set of decorators to a property of a target object.\n         * @param decorators An array of decorators.\n         * @param target The target object.\n         * @param propertyKey (Optional) The property key to decorate.\n         * @param attributes (Optional) The property descriptor for the target key.\n         * @remarks Decorators are applied in reverse order.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     Example = Reflect.decorate(decoratorsArray, Example);\n         *\n         *     // property (on constructor)\n         *     Reflect.decorate(decoratorsArray, Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     Reflect.decorate(decoratorsArray, Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     Object.defineProperty(Example, \"staticMethod\",\n         *         Reflect.decorate(decoratorsArray, Example, \"staticMethod\",\n         *             Object.getOwnPropertyDescriptor(Example, \"staticMethod\")));\n         *\n         *     // method (on prototype)\n         *     Object.defineProperty(Example.prototype, \"method\",\n         *         Reflect.decorate(decoratorsArray, Example.prototype, \"method\",\n         *             Object.getOwnPropertyDescriptor(Example.prototype, \"method\")));\n         *\n         */\n        function decorate(decorators, target, propertyKey, attributes) {\n            if (!IsUndefined(propertyKey)) {\n                if (!IsArray(decorators))\n                    throw new TypeError();\n                if (!IsObject(target))\n                    throw new TypeError();\n                if (!IsObject(attributes) && !IsUndefined(attributes) && !IsNull(attributes))\n                    throw new TypeError();\n                if (IsNull(attributes))\n                    attributes = undefined;\n                propertyKey = ToPropertyKey(propertyKey);\n                return DecorateProperty(decorators, target, propertyKey, attributes);\n            }\n            else {\n                if (!IsArray(decorators))\n                    throw new TypeError();\n                if (!IsConstructor(target))\n                    throw new TypeError();\n                return DecorateConstructor(decorators, target);\n            }\n        }\n        exporter(\"decorate\", decorate);\n        // 4.1.2 Reflect.metadata(metadataKey, metadataValue)\n        // https://rbuckton.github.io/reflect-metadata/#reflect.metadata\n        /**\n         * A default metadata decorator factory that can be used on a class, class member, or parameter.\n         * @param metadataKey The key for the metadata entry.\n         * @param metadataValue The value for the metadata entry.\n         * @returns A decorator function.\n         * @remarks\n         * If `metadataKey` is already defined for the target and target key, the\n         * metadataValue for that key will be overwritten.\n         * @example\n         *\n         *     // constructor\n         *     @Reflect.metadata(key, value)\n         *     class Example {\n         *     }\n         *\n         *     // property (on constructor, TypeScript only)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         static staticProperty;\n         *     }\n         *\n         *     // property (on prototype, TypeScript only)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         property;\n         *     }\n         *\n         *     // method (on constructor)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         static staticMethod() { }\n         *     }\n         *\n         *     // method (on prototype)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         method() { }\n         *     }\n         *\n         */\n        function metadata(metadataKey, metadataValue) {\n            function decorator(target, propertyKey) {\n                if (!IsObject(target))\n                    throw new TypeError();\n                if (!IsUndefined(propertyKey) && !IsPropertyKey(propertyKey))\n                    throw new TypeError();\n                OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n            }\n            return decorator;\n        }\n        exporter(\"metadata\", metadata);\n        /**\n         * Define a unique metadata entry on the target.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param metadataValue A value that contains attached metadata.\n         * @param target The target object on which to define metadata.\n         * @param propertyKey (Optional) The property key for the target.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example);\n         *\n         *     // property (on constructor)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"method\");\n         *\n         *     // decorator factory as metadata-producing annotation.\n         *     function MyAnnotation(options): Decorator {\n         *         return (target, key?) => Reflect.defineMetadata(\"custom:annotation\", options, target, key);\n         *     }\n         *\n         */\n        function defineMetadata(metadataKey, metadataValue, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n        }\n        exporter(\"defineMetadata\", defineMetadata);\n        /**\n         * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function hasMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryHasMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"hasMetadata\", hasMetadata);\n        /**\n         * Gets a value indicating whether the target object has the provided metadata key defined.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function hasOwnMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryHasOwnMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"hasOwnMetadata\", hasOwnMetadata);\n        /**\n         * Gets the metadata value for the provided metadata key on the target object or its prototype chain.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function getMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryGetMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"getMetadata\", getMetadata);\n        /**\n         * Gets the metadata value for the provided metadata key on the target object.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function getOwnMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryGetOwnMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"getOwnMetadata\", getOwnMetadata);\n        /**\n         * Gets the metadata keys defined on the target object or its prototype chain.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns An array of unique metadata keys.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getMetadataKeys(Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getMetadataKeys(Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getMetadataKeys(Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"method\");\n         *\n         */\n        function getMetadataKeys(target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryMetadataKeys(target, propertyKey);\n        }\n        exporter(\"getMetadataKeys\", getMetadataKeys);\n        /**\n         * Gets the unique metadata keys defined on the target object.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns An array of unique metadata keys.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getOwnMetadataKeys(Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"method\");\n         *\n         */\n        function getOwnMetadataKeys(target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryOwnMetadataKeys(target, propertyKey);\n        }\n        exporter(\"getOwnMetadataKeys\", getOwnMetadataKeys);\n        /**\n         * Deletes the metadata entry from the target object with the provided key.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata entry was found and deleted; otherwise, false.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function deleteMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            var metadataMap = GetOrCreateMetadataMap(target, propertyKey, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return false;\n            if (!metadataMap.delete(metadataKey))\n                return false;\n            if (metadataMap.size > 0)\n                return true;\n            var targetMetadata = Metadata.get(target);\n            targetMetadata.delete(propertyKey);\n            if (targetMetadata.size > 0)\n                return true;\n            Metadata.delete(target);\n            return true;\n        }\n        exporter(\"deleteMetadata\", deleteMetadata);\n        function DecorateConstructor(decorators, target) {\n            for (var i = decorators.length - 1; i >= 0; --i) {\n                var decorator = decorators[i];\n                var decorated = decorator(target);\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                    if (!IsConstructor(decorated))\n                        throw new TypeError();\n                    target = decorated;\n                }\n            }\n            return target;\n        }\n        function DecorateProperty(decorators, target, propertyKey, descriptor) {\n            for (var i = decorators.length - 1; i >= 0; --i) {\n                var decorator = decorators[i];\n                var decorated = decorator(target, propertyKey, descriptor);\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                    if (!IsObject(decorated))\n                        throw new TypeError();\n                    descriptor = decorated;\n                }\n            }\n            return descriptor;\n        }\n        function GetOrCreateMetadataMap(O, P, Create) {\n            var targetMetadata = Metadata.get(O);\n            if (IsUndefined(targetMetadata)) {\n                if (!Create)\n                    return undefined;\n                targetMetadata = new _Map();\n                Metadata.set(O, targetMetadata);\n            }\n            var metadataMap = targetMetadata.get(P);\n            if (IsUndefined(metadataMap)) {\n                if (!Create)\n                    return undefined;\n                metadataMap = new _Map();\n                targetMetadata.set(P, metadataMap);\n            }\n            return metadataMap;\n        }\n        // 3.1.1.1 OrdinaryHasMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasmetadata\n        function OrdinaryHasMetadata(MetadataKey, O, P) {\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n            if (hasOwn)\n                return true;\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (!IsNull(parent))\n                return OrdinaryHasMetadata(MetadataKey, parent, P);\n            return false;\n        }\n        // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata\n        function OrdinaryHasOwnMetadata(MetadataKey, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return false;\n            return ToBoolean(metadataMap.has(MetadataKey));\n        }\n        // 3.1.3.1 OrdinaryGetMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetmetadata\n        function OrdinaryGetMetadata(MetadataKey, O, P) {\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n            if (hasOwn)\n                return OrdinaryGetOwnMetadata(MetadataKey, O, P);\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (!IsNull(parent))\n                return OrdinaryGetMetadata(MetadataKey, parent, P);\n            return undefined;\n        }\n        // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata\n        function OrdinaryGetOwnMetadata(MetadataKey, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return undefined;\n            return metadataMap.get(MetadataKey);\n        }\n        // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata\n        function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ true);\n            metadataMap.set(MetadataKey, MetadataValue);\n        }\n        // 3.1.6.1 OrdinaryMetadataKeys(O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarymetadatakeys\n        function OrdinaryMetadataKeys(O, P) {\n            var ownKeys = OrdinaryOwnMetadataKeys(O, P);\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (parent === null)\n                return ownKeys;\n            var parentKeys = OrdinaryMetadataKeys(parent, P);\n            if (parentKeys.length <= 0)\n                return ownKeys;\n            if (ownKeys.length <= 0)\n                return parentKeys;\n            var set = new _Set();\n            var keys = [];\n            for (var _i = 0, ownKeys_1 = ownKeys; _i < ownKeys_1.length; _i++) {\n                var key = ownKeys_1[_i];\n                var hasKey = set.has(key);\n                if (!hasKey) {\n                    set.add(key);\n                    keys.push(key);\n                }\n            }\n            for (var _a = 0, parentKeys_1 = parentKeys; _a < parentKeys_1.length; _a++) {\n                var key = parentKeys_1[_a];\n                var hasKey = set.has(key);\n                if (!hasKey) {\n                    set.add(key);\n                    keys.push(key);\n                }\n            }\n            return keys;\n        }\n        // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys\n        function OrdinaryOwnMetadataKeys(O, P) {\n            var keys = [];\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return keys;\n            var keysObj = metadataMap.keys();\n            var iterator = GetIterator(keysObj);\n            var k = 0;\n            while (true) {\n                var next = IteratorStep(iterator);\n                if (!next) {\n                    keys.length = k;\n                    return keys;\n                }\n                var nextValue = IteratorValue(next);\n                try {\n                    keys[k] = nextValue;\n                }\n                catch (e) {\n                    try {\n                        IteratorClose(iterator);\n                    }\n                    finally {\n                        throw e;\n                    }\n                }\n                k++;\n            }\n        }\n        // 6 ECMAScript Data Typ0es and Values\n        // https://tc39.github.io/ecma262/#sec-ecmascript-data-types-and-values\n        function Type(x) {\n            if (x === null)\n                return 1 /* Null */;\n            switch (typeof x) {\n                case \"undefined\": return 0 /* Undefined */;\n                case \"boolean\": return 2 /* Boolean */;\n                case \"string\": return 3 /* String */;\n                case \"symbol\": return 4 /* Symbol */;\n                case \"number\": return 5 /* Number */;\n                case \"object\": return x === null ? 1 /* Null */ : 6 /* Object */;\n                default: return 6 /* Object */;\n            }\n        }\n        // 6.1.1 The Undefined Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-undefined-type\n        function IsUndefined(x) {\n            return x === undefined;\n        }\n        // 6.1.2 The Null Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-null-type\n        function IsNull(x) {\n            return x === null;\n        }\n        // 6.1.5 The Symbol Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-symbol-type\n        function IsSymbol(x) {\n            return typeof x === \"symbol\";\n        }\n        // 6.1.7 The Object Type\n        // https://tc39.github.io/ecma262/#sec-object-type\n        function IsObject(x) {\n            return typeof x === \"object\" ? x !== null : typeof x === \"function\";\n        }\n        // 7.1 Type Conversion\n        // https://tc39.github.io/ecma262/#sec-type-conversion\n        // 7.1.1 ToPrimitive(input [, PreferredType])\n        // https://tc39.github.io/ecma262/#sec-toprimitive\n        function ToPrimitive(input, PreferredType) {\n            switch (Type(input)) {\n                case 0 /* Undefined */: return input;\n                case 1 /* Null */: return input;\n                case 2 /* Boolean */: return input;\n                case 3 /* String */: return input;\n                case 4 /* Symbol */: return input;\n                case 5 /* Number */: return input;\n            }\n            var hint = PreferredType === 3 /* String */ ? \"string\" : PreferredType === 5 /* Number */ ? \"number\" : \"default\";\n            var exoticToPrim = GetMethod(input, toPrimitiveSymbol);\n            if (exoticToPrim !== undefined) {\n                var result = exoticToPrim.call(input, hint);\n                if (IsObject(result))\n                    throw new TypeError();\n                return result;\n            }\n            return OrdinaryToPrimitive(input, hint === \"default\" ? \"number\" : hint);\n        }\n        // 7.1.1.1 OrdinaryToPrimitive(O, hint)\n        // https://tc39.github.io/ecma262/#sec-ordinarytoprimitive\n        function OrdinaryToPrimitive(O, hint) {\n            if (hint === \"string\") {\n                var toString_1 = O.toString;\n                if (IsCallable(toString_1)) {\n                    var result = toString_1.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n                var valueOf = O.valueOf;\n                if (IsCallable(valueOf)) {\n                    var result = valueOf.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n            }\n            else {\n                var valueOf = O.valueOf;\n                if (IsCallable(valueOf)) {\n                    var result = valueOf.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n                var toString_2 = O.toString;\n                if (IsCallable(toString_2)) {\n                    var result = toString_2.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n            }\n            throw new TypeError();\n        }\n        // 7.1.2 ToBoolean(argument)\n        // https://tc39.github.io/ecma262/2016/#sec-toboolean\n        function ToBoolean(argument) {\n            return !!argument;\n        }\n        // 7.1.12 ToString(argument)\n        // https://tc39.github.io/ecma262/#sec-tostring\n        function ToString(argument) {\n            return \"\" + argument;\n        }\n        // 7.1.14 ToPropertyKey(argument)\n        // https://tc39.github.io/ecma262/#sec-topropertykey\n        function ToPropertyKey(argument) {\n            var key = ToPrimitive(argument, 3 /* String */);\n            if (IsSymbol(key))\n                return key;\n            return ToString(key);\n        }\n        // 7.2 Testing and Comparison Operations\n        // https://tc39.github.io/ecma262/#sec-testing-and-comparison-operations\n        // 7.2.2 IsArray(argument)\n        // https://tc39.github.io/ecma262/#sec-isarray\n        function IsArray(argument) {\n            return Array.isArray\n                ? Array.isArray(argument)\n                : argument instanceof Object\n                    ? argument instanceof Array\n                    : Object.prototype.toString.call(argument) === \"[object Array]\";\n        }\n        // 7.2.3 IsCallable(argument)\n        // https://tc39.github.io/ecma262/#sec-iscallable\n        function IsCallable(argument) {\n            // NOTE: This is an approximation as we cannot check for [[Call]] internal method.\n            return typeof argument === \"function\";\n        }\n        // 7.2.4 IsConstructor(argument)\n        // https://tc39.github.io/ecma262/#sec-isconstructor\n        function IsConstructor(argument) {\n            // NOTE: This is an approximation as we cannot check for [[Construct]] internal method.\n            return typeof argument === \"function\";\n        }\n        // 7.2.7 IsPropertyKey(argument)\n        // https://tc39.github.io/ecma262/#sec-ispropertykey\n        function IsPropertyKey(argument) {\n            switch (Type(argument)) {\n                case 3 /* String */: return true;\n                case 4 /* Symbol */: return true;\n                default: return false;\n            }\n        }\n        // 7.3 Operations on Objects\n        // https://tc39.github.io/ecma262/#sec-operations-on-objects\n        // 7.3.9 GetMethod(V, P)\n        // https://tc39.github.io/ecma262/#sec-getmethod\n        function GetMethod(V, P) {\n            var func = V[P];\n            if (func === undefined || func === null)\n                return undefined;\n            if (!IsCallable(func))\n                throw new TypeError();\n            return func;\n        }\n        // 7.4 Operations on Iterator Objects\n        // https://tc39.github.io/ecma262/#sec-operations-on-iterator-objects\n        function GetIterator(obj) {\n            var method = GetMethod(obj, iteratorSymbol);\n            if (!IsCallable(method))\n                throw new TypeError(); // from Call\n            var iterator = method.call(obj);\n            if (!IsObject(iterator))\n                throw new TypeError();\n            return iterator;\n        }\n        // 7.4.4 IteratorValue(iterResult)\n        // https://tc39.github.io/ecma262/2016/#sec-iteratorvalue\n        function IteratorValue(iterResult) {\n            return iterResult.value;\n        }\n        // 7.4.5 IteratorStep(iterator)\n        // https://tc39.github.io/ecma262/#sec-iteratorstep\n        function IteratorStep(iterator) {\n            var result = iterator.next();\n            return result.done ? false : result;\n        }\n        // 7.4.6 IteratorClose(iterator, completion)\n        // https://tc39.github.io/ecma262/#sec-iteratorclose\n        function IteratorClose(iterator) {\n            var f = iterator[\"return\"];\n            if (f)\n                f.call(iterator);\n        }\n        // 9.1 Ordinary Object Internal Methods and Internal Slots\n        // https://tc39.github.io/ecma262/#sec-ordinary-object-internal-methods-and-internal-slots\n        // 9.1.1.1 OrdinaryGetPrototypeOf(O)\n        // https://tc39.github.io/ecma262/#sec-ordinarygetprototypeof\n        function OrdinaryGetPrototypeOf(O) {\n            var proto = Object.getPrototypeOf(O);\n            if (typeof O !== \"function\" || O === functionPrototype)\n                return proto;\n            // TypeScript doesn't set __proto__ in ES5, as it's non-standard.\n            // Try to determine the superclass constructor. Compatible implementations\n            // must either set __proto__ on a subclass constructor to the superclass constructor,\n            // or ensure each class has a valid `constructor` property on its prototype that\n            // points back to the constructor.\n            // If this is not the same as Function.[[Prototype]], then this is definately inherited.\n            // This is the case when in ES6 or when using __proto__ in a compatible browser.\n            if (proto !== functionPrototype)\n                return proto;\n            // If the super prototype is Object.prototype, null, or undefined, then we cannot determine the heritage.\n            var prototype = O.prototype;\n            var prototypeProto = prototype && Object.getPrototypeOf(prototype);\n            if (prototypeProto == null || prototypeProto === Object.prototype)\n                return proto;\n            // If the constructor was not a function, then we cannot determine the heritage.\n            var constructor = prototypeProto.constructor;\n            if (typeof constructor !== \"function\")\n                return proto;\n            // If we have some kind of self-reference, then we cannot determine the heritage.\n            if (constructor === O)\n                return proto;\n            // we have a pretty good guess at the heritage.\n            return constructor;\n        }\n        // naive Map shim\n        function CreateMapPolyfill() {\n            var cacheSentinel = {};\n            var arraySentinel = [];\n            var MapIterator = /** @class */ (function () {\n                function MapIterator(keys, values, selector) {\n                    this._index = 0;\n                    this._keys = keys;\n                    this._values = values;\n                    this._selector = selector;\n                }\n                MapIterator.prototype[\"@@iterator\"] = function () { return this; };\n                MapIterator.prototype[iteratorSymbol] = function () { return this; };\n                MapIterator.prototype.next = function () {\n                    var index = this._index;\n                    if (index >= 0 && index < this._keys.length) {\n                        var result = this._selector(this._keys[index], this._values[index]);\n                        if (index + 1 >= this._keys.length) {\n                            this._index = -1;\n                            this._keys = arraySentinel;\n                            this._values = arraySentinel;\n                        }\n                        else {\n                            this._index++;\n                        }\n                        return { value: result, done: false };\n                    }\n                    return { value: undefined, done: true };\n                };\n                MapIterator.prototype.throw = function (error) {\n                    if (this._index >= 0) {\n                        this._index = -1;\n                        this._keys = arraySentinel;\n                        this._values = arraySentinel;\n                    }\n                    throw error;\n                };\n                MapIterator.prototype.return = function (value) {\n                    if (this._index >= 0) {\n                        this._index = -1;\n                        this._keys = arraySentinel;\n                        this._values = arraySentinel;\n                    }\n                    return { value: value, done: true };\n                };\n                return MapIterator;\n            }());\n            return /** @class */ (function () {\n                function Map() {\n                    this._keys = [];\n                    this._values = [];\n                    this._cacheKey = cacheSentinel;\n                    this._cacheIndex = -2;\n                }\n                Object.defineProperty(Map.prototype, \"size\", {\n                    get: function () { return this._keys.length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                Map.prototype.has = function (key) { return this._find(key, /*insert*/ false) >= 0; };\n                Map.prototype.get = function (key) {\n                    var index = this._find(key, /*insert*/ false);\n                    return index >= 0 ? this._values[index] : undefined;\n                };\n                Map.prototype.set = function (key, value) {\n                    var index = this._find(key, /*insert*/ true);\n                    this._values[index] = value;\n                    return this;\n                };\n                Map.prototype.delete = function (key) {\n                    var index = this._find(key, /*insert*/ false);\n                    if (index >= 0) {\n                        var size = this._keys.length;\n                        for (var i = index + 1; i < size; i++) {\n                            this._keys[i - 1] = this._keys[i];\n                            this._values[i - 1] = this._values[i];\n                        }\n                        this._keys.length--;\n                        this._values.length--;\n                        if (key === this._cacheKey) {\n                            this._cacheKey = cacheSentinel;\n                            this._cacheIndex = -2;\n                        }\n                        return true;\n                    }\n                    return false;\n                };\n                Map.prototype.clear = function () {\n                    this._keys.length = 0;\n                    this._values.length = 0;\n                    this._cacheKey = cacheSentinel;\n                    this._cacheIndex = -2;\n                };\n                Map.prototype.keys = function () { return new MapIterator(this._keys, this._values, getKey); };\n                Map.prototype.values = function () { return new MapIterator(this._keys, this._values, getValue); };\n                Map.prototype.entries = function () { return new MapIterator(this._keys, this._values, getEntry); };\n                Map.prototype[\"@@iterator\"] = function () { return this.entries(); };\n                Map.prototype[iteratorSymbol] = function () { return this.entries(); };\n                Map.prototype._find = function (key, insert) {\n                    if (this._cacheKey !== key) {\n                        this._cacheIndex = this._keys.indexOf(this._cacheKey = key);\n                    }\n                    if (this._cacheIndex < 0 && insert) {\n                        this._cacheIndex = this._keys.length;\n                        this._keys.push(key);\n                        this._values.push(undefined);\n                    }\n                    return this._cacheIndex;\n                };\n                return Map;\n            }());\n            function getKey(key, _) {\n                return key;\n            }\n            function getValue(_, value) {\n                return value;\n            }\n            function getEntry(key, value) {\n                return [key, value];\n            }\n        }\n        // naive Set shim\n        function CreateSetPolyfill() {\n            return /** @class */ (function () {\n                function Set() {\n                    this._map = new _Map();\n                }\n                Object.defineProperty(Set.prototype, \"size\", {\n                    get: function () { return this._map.size; },\n                    enumerable: true,\n                    configurable: true\n                });\n                Set.prototype.has = function (value) { return this._map.has(value); };\n                Set.prototype.add = function (value) { return this._map.set(value, value), this; };\n                Set.prototype.delete = function (value) { return this._map.delete(value); };\n                Set.prototype.clear = function () { this._map.clear(); };\n                Set.prototype.keys = function () { return this._map.keys(); };\n                Set.prototype.values = function () { return this._map.values(); };\n                Set.prototype.entries = function () { return this._map.entries(); };\n                Set.prototype[\"@@iterator\"] = function () { return this.keys(); };\n                Set.prototype[iteratorSymbol] = function () { return this.keys(); };\n                return Set;\n            }());\n        }\n        // naive WeakMap shim\n        function CreateWeakMapPolyfill() {\n            var UUID_SIZE = 16;\n            var keys = HashMap.create();\n            var rootKey = CreateUniqueKey();\n            return /** @class */ (function () {\n                function WeakMap() {\n                    this._key = CreateUniqueKey();\n                }\n                WeakMap.prototype.has = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? HashMap.has(table, this._key) : false;\n                };\n                WeakMap.prototype.get = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? HashMap.get(table, this._key) : undefined;\n                };\n                WeakMap.prototype.set = function (target, value) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ true);\n                    table[this._key] = value;\n                    return this;\n                };\n                WeakMap.prototype.delete = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? delete table[this._key] : false;\n                };\n                WeakMap.prototype.clear = function () {\n                    // NOTE: not a real clear, just makes the previous data unreachable\n                    this._key = CreateUniqueKey();\n                };\n                return WeakMap;\n            }());\n            function CreateUniqueKey() {\n                var key;\n                do\n                    key = \"@@WeakMap@@\" + CreateUUID();\n                while (HashMap.has(keys, key));\n                keys[key] = true;\n                return key;\n            }\n            function GetOrCreateWeakMapTable(target, create) {\n                if (!hasOwn.call(target, rootKey)) {\n                    if (!create)\n                        return undefined;\n                    Object.defineProperty(target, rootKey, { value: HashMap.create() });\n                }\n                return target[rootKey];\n            }\n            function FillRandomBytes(buffer, size) {\n                for (var i = 0; i < size; ++i)\n                    buffer[i] = Math.random() * 0xff | 0;\n                return buffer;\n            }\n            function GenRandomBytes(size) {\n                if (typeof Uint8Array === \"function\") {\n                    if (typeof crypto !== \"undefined\")\n                        return crypto.getRandomValues(new Uint8Array(size));\n                    if (typeof msCrypto !== \"undefined\")\n                        return msCrypto.getRandomValues(new Uint8Array(size));\n                    return FillRandomBytes(new Uint8Array(size), size);\n                }\n                return FillRandomBytes(new Array(size), size);\n            }\n            function CreateUUID() {\n                var data = GenRandomBytes(UUID_SIZE);\n                // mark as random - RFC 4122 § 4.4\n                data[6] = data[6] & 0x4f | 0x40;\n                data[8] = data[8] & 0xbf | 0x80;\n                var result = \"\";\n                for (var offset = 0; offset < UUID_SIZE; ++offset) {\n                    var byte = data[offset];\n                    if (offset === 4 || offset === 6 || offset === 8)\n                        result += \"-\";\n                    if (byte < 16)\n                        result += \"0\";\n                    result += byte.toString(16).toLowerCase();\n                }\n                return result;\n            }\n        }\n        // uses a heuristic used by v8 and chakra to force an object into dictionary mode.\n        function MakeDictionary(obj) {\n            obj.__ = undefined;\n            delete obj.__;\n            return obj;\n        }\n    });\n})(Reflect || (Reflect = {}));\n","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nimport { noop } from '../util/noop';\nexport function takeUntil(notifier) {\n    return operate(function (source, subscriber) {\n        innerFrom(notifier).subscribe(createOperatorSubscriber(subscriber, function () { return subscriber.complete(); }, noop));\n        !subscriber.closed && source.subscribe(subscriber);\n    });\n}\n","export var dateTimestampProvider = {\n    now: function () {\n        return (dateTimestampProvider.delegate || Date).now();\n    },\n    delegate: undefined,\n};\n","var isArray = Array.isArray;\nvar getPrototypeOf = Object.getPrototypeOf, objectProto = Object.prototype, getKeys = Object.keys;\nexport function argsArgArrayOrObject(args) {\n    if (args.length === 1) {\n        var first_1 = args[0];\n        if (isArray(first_1)) {\n            return { args: first_1, keys: null };\n        }\n        if (isPOJO(first_1)) {\n            var keys = getKeys(first_1);\n            return {\n                args: keys.map(function (key) { return first_1[key]; }),\n                keys: keys,\n            };\n        }\n    }\n    return { args: args, keys: null };\n}\nfunction isPOJO(obj) {\n    return obj && typeof obj === 'object' && getPrototypeOf(obj) === objectProto;\n}\n","export function createObject(keys, values) {\n    return keys.reduce(function (result, key, i) { return ((result[key] = values[i]), result); }, {});\n}\n","import { __read, __spreadArray } from \"tslib\";\nimport { map } from \"../operators/map\";\nvar isArray = Array.isArray;\nfunction callOrApply(fn, args) {\n    return isArray(args) ? fn.apply(void 0, __spreadArray([], __read(args))) : fn(args);\n}\nexport function mapOneOrManyArgs(fn) {\n    return map(function (args) { return callOrApply(fn, args); });\n}\n"],"names":["hasV8BreakIterator","Intl","v8BreakIterator","Platform","constructor","_platformId","this","isBrowser","isPlatformBrowser","document","EDGE","test","navigator","userAgent","TRIDENT","BLINK","window","chrome","CSS","WEBKIT","IOS","FIREFOX","ANDROID","SAFARI","ɵfac","Platform_Factory","t","i0","PLATFORM_ID","ɵprov","token","factory","providedIn","ngDevMode","type","Injectable","args","Object","decorators","Inject","PlatformModule","PlatformModule_Factory","ɵmod","ɵinj","NgModule","supportsPassiveEvents","shadowDomIsSupported","normalizePassiveListenerOptions","options","supportsPassiveEventListeners","addEventListener","defineProperty","get","capture","_getShadowRoot","element","_supportsShadowDom","head","createShadowRoot","attachShadow","rootNode","getRootNode","ShadowRoot","_getEventTarget","event","composedPath","target","skip","count","filter","_","index","coerceBooleanProperty","value","coerceNumberProperty","fallbackValue","_isNumberValue","isNaN","parseFloat","Number","coerceArray","Array","isArray","coerceElement","elementOrRef","ElementRef","nativeElement","Action","_super","scheduler","work","call","__extends","prototype","schedule","state","delay","Subscription","intervalProvider","setInterval","handler","timeout","_i","arguments","length","delegate","apply","__spreadArray","__read","clearInterval","handle","undefined","AsyncAction","_this","pending","_a","closed","id","recycleAsyncId","requestAsyncId","_id","flush","bind","_scheduler","execute","Error","error","_execute","_delay","errorValue","errored","e","unsubscribe","actions","arrRemove","Scheduler","schedulerActionCtor","now","dateTimestampProvider","asyncScheduler","AsyncScheduler","SchedulerAction","_active","action","push","shift","debounceTime","dueTime","operate","source","subscriber","activeTask","lastValue","lastTime","emit","next","emitWhenIdle","targetTime","add","subscribe","createOperatorSubscriber","complete","MutationObserverFactory","create","callback","MutationObserver","MutationObserverFactory_Factory","ContentObserver","_mutationObserverFactory","_observedElements","Map","ngOnDestroy","forEach","_cleanupObserver","observe","Observable","observer","subscription","_observeElement","_unobserveElement","has","stream","Subject","mutations","characterData","childList","subtree","set","disconnect","delete","ContentObserver_Factory","CdkObserveContent","disabled","_disabled","_unsubscribe","_subscribe","debounce","_debounce","_contentObserver","_elementRef","_ngZone","EventEmitter","_currentSubscription","ngAfterContentInit","runOutsideAngular","pipe","CdkObserveContent_Factory","ɵdir","selectors","inputs","outputs","exportAs","Directive","selector","Output","Input","ObserversModule","ObserversModule_Factory","declarations","exports","providers","combineLatest","popScheduler","resultSelector","popResultSelector","argsArgArrayOrObject","observables","keys","from","result","combineLatestInit","valueTransform","identity","maybeSchedule","values","active","remainingFirstValues","_loop_1","i","hasFirstValue","slice","createObject","mapOneOrManyArgs","executeSchedule","concat","concatAll","mergeAll","LayoutModule","LayoutModule_Factory","mediaQueriesForWebkitCompatibility","Set","mediaQueryStyleNode","MediaMatcher","_platform","_nonce","_matchMedia","matchMedia","noopMatchMedia","query","createEmptyStyleRule","nonce","createElement","setAttribute","appendChild","sheet","insertRule","console","MediaMatcher_Factory","i1","CSP_NONCE","matches","media","addListener","removeListener","Optional","BreakpointObserver","_mediaMatcher","_zone","_queries","_destroySubject","isMatched","splitQueries","some","mediaQuery","_registerQuery","mql","stateObservable","map","observable","take","breakpointStates","response","breakpoints","queryObservable","run","startWith","takeUntil","output","BreakpointObserver_Factory","queries","split","reduce","a1","a2","trim","getAriaReferenceIds","el","attr","getAttribute","match","nextId","AriaDescriber","_document","_messageRegistry","_messagesContainer","inject","APP_ID","describe","hostElement","message","role","_canBeDescribed","key","getKey","setMessageId","messageElement","referenceCount","_createMessageElement","_isElementDescribedByMessage","_addMessageReference","removeDescription","_isElementNode","_removeMessageReference","registeredMessage","_deleteMessageElement","childNodes","remove","describedElements","querySelectorAll","_removeCdkDescribedByReferenceIds","removeAttribute","clear","textContent","_createMessagesContainer","serverContainers","messagesContainer","style","visibility","classList","body","originalReferenceIds","indexOf","join","addAriaReferencedId","ids","existingId","removeAriaReferencedId","filteredIds","val","referenceIds","messageId","trimmedMessage","ariaLabel","nodeType","ELEMENT_NODE","AriaDescriber_Factory","DOCUMENT","serviceId","InteractivityChecker","isDisabled","hasAttribute","isVisible","hasGeometry","offsetWidth","offsetHeight","getClientRects","getComputedStyle","isTabbable","frameElement","getFrameElement","getWindow","node","ownerDocument","defaultView","getTabIndexValue","nodeName","toLowerCase","tabIndexValue","isPotentiallyTabbableIOS","inputType","tabIndex","isFocusable","config","isPotentiallyFocusable","isHiddenInput","isInputElement","isNativeFormElement","isAnchorWithHref","isAnchorElement","hasValidTabIndex","ignoreVisibility","InteractivityChecker_Factory","parseInt","FocusTrap","enabled","_enabled","_startAnchor","_endAnchor","_toggleAnchorTabIndex","_element","_checker","deferAnchors","_hasAttached","startAnchorListener","focusLastTabbableElement","endAnchorListener","focusFirstTabbableElement","attachAnchors","destroy","startAnchor","endAnchor","removeEventListener","_createAnchor","parentNode","insertBefore","nextSibling","focusInitialElementWhenReady","Promise","resolve","_executeOnStable","focusInitialElement","focusFirstTabbableElementWhenReady","focusLastTabbableElementWhenReady","_getRegionBoundary","bound","markers","warn","_getFirstTabbableElement","_getLastTabbableElement","redirectToElement","querySelector","focusableChild","focus","hasAttached","root","children","tabbableChild","anchor","isEnabled","toggleAnchors","fn","isStable","onStable","FocusTrapFactory","deferCaptureElements","FocusTrapFactory_Factory","CdkTrapFocus","focusTrap","autoCapture","_autoCapture","_focusTrapFactory","_previouslyFocusedElement","_captureFocus","ngDoCheck","ngOnChanges","changes","autoCaptureChange","firstChange","_getFocusedElementPierceShadowDom","activeElement","shadowRoot","newActiveElement","CdkTrapFocus_Factory","features","ConfigurableFocusTrap","_focusTrapManager","register","deregister","_inertStrategy","super","defer","_enable","preventFocus","_disable","allowFocus","FOCUS_TRAP_INERT_STRATEGY","InjectionToken","EventListenerFocusTrapInertStrategy","_listener","_trapFocus","focusTrapRoot","contains","closest","setTimeout","FocusTrapManager","_focusTrapStack","ft","stack","splice","FocusTrapManager_Factory","ConfigurableFocusTrapFactory","configObject","ConfigurableFocusTrapFactory_Factory","INPUT_MODALITY_DETECTOR_OPTIONS","INPUT_MODALITY_DETECTOR_DEFAULT_OPTIONS","ignoreKeys","modalityEventListenerOptions","passive","InputModalityDetector","mostRecentModality","_modality","ngZone","_mostRecentTarget","BehaviorSubject","_lastTouchMs","_onKeydown","_options","keyCode","_onMousedown","Date","isFakeMousedownFromScreenReader","buttons","offsetX","offsetY","_onTouchstart","isFakeTouchstartFromScreenReader","touch","touches","changedTouches","identifier","radiusX","radiusY","modalityDetected","modalityChanged","distinctUntilChanged","InputModalityDetector_Factory","Document","LIVE_ANNOUNCER_ELEMENT_TOKEN","LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY","LIVE_ANNOUNCER_DEFAULT_OPTIONS","uniqueIds","LiveAnnouncer","elementToken","_defaultOptions","_liveElement","_createLiveElement","announce","defaultOptions","politeness","duration","clearTimeout","_previousTimeout","_exposeAnnouncerToModals","_currentPromise","_currentResolve","previousElements","getElementsByClassName","liveEl","modals","modal","ariaOwns","LiveAnnouncer_Factory","CdkAriaLive","_politeness","_subscription","elementText","_previousAnnouncedText","_liveAnnouncer","CdkAriaLive_Factory","i1$1","FOCUS_MONITOR_DEFAULT_OPTIONS","captureEventListenerOptions","FocusMonitor","_inputModalityDetector","_origin","_windowFocused","_originFromTouchInteraction","_elementInfo","_monitoredElementCount","_rootNodeFocusListenerCount","_windowFocusListener","_windowFocusTimeoutId","_stopInputModalityDetector","_rootNodeFocusAndBlurListener","parentElement","_onFocus","_onBlur","_detectionMode","detectionMode","monitor","checkChildren","of","_getDocument","cachedInfo","subject","info","_registerGlobalListeners","stopMonitoring","elementInfo","_setClasses","_removeGlobalListeners","focusVia","origin","_getClosestElementsInfo","currentElement","_originChanged","_setOrigin","_info","_getWindow","_getFocusOrigin","focusEventTarget","_shouldBeAttributedToTouch","_lastFocusOrigin","_isLastInteractionFromInputLabel","toggle","isFromInteraction","_originTimeoutId","ms","relatedTarget","Node","_emitOrigin","observers","rootNodeFocusListeners","modality","results","mostRecentTarget","labels","FocusMonitor_Factory","CdkMonitorFocus","_focusMonitor","_focusOrigin","cdkFocusChange","focusOrigin","ngAfterViewInit","_monitorSubscription","CdkMonitorFocus_Factory","HighContrastModeDetector","_breakpointSubscription","_hasCheckedHighContrastMode","_applyBodyHighContrastModeCssClasses","getHighContrastMode","testElement","backgroundColor","position","documentWindow","computedStyle","computedColor","replace","bodyClasses","mode","HighContrastModeDetector_Factory","A11yModule","highContrastModeDetector","A11yModule_Factory","imports","BaseControlValueAccessor","_renderer","onChange","onTouched","setProperty","registerOnTouched","registerOnChange","setDisabledState","BaseControlValueAccessor_Factory","BuiltInControlValueAccessor","ɵBuiltInControlValueAccessor_BaseFactory","BuiltInControlValueAccessor_Factory","NG_VALUE_ACCESSOR","CHECKBOX_VALUE_ACCESSOR","provide","useExisting","forwardRef","CheckboxControlValueAccessor","multi","writeValue","ɵCheckboxControlValueAccessor_BaseFactory","CheckboxControlValueAccessor_Factory","hostBindings","CheckboxControlValueAccessor_HostBindings","rf","ctx","CheckboxControlValueAccessor_change_HostBindingHandler","$event","checked","CheckboxControlValueAccessor_blur_HostBindingHandler","host","DEFAULT_VALUE_ACCESSOR","DefaultValueAccessor","COMPOSITION_BUFFER_MODE","renderer","elementRef","_compositionMode","_composing","_isAndroid","ɵgetDOM","getUserAgent","normalizedValue","_handleInput","_compositionStart","_compositionEnd","DefaultValueAccessor_Factory","DefaultValueAccessor_HostBindings","DefaultValueAccessor_input_HostBindingHandler","DefaultValueAccessor_blur_HostBindingHandler","DefaultValueAccessor_compositionstart_HostBindingHandler","DefaultValueAccessor_compositionend_HostBindingHandler","isEmptyInputValue","hasValidLength","NG_VALIDATORS","NG_ASYNC_VALIDATORS","EMAIL_REGEXP","Validators","min","minValidator","max","maxValidator","required","control","requiredValidator","requiredTrue","requiredTrueValidator","email","emailValidator","minLength","minLengthValidator","maxLength","maxLengthValidator","pattern","patternValidator","nullValidator","compose","validators","composeAsync","regex","regexStr","charAt","RegExp","toString","isPresent","o","toObservable","obs","ɵisPromise","ɵisSubscribable","errorMessage","ɵRuntimeError","mergeErrors","arrayOfErrors","res","errors","executeValidators","validator","normalizeValidators","isValidatorFn","validate","c","presentValidators","composeValidators","forkJoin","sources","remainingCompletions","remainingEmissions","sourceIndex","hasValue","innerFrom","composeAsyncValidators","mergeValidators","controlValidators","dirValidator","getControlValidators","_rawValidators","getControlAsyncValidators","_rawAsyncValidators","makeValidatorsArray","hasValidator","includes","addValidators","currentValidators","current","v","removeValidators","AbstractControlDirective","_onDestroyCallbacks","valid","invalid","pristine","dirty","touched","status","untouched","statusChanges","valueChanges","path","_setValidators","_composedValidatorFn","_setAsyncValidators","_composedAsyncValidatorFn","asyncValidator","_registerOnDestroy","_invokeOnDestroyCallbacks","reset","hasError","errorCode","getError","ControlContainer","formDirective","NgControl","_parent","name","valueAccessor","AbstractControlStatus","cd","_cd","isTouched","isUntouched","isPristine","isDirty","isValid","isInvalid","isPending","isSubmitted","submitted","ngControlStatusHost","ngGroupStatusHost","NgControlStatus","NgControlStatus_Factory","hostVars","NgControlStatus_HostBindings","Self","NgControlStatusGroup","NgControlStatusGroup_Factory","NgControlStatusGroup_HostBindings","formControlNameExample","formGroupNameExample","ngModelGroupExample","disabledAttrWarning","describeKey","isFormGroup","pickValidators","validatorOrOpts","isOptionsObj","pickAsyncValidators","asyncValidators","assertControlPresent","parent","isGroup","controls","noControlsError","missingControlError","assertAllValuesPresent","_forEachChild","missingControlValueError","AbstractControl","_pendingDirty","_hasOwnPendingAsyncValidator","_pendingTouched","_onCollectionChange","_onDisabledChange","_assignValidators","_assignAsyncValidators","validatorFn","asyncValidatorFn","updateOn","_updateOn","setValidators","setAsyncValidators","addAsyncValidators","removeAsyncValidators","hasAsyncValidator","clearValidators","clearAsyncValidators","markAsTouched","opts","onlySelf","markAllAsTouched","markAsUntouched","_updateTouched","markAsDirty","markAsPristine","_updatePristine","markAsPending","emitEvent","disable","skipPristineCheck","_parentMarkedDirty","_updateValue","_updateAncestors","changeFn","enable","updateValueAndValidity","setParent","getRawValue","_setInitialStatus","_cancelExistingSubscription","_runValidator","_calculateStatus","_runAsyncValidator","_updateTreeValidity","ctrl","_allControlsDisabled","_asyncValidationSubscription","setErrors","_updateControlsErrors","currPath","_find","x","_initObservables","_anyControlsHaveStatus","_anyControls","_anyControlsDirty","_anyControlsTouched","_registerOnCollectionChange","_setUpdateStrategy","parentDirty","coerceToValidator","coerceToAsyncValidator","FormGroup","_setUpControls","registerControl","addControl","removeControl","setControl","controlName","hasOwnProperty","setValue","patchValue","_reduceChildren","acc","_syncPendingControls","subtreeUpdated","updated","child","cb","_reduceValue","condition","entries","initValue","UntypedFormGroup","FormRecord","CALL_SET_DISABLED_STATE","setDisabledStateDefault","controlPath","setUpControl","dir","callSetDisabledState","_throwError","_throwMissingValueAccessorError","loc","_describeControlLocation","setUpValidators","setUpViewChangePipeline","newValue","_pendingValue","_pendingChange","updateControl","setUpModelChangePipeline","emitModelEvent","viewToModelUpdate","_unregisterOnChange","setUpBlurPipeline","setUpDisabledChangeHandler","onDisabledChange","registerOnDisabledChange","_unregisterOnDisabledChange","cleanUpControl","validateControlPresenceOnChange","noop","_noControlError","cleanUpValidators","registerOnValidatorChange","onValidatorChange","isControlUpdated","updatedValidators","updatedAsyncValidators","emitModelToViewChange","setUpFormContainer","messageEnd","isPropertyUpdated","viewModel","change","isFirstChange","is","currentValue","syncPendingControls","form","directives","selectValueAccessor","valueAccessors","defaultAccessor","builtinAccessor","customAccessor","_throwInvalidValueAccessorError","isBuiltInAccessor","getPrototypeOf","_ngModelWarning","instance","warningConfig","_ngModelWarningSentOnce","_ngModelWarningSent","ngModelWarning","directiveName","formDirectiveProvider$1","NgForm","resolvedPromise$1","_directives","ngSubmit","then","container","_findContainer","getControl","addFormGroup","group","removeFormGroup","getFormGroup","updateModel","onSubmit","method","onReset","resetForm","pop","NgForm_Factory","NgForm_HostBindings","NgForm_submit_HostBindingHandler","NgForm_reset_HostBindingHandler","removeListItem","list","isFormControlState","formState","FormControl","defaultValue","_onChange","_applyFormState","nonNullable","initialValueIsDefault","emitViewToModelChange","UntypedFormControl","AbstractFormGroupDirective","ngOnInit","_checkParentType","ɵAbstractFormGroupDirective_BaseFactory","AbstractFormGroupDirective_Factory","modelGroupProvider","NgModelGroup","modelGroupParentException","NgModelGroup_Factory","Host","SkipSelf","formControlBinding$1","NgModel","resolvedPromise","_changeDetectorRef","_registered","update","_checkForErrors","_checkName","oldName","previousValue","_getPath","_setUpControl","_updateDisabled","model","_isStandalone","_setUpStandalone","standalone","formGroupNameException","modelParentException","missingNameException","markForCheck","disabledValue","booleanAttribute","NgModel_Factory","ChangeDetectorRef","ɵNgNoValidate","ɵNgNoValidate_Factory","hostAttrs","NUMBER_VALUE_ACCESSOR","NumberValueAccessor","ɵNumberValueAccessor_BaseFactory","NumberValueAccessor_Factory","NumberValueAccessor_HostBindings","NumberValueAccessor_input_HostBindingHandler","NumberValueAccessor_blur_HostBindingHandler","RADIO_VALUE_ACCESSOR","RadioControlValueAccessor","RadioControlRegistryModule","RadioControlRegistryModule_Factory","RadioControlRegistry","_accessors","accessor","select","_isSameGroup","fireUncheck","controlPair","_control","RadioControlRegistry_Factory","_registry","_injector","setDisabledStateFired","optional","_state","_fn","formControlName","throwNameError","RadioControlValueAccessor_Factory","RadioControlValueAccessor_HostBindings","RadioControlValueAccessor_change_HostBindingHandler","RadioControlValueAccessor_blur_HostBindingHandler","RANGE_VALUE_ACCESSOR","RangeValueAccessor","ɵRangeValueAccessor_BaseFactory","RangeValueAccessor_Factory","RangeValueAccessor_HostBindings","RangeValueAccessor_change_HostBindingHandler","RangeValueAccessor_input_HostBindingHandler","RangeValueAccessor_blur_HostBindingHandler","NG_MODEL_WITH_FORM_CONTROL_WARNING","formControlBinding","FormControlDirective","_ngModelWarningConfig","_isControlChanged","previousForm","FormControlDirective_Factory","formDirectiveProvider","FormGroupDirective","_updateDomValue","_checkFormPresent","_updateValidators","_updateRegistrations","_oldForm","removeListItem$1","_setUpFormContainer","_cleanUpFormContainer","addFormArray","removeFormArray","getFormArray","oldCtrl","newCtrl","cleanUpFormContainer","missingFormException","FormGroupDirective_Factory","FormGroupDirective_HostBindings","FormGroupDirective_submit_HostBindingHandler","FormGroupDirective_reset_HostBindingHandler","formGroupNameProvider","FormGroupName","_hasInvalidParent","groupParentException","FormGroupName_Factory","formArrayNameProvider","FormArrayName","arrayParentException","FormArrayName_Factory","controlNameBinding","FormControlName","_added","ngModelGroupException","controlParentException","FormControlName_Factory","SELECT_VALUE_ACCESSOR","SelectControlValueAccessor","_buildValueString$1","_optionMap","_idCounter","_compareWith","compareWith","JSON","stringify","valueString","_getOptionId","_getOptionValue","_registerOption","_extractId$1","ɵSelectControlValueAccessor_BaseFactory","SelectControlValueAccessor_Factory","SelectControlValueAccessor_HostBindings","SelectControlValueAccessor_change_HostBindingHandler","SelectControlValueAccessor_blur_HostBindingHandler","NgSelectOption","_select","ngValue","_setElementValue","NgSelectOption_Factory","SELECT_MULTIPLE_VALUE_ACCESSOR","SelectMultipleControlValueAccessor","_buildValueString","optionSelectedStateSetter","opt","_setSelected","selected","selectedOptions","_value","_extractId","ɵSelectMultipleControlValueAccessor_BaseFactory","SelectMultipleControlValueAccessor_Factory","SelectMultipleControlValueAccessor_HostBindings","SelectMultipleControlValueAccessor_change_HostBindingHandler","SelectMultipleControlValueAccessor_blur_HostBindingHandler","ɵNgSelectMultipleOption","ɵNgSelectMultipleOption_Factory","toInteger","toFloat","AbstractValidatorDirective","_validator","inputName","input","normalizeInput","createValidator","AbstractValidatorDirective_Factory","MAX_VALIDATOR","MaxValidator","ɵMaxValidator_BaseFactory","MaxValidator_Factory","MaxValidator_HostBindings","MIN_VALIDATOR","MinValidator","ɵMinValidator_BaseFactory","MinValidator_Factory","MinValidator_HostBindings","REQUIRED_VALIDATOR","RequiredValidator","CHECKBOX_REQUIRED_VALIDATOR","CheckboxRequiredValidator","ɵRequiredValidator_BaseFactory","RequiredValidator_Factory","RequiredValidator_HostBindings","ɵCheckboxRequiredValidator_BaseFactory","CheckboxRequiredValidator_Factory","CheckboxRequiredValidator_HostBindings","EMAIL_VALIDATOR","EmailValidator","ɵEmailValidator_BaseFactory","EmailValidator_Factory","MIN_LENGTH_VALIDATOR","MinLengthValidator","minlength","ɵMinLengthValidator_BaseFactory","MinLengthValidator_Factory","MinLengthValidator_HostBindings","MAX_LENGTH_VALIDATOR","MaxLengthValidator","maxlength","ɵMaxLengthValidator_BaseFactory","MaxLengthValidator_Factory","MaxLengthValidator_HostBindings","PATTERN_VALIDATOR","PatternValidator","ɵPatternValidator_BaseFactory","PatternValidator_Factory","PatternValidator_HostBindings","SHARED_FORM_DIRECTIVES","TEMPLATE_DRIVEN_DIRECTIVES","REACTIVE_DRIVEN_DIRECTIVES","ɵInternalFormsSharedModule","ɵInternalFormsSharedModule_Factory","FormArray","at","_adjustIndex","_registerControl","insert","removeAt","adjustedIndex","isAbstractControlOptions","FormBuilder","useNonNullable","nnfb","reducedControls","_reduceControls","newOptions","record","array","createdControls","_createControl","FormBuilder_Factory","NonNullableFormBuilder","NonNullableFormBuilder_Factory","useFactory","UntypedFormBuilder","controlsConfig","ɵUntypedFormBuilder_BaseFactory","UntypedFormBuilder_Factory","Version","FormsModule","withConfig","ngModule","useValue","FormsModule_Factory","ReactiveFormsModule","warnOnNgModelWithFormControl","ReactiveFormsModule_Factory","componentWrapperDecorator","applicationConfig","moduleMetadata","ComputesTemplateFromComponent_1","require","NgComponentAnalyzer_1","metadata","storyFn","story","storyMetadata","entryComponents","schemas","storyConfig","props","storyContext","currentProps","template","isComponent","computesTemplateFromComponent","__createBinding","m","k","k2","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","__exportStar","p","decorators_1","__importDefault","mod","raw","forceReRender","configure","storiesOf","preview_api_1","render_1","decorateStory_1","api","start","renderToCanvas","decorateStory","default","render","kind","clientApi","addParameters","ReplaySubject","_bufferSize","_windowTime","_timestampProvider","Infinity","_buffer","_infiniteTimeWindow","Math","isStopped","_trimBuffer","_throwIfClosed","_innerSubscribe","copy","_checkFinalizedStatuses","adjustedBufferSize","last","ON_DESTROY_SUBJECT_KEY","Symbol","OnDestroyMixin","observeOnDestroy","untilComponentDestroyed","component","componentDestroyed","onDestroySubject","proto","compInfo","FUNC_ERROR_TEXT","PLACEHOLDER","wrapFlags","argsTag","arrayTag","boolTag","dateTag","errorTag","funcTag","genTag","mapTag","numberTag","objectTag","regexpTag","setTag","stringTag","symbolTag","weakMapTag","arrayBufferTag","dataViewTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","reEmptyStringLeading","reEmptyStringMiddle","reEmptyStringTrailing","reEscapedHtml","reUnescapedHtml","reHasEscapedHtml","reHasUnescapedHtml","reEscape","reEvaluate","reInterpolate","reIsDeepProp","reIsPlainProp","rePropName","reRegExpChar","reHasRegExpChar","reTrimStart","reWhitespace","reWrapComment","reWrapDetails","reSplitDetails","reAsciiWord","reForbiddenIdentifierChars","reEscapeChar","reEsTemplate","reFlags","reIsBadHex","reIsBinary","reIsHostCtor","reIsOctal","reIsUint","reLatin","reNoMatch","reUnescapedString","rsComboRange","rsComboMarksRange","rsBreakRange","rsMathOpRange","rsAstral","rsBreak","rsCombo","rsDigits","rsDingbat","rsLower","rsMisc","rsFitz","rsNonAstral","rsRegional","rsSurrPair","rsUpper","rsMiscLower","rsMiscUpper","reOptMod","rsSeq","rsEmoji","rsSymbol","reApos","reComboMark","reUnicode","reUnicodeWord","reHasUnicode","reHasUnicodeWord","contextProps","templateCounter","typedArrayTags","cloneableTags","stringEscapes","freeParseFloat","freeParseInt","freeGlobal","global","freeSelf","self","Function","freeExports","freeModule","module","moduleExports","freeProcess","process","nodeUtil","types","binding","nodeIsArrayBuffer","isArrayBuffer","nodeIsDate","isDate","nodeIsMap","isMap","nodeIsRegExp","isRegExp","nodeIsSet","isSet","nodeIsTypedArray","isTypedArray","func","thisArg","arrayAggregator","setter","iteratee","accumulator","arrayEach","arrayEachRight","arrayEvery","predicate","arrayFilter","resIndex","arrayIncludes","baseIndexOf","arrayIncludesWith","comparator","arrayMap","arrayPush","offset","arrayReduce","initAccum","arrayReduceRight","arraySome","asciiSize","baseProperty","baseFindKey","collection","eachFunc","baseFindIndex","fromIndex","fromRight","strictIndexOf","baseIsNaN","baseIndexOfWith","baseMean","baseSum","object","basePropertyOf","baseReduce","baseTimes","n","baseTrim","string","trimmedEndIndex","baseUnary","baseValues","cacheHas","cache","charsStartIndex","strSymbols","chrSymbols","charsEndIndex","deburrLetter","escapeHtmlChar","escapeStringChar","chr","hasUnicode","mapToArray","size","overArg","transform","arg","replaceHolders","placeholder","setToArray","setToPairs","stringSize","unicodeSize","lastIndex","stringToArray","unicodeToArray","asciiToArray","unescapeHtmlChar","runInContext","context","uid","defaults","pick","String","TypeError","arrayProto","funcProto","objectProto","coreJsData","funcToString","idCounter","maskSrcKey","exec","IE_PROTO","nativeObjectToString","objectCtorString","oldDash","reIsNative","Buffer","Uint8Array","allocUnsafe","getPrototype","objectCreate","propertyIsEnumerable","spreadableSymbol","isConcatSpreadable","symIterator","iterator","symToStringTag","toStringTag","getNative","ctxClearTimeout","ctxNow","ctxSetTimeout","nativeCeil","ceil","nativeFloor","floor","nativeGetSymbols","getOwnPropertySymbols","nativeIsBuffer","isBuffer","nativeIsFinite","isFinite","nativeJoin","nativeKeys","nativeMax","nativeMin","nativeNow","nativeParseInt","nativeRandom","random","nativeReverse","reverse","DataView","WeakMap","nativeCreate","metaMap","realNames","dataViewCtorString","toSource","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","symbolProto","symbolValueOf","valueOf","symbolToString","lodash","isObjectLike","LazyWrapper","LodashWrapper","wrapperClone","baseCreate","isObject","baseLodash","chainAll","__wrapped__","__actions__","__chain__","__index__","__values__","__dir__","__filtered__","__iteratees__","__takeCount__","__views__","Hash","entry","ListCache","MapCache","SetCache","__data__","Stack","data","arrayLikeKeys","inherited","isArr","isArg","isArguments","isBuff","isType","skipIndexes","isIndex","arraySample","baseRandom","arraySampleSize","shuffleSelf","copyArray","baseClamp","arrayShuffle","assignMergeValue","eq","baseAssignValue","assignValue","objValue","assocIndexOf","baseAggregator","baseEach","baseAssign","copyObject","baseAt","paths","number","lower","upper","baseClone","bitmask","customizer","isDeep","isFlat","isFull","initCloneArray","tag","getTag","isFunc","cloneBuffer","initCloneObject","copySymbolsIn","getSymbolsIn","baseAssignIn","keysIn","copySymbols","getSymbols","initCloneByTag","Ctor","cloneArrayBuffer","cloneDataView","dataView","buffer","byteOffset","byteLength","cloneTypedArray","cloneRegExp","regexp","cloneSymbol","symbol","stacked","subValue","getAllKeysIn","getAllKeys","baseConformsTo","baseDelay","wait","baseDifference","isCommon","valuesLength","outer","computed","valuesIndex","templateSettings","hashClear","hashDelete","hashGet","hashHas","hashSet","listCacheClear","listCacheDelete","listCacheGet","listCacheHas","listCacheSet","mapCacheClear","mapCacheDelete","getMapData","mapCacheGet","mapCacheHas","mapCacheSet","setCacheAdd","setCacheHas","stackClear","stackDelete","stackGet","stackHas","stackSet","pairs","LARGE_ARRAY_SIZE","createBaseEach","baseForOwn","baseEachRight","baseForOwnRight","baseEvery","baseExtremum","isSymbol","baseFilter","baseFlatten","depth","isStrict","isFlattenable","baseFor","createBaseFor","baseForRight","baseFunctions","isFunction","baseGet","castPath","toKey","baseGetAllKeys","keysFunc","symbolsFunc","baseGetTag","getRawTag","isOwn","unmasked","objectToString","baseGt","other","baseHas","baseHasIn","baseIntersection","arrays","othLength","othIndex","caches","seen","baseInvoke","baseIsArguments","baseIsEqual","baseIsEqualDeep","equalFunc","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","equalArrays","equalByTag","convert","isPartial","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","equalObjects","objProps","objLength","othProps","objStacked","othStacked","skipCtor","othValue","compared","objCtor","othCtor","baseIsMatch","matchData","noCustomizer","srcValue","COMPARE_PARTIAL_FLAG","baseIsNative","isMasked","baseIteratee","baseMatchesProperty","baseMatches","property","baseKeys","isPrototype","baseKeysIn","nativeKeysIn","isProto","baseLt","baseMap","isArrayLike","getMatchData","matchesStrictComparable","isKey","isStrictComparable","hasIn","baseMerge","srcIndex","baseMergeDeep","mergeFunc","safeGet","isTyped","isArrayLikeObject","isPlainObject","toPlainObject","baseNth","baseOrderBy","iteratees","orders","getIteratee","criteria","baseSortBy","comparer","sort","compareMultiple","objCriteria","othCriteria","ordersLength","compareAscending","basePickBy","baseSet","basePullAll","basePullAt","indexes","previous","baseUnset","baseRepeat","baseRest","setToString","overRest","baseSample","baseSampleSize","nested","baseSetData","baseSetToString","constant","baseShuffle","baseSlice","end","baseSome","baseSortedIndex","retHighest","low","high","MAX_ARRAY_LENGTH","mid","baseSortedIndexBy","valIsNaN","valIsNull","valIsSymbol","valIsUndefined","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","setLow","baseSortedUniq","baseToNumber","baseToString","baseUniq","createSet","seenIndex","baseUpdate","updater","baseWhile","isDrop","baseWrapperValue","baseXor","baseZipObject","assignFunc","valsLength","castArrayLikeObject","castFunction","stringToPath","castRest","castSlice","arrayBuffer","typedArray","valIsDefined","valIsReflexive","composeArgs","partials","holders","isCurried","argsIndex","argsLength","holdersLength","leftIndex","leftLength","rangeLength","isUncurried","composeArgsRight","holdersIndex","rightIndex","rightLength","isNew","createAggregator","initializer","createAssigner","assigner","guard","isIterateeCall","iterable","createCaseFirst","methodName","trailing","createCompounder","words","deburr","createCtor","thisBinding","createFind","findIndexFunc","createFlow","flatRest","funcs","prereq","thru","wrapper","getFuncName","funcName","getData","isLaziable","plant","createHybrid","partialsRight","holdersRight","argPos","ary","arity","isAry","isBind","isBindKey","isFlip","getHolder","holdersCount","countHolders","newHolders","createRecurry","reorder","arrLength","oldArray","createInverter","toIteratee","baseInverter","createMathOperation","operator","createOver","arrayFunc","createPadding","chars","charsLength","createRange","step","toFinite","baseRange","createRelationalOperation","toNumber","wrapFunc","isCurry","newData","setData","setWrapToString","createRound","precision","pair","createToPairs","baseToPairs","createWrap","mergeData","srcBitmask","newBitmask","isCombo","createCurry","createPartial","createBind","customDefaultsAssignIn","customDefaultsMerge","customOmitClone","arrStacked","arrValue","flatten","otherFunc","isKeyable","getValue","stubArray","hasPath","hasFunc","isLength","ArrayBuffer","ctorString","isMaskable","stubFalse","otherArgs","shortOut","reference","insertWrapDetails","details","updateWrapDetails","getWrapDetails","lastCalled","stamp","remaining","rand","memoizeCapped","memoize","charCodeAt","quote","subString","clone","difference","differenceBy","differenceWith","findIndex","findLastIndex","intersection","mapped","intersectionBy","intersectionWith","pull","pullAll","pullAt","union","unionBy","unionWith","unzip","unzipWith","without","xor","xorBy","xorWith","zip","zipWith","chain","interceptor","wrapperAt","countBy","find","findLast","forEachRight","groupBy","invokeMap","keyBy","partition","sortBy","before","bindKey","WRAP_BIND_FLAG","lastArgs","lastThis","maxWait","timerId","lastCallTime","lastInvokeTime","leading","maxing","invokeFunc","time","shouldInvoke","timeSinceLastCall","timerExpired","trailingEdge","remainingWait","timeWaiting","debounced","isInvoking","leadingEdge","cancel","resolver","memoized","Cache","negate","overArgs","transforms","funcsLength","partial","partialRight","rearg","gt","gte","baseIsArrayBuffer","baseIsDate","isError","isInteger","baseIsMap","isNumber","baseIsRegExp","baseIsSet","isString","baseIsTypedArray","lt","lte","toArray","iteratorToArray","done","remainder","toLength","isBinary","assign","assignIn","assignInWith","assignWith","propsIndex","propsLength","defaultsDeep","mergeWith","invert","invertBy","invoke","merge","omit","CLONE_DEEP_FLAG","basePick","pickBy","prop","toPairs","toPairsIn","camelCase","word","capitalize","upperFirst","kebabCase","lowerCase","lowerFirst","snakeCase","startCase","upperCase","toUpperCase","hasUnicodeWord","unicodeWords","asciiWords","attempt","bindAll","methodNames","flow","flowRight","methodOf","mixin","over","overEvery","overSome","basePropertyDeep","range","rangeRight","augend","addend","divide","dividend","divisor","multiply","multiplier","multiplicand","round","subtract","minuend","subtrahend","after","castArray","chunk","compact","cond","conforms","baseConforms","properties","curry","curryRight","drop","dropRight","dropRightWhile","dropWhile","fill","baseFill","flatMap","flatMapDeep","flatMapDepth","flattenDeep","flattenDepth","flip","fromPairs","functions","functionsIn","initial","mapKeys","mapValues","matchesProperty","nthArg","omitBy","once","orderBy","propertyOf","pullAllBy","pullAllWith","reject","rest","sampleSize","setWith","shuffle","sortedUniq","sortedUniqBy","separator","limit","spread","tail","takeRight","takeRightWhile","takeWhile","tap","throttle","toPath","isArrLike","unary","uniq","uniqBy","uniqWith","unset","updateWith","valuesIn","wrap","zipObject","zipObjectDeep","entriesIn","extend","extendWith","clamp","cloneDeep","cloneDeepWith","cloneWith","conformsTo","defaultTo","endsWith","escape","escapeRegExp","every","findKey","findLastKey","forIn","forInRight","forOwn","forOwnRight","inRange","baseInRange","isBoolean","isElement","isEmpty","isEqual","isEqualWith","isMatch","isMatchWith","isNative","isNil","isNull","isSafeInteger","isUndefined","isWeakMap","isWeakSet","lastIndexOf","strictLastIndexOf","maxBy","mean","meanBy","minBy","stubObject","stubString","stubTrue","nth","noConflict","pad","strLength","padEnd","padStart","radix","floating","temp","reduceRight","repeat","sample","sortedIndex","sortedIndexBy","sortedIndexOf","sortedLastIndex","sortedLastIndexBy","sortedLastIndexOf","startsWith","sum","sumBy","settings","isEscaping","isEvaluating","importsKeys","importsValues","interpolate","reDelimiters","evaluate","sourceURL","escapeValue","interpolateValue","esTemplateValue","evaluateValue","variable","times","toLower","toSafeInteger","toUpper","trimEnd","trimStart","truncate","omission","search","substring","newEnd","unescape","uniqueId","prefix","each","eachRight","first","VERSION","isFilter","takeName","dropName","checkIteratee","isTaker","lodashFunc","retUnwrapped","isLazy","useLazy","isHybrid","isUnwrapped","onlyLazy","chainName","lazyClone","lazyReverse","lazyValue","isRight","view","getView","iterLength","takeCount","iterIndex","wrapperChain","commit","wrapperCommit","wrapperNext","wrapperPlant","wrapperReverse","wrapped","toJSON","wrapperValue","wrapperToIterator","define","Reflect","exporter","makeExporter","hasOwn","supportsSymbol","toPrimitiveSymbol","toPrimitive","iteratorSymbol","supportsCreate","supportsProto","__proto__","downLevel","HashMap","MakeDictionary","functionPrototype","usePolyfill","env","_Map","CreateMapPolyfill","_Set","CreateSetPolyfill","Metadata","CreateWeakMapPolyfill","decorate","propertyKey","attributes","IsUndefined","IsArray","IsConstructor","DecorateConstructor","IsObject","IsNull","DecorateProperty","ToPropertyKey","metadataKey","metadataValue","decorator","IsPropertyKey","OrdinaryDefineOwnMetadata","defineMetadata","hasMetadata","OrdinaryHasMetadata","hasOwnMetadata","OrdinaryHasOwnMetadata","getMetadata","OrdinaryGetMetadata","getOwnMetadata","OrdinaryGetOwnMetadata","getMetadataKeys","OrdinaryMetadataKeys","getOwnMetadataKeys","OrdinaryOwnMetadataKeys","deleteMetadata","metadataMap","GetOrCreateMetadataMap","targetMetadata","decorated","descriptor","O","P","Create","MetadataKey","OrdinaryGetPrototypeOf","ToBoolean","MetadataValue","ownKeys","parentKeys","ownKeys_1","parentKeys_1","GetIterator","IteratorStep","nextValue","IteratorValue","IteratorClose","Type","IsSymbol","ToPrimitive","PreferredType","hint","exoticToPrim","GetMethod","OrdinaryToPrimitive","toString_1","IsCallable","toString_2","argument","ToString","V","obj","iterResult","f","prototypeProto","cacheSentinel","arraySentinel","MapIterator","_index","_keys","_values","_selector","throw","return","_cacheKey","_cacheIndex","getEntry","_map","UUID_SIZE","rootKey","CreateUniqueKey","_key","table","GetOrCreateWeakMapTable","CreateUUID","FillRandomBytes","GenRandomBytes","crypto","getRandomValues","msCrypto","byte","__","notifier","getKeys","first_1","isPOJO","callOrApply"],"sourceRoot":"webpack:///","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32]}