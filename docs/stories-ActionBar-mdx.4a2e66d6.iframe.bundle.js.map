{"version":3,"file":"stories-ActionBar-mdx.4a2e66d6.iframe.bundle.js","mappings":"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","sources":["./src/stories/ActionBar.stories.ts","./node_modules/@mdx-js/react/lib/index.js","./node_modules/react/cjs/react-jsx-runtime.production.min.js","./node_modules/react/jsx-runtime.js","./src/stories/ActionBar.mdx"],"sourcesContent":["import type { Meta, StoryObj } from '@storybook/angular';\nimport { moduleMetadata } from '@storybook/angular';\nimport { OpSpotModule } from '../app/spot/spot.module';\n\nconst meta:Meta = {\n  title: 'Patterns/ActionBar',\n  decorators: [\n    moduleMetadata({\n      imports: [OpSpotModule],\n    }),\n  ],\n};\n\nexport default meta;\ntype Story = StoryObj;\n\nexport const InModal:Story = {\n  render: (args) => ({\n    props: args,\n    template: `\n      <div class=\"spot-modal\" style=\"border: rgb(224, 224, 224) 1px solid\">\n        <div class=\"spot-modal--header\">Delete attachment</div>\n        <div class=\"spot-modal--body spot-container\">\n          <span class=\"spot-body-small\">Are you sure you want to delete this file? This action is not reversible.</span>\n        </div>\n        <div class=\"spot-action-bar\">\n          <div class=\"spot-action-bar--right\">\n            <button\n              type=\"button\"\n              class=\"spot-action-bar--action button\"\n            >Cancel</button>\n            <button\n              type=\"button\"\n              class=\"spot-action-bar--action button -danger\"\n            >\n              <span class=\"spot-icon spot-icon_delete\"></span>\n              <span>Delete attachment</span>\n            </button>\n          </div>\n        </div>\n      </div>\n   `,\n  }),\n};\n\nexport const Default:Story = {\n  render: (args) => ({\n    props: args,\n    template: `\n      <div class=\"spot-action-bar\">\n        <div class=\"spot-action-bar--left\">\n          <spot-selector-field\n            class=\"spot-action-bar--action\"\n            label=\"Remember this choice\"\n          >\n            <spot-checkbox slot=\"input\"></spot-checkbox>\n          </spot-selector-field>\n        </div>\n        <div class=\"spot-action-bar--right\">\n          <button\n            type=\"button\"\n            class=\"spot-action-bar--action button -highlight\"\n          >Okay\n          </button>\n        </div>\n      </div>\n   `,\n  }),\n};\n\nexport const LeftButtons:Story = {\n  render: (args) => ({\n    props: args,\n    template: `\n      <div class=\"spot-action-bar\">\n        <div class=\"spot-action-bar--left\">\n          <button\n            type=\"button\"\n            class=\"spot-action-bar--action button\"\n          >Cancel</button>\n          <button\n            type=\"button\"\n            class=\"spot-action-bar--action button -highlight\"\n          >Save</button>\n        </div>\n        <div class=\"spot-action-bar--right\">\n          <spot-selector-field\n            class=\"spot-action-bar--action\"\n            [label]=\"'Remember this choice'\"\n          >\n            <spot-checkbox slot=\"input\"></spot-checkbox>\n          </spot-selector-field>\n        </div>\n      </div>\n   `,\n  }),\n};\n\nexport const Transparent:Story = {\n  render: (args) => ({\n    props: args,\n    template: `\n      <div class=\"spot-action-bar spot-action-bar_transparent\">\n        <div class=\"spot-action-bar--left\">\n          <spot-selector-field\n            class=\"spot-action-bar--action\"\n            [label]=\"'Remember this choice'\"\n          >\n            <spot-checkbox slot=\"input\"></spot-checkbox>\n          </spot-selector-field>\n        </div>\n        <div class=\"spot-action-bar--right\">\n          <button\n            type=\"button\"\n            class=\"spot-action-bar--action button\"\n          >\n            <span>Cancel</span>\n          </button>\n          <button\n            type=\"button\"\n            class=\"spot-action-bar--action button -danger\"\n          >\n            <span class=\"spot-icon spot-icon_delete\"></span>\n            <span>Delete</span>\n          </button>\n        </div>\n      </div>\n   `,\n  }),\n};\n\nexport const NoSideOption:Story = {\n  render: (args) => ({\n    props: args,\n    template: `\n      <div class=\"spot-action-bar\">\n        <div class=\"spot-action-bar--right\">\n          <button\n            type=\"button\"\n            class=\"spot-action-bar--action button\"\n          >\n            <span>Cancel</span>\n          </button>\n          <button\n            type=\"button\"\n            class=\"spot-action-bar--action button -highlight\"\n          >\n            <span>Next</span>\n          </button>\n        </div>\n      </div>\n   `,\n  }),\n};\n\nexport const MoreButtons:Story = {\n  render: (args) => ({\n    props: args,\n    template: `\n      <div class=\"spot-action-bar\">\n        <div class=\"spot-action-bar--left\">\n          <button\n            type=\"button\"\n            class=\"spot-action-bar--action button\"\n          >\n            <span class=\"spot-icon spot-icon_watched\"></span>\n            <span>Watch</span>\n          </button>\n          <button\n            type=\"button\"\n            class=\"spot-action-bar--action button\"\n          >\n            <span class=\"spot-icon spot-icon_mark-read\"></span>\n            <span>Mark as read</span>\n          </button>\n          <button\n            type=\"button\"\n            class=\"spot-action-bar--action button\"\n          >\n            <span>More</span>\n            <span class=\"spot-icon spot-icon_dropdown\"></span>\n          </button>\n        </div>\n      </div>\n   `,\n  }),\n};\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@storybook/addon-docs/mdx-react-shim\";\nimport {Canvas, Meta} from '@storybook/blocks';\nimport * as ActionBarStories from './ActionBar.stories';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    h2: \"h2\",\n    strong: \"strong\",\n    a: \"a\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(Meta, {\n      of: ActionBarStories\n    }), \"\\n\", _jsx(_components.h1, {\n      id: \"action-bar\",\n      children: \"Action Bar\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The action bar is generally used at the bottom of modals to present the user with a set of actions. These actions are often relative to choices or selections made in the containing modal.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The most common choices are \\\"Save/apply\\\" and \\\"Cancel\\\".  At least one button (Cancel) is the absolute minimum.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Above, you see an action bar embedded inside a modal dialogue.\"\n    }), \"\\n\", _jsx(Canvas, {\n      of: ActionBarStories.InModal\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"composition\",\n      children: \"Composition\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The action bar is composed of:\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"Button set\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"These are a set of buttons that form the main action choices presented to the user. Although a two-button set is most common, there can be a maximum of three buttons (see “\", _jsx(_components.a, {\n        href: \"#\",\n        children: \"Options\"\n      }), \"” below).\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"Side option (optional)\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The side option allows for a third action (usually a checkbox, but can also be a button, a toggle or any other control). Ideally, the text should be clear and concise.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"variants\",\n      children: \"Variants\"\n    }), \"\\n\", _jsx(Canvas, {\n      of: ActionBarStories.Default\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"By default:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"the primary button set is on the right side of the action bar\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"the side option on the left\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"the bar has a grey background\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"There are however alternative variants:\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"Left buttons\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The button set can be moved to the left, placing the side action on the right. This should be used sparingly and only if absolutely necessary.\"\n    }), \"\\n\", _jsx(Canvas, {\n      of: ActionBarStories.LeftButtons\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"Transparent background\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The transparent background is useful for when having the action bar in grey (default) does not work visually. The transparent version will simply take the background colour of the element in which it is contained, usually white.\"\n    }), \"\\n\", _jsx(Canvas, {\n      of: ActionBarStories.Transparent\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"options\",\n      children: \"Options\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"Side options\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The side option is, as the name suggests, optional. An action bar can simply be empty on one side, like so:\"\n    }), \"\\n\", _jsx(Canvas, {\n      of: ActionBarStories.NoSideOption\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"More buttons\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The action bar can also be composed of up to three action buttons. Should there be more than three actions to be made available to the user, the third button will be a “More” button opens a drop-down with additional options.\"\n    }), \"\\n\", _jsx(Canvas, {\n      of: ActionBarStories.MoreButtons\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"behaviour\",\n      children: \"Behaviour\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"At the very minimum there should be one action, ideally two: a primary action like ‘Save’ or ‘Delete’ and a secondary action like ‘Cancel’.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"When the action bar is use as a toolbar with more three buttons (or with a “More” button), all actions can be secondary.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"line-breaks-and-wrapping\",\n      children: \"Line breaks and wrapping\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"When the text is too long, the button set will remain in one line, and the side option (if present) will move to a new line.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"If the text in the side option is too long, that will itself also wrap in multiple lines.\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["title","decorators","moduleMetadata","imports","OpSpotModule","InModal","render","args","props","template","Default","LeftButtons","Transparent","NoSideOption","MoreButtons","MDXContext","React","withMDXComponents","Component","boundMDXComponent","allComponents","useMDXComponents","components","contextComponents","emptyObject","MDXProvider","disableParentContext","Provider","value","children","f","require","k","Symbol","for","l","m","Object","prototype","hasOwnProperty","n","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","p","key","ref","__self","__source","q","c","a","g","b","d","e","h","call","defaultProps","$$typeof","type","_owner","current","exports","Fragment","jsx","jsxs","module","_createMdxContent","_components","assign","h1","h2","strong","ul","li","of","id","href","MDXContent","wrapper","MDXLayout"],"sourceRoot":"webpack:///","x_google_ignoreList":[1,2,3]}