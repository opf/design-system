{"version":3,"file":"stories-DropModal-mdx.c97c92ee.iframe.bundle.js","mappings":"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","sources":["./src/stories/DropModal.stories.ts","./src/stories/i18n.service.stub.ts","./node_modules/@mdx-js/react/lib/index.js","./node_modules/react/cjs/react-jsx-runtime.production.min.js","./node_modules/react/jsx-runtime.js","./src/stories/DropModal.mdx"],"sourcesContent":["import type { Meta, StoryObj } from '@storybook/angular';\nimport { moduleMetadata } from '@storybook/angular';\n\nimport { OpSpotModule } from '../app/spot/spot.module';\nimport SpotDropAlignmentOption from '../app/spot/drop-alignment-options';\nimport { SpotDropModalComponent } from '../app/spot/components/drop-modal/drop-modal.component';\n\nimport { I18nService } from '../app/core/i18n/i18n.service';\nimport { I18nServiceStub } from './i18n.service.stub';\n\nconst meta:Meta = {\n  title: 'Patterns/DropModal',\n  component: SpotDropModalComponent,\n  decorators: [\n    moduleMetadata({\n      imports: [\n        OpSpotModule,\n      ],\n      providers: [\n        {\n          provide: I18nService,\n          useFactory: () => I18nServiceStub,\n        },\n      ],\n    }),\n  ],\n};\n\nexport default meta;\ntype Story = StoryObj;\n\nexport const Default:Story = {\n  render: (args) => ({\n    props: {\n      opened: false,\n      alignment: SpotDropAlignmentOption.BottomCenter,\n      ...args,\n    },\n    template: `\n      <spot-drop-modal-portal></spot-drop-modal-portal>\n\n      <spot-drop-modal\n        [opened]=\"opened\"\n        (closed)=\"opened = false\"\n        [alignment]=\"alignment\"\n      >\n        <button\n          aria-haspopup=\"true\"\n          type=\"button\"\n          slot=\"trigger\"\n          (click)=\"opened = !opened\"\n          class=\"button\"\n        >\n          Open drop-modal\n        </button>\n\n        <ng-container slot=\"body\">\n          <div class=\"spot-container\">\n            <ul class=\"spot-list\">\n              <li class=\"spot-list--item\">\n                <button type=\"button\" class=\"spot-list--item-action\">Random Option 1</button>\n              </li>\n              <li class=\"spot-list--item\">\n                <button type=\"button\" class=\"spot-list--item-action\">Random Option 2</button>\n              </li>\n              <li class=\"spot-list--item\">\n                <button type=\"button\" class=\"spot-list--item-action\">Random Option 3</button>\n              </li>\n              <li class=\"spot-list--item\">\n                <button type=\"button\" class=\"spot-list--item-action\">Random Option 4</button>\n              </li>\n            </ul>\n\n            <div class=\"spot-action-bar\">\n              <div class=\"spot-action-bar--right\">\n                <button\n                  class=\"spot-button\"\n                  type=\"button\"\n                >\n                  Some action\n                </button>\n              </div>\n            </div>\n          </div>\n        </ng-container>\n      </spot-drop-modal>\n   `,\n  }),\n};\n","export const I18nServiceStub = {\n  t<T=string>(name:string):any {\n    return {\n      'date.abbr_day_names': [\n        'Mon',\n        'Tue',\n        'Wed',\n        'Thu',\n        'Fri',\n        'Sat',\n        'Sun',\n      ],\n      'date.day_names': [\n        'Monday',\n        'Tuesday',\n        'Wednesday',\n        'Thursday',\n        'Friday',\n        'Saturday',\n        'Sunday',\n      ],\n      'date.abbr_month_names': [\n        'Jan',\n        'Feb',\n        'Mar',\n        'Apr',\n        'May',\n        'Jun',\n        'Jul',\n        'Aug',\n        'Sep',\n        'Oct',\n        'Nov',\n        'Dec',\n      ],\n      'date.month_names': [\n        'January',\n        'February',\n        'March',\n        'April',\n        'May',\n        'June',\n        'July',\n        'August',\n        'September',\n        'October',\n        'November',\n        'December',\n      ],\n    }[name] || name as T;\n  },\n};\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@storybook/addon-docs/mdx-react-shim\";\nimport {Canvas, Meta, ArgsTable} from '@storybook/blocks';\nimport {SpotDropModalComponent} from '../app/spot/components/drop-modal/drop-modal.component';\nimport * as DropModalStories from './DropModal.stories';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(Meta, {\n      of: DropModalStories\n    }), \"\\n\", _jsx(_components.h1, {\n      id: \"drop-modal\",\n      children: \"Drop Modal\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Drop modals are in-between dropdowns and modals. In fact, on mobile they're indistinguishable from a normal spot-modal.\\nThe key difference however, is that they're tied to a specific context. On desktop views, the modal will open\\nin-context, meaning that it will attach to the button or input field that opened the modal.\"\n    }), \"\\n\", _jsx(Canvas, {\n      of: DropModalStories.Default,\n      height: \"400px\",\n      layout: \"centered\"\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"usage\",\n      children: \"Usage\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"To use drop-modals, make sure to also add the drop-modal portal to the base of your application HTML:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        children: \"<spot-drop-modal-portal></spot-drop-modal-portal>\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Even though drop-modals look like they are attached to an element, they're actually rendered in this portal to make sure\\nthey're not cut off my scrolling context or \", _jsx(_components.code, {\n        children: \"overflow: visible\"\n      }), \" rules on parent elements.\"]\n    }), \"\\n\", _jsx(ArgsTable, {\n      of: SpotDropModalComponent\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\n"],"names":["title","component","SpotDropModalComponent","decorators","moduleMetadata","imports","OpSpotModule","providers","provide","I18nService","useFactory","I18nServiceStub","Default","render","args","props","opened","alignment","SpotDropAlignmentOption","template","t","name","MDXContext","React","withMDXComponents","Component","boundMDXComponent","allComponents","useMDXComponents","components","contextComponents","emptyObject","MDXProvider","disableParentContext","Provider","value","children","f","require","k","Symbol","for","l","m","Object","prototype","hasOwnProperty","n","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","p","key","ref","__self","__source","q","c","a","g","b","d","e","h","call","defaultProps","$$typeof","type","_owner","current","exports","Fragment","jsx","jsxs","module","_createMdxContent","_components","assign","h1","h2","pre","code","of","id","height","layout","MDXContent","wrapper","MDXLayout"],"sourceRoot":"webpack:///","x_google_ignoreList":[2,3,4]}